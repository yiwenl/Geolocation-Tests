/******/ (function(modules) { // webpackBootstrap
/******/ 	function hotDisposeChunk(chunkId) {
/******/ 		delete installedChunks[chunkId];
/******/ 	}
/******/ 	var parentHotUpdateCallback = window["webpackHotUpdate"];
/******/ 	window["webpackHotUpdate"] = 
/******/ 	function webpackHotUpdateCallback(chunkId, moreModules) { // eslint-disable-line no-unused-vars
/******/ 		hotAddUpdateChunk(chunkId, moreModules);
/******/ 		if(parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);
/******/ 	} ;
/******/ 	
/******/ 	function hotDownloadUpdateChunk(chunkId) { // eslint-disable-line no-unused-vars
/******/ 		var head = document.getElementsByTagName("head")[0];
/******/ 		var script = document.createElement("script");
/******/ 		script.type = "text/javascript";
/******/ 		script.charset = "utf-8";
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + hotCurrentHash + ".hot-update.js";
/******/ 		;
/******/ 		head.appendChild(script);
/******/ 	}
/******/ 	
/******/ 	function hotDownloadManifest(requestTimeout) { // eslint-disable-line no-unused-vars
/******/ 		requestTimeout = requestTimeout || 10000;
/******/ 		return new Promise(function(resolve, reject) {
/******/ 			if(typeof XMLHttpRequest === "undefined")
/******/ 				return reject(new Error("No browser support"));
/******/ 			try {
/******/ 				var request = new XMLHttpRequest();
/******/ 				var requestPath = __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
/******/ 				request.open("GET", requestPath, true);
/******/ 				request.timeout = requestTimeout;
/******/ 				request.send(null);
/******/ 			} catch(err) {
/******/ 				return reject(err);
/******/ 			}
/******/ 			request.onreadystatechange = function() {
/******/ 				if(request.readyState !== 4) return;
/******/ 				if(request.status === 0) {
/******/ 					// timeout
/******/ 					reject(new Error("Manifest request to " + requestPath + " timed out."));
/******/ 				} else if(request.status === 404) {
/******/ 					// no update available
/******/ 					resolve();
/******/ 				} else if(request.status !== 200 && request.status !== 304) {
/******/ 					// other failure
/******/ 					reject(new Error("Manifest request to " + requestPath + " failed."));
/******/ 				} else {
/******/ 					// success
/******/ 					try {
/******/ 						var update = JSON.parse(request.responseText);
/******/ 					} catch(e) {
/******/ 						reject(e);
/******/ 						return;
/******/ 					}
/******/ 					resolve(update);
/******/ 				}
/******/ 			};
/******/ 		});
/******/ 	}
/******/
/******/ 	
/******/ 	
/******/ 	var hotApplyOnUpdate = true;
/******/ 	var hotCurrentHash = "4b8c537c30e160b21dd3"; // eslint-disable-line no-unused-vars
/******/ 	var hotRequestTimeout = 10000;
/******/ 	var hotCurrentModuleData = {};
/******/ 	var hotCurrentChildModule; // eslint-disable-line no-unused-vars
/******/ 	var hotCurrentParents = []; // eslint-disable-line no-unused-vars
/******/ 	var hotCurrentParentsTemp = []; // eslint-disable-line no-unused-vars
/******/ 	
/******/ 	function hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars
/******/ 		var me = installedModules[moduleId];
/******/ 		if(!me) return __webpack_require__;
/******/ 		var fn = function(request) {
/******/ 			if(me.hot.active) {
/******/ 				if(installedModules[request]) {
/******/ 					if(installedModules[request].parents.indexOf(moduleId) < 0)
/******/ 						installedModules[request].parents.push(moduleId);
/******/ 				} else {
/******/ 					hotCurrentParents = [moduleId];
/******/ 					hotCurrentChildModule = request;
/******/ 				}
/******/ 				if(me.children.indexOf(request) < 0)
/******/ 					me.children.push(request);
/******/ 			} else {
/******/ 				console.warn("[HMR] unexpected require(" + request + ") from disposed module " + moduleId);
/******/ 				hotCurrentParents = [];
/******/ 			}
/******/ 			return __webpack_require__(request);
/******/ 		};
/******/ 		var ObjectFactory = function ObjectFactory(name) {
/******/ 			return {
/******/ 				configurable: true,
/******/ 				enumerable: true,
/******/ 				get: function() {
/******/ 					return __webpack_require__[name];
/******/ 				},
/******/ 				set: function(value) {
/******/ 					__webpack_require__[name] = value;
/******/ 				}
/******/ 			};
/******/ 		};
/******/ 		for(var name in __webpack_require__) {
/******/ 			if(Object.prototype.hasOwnProperty.call(__webpack_require__, name) && name !== "e") {
/******/ 				Object.defineProperty(fn, name, ObjectFactory(name));
/******/ 			}
/******/ 		}
/******/ 		fn.e = function(chunkId) {
/******/ 			if(hotStatus === "ready")
/******/ 				hotSetStatus("prepare");
/******/ 			hotChunksLoading++;
/******/ 			return __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {
/******/ 				finishChunkLoading();
/******/ 				throw err;
/******/ 			});
/******/ 	
/******/ 			function finishChunkLoading() {
/******/ 				hotChunksLoading--;
/******/ 				if(hotStatus === "prepare") {
/******/ 					if(!hotWaitingFilesMap[chunkId]) {
/******/ 						hotEnsureUpdateChunk(chunkId);
/******/ 					}
/******/ 					if(hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 						hotUpdateDownloaded();
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 		return fn;
/******/ 	}
/******/ 	
/******/ 	function hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars
/******/ 		var hot = {
/******/ 			// private stuff
/******/ 			_acceptedDependencies: {},
/******/ 			_declinedDependencies: {},
/******/ 			_selfAccepted: false,
/******/ 			_selfDeclined: false,
/******/ 			_disposeHandlers: [],
/******/ 			_main: hotCurrentChildModule !== moduleId,
/******/ 	
/******/ 			// Module API
/******/ 			active: true,
/******/ 			accept: function(dep, callback) {
/******/ 				if(typeof dep === "undefined")
/******/ 					hot._selfAccepted = true;
/******/ 				else if(typeof dep === "function")
/******/ 					hot._selfAccepted = dep;
/******/ 				else if(typeof dep === "object")
/******/ 					for(var i = 0; i < dep.length; i++)
/******/ 						hot._acceptedDependencies[dep[i]] = callback || function() {};
/******/ 				else
/******/ 					hot._acceptedDependencies[dep] = callback || function() {};
/******/ 			},
/******/ 			decline: function(dep) {
/******/ 				if(typeof dep === "undefined")
/******/ 					hot._selfDeclined = true;
/******/ 				else if(typeof dep === "object")
/******/ 					for(var i = 0; i < dep.length; i++)
/******/ 						hot._declinedDependencies[dep[i]] = true;
/******/ 				else
/******/ 					hot._declinedDependencies[dep] = true;
/******/ 			},
/******/ 			dispose: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			addDisposeHandler: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			removeDisposeHandler: function(callback) {
/******/ 				var idx = hot._disposeHandlers.indexOf(callback);
/******/ 				if(idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 			},
/******/ 	
/******/ 			// Management API
/******/ 			check: hotCheck,
/******/ 			apply: hotApply,
/******/ 			status: function(l) {
/******/ 				if(!l) return hotStatus;
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			addStatusHandler: function(l) {
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			removeStatusHandler: function(l) {
/******/ 				var idx = hotStatusHandlers.indexOf(l);
/******/ 				if(idx >= 0) hotStatusHandlers.splice(idx, 1);
/******/ 			},
/******/ 	
/******/ 			//inherit from previous dispose call
/******/ 			data: hotCurrentModuleData[moduleId]
/******/ 		};
/******/ 		hotCurrentChildModule = undefined;
/******/ 		return hot;
/******/ 	}
/******/ 	
/******/ 	var hotStatusHandlers = [];
/******/ 	var hotStatus = "idle";
/******/ 	
/******/ 	function hotSetStatus(newStatus) {
/******/ 		hotStatus = newStatus;
/******/ 		for(var i = 0; i < hotStatusHandlers.length; i++)
/******/ 			hotStatusHandlers[i].call(null, newStatus);
/******/ 	}
/******/ 	
/******/ 	// while downloading
/******/ 	var hotWaitingFiles = 0;
/******/ 	var hotChunksLoading = 0;
/******/ 	var hotWaitingFilesMap = {};
/******/ 	var hotRequestedFilesMap = {};
/******/ 	var hotAvailableFilesMap = {};
/******/ 	var hotDeferred;
/******/ 	
/******/ 	// The update info
/******/ 	var hotUpdate, hotUpdateNewHash;
/******/ 	
/******/ 	function toModuleId(id) {
/******/ 		var isNumber = (+id) + "" === id;
/******/ 		return isNumber ? +id : id;
/******/ 	}
/******/ 	
/******/ 	function hotCheck(apply) {
/******/ 		if(hotStatus !== "idle") throw new Error("check() is only allowed in idle status");
/******/ 		hotApplyOnUpdate = apply;
/******/ 		hotSetStatus("check");
/******/ 		return hotDownloadManifest(hotRequestTimeout).then(function(update) {
/******/ 			if(!update) {
/******/ 				hotSetStatus("idle");
/******/ 				return null;
/******/ 			}
/******/ 			hotRequestedFilesMap = {};
/******/ 			hotWaitingFilesMap = {};
/******/ 			hotAvailableFilesMap = update.c;
/******/ 			hotUpdateNewHash = update.h;
/******/ 	
/******/ 			hotSetStatus("prepare");
/******/ 			var promise = new Promise(function(resolve, reject) {
/******/ 				hotDeferred = {
/******/ 					resolve: resolve,
/******/ 					reject: reject
/******/ 				};
/******/ 			});
/******/ 			hotUpdate = {};
/******/ 			var chunkId = 0;
/******/ 			{ // eslint-disable-line no-lone-blocks
/******/ 				/*globals chunkId */
/******/ 				hotEnsureUpdateChunk(chunkId);
/******/ 			}
/******/ 			if(hotStatus === "prepare" && hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 				hotUpdateDownloaded();
/******/ 			}
/******/ 			return promise;
/******/ 		});
/******/ 	}
/******/ 	
/******/ 	function hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars
/******/ 		if(!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
/******/ 			return;
/******/ 		hotRequestedFilesMap[chunkId] = false;
/******/ 		for(var moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				hotUpdate[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(--hotWaitingFiles === 0 && hotChunksLoading === 0) {
/******/ 			hotUpdateDownloaded();
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotEnsureUpdateChunk(chunkId) {
/******/ 		if(!hotAvailableFilesMap[chunkId]) {
/******/ 			hotWaitingFilesMap[chunkId] = true;
/******/ 		} else {
/******/ 			hotRequestedFilesMap[chunkId] = true;
/******/ 			hotWaitingFiles++;
/******/ 			hotDownloadUpdateChunk(chunkId);
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotUpdateDownloaded() {
/******/ 		hotSetStatus("ready");
/******/ 		var deferred = hotDeferred;
/******/ 		hotDeferred = null;
/******/ 		if(!deferred) return;
/******/ 		if(hotApplyOnUpdate) {
/******/ 			// Wrap deferred object in Promise to mark it as a well-handled Promise to
/******/ 			// avoid triggering uncaught exception warning in Chrome.
/******/ 			// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666
/******/ 			Promise.resolve().then(function() {
/******/ 				return hotApply(hotApplyOnUpdate);
/******/ 			}).then(
/******/ 				function(result) {
/******/ 					deferred.resolve(result);
/******/ 				},
/******/ 				function(err) {
/******/ 					deferred.reject(err);
/******/ 				}
/******/ 			);
/******/ 		} else {
/******/ 			var outdatedModules = [];
/******/ 			for(var id in hotUpdate) {
/******/ 				if(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 					outdatedModules.push(toModuleId(id));
/******/ 				}
/******/ 			}
/******/ 			deferred.resolve(outdatedModules);
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotApply(options) {
/******/ 		if(hotStatus !== "ready") throw new Error("apply() is only allowed in ready status");
/******/ 		options = options || {};
/******/ 	
/******/ 		var cb;
/******/ 		var i;
/******/ 		var j;
/******/ 		var module;
/******/ 		var moduleId;
/******/ 	
/******/ 		function getAffectedStuff(updateModuleId) {
/******/ 			var outdatedModules = [updateModuleId];
/******/ 			var outdatedDependencies = {};
/******/ 	
/******/ 			var queue = outdatedModules.slice().map(function(id) {
/******/ 				return {
/******/ 					chain: [id],
/******/ 					id: id
/******/ 				};
/******/ 			});
/******/ 			while(queue.length > 0) {
/******/ 				var queueItem = queue.pop();
/******/ 				var moduleId = queueItem.id;
/******/ 				var chain = queueItem.chain;
/******/ 				module = installedModules[moduleId];
/******/ 				if(!module || module.hot._selfAccepted)
/******/ 					continue;
/******/ 				if(module.hot._selfDeclined) {
/******/ 					return {
/******/ 						type: "self-declined",
/******/ 						chain: chain,
/******/ 						moduleId: moduleId
/******/ 					};
/******/ 				}
/******/ 				if(module.hot._main) {
/******/ 					return {
/******/ 						type: "unaccepted",
/******/ 						chain: chain,
/******/ 						moduleId: moduleId
/******/ 					};
/******/ 				}
/******/ 				for(var i = 0; i < module.parents.length; i++) {
/******/ 					var parentId = module.parents[i];
/******/ 					var parent = installedModules[parentId];
/******/ 					if(!parent) continue;
/******/ 					if(parent.hot._declinedDependencies[moduleId]) {
/******/ 						return {
/******/ 							type: "declined",
/******/ 							chain: chain.concat([parentId]),
/******/ 							moduleId: moduleId,
/******/ 							parentId: parentId
/******/ 						};
/******/ 					}
/******/ 					if(outdatedModules.indexOf(parentId) >= 0) continue;
/******/ 					if(parent.hot._acceptedDependencies[moduleId]) {
/******/ 						if(!outdatedDependencies[parentId])
/******/ 							outdatedDependencies[parentId] = [];
/******/ 						addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 						continue;
/******/ 					}
/******/ 					delete outdatedDependencies[parentId];
/******/ 					outdatedModules.push(parentId);
/******/ 					queue.push({
/******/ 						chain: chain.concat([parentId]),
/******/ 						id: parentId
/******/ 					});
/******/ 				}
/******/ 			}
/******/ 	
/******/ 			return {
/******/ 				type: "accepted",
/******/ 				moduleId: updateModuleId,
/******/ 				outdatedModules: outdatedModules,
/******/ 				outdatedDependencies: outdatedDependencies
/******/ 			};
/******/ 		}
/******/ 	
/******/ 		function addAllToSet(a, b) {
/******/ 			for(var i = 0; i < b.length; i++) {
/******/ 				var item = b[i];
/******/ 				if(a.indexOf(item) < 0)
/******/ 					a.push(item);
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// at begin all updates modules are outdated
/******/ 		// the "outdated" status can propagate to parents if they don't accept the children
/******/ 		var outdatedDependencies = {};
/******/ 		var outdatedModules = [];
/******/ 		var appliedUpdate = {};
/******/ 	
/******/ 		var warnUnexpectedRequire = function warnUnexpectedRequire() {
/******/ 			console.warn("[HMR] unexpected require(" + result.moduleId + ") to disposed module");
/******/ 		};
/******/ 	
/******/ 		for(var id in hotUpdate) {
/******/ 			if(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 				moduleId = toModuleId(id);
/******/ 				var result;
/******/ 				if(hotUpdate[id]) {
/******/ 					result = getAffectedStuff(moduleId);
/******/ 				} else {
/******/ 					result = {
/******/ 						type: "disposed",
/******/ 						moduleId: id
/******/ 					};
/******/ 				}
/******/ 				var abortError = false;
/******/ 				var doApply = false;
/******/ 				var doDispose = false;
/******/ 				var chainInfo = "";
/******/ 				if(result.chain) {
/******/ 					chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
/******/ 				}
/******/ 				switch(result.type) {
/******/ 					case "self-declined":
/******/ 						if(options.onDeclined)
/******/ 							options.onDeclined(result);
/******/ 						if(!options.ignoreDeclined)
/******/ 							abortError = new Error("Aborted because of self decline: " + result.moduleId + chainInfo);
/******/ 						break;
/******/ 					case "declined":
/******/ 						if(options.onDeclined)
/******/ 							options.onDeclined(result);
/******/ 						if(!options.ignoreDeclined)
/******/ 							abortError = new Error("Aborted because of declined dependency: " + result.moduleId + " in " + result.parentId + chainInfo);
/******/ 						break;
/******/ 					case "unaccepted":
/******/ 						if(options.onUnaccepted)
/******/ 							options.onUnaccepted(result);
/******/ 						if(!options.ignoreUnaccepted)
/******/ 							abortError = new Error("Aborted because " + moduleId + " is not accepted" + chainInfo);
/******/ 						break;
/******/ 					case "accepted":
/******/ 						if(options.onAccepted)
/******/ 							options.onAccepted(result);
/******/ 						doApply = true;
/******/ 						break;
/******/ 					case "disposed":
/******/ 						if(options.onDisposed)
/******/ 							options.onDisposed(result);
/******/ 						doDispose = true;
/******/ 						break;
/******/ 					default:
/******/ 						throw new Error("Unexception type " + result.type);
/******/ 				}
/******/ 				if(abortError) {
/******/ 					hotSetStatus("abort");
/******/ 					return Promise.reject(abortError);
/******/ 				}
/******/ 				if(doApply) {
/******/ 					appliedUpdate[moduleId] = hotUpdate[moduleId];
/******/ 					addAllToSet(outdatedModules, result.outdatedModules);
/******/ 					for(moduleId in result.outdatedDependencies) {
/******/ 						if(Object.prototype.hasOwnProperty.call(result.outdatedDependencies, moduleId)) {
/******/ 							if(!outdatedDependencies[moduleId])
/******/ 								outdatedDependencies[moduleId] = [];
/******/ 							addAllToSet(outdatedDependencies[moduleId], result.outdatedDependencies[moduleId]);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 				if(doDispose) {
/******/ 					addAllToSet(outdatedModules, [result.moduleId]);
/******/ 					appliedUpdate[moduleId] = warnUnexpectedRequire;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Store self accepted outdated modules to require them later by the module system
/******/ 		var outdatedSelfAcceptedModules = [];
/******/ 		for(i = 0; i < outdatedModules.length; i++) {
/******/ 			moduleId = outdatedModules[i];
/******/ 			if(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)
/******/ 				outdatedSelfAcceptedModules.push({
/******/ 					module: moduleId,
/******/ 					errorHandler: installedModules[moduleId].hot._selfAccepted
/******/ 				});
/******/ 		}
/******/ 	
/******/ 		// Now in "dispose" phase
/******/ 		hotSetStatus("dispose");
/******/ 		Object.keys(hotAvailableFilesMap).forEach(function(chunkId) {
/******/ 			if(hotAvailableFilesMap[chunkId] === false) {
/******/ 				hotDisposeChunk(chunkId);
/******/ 			}
/******/ 		});
/******/ 	
/******/ 		var idx;
/******/ 		var queue = outdatedModules.slice();
/******/ 		while(queue.length > 0) {
/******/ 			moduleId = queue.pop();
/******/ 			module = installedModules[moduleId];
/******/ 			if(!module) continue;
/******/ 	
/******/ 			var data = {};
/******/ 	
/******/ 			// Call dispose handlers
/******/ 			var disposeHandlers = module.hot._disposeHandlers;
/******/ 			for(j = 0; j < disposeHandlers.length; j++) {
/******/ 				cb = disposeHandlers[j];
/******/ 				cb(data);
/******/ 			}
/******/ 			hotCurrentModuleData[moduleId] = data;
/******/ 	
/******/ 			// disable module (this disables requires from this module)
/******/ 			module.hot.active = false;
/******/ 	
/******/ 			// remove module from cache
/******/ 			delete installedModules[moduleId];
/******/ 	
/******/ 			// when disposing there is no need to call dispose handler
/******/ 			delete outdatedDependencies[moduleId];
/******/ 	
/******/ 			// remove "parents" references from all children
/******/ 			for(j = 0; j < module.children.length; j++) {
/******/ 				var child = installedModules[module.children[j]];
/******/ 				if(!child) continue;
/******/ 				idx = child.parents.indexOf(moduleId);
/******/ 				if(idx >= 0) {
/******/ 					child.parents.splice(idx, 1);
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// remove outdated dependency from module children
/******/ 		var dependency;
/******/ 		var moduleOutdatedDependencies;
/******/ 		for(moduleId in outdatedDependencies) {
/******/ 			if(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {
/******/ 				module = installedModules[moduleId];
/******/ 				if(module) {
/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 					for(j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 						dependency = moduleOutdatedDependencies[j];
/******/ 						idx = module.children.indexOf(dependency);
/******/ 						if(idx >= 0) module.children.splice(idx, 1);
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Not in "apply" phase
/******/ 		hotSetStatus("apply");
/******/ 	
/******/ 		hotCurrentHash = hotUpdateNewHash;
/******/ 	
/******/ 		// insert new code
/******/ 		for(moduleId in appliedUpdate) {
/******/ 			if(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
/******/ 				modules[moduleId] = appliedUpdate[moduleId];
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// call accept handlers
/******/ 		var error = null;
/******/ 		for(moduleId in outdatedDependencies) {
/******/ 			if(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {
/******/ 				module = installedModules[moduleId];
/******/ 				if(module) {
/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 					var callbacks = [];
/******/ 					for(i = 0; i < moduleOutdatedDependencies.length; i++) {
/******/ 						dependency = moduleOutdatedDependencies[i];
/******/ 						cb = module.hot._acceptedDependencies[dependency];
/******/ 						if(cb) {
/******/ 							if(callbacks.indexOf(cb) >= 0) continue;
/******/ 							callbacks.push(cb);
/******/ 						}
/******/ 					}
/******/ 					for(i = 0; i < callbacks.length; i++) {
/******/ 						cb = callbacks[i];
/******/ 						try {
/******/ 							cb(moduleOutdatedDependencies);
/******/ 						} catch(err) {
/******/ 							if(options.onErrored) {
/******/ 								options.onErrored({
/******/ 									type: "accept-errored",
/******/ 									moduleId: moduleId,
/******/ 									dependencyId: moduleOutdatedDependencies[i],
/******/ 									error: err
/******/ 								});
/******/ 							}
/******/ 							if(!options.ignoreErrored) {
/******/ 								if(!error)
/******/ 									error = err;
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Load self accepted modules
/******/ 		for(i = 0; i < outdatedSelfAcceptedModules.length; i++) {
/******/ 			var item = outdatedSelfAcceptedModules[i];
/******/ 			moduleId = item.module;
/******/ 			hotCurrentParents = [moduleId];
/******/ 			try {
/******/ 				__webpack_require__(moduleId);
/******/ 			} catch(err) {
/******/ 				if(typeof item.errorHandler === "function") {
/******/ 					try {
/******/ 						item.errorHandler(err);
/******/ 					} catch(err2) {
/******/ 						if(options.onErrored) {
/******/ 							options.onErrored({
/******/ 								type: "self-accept-error-handler-errored",
/******/ 								moduleId: moduleId,
/******/ 								error: err2,
/******/ 								orginalError: err, // TODO remove in webpack 4
/******/ 								originalError: err
/******/ 							});
/******/ 						}
/******/ 						if(!options.ignoreErrored) {
/******/ 							if(!error)
/******/ 								error = err2;
/******/ 						}
/******/ 						if(!error)
/******/ 							error = err;
/******/ 					}
/******/ 				} else {
/******/ 					if(options.onErrored) {
/******/ 						options.onErrored({
/******/ 							type: "self-accept-errored",
/******/ 							moduleId: moduleId,
/******/ 							error: err
/******/ 						});
/******/ 					}
/******/ 					if(!options.ignoreErrored) {
/******/ 						if(!error)
/******/ 							error = err;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// handle errors in accept handlers and self accepted module load
/******/ 		if(error) {
/******/ 			hotSetStatus("fail");
/******/ 			return Promise.reject(error);
/******/ 		}
/******/ 	
/******/ 		hotSetStatus("idle");
/******/ 		return new Promise(function(resolve) {
/******/ 			resolve(outdatedModules);
/******/ 		});
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {},
/******/ 			hot: hotCreateModule(moduleId),
/******/ 			parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),
/******/ 			children: []
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// __webpack_hash__
/******/ 	__webpack_require__.h = function() { return hotCurrentHash; };
/******/
/******/ 	// Load entry module and return exports
/******/ 	return hotCreateRequire(3)(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

!function(root,factory){ true?module.exports=factory():"function"==typeof define&&define.amd?define("alfrid",[],factory):"object"==typeof exports?exports.alfrid=factory():root.alfrid=factory()}(this,function(){return function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{configurable:!1,enumerable:!0,get:getter})},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=41)}([function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_glMatrix=__webpack_require__(1),_getAndApplyExtension=__webpack_require__(47),_getAndApplyExtension2=_interopRequireDefault(_getAndApplyExtension),_exposeAttributes=__webpack_require__(48),_exposeAttributes2=_interopRequireDefault(_exposeAttributes),_getFloat=__webpack_require__(49),_getFloat2=_interopRequireDefault(_getFloat),_getHalfFloat=__webpack_require__(50),_getHalfFloat2=_interopRequireDefault(_getHalfFloat),_getAttribLoc=__webpack_require__(24),_ExtensionsList=(_interopRequireDefault(_getAttribLoc),__webpack_require__(51)),_ExtensionsList2=_interopRequireDefault(_ExtensionsList),gl=void 0,GLTool=function(){function GLTool(){_classCallCheck(this,GLTool),this.canvas,this._viewport=[0,0,0,0],this._enabledVertexAttribute=[],this.identityMatrix=_glMatrix.mat4.create(),this._normalMatrix=_glMatrix.mat3.create(),this._inverseModelViewMatrix=_glMatrix.mat3.create(),this._modelMatrix=_glMatrix.mat4.create(),this._matrix=_glMatrix.mat4.create(),this._matrixStacks=[],this._lastMesh=null,this._useWebGL2=!1,this._hasArrayInstance,this._extArrayInstance,this._hasCheckedExt=!1,_glMatrix.mat4.identity(this.identityMatrix,this.identityMatrix),this.isMobile=!1,/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&(this.isMobile=!0)}return _createClass(GLTool,[{key:"init",value:function(mCanvas){var mParameters=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(null===mCanvas||void 0===mCanvas)return void console.error("Canvas not exist");void 0!==this.canvas&&null!==this.canvas&&this.destroy(),this.canvas=mCanvas,this.setSize(window.innerWidth,window.innerHeight),mParameters.useWebgl2=mParameters.useWebgl2||!1;var ctx=void 0;mParameters.useWebgl2?(ctx=this.canvas.getContext("experimental-webgl2",mParameters)||this.canvas.getContext("webgl2",mParameters),ctx?this._useWebGL2=!0:(ctx=this.canvas.getContext("webgl",mParameters)||this.canvas.getContext("experimental-webgl",mParameters),this._useWebGL2=!1)):(ctx=this.canvas.getContext("webgl",mParameters)||this.canvas.getContext("experimental-webgl",mParameters),this._useWebGL2=!1),console.log("Using WebGL 2 ?",this.webgl2),this.initWithGL(ctx)}},{key:"initWithGL",value:function(ctx){this.canvas||(this.canvas=ctx.canvas),gl=this.gl=ctx,this.extensions={};for(var i=0;i<_ExtensionsList2.default.length;i++)this.extensions[_ExtensionsList2.default[i]]=gl.getExtension(_ExtensionsList2.default[i]);(0,_exposeAttributes2.default)(),(0,_getAndApplyExtension2.default)(gl,"OES_vertex_array_object"),(0,_getAndApplyExtension2.default)(gl,"ANGLE_instanced_arrays"),(0,_getAndApplyExtension2.default)(gl,"WEBGL_draw_buffers"),this.enable(this.DEPTH_TEST),this.enable(this.CULL_FACE),this.enable(this.BLEND),this.enableAlphaBlending()}},{key:"setViewport",value:function(x,y,w,h){var hasChanged=!1;x!==this._viewport[0]&&(hasChanged=!0),y!==this._viewport[1]&&(hasChanged=!0),w!==this._viewport[2]&&(hasChanged=!0),h!==this._viewport[3]&&(hasChanged=!0),hasChanged&&(gl.viewport(x,y,w,h),this._viewport=[x,y,w,h])}},{key:"scissor",value:function(x,y,w,h){gl.scissor(x,y,w,h)}},{key:"clear",value:function(r,g,b,a){gl.clearColor(r,g,b,a),gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT)}},{key:"cullFace",value:function(mValue){gl.cullFace(mValue)}},{key:"setMatrices",value:function(mCamera){this.camera=mCamera,this.rotate(this.identityMatrix)}},{key:"useShader",value:function(mShader){this.shader=mShader,this.shaderProgram=this.shader.shaderProgram}},{key:"rotate",value:function(mRotation){_glMatrix.mat4.copy(this._modelMatrix,mRotation),_glMatrix.mat4.multiply(this._matrix,this.camera.matrix,this._modelMatrix),_glMatrix.mat3.fromMat4(this._normalMatrix,this._matrix),_glMatrix.mat3.invert(this._normalMatrix,this._normalMatrix),_glMatrix.mat3.transpose(this._normalMatrix,this._normalMatrix),_glMatrix.mat3.fromMat4(this._inverseModelViewMatrix,this._matrix),_glMatrix.mat3.invert(this._inverseModelViewMatrix,this._inverseModelViewMatrix)}},{key:"draw",value:function(mMesh,mDrawingType){if(mMesh.length)for(var i=0;i<mMesh.length;i++)this.draw(mMesh[i]);else{mMesh.bind(this.shaderProgram),void 0!==this.camera&&(this.shader.uniform("uProjectionMatrix","mat4",this.camera.projection),this.shader.uniform("uViewMatrix","mat4",this.camera.matrix)),this.shader.uniform("uModelMatrix","mat4",this._modelMatrix),this.shader.uniform("uNormalMatrix","mat3",this._normalMatrix),this.shader.uniform("uModelViewMatrixInverse","mat3",this._inverseModelViewMatrix);var drawType=mMesh.drawType;void 0!==mDrawingType&&(drawType=mDrawingType),mMesh.isInstanced?gl.drawElementsInstanced(mMesh.drawType,mMesh.iBuffer.numItems,gl.UNSIGNED_SHORT,0,mMesh.numInstance):drawType===gl.POINTS?gl.drawArrays(drawType,0,mMesh.vertexSize):gl.drawElements(drawType,mMesh.iBuffer.numItems,gl.UNSIGNED_SHORT,0),mMesh.unbind()}}},{key:"drawTransformFeedback",value:function(mTransformObject){var meshSource=mTransformObject.meshSource,meshDestination=mTransformObject.meshDestination,numPoints=mTransformObject.numPoints,transformFeedback=mTransformObject.transformFeedback;meshSource.bind(this.shaderProgram),meshDestination.generateBuffers(this.shaderProgram),gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK,transformFeedback),meshDestination.attributes.forEach(function(attr,i){gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER,i,attr.buffer)}),gl.enable(gl.RASTERIZER_DISCARD),gl.beginTransformFeedback(gl.POINTS),gl.drawArrays(gl.POINTS,0,numPoints),gl.endTransformFeedback(),gl.disable(gl.RASTERIZER_DISCARD),gl.useProgram(null),gl.bindBuffer(gl.ARRAY_BUFFER,null),meshDestination.attributes.forEach(function(attr,i){gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER,i,null)}),gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK,null),meshSource.unbind()}},{key:"setSize",value:function(mWidth,mHeight){this._width=mWidth,this._height=mHeight,this.canvas.width=this._width,this.canvas.height=this._height,this._aspectRatio=this._width/this._height,gl&&this.viewport(0,0,this._width,this._height)}},{key:"showExtensions",value:function(){console.log("Extensions : ",this.extensions);for(var ext in this.extensions)this.extensions[ext]&&console.log(ext,":",this.extensions[ext])}},{key:"checkExtension",value:function(mExtension){return!!this.extensions[mExtension]}},{key:"getExtension",value:function(mExtension){return this.extensions[mExtension]}},{key:"enableAlphaBlending",value:function(){gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA)}},{key:"enableAdditiveBlending",value:function(){gl.blendFunc(gl.ONE,gl.ONE)}},{key:"pushMatrix",value:function(){var mtx=_glMatrix.mat4.clone(this._modelMatrix);this._matrixStacks.push(mtx)}},{key:"popMatrix",value:function(){if(0==this._matrixStacks.length)return null;var mtx=this._matrixStacks.pop();this.rotate(mtx)}},{key:"enable",value:function(mParameter){gl.enable(mParameter)}},{key:"disable",value:function(mParameter){gl.disable(mParameter)}},{key:"viewport",value:function(x,y,w,h){this.setViewport(x,y,w,h)}},{key:"destroy",value:function(){if(this.canvas.parentNode)try{this.canvas.parentNode.removeChild(this.canvas)}catch(e){console.log("Error : ",e)}this.canvas=null}},{key:"FLOAT",get:function(){return(0,_getFloat2.default)()}},{key:"HALF_FLOAT",get:function(){return(0,_getHalfFloat2.default)()}},{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}},{key:"aspectRatio",get:function(){return this._aspectRatio}},{key:"webgl2",get:function(){return this._useWebGL2}}]),GLTool}(),GL=new GLTool;exports.default=GL},function(module,exports,__webpack_require__){"use strict";function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}Object.defineProperty(exports,"__esModule",{value:!0}),exports.vec4=exports.vec3=exports.vec2=exports.quat=exports.mat4=exports.mat3=exports.mat2d=exports.mat2=exports.glMatrix=void 0;var _common=__webpack_require__(3),glMatrix=_interopRequireWildcard(_common),_mat=__webpack_require__(42),mat2=_interopRequireWildcard(_mat),_mat2d=__webpack_require__(43),mat2d=_interopRequireWildcard(_mat2d),_mat2=__webpack_require__(20),mat3=_interopRequireWildcard(_mat2),_mat3=__webpack_require__(44),mat4=_interopRequireWildcard(_mat3),_quat=__webpack_require__(45),quat=_interopRequireWildcard(_quat),_vec=__webpack_require__(46),vec2=_interopRequireWildcard(_vec),_vec2=__webpack_require__(21),vec3=_interopRequireWildcard(_vec2),_vec3=__webpack_require__(22),vec4=_interopRequireWildcard(_vec3);exports.glMatrix=glMatrix,exports.mat2=mat2,exports.mat2d=mat2d,exports.mat3=mat3,exports.mat4=mat4,exports.quat=quat,exports.vec2=vec2,exports.vec3=vec3,exports.vec4=vec4},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_GLTool=__webpack_require__(0),_GLTool2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_GLTool),isSame=(__webpack_require__(52),function(array1,array2){if(array1.length!==array2.length)return!1;for(var i=0;i<array1.length;i++)if(array1[i]!==array2[i])return!1;return!0}),addLineNumbers=function(string){for(var lines=string.split("\n"),i=0;i<lines.length;i++)lines[i]=i+1+": "+lines[i];return lines.join("\n")},cloneArray=function(mArray){return mArray.slice?mArray.slice(0):new Float32Array(mArray)},gl=void 0,defaultVertexShader=__webpack_require__(11),defaultFragmentShader=__webpack_require__(53),uniformMapping={float:"uniform1f",vec2:"uniform2fv",vec3:"uniform3fv",vec4:"uniform4fv",int:"uniform1i",mat3:"uniformMatrix3fv",mat4:"uniformMatrix4fv"},GLShader=function(){function GLShader(){var strVertexShader=arguments.length>0&&void 0!==arguments[0]?arguments[0]:defaultVertexShader,strFragmentShader=arguments.length>1&&void 0!==arguments[1]?arguments[1]:defaultFragmentShader,mVaryings=arguments[2];_classCallCheck(this,GLShader),gl=_GLTool2.default.gl,this.parameters=[],this.uniformTextures=[],this._varyings=mVaryings,strVertexShader||(strVertexShader=defaultVertexShader),strFragmentShader||(strFragmentShader=defaultVertexShader);var vsShader=this._createShaderProgram(strVertexShader,!0),fsShader=this._createShaderProgram(strFragmentShader,!1);this._attachShaderProgram(vsShader,fsShader)}return _createClass(GLShader,[{key:"bind",value:function(){_GLTool2.default.shader!==this&&(gl.useProgram(this.shaderProgram),_GLTool2.default.useShader(this),this.uniformTextures=[])}},{key:"uniform",value:function(mName,mType,mValue){if("object"===(void 0===mName?"undefined":_typeof(mName)))return void this.uniformObject(mName);for(var uniformType=uniformMapping[mType]||mType,hasUniform=!1,oUniform=void 0,parameterIndex=-1,i=0;i<this.parameters.length;i++)if(oUniform=this.parameters[i],oUniform.name===mName){hasUniform=!0,parameterIndex=i;break}var isNumber=!1;if(hasUniform?(this.shaderProgram[mName]=oUniform.uniformLoc,isNumber=oUniform.isNumber):(isNumber="uniform1i"===uniformType||"uniform1f"===uniformType,this.shaderProgram[mName]=gl.getUniformLocation(this.shaderProgram,mName),isNumber?this.parameters.push({name:mName,type:uniformType,value:mValue,uniformLoc:this.shaderProgram[mName],isNumber:isNumber}):this.parameters.push({name:mName,type:uniformType,value:cloneArray(mValue),uniformLoc:this.shaderProgram[mName],isNumber:isNumber}),parameterIndex=this.parameters.length-1),this.parameters[parameterIndex].uniformLoc)if(-1===uniformType.indexOf("Matrix"))if(isNumber){var needUpdate=this.parameters[parameterIndex].value!==mValue||!hasUniform;needUpdate&&(gl[uniformType](this.shaderProgram[mName],mValue),this.parameters[parameterIndex].value=mValue)}else isSame(this.parameters[parameterIndex].value,mValue)&&hasUniform||(gl[uniformType](this.shaderProgram[mName],mValue),this.parameters[parameterIndex].value=cloneArray(mValue));else isSame(this.parameters[parameterIndex].value,mValue)&&hasUniform||(gl[uniformType](this.shaderProgram[mName],!1,mValue),this.parameters[parameterIndex].value=cloneArray(mValue))}},{key:"uniformObject",value:function(mUniformObj){for(var uniformName in mUniformObj){var uniformValue=mUniformObj[uniformName],uniformType=GLShader.getUniformType(uniformValue);if(uniformValue.concat&&uniformValue[0].concat){for(var tmp=[],i=0;i<uniformValue.length;i++)tmp=tmp.concat(uniformValue[i]);uniformValue=tmp}this.uniform(uniformName,uniformType,uniformValue)}}},{key:"_createShaderProgram",value:function(mShaderStr,isVertexShader){var shaderType=isVertexShader?_GLTool2.default.VERTEX_SHADER:_GLTool2.default.FRAGMENT_SHADER,shader=gl.createShader(shaderType);return gl.shaderSource(shader,mShaderStr),gl.compileShader(shader),gl.getShaderParameter(shader,gl.COMPILE_STATUS)?shader:(console.warn("Error in Shader : ",gl.getShaderInfoLog(shader)),console.log(addLineNumbers(mShaderStr)),null)}},{key:"_attachShaderProgram",value:function(mVertexShader,mFragmentShader){this.shaderProgram=gl.createProgram(),gl.attachShader(this.shaderProgram,mVertexShader),gl.attachShader(this.shaderProgram,mFragmentShader),gl.deleteShader(mVertexShader),gl.deleteShader(mFragmentShader),this._varyings&&(console.log("Transform feedback setup : ",this._varyings),gl.transformFeedbackVaryings(this.shaderProgram,this._varyings,gl.SEPARATE_ATTRIBS)),gl.linkProgram(this.shaderProgram)}}]),GLShader}();GLShader.getUniformType=function(mValue){var isArray=!!mValue.concat,getArrayUniformType=function(mValue){return 9===mValue.length?"uniformMatrix3fv":16===mValue.length?"uniformMatrix4fv":"vec"+mValue.length};return isArray?getArrayUniformType(mValue[0].concat?mValue[0]:mValue):"float"},exports.default=GLShader},function(module,exports,__webpack_require__){"use strict";function setMatrixArrayType(type){exports.ARRAY_TYPE=ARRAY_TYPE=type}function toRadian(a){return a*degree}function equals(a,b){return Math.abs(a-b)<=EPSILON*Math.max(1,Math.abs(a),Math.abs(b))}Object.defineProperty(exports,"__esModule",{value:!0}),exports.setMatrixArrayType=setMatrixArrayType,exports.toRadian=toRadian,exports.equals=equals;var EPSILON=exports.EPSILON=1e-6,ARRAY_TYPE=exports.ARRAY_TYPE="undefined"!=typeof Float32Array?Float32Array:Array,degree=(exports.RANDOM=Math.random,Math.PI/180)},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_GLTool=__webpack_require__(0),_GLTool2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_GLTool),Batch=function(){function Batch(mMesh,mShader){_classCallCheck(this,Batch),this._mesh=mMesh,this._shader=mShader}return _createClass(Batch,[{key:"draw",value:function(){this._shader.bind(),_GLTool2.default.draw(this.mesh)}},{key:"mesh",get:function(){return this._mesh}},{key:"shader",get:function(){return this._shader}}]),Batch}();exports.default=Batch},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_glMatrix=__webpack_require__(1),_getAttribLoc=__webpack_require__(24),_getAttribLoc2=_interopRequireDefault(_getAttribLoc),gl=void 0,getBuffer=function(attr){var buffer=void 0;return void 0!==attr.buffer?buffer=attr.buffer:(buffer=gl.createBuffer(),attr.buffer=buffer),buffer},formBuffer=function(mData,mNum){for(var ary=[],i=0;i<mData.length;i+=mNum){for(var o=[],j=0;j<mNum;j++)o.push(mData[i+j]);ary.push(o)}return ary},Mesh=function(){function Mesh(){var mDrawingType=arguments.length>0&&void 0!==arguments[0]?arguments[0]:4,mUseVao=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];_classCallCheck(this,Mesh),gl=_GLTool2.default.gl,this.drawType=mDrawingType,this._attributes=[],this._numInstance=-1,this._enabledVertexAttribute=[],this._indices=[],this._faces=[],this._bufferChanged=[],this._hasIndexBufferChanged=!1,this._hasVAO=!1,this._isInstanced=!1,this._extVAO=!!_GLTool2.default.gl.createVertexArray,this._useVAO=!!this._extVAO&&mUseVao}return _createClass(Mesh,[{key:"bufferVertex",value:function(mArrayVertices){var mDrawType=arguments.length>1&&void 0!==arguments[1]?arguments[1]:35044;return this.bufferData(mArrayVertices,"aVertexPosition",3,mDrawType),this.normals.length<this.vertices.length&&this.bufferNormal(mArrayVertices,mDrawType),this}},{key:"bufferTexCoord",value:function(mArrayTexCoords){var mDrawType=arguments.length>1&&void 0!==arguments[1]?arguments[1]:35044;return this.bufferData(mArrayTexCoords,"aTextureCoord",2,mDrawType),this}},{key:"bufferNormal",value:function(mNormals){var mDrawType=arguments.length>1&&void 0!==arguments[1]?arguments[1]:35044;return this.bufferData(mNormals,"aNormal",3,mDrawType),this}},{key:"bufferIndex",value:function(mArrayIndices){var isDynamic=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._drawType=isDynamic?gl.DYNAMIC_DRAW:gl.STATIC_DRAW,this._indices=new Uint16Array(mArrayIndices),this._numItems=this._indices.length,this}},{key:"bufferFlattenData",value:function(mData,mName,mItemSize){var data=(arguments.length>3&&void 0!==arguments[3]&&arguments[3],arguments.length>4&&void 0!==arguments[4]&&arguments[4],formBuffer(mData,mItemSize));return this.bufferData(data,mName,mItemSize,35044,!1),this}},{key:"bufferData",value:function(mData,mName,mItemSize){var mDrawType=arguments.length>3&&void 0!==arguments[3]?arguments[3]:35044,isInstanced=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=0,drawType=mDrawType,bufferData=[];for(mItemSize||(mItemSize=mData[0].length),this._isInstanced=isInstanced||this._isInstanced,i=0;i<mData.length;i++)for(var j=0;j<mData[i].length;j++)bufferData.push(mData[i][j]);var dataArray=new Float32Array(bufferData),attribute=this.getAttribute(mName);return attribute?(attribute.itemSize=mItemSize,attribute.dataArray=dataArray,attribute.source=mData):this._attributes.push({name:mName,source:mData,itemSize:mItemSize,drawType:drawType,dataArray:dataArray,isInstanced:isInstanced}),this._bufferChanged.push(mName),this}},{key:"bufferInstance",value:function(mData,mName){if(!_GLTool2.default.gl.vertexAttribDivisor)return void console.error("Extension : ANGLE_instanced_arrays is not supported with this device !");var itemSize=mData[0].length;this._numInstance=mData.length,this.bufferData(mData,mName,itemSize,35044,!0)}},{key:"bind",value:function(mShaderProgram){this.generateBuffers(mShaderProgram),this.hasVAO?gl.bindVertexArray(this.vao):(this.attributes.forEach(function(attribute){gl.bindBuffer(gl.ARRAY_BUFFER,attribute.buffer);var attrPosition=attribute.attrPosition;gl.vertexAttribPointer(attrPosition,attribute.itemSize,gl.FLOAT,!1,0,0),attribute.isInstanced&&gl.vertexAttribDivisor(attrPosition,1)}),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.iBuffer))}},{key:"generateBuffers",value:function(mShaderProgram){var _this=this;0!=this._bufferChanged.length&&(this._useVAO?(this._vao||(this._vao=gl.createVertexArray()),gl.bindVertexArray(this._vao),this._attributes.forEach(function(attrObj){if(-1!==_this._bufferChanged.indexOf(attrObj.name)){var buffer=getBuffer(attrObj);gl.bindBuffer(gl.ARRAY_BUFFER,buffer),gl.bufferData(gl.ARRAY_BUFFER,attrObj.dataArray,attrObj.drawType);var attrPosition=(0,_getAttribLoc2.default)(gl,mShaderProgram,attrObj.name);gl.enableVertexAttribArray(attrPosition),gl.vertexAttribPointer(attrPosition,attrObj.itemSize,gl.FLOAT,!1,0,0),attrObj.attrPosition=attrPosition,attrObj.isInstanced&&gl.vertexAttribDivisor(attrPosition,1)}}),this._updateIndexBuffer(),gl.bindVertexArray(null),this._hasVAO=!0):(this._attributes.forEach(function(attrObj){if(-1!==_this._bufferChanged.indexOf(attrObj.name)){var buffer=getBuffer(attrObj);gl.bindBuffer(gl.ARRAY_BUFFER,buffer),gl.bufferData(gl.ARRAY_BUFFER,attrObj.dataArray,attrObj.drawType);var attrPosition=(0,_getAttribLoc2.default)(gl,mShaderProgram,attrObj.name);gl.enableVertexAttribArray(attrPosition),gl.vertexAttribPointer(attrPosition,attrObj.itemSize,gl.FLOAT,!1,0,0),attrObj.attrPosition=attrPosition,attrObj.isInstanced&&gl.vertexAttribDivisor(attrPosition,1)}}),this._updateIndexBuffer()),this._hasIndexBufferChanged=!1,this._bufferChanged=[])}},{key:"unbind",value:function(){this._useVAO&&gl.bindVertexArray(null),this._attributes.forEach(function(attribute){attribute.isInstanced&&gl.vertexAttribDivisor(attribute.attrPosition,0)})}},{key:"_updateIndexBuffer",value:function(){this._hasIndexBufferChanged||(this.iBuffer||(this.iBuffer=gl.createBuffer()),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.iBuffer),gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,this._indices,this._drawType),this.iBuffer.itemSize=1,this.iBuffer.numItems=this._numItems)}},{key:"computeNormals",value:function(){var usingFaceNormals=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.generateFaces(),usingFaceNormals?this._computeFaceNormals():this._computeVertexNormals()}},{key:"_computeFaceNormals",value:function(){for(var faceIndex=void 0,face=void 0,normals=[],i=0;i<this._indices.length;i+=3){faceIndex=i/3,face=this._faces[faceIndex];var N=face.normal;normals[face.indices[0]]=N,normals[face.indices[1]]=N,normals[face.indices[2]]=N}this.bufferNormal(normals)}},{key:"_computeVertexNormals",value:function(){for(var face=void 0,sumNormal=_glMatrix.vec3.create(),normals=[],vertices=this.vertices,i=0;i<vertices.length;i++){_glMatrix.vec3.set(sumNormal,0,0,0);for(var j=0;j<this._faces.length;j++)face=this._faces[j],face.indices.indexOf(i)>=0&&(sumNormal[0]+=face.normal[0],sumNormal[1]+=face.normal[1],sumNormal[2]+=face.normal[2]);_glMatrix.vec3.normalize(sumNormal,sumNormal),normals.push([sumNormal[0],sumNormal[1],sumNormal[2]])}this.bufferNormal(normals)}},{key:"generateFaces",value:function(){for(var ia=void 0,ib=void 0,ic=void 0,a=void 0,b=void 0,c=void 0,vertices=(_glMatrix.vec3.create(),_glMatrix.vec3.create(),_glMatrix.vec3.create(),this.vertices),i=0;i<this._indices.length;i+=3){ia=this._indices[i],ib=this._indices[i+1],ic=this._indices[i+2],a=vertices[ia],b=vertices[ib],c=vertices[ic];var face={indices:[ia,ib,ic],vertices:[a,b,c]};this._faces.push(face)}}},{key:"getAttribute",value:function(mName){return this._attributes.find(function(a){return a.name===mName})}},{key:"getSource",value:function(mName){var attr=this.getAttribute(mName);return attr?attr.source:[]}},{key:"vertices",get:function(){return this.getSource("aVertexPosition")}},{key:"normals",get:function(){return this.getSource("aNormal")}},{key:"coords",get:function(){return this.getSource("aTextureCoord")}},{key:"indices",get:function(){return this._indices}},{key:"vertexSize",get:function(){return this.vertices.length}},{key:"faces",get:function(){return this._faces}},{key:"attributes",get:function(){return this._attributes}},{key:"hasVAO",get:function(){return this._hasVAO}},{key:"vao",get:function(){return this._vao}},{key:"numInstance",get:function(){return this._numInstance}},{key:"isInstanced",get:function(){return this._isInstanced}}]),Mesh}();exports.default=Mesh},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),Scheduler=function(){function Scheduler(){_classCallCheck(this,Scheduler),this._delayTasks=[],this._nextTasks=[],this._deferTasks=[],this._highTasks=[],this._usurpTask=[],this._enterframeTasks=[],this._idTable=0,this._startTime=(new Date).getTime(),this._deltaTime=0,this._loop()}return _createClass(Scheduler,[{key:"addEF",value:function(func,params){params=params||[];var id=this._idTable;return this._enterframeTasks[id]={func:func,params:params},this._idTable++,id}},{key:"removeEF",value:function(id){return void 0!==this._enterframeTasks[id]&&(this._enterframeTasks[id]=null),-1}},{key:"delay",value:function(func,params,_delay){var time=(new Date).getTime(),t={func:func,params:params,delay:_delay,time:time};this._delayTasks.push(t)}},{key:"defer",value:function(func,params){var t={func:func,params:params};this._deferTasks.push(t)}},{key:"next",value:function(func,params){var t={func:func,params:params};this._nextTasks.push(t)}},{key:"usurp",value:function(func,params){var t={func:func,params:params};this._usurpTask.push(t)}},{key:"_process",value:function(){var i=0,task=void 0,interval=void 0;for(i=0;i<this._enterframeTasks.length;i++)null!==(task=this._enterframeTasks[i])&&void 0!==task&&task.func(task.params);for(;this._highTasks.length>0;)task=this._highTasks.pop(),task.func(task.params);var startTime=(new Date).getTime();for(this._deltaTime=(startTime-this._startTime)/1e3,i=0;i<this._delayTasks.length;i++)task=this._delayTasks[i],startTime-task.time>task.delay&&(task.func(task.params),this._delayTasks.splice(i,1));for(startTime=(new Date).getTime(),this._deltaTime=(startTime-this._startTime)/1e3,interval=1e3/60;this._deferTasks.length>0;){if(task=this._deferTasks.shift(),!((new Date).getTime()-startTime<interval)){this._deferTasks.unshift(task);break}task.func(task.params)}for(startTime=(new Date).getTime(),this._deltaTime=(startTime-this._startTime)/1e3,interval=1e3/60;this._usurpTask.length>0;)task=this._usurpTask.shift(),(new Date).getTime()-startTime<interval&&task.func(task.params);this._highTasks=this._highTasks.concat(this._nextTasks),this._nextTasks=[],this._usurpTask=[]}},{key:"_loop",value:function(){var _this=this;this._process(),window.requestAnimationFrame(function(){return _this._loop()})}},{key:"deltaTime",get:function(){return this._deltaTime}}]),Scheduler}(),scheduler=new Scheduler;exports.default=scheduler},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _Mesh=__webpack_require__(5),_Mesh2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_Mesh),Geom={},meshTri=void 0;Geom.plane=function(width,height,numSegments){for(var axis=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"xy",drawType=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,positions=[],coords=[],indices=[],normals=[],gapX=width/numSegments,gapY=height/numSegments,gapUV=1/numSegments,sx=.5*-width,sy=.5*-height,index=0,i=0;i<numSegments;i++)for(var j=0;j<numSegments;j++){var tx=gapX*i+sx,ty=gapY*j+sy,u=i/numSegments,v=j/numSegments;"xz"===axis?(positions.push([tx,0,ty+gapY]),positions.push([tx+gapX,0,ty+gapY]),positions.push([tx+gapX,0,ty]),positions.push([tx,0,ty]),coords.push([u,1-(v+gapUV)]),coords.push([u+gapUV,1-(v+gapUV)]),coords.push([u+gapUV,1-v]),coords.push([u,1-v]),normals.push([0,1,0]),normals.push([0,1,0]),normals.push([0,1,0]),normals.push([0,1,0])):"yz"===axis?(positions.push([0,ty,tx]),positions.push([0,ty,tx+gapX]),positions.push([0,ty+gapY,tx+gapX]),positions.push([0,ty+gapY,tx]),coords.push([u,v]),coords.push([u+gapUV,v]),coords.push([u+gapUV,v+gapUV]),coords.push([u,v+gapUV]),normals.push([1,0,0]),normals.push([1,0,0]),normals.push([1,0,0]),normals.push([1,0,0])):(positions.push([tx,ty,0]),positions.push([tx+gapX,ty,0]),positions.push([tx+gapX,ty+gapY,0]),positions.push([tx,ty+gapY,0]),coords.push([u,v]),coords.push([u+gapUV,v]),coords.push([u+gapUV,v+gapUV]),coords.push([u,v+gapUV]),normals.push([0,0,1]),normals.push([0,0,1]),normals.push([0,0,1]),normals.push([0,0,1])),indices.push(4*index+0),indices.push(4*index+1),indices.push(4*index+2),indices.push(4*index+0),indices.push(4*index+2),indices.push(4*index+3),index++}var mesh=new _Mesh2.default(drawType);return mesh.bufferVertex(positions),mesh.bufferTexCoord(coords),mesh.bufferIndex(indices),mesh.bufferNormal(normals),mesh},Geom.sphere=function(size,numSegments){function getPosition(i,j){var isNormal=arguments.length>2&&void 0!==arguments[2]&&arguments[2],rx=i/numSegments*Math.PI-.5*Math.PI,ry=j/numSegments*Math.PI*2,r=isNormal?1:size,pos=[];pos[1]=Math.sin(rx)*r;var t=Math.cos(rx)*r;pos[0]=Math.cos(ry)*t,pos[2]=Math.sin(ry)*t;return pos[0]=Math.floor(1e4*pos[0])/1e4,pos[1]=Math.floor(1e4*pos[1])/1e4,pos[2]=Math.floor(1e4*pos[2])/1e4,pos}for(var isInvert=arguments.length>2&&void 0!==arguments[2]&&arguments[2],drawType=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4,positions=[],coords=[],indices=[],normals=[],gapUV=1/numSegments,index=0,i=0;i<numSegments;i++)for(var j=0;j<numSegments;j++){positions.push(getPosition(i,j)),positions.push(getPosition(i+1,j)),positions.push(getPosition(i+1,j+1)),positions.push(getPosition(i,j+1)),normals.push(getPosition(i,j,!0)),normals.push(getPosition(i+1,j,!0)),normals.push(getPosition(i+1,j+1,!0)),normals.push(getPosition(i,j+1,!0));var u=j/numSegments,v=i/numSegments;coords.push([1-u,v]),coords.push([1-u,v+gapUV]),coords.push([1-u-gapUV,v+gapUV]),coords.push([1-u-gapUV,v]),indices.push(4*index+0),indices.push(4*index+1),indices.push(4*index+2),indices.push(4*index+0),indices.push(4*index+2),indices.push(4*index+3),index++}isInvert&&indices.reverse();var mesh=new _Mesh2.default(drawType);return mesh.bufferVertex(positions),mesh.bufferTexCoord(coords),mesh.bufferIndex(indices),mesh.bufferNormal(normals),mesh},Geom.cube=function(w,h,d){var drawType=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;h=h||w,d=d||w;var x=w/2,y=h/2,z=d/2,positions=[],coords=[],indices=[],normals=[],count=0;positions.push([-x,y,-z]),positions.push([x,y,-z]),positions.push([x,-y,-z]),positions.push([-x,-y,-z]),normals.push([0,0,-1]),normals.push([0,0,-1]),normals.push([0,0,-1]),normals.push([0,0,-1]),coords.push([0,0]),coords.push([1,0]),coords.push([1,1]),coords.push([0,1]),indices.push(4*count+0),indices.push(4*count+1),indices.push(4*count+2),indices.push(4*count+0),indices.push(4*count+2),indices.push(4*count+3),count++,positions.push([x,y,-z]),positions.push([x,y,z]),positions.push([x,-y,z]),positions.push([x,-y,-z]),normals.push([1,0,0]),normals.push([1,0,0]),normals.push([1,0,0]),normals.push([1,0,0]),coords.push([0,0]),coords.push([1,0]),coords.push([1,1]),coords.push([0,1]),indices.push(4*count+0),indices.push(4*count+1),indices.push(4*count+2),indices.push(4*count+0),indices.push(4*count+2),indices.push(4*count+3),count++,positions.push([x,y,z]),positions.push([-x,y,z]),positions.push([-x,-y,z]),positions.push([x,-y,z]),normals.push([0,0,1]),normals.push([0,0,1]),normals.push([0,0,1]),normals.push([0,0,1]),coords.push([0,0]),coords.push([1,0]),coords.push([1,1]),coords.push([0,1]),indices.push(4*count+0),indices.push(4*count+1),indices.push(4*count+2),indices.push(4*count+0),indices.push(4*count+2),indices.push(4*count+3),count++,positions.push([-x,y,z]),positions.push([-x,y,-z]),positions.push([-x,-y,-z]),positions.push([-x,-y,z]),normals.push([-1,0,0]),normals.push([-1,0,0]),normals.push([-1,0,0]),normals.push([-1,0,0]),coords.push([0,0]),coords.push([1,0]),coords.push([1,1]),coords.push([0,1]),indices.push(4*count+0),indices.push(4*count+1),indices.push(4*count+2),indices.push(4*count+0),indices.push(4*count+2),indices.push(4*count+3),count++,positions.push([x,y,-z]),positions.push([-x,y,-z]),positions.push([-x,y,z]),positions.push([x,y,z]),normals.push([0,1,0]),normals.push([0,1,0]),normals.push([0,1,0]),normals.push([0,1,0]),coords.push([0,0]),coords.push([1,0]),coords.push([1,1]),coords.push([0,1]),indices.push(4*count+0),indices.push(4*count+1),indices.push(4*count+2),indices.push(4*count+0),indices.push(4*count+2),indices.push(4*count+3),count++,positions.push([x,-y,z]),positions.push([-x,-y,z]),positions.push([-x,-y,-z]),positions.push([x,-y,-z]),normals.push([0,-1,0]),normals.push([0,-1,0]),normals.push([0,-1,0]),normals.push([0,-1,0]),coords.push([0,0]),coords.push([1,0]),coords.push([1,1]),coords.push([0,1]),indices.push(4*count+0),indices.push(4*count+1),indices.push(4*count+2),indices.push(4*count+0),indices.push(4*count+2),indices.push(4*count+3),count++;var mesh=new _Mesh2.default(drawType);return mesh.bufferVertex(positions),mesh.bufferTexCoord(coords),mesh.bufferIndex(indices),mesh.bufferNormal(normals),mesh},Geom.skybox=function(size){var drawType=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4,positions=[],coords=[],indices=[],normals=[],count=0;positions.push([size,size,-size]),positions.push([-size,size,-size]),positions.push([-size,-size,-size]),positions.push([size,-size,-size]),normals.push([0,0,-1]),normals.push([0,0,-1]),normals.push([0,0,-1]),normals.push([0,0,-1]),coords.push([0,0]),coords.push([1,0]),coords.push([1,1]),coords.push([0,1]),indices.push(4*count+0),indices.push(4*count+1),indices.push(4*count+2),indices.push(4*count+0),indices.push(4*count+2),indices.push(4*count+3),count++,positions.push([size,-size,-size]),positions.push([size,-size,size]),positions.push([size,size,size]),positions.push([size,size,-size]),normals.push([1,0,0]),normals.push([1,0,0]),normals.push([1,0,0]),normals.push([1,0,0]),coords.push([0,0]),coords.push([1,0]),coords.push([1,1]),coords.push([0,1]),indices.push(4*count+0),indices.push(4*count+1),indices.push(4*count+2),indices.push(4*count+0),indices.push(4*count+2),indices.push(4*count+3),count++,positions.push([-size,size,size]),positions.push([size,size,size]),positions.push([size,-size,size]),positions.push([-size,-size,size]),normals.push([0,0,1]),normals.push([0,0,1]),normals.push([0,0,1]),normals.push([0,0,1]),coords.push([0,0]),coords.push([1,0]),coords.push([1,1]),coords.push([0,1]),indices.push(4*count+0),indices.push(4*count+1),indices.push(4*count+2),indices.push(4*count+0),indices.push(4*count+2),indices.push(4*count+3),count++,positions.push([-size,-size,size]),positions.push([-size,-size,-size]),positions.push([-size,size,-size]),positions.push([-size,size,size]),normals.push([-1,0,0]),normals.push([-1,0,0]),normals.push([-1,0,0]),normals.push([-1,0,0]),coords.push([0,0]),coords.push([1,0]),coords.push([1,1]),coords.push([0,1]),indices.push(4*count+0),indices.push(4*count+1),indices.push(4*count+2),indices.push(4*count+0),indices.push(4*count+2),indices.push(4*count+3),count++,positions.push([size,size,size]),positions.push([-size,size,size]),positions.push([-size,size,-size]),positions.push([size,size,-size]),normals.push([0,1,0]),normals.push([0,1,0]),normals.push([0,1,0]),normals.push([0,1,0]),coords.push([0,0]),coords.push([1,0]),coords.push([1,1]),coords.push([0,1]),indices.push(4*count+0),indices.push(4*count+1),indices.push(4*count+2),indices.push(4*count+0),indices.push(4*count+2),indices.push(4*count+3),count++,positions.push([size,-size,-size]),positions.push([-size,-size,-size]),positions.push([-size,-size,size]),positions.push([size,-size,size]),normals.push([0,-1,0]),normals.push([0,-1,0]),normals.push([0,-1,0]),normals.push([0,-1,0]),coords.push([0,0]),coords.push([1,0]),coords.push([1,1]),coords.push([0,1]),indices.push(4*count+0),indices.push(4*count+1),indices.push(4*count+2),indices.push(4*count+0),indices.push(4*count+2),indices.push(4*count+3);var mesh=new _Mesh2.default(drawType);return mesh.bufferVertex(positions),mesh.bufferTexCoord(coords),mesh.bufferIndex(indices),mesh.bufferNormal(normals),mesh},Geom.bigTriangle=function(){if(!meshTri){var indices=[2,1,0],positions=[[-1,-1],[-1,4],[4,-1]];meshTri=new _Mesh2.default,meshTri.bufferData(positions,"aPosition",2),meshTri.bufferIndex(indices)}return meshTri},exports.default=Geom},function(module,exports,__webpack_require__){"use strict";module.exports={0:"NONE",1:"ONE",2:"LINE_LOOP",3:"LINE_STRIP",4:"TRIANGLES",5:"TRIANGLE_STRIP",6:"TRIANGLE_FAN",256:"DEPTH_BUFFER_BIT",512:"NEVER",513:"LESS",514:"EQUAL",515:"LEQUAL",516:"GREATER",517:"NOTEQUAL",518:"GEQUAL",519:"ALWAYS",768:"SRC_COLOR",769:"ONE_MINUS_SRC_COLOR",770:"SRC_ALPHA",771:"ONE_MINUS_SRC_ALPHA",772:"DST_ALPHA",773:"ONE_MINUS_DST_ALPHA",774:"DST_COLOR",775:"ONE_MINUS_DST_COLOR",776:"SRC_ALPHA_SATURATE",1024:"STENCIL_BUFFER_BIT",1028:"FRONT",1029:"BACK",1032:"FRONT_AND_BACK",1280:"INVALID_ENUM",1281:"INVALID_VALUE",1282:"INVALID_OPERATION",1285:"OUT_OF_MEMORY",1286:"INVALID_FRAMEBUFFER_OPERATION",2304:"CW",2305:"CCW",2849:"LINE_WIDTH",2884:"CULL_FACE",2885:"CULL_FACE_MODE",2886:"FRONT_FACE",2928:"DEPTH_RANGE",2929:"DEPTH_TEST",2930:"DEPTH_WRITEMASK",2931:"DEPTH_CLEAR_VALUE",2932:"DEPTH_FUNC",2960:"STENCIL_TEST",2961:"STENCIL_CLEAR_VALUE",2962:"STENCIL_FUNC",2963:"STENCIL_VALUE_MASK",2964:"STENCIL_FAIL",2965:"STENCIL_PASS_DEPTH_FAIL",2966:"STENCIL_PASS_DEPTH_PASS",2967:"STENCIL_REF",2968:"STENCIL_WRITEMASK",2978:"VIEWPORT",3024:"DITHER",3042:"BLEND",3088:"SCISSOR_BOX",3089:"SCISSOR_TEST",3106:"COLOR_CLEAR_VALUE",3107:"COLOR_WRITEMASK",3317:"UNPACK_ALIGNMENT",3333:"PACK_ALIGNMENT",3379:"MAX_TEXTURE_SIZE",3386:"MAX_VIEWPORT_DIMS",3408:"SUBPIXEL_BITS",3410:"RED_BITS",3411:"GREEN_BITS",3412:"BLUE_BITS",3413:"ALPHA_BITS",3414:"DEPTH_BITS",3415:"STENCIL_BITS",3553:"TEXTURE_2D",4352:"DONT_CARE",4353:"FASTEST",4354:"NICEST",5120:"BYTE",5121:"UNSIGNED_BYTE",5122:"SHORT",5123:"UNSIGNED_SHORT",5124:"INT",5125:"UNSIGNED_INT",5126:"FLOAT",5386:"INVERT",5890:"TEXTURE",6401:"STENCIL_INDEX",6402:"DEPTH_COMPONENT",6403:"RED",6406:"ALPHA",6407:"RGB",6408:"RGBA",6409:"LUMINANCE",6410:"LUMINANCE_ALPHA",7680:"KEEP",7681:"REPLACE",7682:"INCR",7683:"DECR",7936:"VENDOR",7937:"RENDERER",7938:"VERSION",9728:"NEAREST",9729:"LINEAR",9984:"NEAREST_MIPMAP_NEAREST",9985:"LINEAR_MIPMAP_NEAREST",9986:"NEAREST_MIPMAP_LINEAR",9987:"LINEAR_MIPMAP_LINEAR",10240:"TEXTURE_MAG_FILTER",10241:"TEXTURE_MIN_FILTER",10242:"TEXTURE_WRAP_S",10243:"TEXTURE_WRAP_T",10497:"REPEAT",10752:"POLYGON_OFFSET_UNITS",16384:"COLOR_BUFFER_BIT",32769:"CONSTANT_COLOR",32770:"ONE_MINUS_CONSTANT_COLOR",32771:"CONSTANT_ALPHA",32772:"ONE_MINUS_CONSTANT_ALPHA",32773:"BLEND_COLOR",32774:"FUNC_ADD",32777:"BLEND_EQUATION_RGB",32778:"FUNC_SUBTRACT",32779:"FUNC_REVERSE_SUBTRACT",32819:"UNSIGNED_SHORT_4_4_4_4",32820:"UNSIGNED_SHORT_5_5_5_1",32823:"POLYGON_OFFSET_FILL",32824:"POLYGON_OFFSET_FACTOR",32854:"RGBA4",32855:"RGB5_A1",32873:"TEXTURE_BINDING_2D",32926:"SAMPLE_ALPHA_TO_COVERAGE",32928:"SAMPLE_COVERAGE",32936:"SAMPLE_BUFFERS",32937:"SAMPLES",32938:"SAMPLE_COVERAGE_VALUE",32939:"SAMPLE_COVERAGE_INVERT",32968:"BLEND_DST_RGB",32969:"BLEND_SRC_RGB",32970:"BLEND_DST_ALPHA",32971:"BLEND_SRC_ALPHA",33071:"CLAMP_TO_EDGE",33170:"GENERATE_MIPMAP_HINT",33189:"DEPTH_COMPONENT16",33306:"DEPTH_STENCIL_ATTACHMENT",33321:"R8",33635:"UNSIGNED_SHORT_5_6_5",33648:"MIRRORED_REPEAT",33901:"ALIASED_POINT_SIZE_RANGE",33902:"ALIASED_LINE_WIDTH_RANGE",33984:"TEXTURE0",33985:"TEXTURE1",33986:"TEXTURE2",33987:"TEXTURE3",33988:"TEXTURE4",33989:"TEXTURE5",33990:"TEXTURE6",33991:"TEXTURE7",33992:"TEXTURE8",33993:"TEXTURE9",33994:"TEXTURE10",33995:"TEXTURE11",33996:"TEXTURE12",33997:"TEXTURE13",33998:"TEXTURE14",33999:"TEXTURE15",34e3:"TEXTURE16",34001:"TEXTURE17",34002:"TEXTURE18",34003:"TEXTURE19",34004:"TEXTURE20",34005:"TEXTURE21",34006:"TEXTURE22",34007:"TEXTURE23",34008:"TEXTURE24",34009:"TEXTURE25",34010:"TEXTURE26",34011:"TEXTURE27",34012:"TEXTURE28",34013:"TEXTURE29",34014:"TEXTURE30",34015:"TEXTURE31",34016:"ACTIVE_TEXTURE",34024:"MAX_RENDERBUFFER_SIZE",34041:"DEPTH_STENCIL",34055:"INCR_WRAP",34056:"DECR_WRAP",34067:"TEXTURE_CUBE_MAP",34068:"TEXTURE_BINDING_CUBE_MAP",34069:"TEXTURE_CUBE_MAP_POSITIVE_X",34070:"TEXTURE_CUBE_MAP_NEGATIVE_X",34071:"TEXTURE_CUBE_MAP_POSITIVE_Y",34072:"TEXTURE_CUBE_MAP_NEGATIVE_Y",34073:"TEXTURE_CUBE_MAP_POSITIVE_Z",34074:"TEXTURE_CUBE_MAP_NEGATIVE_Z",34076:"MAX_CUBE_MAP_TEXTURE_SIZE",34338:"VERTEX_ATTRIB_ARRAY_ENABLED",34339:"VERTEX_ATTRIB_ARRAY_SIZE",34340:"VERTEX_ATTRIB_ARRAY_STRIDE",34341:"VERTEX_ATTRIB_ARRAY_TYPE",34342:"CURRENT_VERTEX_ATTRIB",34373:"VERTEX_ATTRIB_ARRAY_POINTER",34466:"NUM_COMPRESSED_TEXTURE_FORMATS",34467:"COMPRESSED_TEXTURE_FORMATS",34660:"BUFFER_SIZE",34661:"BUFFER_USAGE",34816:"STENCIL_BACK_FUNC",34817:"STENCIL_BACK_FAIL",34818:"STENCIL_BACK_PASS_DEPTH_FAIL",34819:"STENCIL_BACK_PASS_DEPTH_PASS",34877:"BLEND_EQUATION_ALPHA",34921:"MAX_VERTEX_ATTRIBS",34922:"VERTEX_ATTRIB_ARRAY_NORMALIZED",34930:"MAX_TEXTURE_IMAGE_UNITS",34962:"ARRAY_BUFFER",34963:"ELEMENT_ARRAY_BUFFER",34964:"ARRAY_BUFFER_BINDING",34965:"ELEMENT_ARRAY_BUFFER_BINDING",34975:"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",35040:"STREAM_DRAW",35044:"STATIC_DRAW",35048:"DYNAMIC_DRAW",35632:"FRAGMENT_SHADER",35633:"VERTEX_SHADER",35660:"MAX_VERTEX_TEXTURE_IMAGE_UNITS",35661:"MAX_COMBINED_TEXTURE_IMAGE_UNITS",35663:"SHADER_TYPE",35664:"FLOAT_VEC2",35665:"FLOAT_VEC3",35666:"FLOAT_VEC4",35667:"INT_VEC2",35668:"INT_VEC3",35669:"INT_VEC4",35670:"BOOL",35671:"BOOL_VEC2",35672:"BOOL_VEC3",35673:"BOOL_VEC4",35674:"FLOAT_MAT2",35675:"FLOAT_MAT3",35676:"FLOAT_MAT4",35678:"SAMPLER_2D",35680:"SAMPLER_CUBE",35712:"DELETE_STATUS",35713:"COMPILE_STATUS",35714:"LINK_STATUS",35715:"VALIDATE_STATUS",35716:"INFO_LOG_LENGTH",35717:"ATTACHED_SHADERS",35718:"ACTIVE_UNIFORMS",35719:"ACTIVE_UNIFORM_MAX_LENGTH",35720:"SHADER_SOURCE_LENGTH",35721:"ACTIVE_ATTRIBUTES",35722:"ACTIVE_ATTRIBUTE_MAX_LENGTH",35724:"SHADING_LANGUAGE_VERSION",35725:"CURRENT_PROGRAM",36003:"STENCIL_BACK_REF",36004:"STENCIL_BACK_VALUE_MASK",36005:"STENCIL_BACK_WRITEMASK",36006:"FRAMEBUFFER_BINDING",36007:"RENDERBUFFER_BINDING",36048:"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",36049:"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",36050:"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",36051:"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",36053:"FRAMEBUFFER_COMPLETE",36054:"FRAMEBUFFER_INCOMPLETE_ATTACHMENT",36055:"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",36057:"FRAMEBUFFER_INCOMPLETE_DIMENSIONS",36061:"FRAMEBUFFER_UNSUPPORTED",36064:"COLOR_ATTACHMENT0",36096:"DEPTH_ATTACHMENT",36128:"STENCIL_ATTACHMENT",36160:"FRAMEBUFFER",36161:"RENDERBUFFER",36162:"RENDERBUFFER_WIDTH",36163:"RENDERBUFFER_HEIGHT",36164:"RENDERBUFFER_INTERNAL_FORMAT",36168:"STENCIL_INDEX8",36176:"RENDERBUFFER_RED_SIZE",36177:"RENDERBUFFER_GREEN_SIZE",36178:"RENDERBUFFER_BLUE_SIZE",36179:"RENDERBUFFER_ALPHA_SIZE",36180:"RENDERBUFFER_DEPTH_SIZE",36181:"RENDERBUFFER_STENCIL_SIZE",36194:"RGB565",36336:"LOW_FLOAT",36337:"MEDIUM_FLOAT",36338:"HIGH_FLOAT",36339:"LOW_INT",36340:"MEDIUM_INT",36341:"HIGH_INT",36346:"SHADER_COMPILER",36347:"MAX_VERTEX_UNIFORM_VECTORS",36348:"MAX_VARYING_VECTORS",36349:"MAX_FRAGMENT_UNIFORM_VECTORS",37440:"UNPACK_FLIP_Y_WEBGL",37441:"UNPACK_PREMULTIPLY_ALPHA_WEBGL",37442:"CONTEXT_LOST_WEBGL",37443:"UNPACK_COLORSPACE_CONVERSION_WEBGL",37444:"BROWSER_DEFAULT_WEBGL"}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_GLShader=__webpack_require__(2),_GLShader2=_interopRequireDefault(_GLShader),_FrameBuffer=__webpack_require__(12),_FrameBuffer2=_interopRequireDefault(_FrameBuffer),_ShaderLibs=__webpack_require__(32),_ShaderLibs2=_interopRequireDefault(_ShaderLibs),Pass=function(){function Pass(mSource){var mWidth=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,mHeight=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;arguments.length>3&&void 0!==arguments[3]&&arguments[3];_classCallCheck(this,Pass),this.shader=new _GLShader2.default(_ShaderLibs2.default.bigTriangleVert,mSource),this._width=mWidth,this._height=mHeight,this._uniforms={},this._hasOwnFbo=this._width>0&&this._width>0,this._uniforms={},this._hasOwnFbo&&(this._fbo=new _FrameBuffer2.default(this._width,this.height,mParmas))}return _createClass(Pass,[{key:"uniform",value:function(mName,mValue){this._uniforms[mName]=mValue}},{key:"render",value:function(texture){this.shader.bind(),this.shader.uniform("texture","uniform1i",0),texture.bind(0),this.shader.uniform(this._uniforms)}},{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}},{key:"fbo",get:function(){return this._fbo}},{key:"hasFbo",get:function(){return this._hasOwnFbo}}]),Pass}();exports.default=Pass},function(module,exports){module.exports="// simpleColor.frag\n\n#define SHADER_NAME SIMPLE_COLOR\n\nprecision mediump float;\n#define GLSLIFY 1\n\nuniform vec3 color;\nuniform float opacity;\n\nvoid main(void) {\n    gl_FragColor = vec4(color, opacity);\n}"},function(module,exports){module.exports="// basic.vert\n\n#define SHADER_NAME BASIC_VERTEX\n\nprecision highp float;\n#define GLSLIFY 1\nattribute vec3 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec3 aNormal;\n\nuniform mat4 uModelMatrix;\nuniform mat4 uViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vNormal;\n\nvoid main(void) {\n    gl_Position = uProjectionMatrix * uViewMatrix * uModelMatrix * vec4(aVertexPosition, 1.0);\n    vTextureCoord = aTextureCoord;\n    vNormal = aNormal;\n}"},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_GLTexture=__webpack_require__(26),_GLTexture2=_interopRequireDefault(_GLTexture),_WebglNumber=__webpack_require__(8),_WebglNumber2=_interopRequireDefault(_WebglNumber),gl=void 0,webglDepthTexture=void 0,hasCheckedMultiRenderSupport=!1,extDrawBuffer=void 0,checkMultiRender=function(){return!!_GLTool2.default.webgl2||!!(extDrawBuffer=_GLTool2.default.getExtension("WEBGL_draw_buffers"))},FrameBuffer=function(){function FrameBuffer(mWidth,mHeight){var mParameters=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},mNumTargets=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;_classCallCheck(this,FrameBuffer),gl=_GLTool2.default.gl,webglDepthTexture=_GLTool2.default.checkExtension("WEBGL_depth_texture"),this.width=mWidth,this.height=mHeight,this._numTargets=mNumTargets,this._multipleTargets=mNumTargets>1,this._parameters=mParameters,hasCheckedMultiRenderSupport||checkMultiRender(),this._multipleTargets&&this._checkMaxNumRenderTarget(),this._init()}return _createClass(FrameBuffer,[{key:"_init",value:function(){if(this._initTextures(),this.frameBuffer=gl.createFramebuffer(),gl.bindFramebuffer(gl.FRAMEBUFFER,this.frameBuffer),_GLTool2.default.webgl2){for(var buffers=[],i=0;i<this._numTargets;i++)gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER,gl.COLOR_ATTACHMENT0+i,gl.TEXTURE_2D,this._textures[i].texture,0),buffers.push(gl["COLOR_ATTACHMENT"+i]);gl.drawBuffers(buffers),gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER,gl.DEPTH_ATTACHMENT,gl.TEXTURE_2D,this.glDepthTexture.texture,0)}else{for(var _i=0;_i<this._numTargets;_i++)gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0+_i,gl.TEXTURE_2D,this._textures[_i].texture,0);if(this._multipleTargets){for(var drawBuffers=[],_i2=0;_i2<this._numTargets;_i2++)drawBuffers.push(extDrawBuffer["COLOR_ATTACHMENT"+_i2+"_WEBGL"]);extDrawBuffer.drawBuffersWEBGL(drawBuffers)}webglDepthTexture&&gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.DEPTH_ATTACHMENT,gl.TEXTURE_2D,this.glDepthTexture.texture,0)}var FBOstatus=gl.checkFramebufferStatus(gl.FRAMEBUFFER);FBOstatus!=gl.FRAMEBUFFER_COMPLETE&&console.error("GL_FRAMEBUFFER_COMPLETE failed, CANNOT use Framebuffer",_WebglNumber2.default[FBOstatus]),gl.bindTexture(gl.TEXTURE_2D,null),gl.bindRenderbuffer(gl.RENDERBUFFER,null),gl.bindFramebuffer(gl.FRAMEBUFFER,null),this.clear()}},{key:"_checkMaxNumRenderTarget",value:function(){var maxNumDrawBuffers=_GLTool2.default.gl.getParameter(extDrawBuffer.MAX_DRAW_BUFFERS_WEBGL);this._numTargets>maxNumDrawBuffers&&(console.error("Over max number of draw buffers supported : ",maxNumDrawBuffers),this._numTargets=maxNumDrawBuffers)}},{key:"_initTextures",value:function(){this._textures=[];for(var i=0;i<this._numTargets;i++){var glt=this._createTexture();this._textures.push(glt)}_GLTool2.default.webgl2?this.glDepthTexture=this._createTexture(gl.DEPTH_COMPONENT16,gl.UNSIGNED_SHORT,gl.DEPTH_COMPONENT,!0):this.glDepthTexture=this._createTexture(gl.DEPTH_COMPONENT,gl.UNSIGNED_SHORT,gl.DEPTH_COMPONENT,{minFilter:_GLTool2.default.LINEAR})}},{key:"_createTexture",value:function(mInternalformat,mTexelType,mFormat){var mParameters=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},parameters=Object.assign({},this._parameters);mFormat||(mFormat=mInternalformat),parameters.internalFormat=mInternalformat||gl.RGBA,parameters.format=mFormat,parameters.type=mTexelType||parameters.type||_GLTool2.default.UNSIGNED_BYTE;for(var s in mParameters)parameters[s]=mParameters[s];return new _GLTexture2.default(null,parameters,this.width,this.height)}},{key:"bind",value:function(){(!(arguments.length>0&&void 0!==arguments[0])||arguments[0])&&_GLTool2.default.viewport(0,0,this.width,this.height),gl.bindFramebuffer(gl.FRAMEBUFFER,this.frameBuffer)}},{key:"unbind",value:function(){(!(arguments.length>0&&void 0!==arguments[0])||arguments[0])&&_GLTool2.default.viewport(0,0,_GLTool2.default.width,_GLTool2.default.height),gl.bindFramebuffer(gl.FRAMEBUFFER,null),this._textures.forEach(function(texture){texture.generateMipmap()})}},{key:"clear",value:function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.bind(),_GLTool2.default.clear(r,g,b,a),this.unbind()}},{key:"getTexture",value:function(){var mIndex=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._textures[mIndex]}},{key:"getDepthTexture",value:function(){return this.glDepthTexture}},{key:"showParameters",value:function(){this._textures[0].showParameters()}},{key:"minFilter",get:function(){return this._textures[0].minFilter},set:function(mValue){this._textures.forEach(function(texture){texture.minFilter=mValue})}},{key:"magFilter",get:function(){return this._textures[0].magFilter},set:function(mValue){this._textures.forEach(function(texture){texture.magFilter=mValue})}},{key:"wrapS",get:function(){return this._textures[0].wrapS},set:function(mValue){this._textures.forEach(function(texture){texture.wrapS=mValue})}},{key:"wrapT",get:function(){return this._textures[0].wrapT},set:function(mValue){this._textures.forEach(function(texture){texture.wrapT=mValue})}},{key:"numTargets",get:function(){return this._numTargets}}]),FrameBuffer}();exports.default=FrameBuffer},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_scheduling=__webpack_require__(6),_scheduling2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_scheduling),EaseNumber=function(){function EaseNumber(mValue){var _this=this,mEasing=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;_classCallCheck(this,EaseNumber),this.easing=mEasing,this._value=mValue,this._targetValue=mValue,this._efIndex=_scheduling2.default.addEF(function(){return _this._update()})}return _createClass(EaseNumber,[{key:"_update",value:function(){this._checkLimit(),this._value+=(this._targetValue-this._value)*this.easing,Math.abs(this._targetValue-this._value)<1e-4&&(this._value=this._targetValue)}},{key:"setTo",value:function(mValue){this._targetValue=this._value=mValue}},{key:"add",value:function(mAdd){this._targetValue+=mAdd}},{key:"limit",value:function(mMin,mMax){if(mMin>mMax)return void this.limit(mMax,mMin);this._min=mMin,this._max=mMax,this._checkLimit()}},{key:"_checkLimit",value:function(){void 0!==this._min&&this._targetValue<this._min&&(this._targetValue=this._min),void 0!==this._max&&this._targetValue>this._max&&(this._targetValue=this._max)}},{key:"destroy",value:function(){_scheduling2.default.removeEF(this._efIndex)}},{key:"value",set:function(mValue){this._targetValue=mValue},get:function(){return this._value}},{key:"targetValue",get:function(){return this._targetValue}}]),EaseNumber}();exports.default=EaseNumber},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_glMatrix=__webpack_require__(1),a=_glMatrix.vec3.create(),b=_glMatrix.vec3.create(),c=_glMatrix.vec3.create(),target=_glMatrix.vec3.create(),edge1=_glMatrix.vec3.create(),edge2=_glMatrix.vec3.create(),normal=_glMatrix.vec3.create(),diff=_glMatrix.vec3.create(),Ray=function(){function Ray(mOrigin,mDirection){_classCallCheck(this,Ray),this.origin=_glMatrix.vec3.clone(mOrigin),this.direction=_glMatrix.vec3.clone(mDirection)}return _createClass(Ray,[{key:"at",value:function(t){return _glMatrix.vec3.copy(target,this.direction),_glMatrix.vec3.scale(target,target,t),_glMatrix.vec3.add(target,target,this.origin),target}},{key:"lookAt",value:function(mTarget){_glMatrix.vec3.sub(this.direction,mTarget,this.origin),_glMatrix.vec3.normalize(this.origin,this.origin)}},{key:"closestPointToPoint",value:function(mPoint){var result=_glMatrix.vec3.create();_glMatrix.vec3.sub(mPoint,this.origin);var directionDistance=_glMatrix.vec3.dot(result,this.direction);return directionDistance<0?_glMatrix.vec3.clone(this.origin):(_glMatrix.vec3.copy(result,this.direction),_glMatrix.vec3.scale(result,result,directionDistance),_glMatrix.vec3.add(result,result,this.origin),result)}},{key:"distanceToPoint",value:function(mPoint){return Math.sqrt(this.distanceSqToPoint(mPoint))}},{key:"distanceSqToPoint",value:function(mPoint){var v1=_glMatrix.vec3.create();_glMatrix.vec3.sub(v1,mPoint,this.origin);var directionDistance=_glMatrix.vec3.dot(v1,this.direction);return directionDistance<0?_glMatrix.vec3.squaredDistance(this.origin,mPoint):(_glMatrix.vec3.copy(v1,this.direction),_glMatrix.vec3.scale(v1,v1,directionDistance),_glMatrix.vec3.add(v1,v1,this.origin),_glMatrix.vec3.squaredDistance(v1,mPoint))}},{key:"intersectsSphere",value:function(mCenter,mRadius){return this.distanceToPoint(mCenter)<=mRadius}},{key:"intersectSphere",value:function(mCenter,mRadius){var v1=_glMatrix.vec3.create();_glMatrix.vec3.sub(v1,mCenter,this.origin);var tca=_glMatrix.vec3.dot(v1,this.direction),d2=_glMatrix.vec3.dot(v1,v1)-tca*tca,radius2=mRadius*mRadius;if(d2>radius2)return null;var thc=Math.sqrt(radius2-d2),t0=tca-thc,t1=tca+thc;return t0<0&&t1<0?null:t0<0?this.at(t1):this.at(t0)}},{key:"distanceToPlane",value:function(mPlaneCenter,mNormal){_glMatrix.vec3.dot(mNormal,this.direction)}},{key:"intersectTriangle",value:function(mPA,mPB,mPC){var backfaceCulling=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];_glMatrix.vec3.copy(a,mPA),_glMatrix.vec3.copy(b,mPB),_glMatrix.vec3.copy(c,mPC),_glMatrix.vec3.sub(edge1,b,a),_glMatrix.vec3.sub(edge2,c,a),_glMatrix.vec3.cross(normal,edge1,edge2);var DdN=_glMatrix.vec3.dot(this.direction,normal),sign=void 0;if(DdN>0){if(backfaceCulling)return null;sign=1}else{if(!(DdN<0))return null;sign=-1,DdN=-DdN}_glMatrix.vec3.sub(diff,this.origin,a),_glMatrix.vec3.cross(edge2,diff,edge2);var DdQxE2=sign*_glMatrix.vec3.dot(this.direction,edge2);if(DdQxE2<0)return null;_glMatrix.vec3.cross(edge1,edge1,diff);var DdE1xQ=sign*_glMatrix.vec3.dot(this.direction,edge1);if(DdE1xQ<0)return null;if(DdQxE2+DdE1xQ>DdN)return null;var Qdn=-sign*_glMatrix.vec3.dot(diff,normal);return Qdn<0?null:this.at(Qdn/DdN)}}]),Ray}();exports.default=Ray},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_glMatrix=__webpack_require__(1),Camera=function(){function Camera(){_classCallCheck(this,Camera),this._matrix=_glMatrix.mat4.create(),this._quat=_glMatrix.quat.create(),this._orientation=_glMatrix.mat4.create(),this._projection=_glMatrix.mat4.create(),this.position=vec3.create()}return _createClass(Camera,[{key:"lookAt",value:function(aEye,aCenter){var aUp=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[0,1,0];this._eye=vec3.clone(aEye),this._center=vec3.clone(aCenter),vec3.copy(this.position,aEye),_glMatrix.mat4.identity(this._matrix),_glMatrix.mat4.lookAt(this._matrix,aEye,aCenter,aUp)}},{key:"setFromOrientation",value:function(x,y,z,w){_glMatrix.quat.set(this._quat,x,y,z,w),_glMatrix.mat4.fromQuat(this._orientation,this._quat),_glMatrix.mat4.translate(this._matrix,this._orientation,this.positionOffset)}},{key:"setProjection",value:function(mProj){this._projection=_glMatrix.mat4.clone(mProj)}},{key:"setView",value:function(mView){this._matrix=_glMatrix.mat4.clone(mView)}},{key:"setFromViewProj",value:function(mView,mProj){this.setView(mView),this.setProjection(mProj)}},{key:"matrix",get:function(){return this._matrix}},{key:"viewMatrix",get:function(){return this._matrix}},{key:"projection",get:function(){return this._projection}},{key:"projectionMatrix",get:function(){return this._projection}},{key:"eye",get:function(){return this._eye}},{key:"center",get:function(){return this._center}}]),Camera}();exports.default=Camera},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_Camera2=__webpack_require__(15),_Camera3=_interopRequireDefault(_Camera2),_Ray=__webpack_require__(14),_Ray2=_interopRequireDefault(_Ray),_glMatrix=__webpack_require__(1),mInverseViewProj=_glMatrix.mat4.create(),cameraDir=_glMatrix.vec3.create(),CameraPerspective=function(_Camera){function CameraPerspective(){return _classCallCheck(this,CameraPerspective),_possibleConstructorReturn(this,(CameraPerspective.__proto__||Object.getPrototypeOf(CameraPerspective)).apply(this,arguments))}return _inherits(CameraPerspective,_Camera),_createClass(CameraPerspective,[{key:"setPerspective",value:function(mFov,mAspectRatio,mNear,mFar){this._fov=mFov,this._near=mNear,this._far=mFar,this._aspectRatio=mAspectRatio,_glMatrix.mat4.perspective(this._projection,mFov,mAspectRatio,mNear,mFar)}},{key:"setAspectRatio",value:function(mAspectRatio){this._aspectRatio=mAspectRatio,_glMatrix.mat4.perspective(this.projection,this._fov,mAspectRatio,this._near,this._far)}},{key:"generateRay",value:function(mScreenPosition,mRay){var proj=this.projectionMatrix,view=this.viewMatrix;return _glMatrix.mat4.multiply(mInverseViewProj,proj,view),_glMatrix.mat4.invert(mInverseViewProj,mInverseViewProj),_glMatrix.vec3.transformMat4(cameraDir,mScreenPosition,mInverseViewProj),_glMatrix.vec3.sub(cameraDir,cameraDir,this.position),_glMatrix.vec3.normalize(cameraDir,cameraDir),mRay?(mRay.origin=this.position,mRay.direction=cameraDir):mRay=new _Ray2.default(this.position,cameraDir),mRay}}]),CameraPerspective}(_Camera3.default);exports.default=CameraPerspective},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),BinaryLoader=function(){function BinaryLoader(){var _this=this,isArrayBuffer=arguments.length>0&&void 0!==arguments[0]&&arguments[0];_classCallCheck(this,BinaryLoader),this._req=new XMLHttpRequest,this._req.addEventListener("load",function(e){return _this._onLoaded(e)}),this._req.addEventListener("progress",function(e){return _this._onProgress(e)}),isArrayBuffer&&(this._req.responseType="arraybuffer")}return _createClass(BinaryLoader,[{key:"load",value:function(url,callback){console.log("Loading : ",url),this._callback=callback,this._req.open("GET",url),this._req.send()}},{key:"_onLoaded",value:function(){this._callback(this._req.response)}},{key:"_onProgress",value:function(){}}]),BinaryLoader}();exports.default=BinaryLoader},function(module,exports){module.exports="// bigTriangle.vert\n\n#define SHADER_NAME BIG_TRIANGLE_VERTEX\n\nprecision mediump float;\n#define GLSLIFY 1\nattribute vec2 aPosition;\nvarying vec2 vTextureCoord;\n\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    vTextureCoord = aPosition * .5 + .5;\n}"},function(module,exports){module.exports="// copy.frag\n\n#define SHADER_NAME COPY_FRAGMENT\n\nprecision mediump float;\n#define GLSLIFY 1\n\nvarying vec2 vTextureCoord;\nuniform sampler2D texture;\n\nvoid main(void) {\n    gl_FragColor = texture2D(texture, vTextureCoord);\n}"},function(module,exports,__webpack_require__){"use strict";function create(){var out=new glMatrix.ARRAY_TYPE(9);return out[0]=1,out[1]=0,out[2]=0,out[3]=0,out[4]=1,out[5]=0,out[6]=0,out[7]=0,out[8]=1,out}function fromMat4(out,a){return out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[4],out[4]=a[5],out[5]=a[6],out[6]=a[8],out[7]=a[9],out[8]=a[10],out}function clone(a){var out=new glMatrix.ARRAY_TYPE(9);return out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out[4]=a[4],out[5]=a[5],out[6]=a[6],out[7]=a[7],out[8]=a[8],out}function copy(out,a){return out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out[4]=a[4],out[5]=a[5],out[6]=a[6],out[7]=a[7],out[8]=a[8],out}function fromValues(m00,m01,m02,m10,m11,m12,m20,m21,m22){var out=new glMatrix.ARRAY_TYPE(9);return out[0]=m00,out[1]=m01,out[2]=m02,out[3]=m10,out[4]=m11,out[5]=m12,out[6]=m20,out[7]=m21,out[8]=m22,out}function set(out,m00,m01,m02,m10,m11,m12,m20,m21,m22){return out[0]=m00,out[1]=m01,out[2]=m02,out[3]=m10,out[4]=m11,out[5]=m12,out[6]=m20,out[7]=m21,out[8]=m22,out}function identity(out){return out[0]=1,out[1]=0,out[2]=0,out[3]=0,out[4]=1,out[5]=0,out[6]=0,out[7]=0,out[8]=1,out}function transpose(out,a){if(out===a){var a01=a[1],a02=a[2],a12=a[5];out[1]=a[3],out[2]=a[6],out[3]=a01,out[5]=a[7],out[6]=a02,out[7]=a12}else out[0]=a[0],out[1]=a[3],out[2]=a[6],out[3]=a[1],out[4]=a[4],out[5]=a[7],out[6]=a[2],out[7]=a[5],out[8]=a[8];return out}function invert(out,a){var a00=a[0],a01=a[1],a02=a[2],a10=a[3],a11=a[4],a12=a[5],a20=a[6],a21=a[7],a22=a[8],b01=a22*a11-a12*a21,b11=-a22*a10+a12*a20,b21=a21*a10-a11*a20,det=a00*b01+a01*b11+a02*b21;return det?(det=1/det,out[0]=b01*det,out[1]=(-a22*a01+a02*a21)*det,out[2]=(a12*a01-a02*a11)*det,out[3]=b11*det,out[4]=(a22*a00-a02*a20)*det,out[5]=(-a12*a00+a02*a10)*det,out[6]=b21*det,out[7]=(-a21*a00+a01*a20)*det,out[8]=(a11*a00-a01*a10)*det,out):null}function adjoint(out,a){var a00=a[0],a01=a[1],a02=a[2],a10=a[3],a11=a[4],a12=a[5],a20=a[6],a21=a[7],a22=a[8];return out[0]=a11*a22-a12*a21,out[1]=a02*a21-a01*a22,out[2]=a01*a12-a02*a11,out[3]=a12*a20-a10*a22,out[4]=a00*a22-a02*a20,out[5]=a02*a10-a00*a12,out[6]=a10*a21-a11*a20,out[7]=a01*a20-a00*a21,out[8]=a00*a11-a01*a10,out}function determinant(a){var a00=a[0],a01=a[1],a02=a[2],a10=a[3],a11=a[4],a12=a[5],a20=a[6],a21=a[7],a22=a[8];return a00*(a22*a11-a12*a21)+a01*(-a22*a10+a12*a20)+a02*(a21*a10-a11*a20)}function multiply(out,a,b){var a00=a[0],a01=a[1],a02=a[2],a10=a[3],a11=a[4],a12=a[5],a20=a[6],a21=a[7],a22=a[8],b00=b[0],b01=b[1],b02=b[2],b10=b[3],b11=b[4],b12=b[5],b20=b[6],b21=b[7],b22=b[8];return out[0]=b00*a00+b01*a10+b02*a20,out[1]=b00*a01+b01*a11+b02*a21,out[2]=b00*a02+b01*a12+b02*a22,out[3]=b10*a00+b11*a10+b12*a20,out[4]=b10*a01+b11*a11+b12*a21,out[5]=b10*a02+b11*a12+b12*a22,out[6]=b20*a00+b21*a10+b22*a20,out[7]=b20*a01+b21*a11+b22*a21,out[8]=b20*a02+b21*a12+b22*a22,out}function translate(out,a,v){var a00=a[0],a01=a[1],a02=a[2],a10=a[3],a11=a[4],a12=a[5],a20=a[6],a21=a[7],a22=a[8],x=v[0],y=v[1];return out[0]=a00,out[1]=a01,out[2]=a02,out[3]=a10,out[4]=a11,out[5]=a12,out[6]=x*a00+y*a10+a20,out[7]=x*a01+y*a11+a21,out[8]=x*a02+y*a12+a22,out}function rotate(out,a,rad){var a00=a[0],a01=a[1],a02=a[2],a10=a[3],a11=a[4],a12=a[5],a20=a[6],a21=a[7],a22=a[8],s=Math.sin(rad),c=Math.cos(rad);return out[0]=c*a00+s*a10,out[1]=c*a01+s*a11,out[2]=c*a02+s*a12,out[3]=c*a10-s*a00,out[4]=c*a11-s*a01,out[5]=c*a12-s*a02,out[6]=a20,out[7]=a21,out[8]=a22,out}function scale(out,a,v){var x=v[0],y=v[1];return out[0]=x*a[0],out[1]=x*a[1],out[2]=x*a[2],out[3]=y*a[3],out[4]=y*a[4],out[5]=y*a[5],out[6]=a[6],out[7]=a[7],out[8]=a[8],out}function fromTranslation(out,v){return out[0]=1,out[1]=0,out[2]=0,out[3]=0,out[4]=1,out[5]=0,out[6]=v[0],out[7]=v[1],out[8]=1,out}function fromRotation(out,rad){var s=Math.sin(rad),c=Math.cos(rad);return out[0]=c,out[1]=s,out[2]=0,out[3]=-s,out[4]=c,out[5]=0,out[6]=0,out[7]=0,out[8]=1,out}function fromScaling(out,v){return out[0]=v[0],out[1]=0,out[2]=0,out[3]=0,out[4]=v[1],out[5]=0,out[6]=0,out[7]=0,out[8]=1,out}function fromMat2d(out,a){return out[0]=a[0],out[1]=a[1],out[2]=0,out[3]=a[2],out[4]=a[3],out[5]=0,out[6]=a[4],out[7]=a[5],out[8]=1,out}function fromQuat(out,q){var x=q[0],y=q[1],z=q[2],w=q[3],x2=x+x,y2=y+y,z2=z+z,xx=x*x2,yx=y*x2,yy=y*y2,zx=z*x2,zy=z*y2,zz=z*z2,wx=w*x2,wy=w*y2,wz=w*z2;return out[0]=1-yy-zz,out[3]=yx-wz,out[6]=zx+wy,out[1]=yx+wz,out[4]=1-xx-zz,out[7]=zy-wx,out[2]=zx-wy,out[5]=zy+wx,out[8]=1-xx-yy,out}function normalFromMat4(out,a){var a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15],b00=a00*a11-a01*a10,b01=a00*a12-a02*a10,b02=a00*a13-a03*a10,b03=a01*a12-a02*a11,b04=a01*a13-a03*a11,b05=a02*a13-a03*a12,b06=a20*a31-a21*a30,b07=a20*a32-a22*a30,b08=a20*a33-a23*a30,b09=a21*a32-a22*a31,b10=a21*a33-a23*a31,b11=a22*a33-a23*a32,det=b00*b11-b01*b10+b02*b09+b03*b08-b04*b07+b05*b06;return det?(det=1/det,out[0]=(a11*b11-a12*b10+a13*b09)*det,out[1]=(a12*b08-a10*b11-a13*b07)*det,out[2]=(a10*b10-a11*b08+a13*b06)*det,out[3]=(a02*b10-a01*b11-a03*b09)*det,out[4]=(a00*b11-a02*b08+a03*b07)*det,out[5]=(a01*b08-a00*b10-a03*b06)*det,out[6]=(a31*b05-a32*b04+a33*b03)*det,out[7]=(a32*b02-a30*b05-a33*b01)*det,out[8]=(a30*b04-a31*b02+a33*b00)*det,out):null}function projection(out,width,height){return out[0]=2/width,out[1]=0,out[2]=0,out[3]=0,out[4]=-2/height,out[5]=0,out[6]=-1,out[7]=1,out[8]=1,out}function str(a){return"mat3("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+")"}function frob(a){return Math.sqrt(Math.pow(a[0],2)+Math.pow(a[1],2)+Math.pow(a[2],2)+Math.pow(a[3],2)+Math.pow(a[4],2)+Math.pow(a[5],2)+Math.pow(a[6],2)+Math.pow(a[7],2)+Math.pow(a[8],2))}function add(out,a,b){return out[0]=a[0]+b[0],out[1]=a[1]+b[1],out[2]=a[2]+b[2],out[3]=a[3]+b[3],out[4]=a[4]+b[4],out[5]=a[5]+b[5],out[6]=a[6]+b[6],out[7]=a[7]+b[7],out[8]=a[8]+b[8],out}function subtract(out,a,b){return out[0]=a[0]-b[0],out[1]=a[1]-b[1],out[2]=a[2]-b[2],out[3]=a[3]-b[3],out[4]=a[4]-b[4],out[5]=a[5]-b[5],out[6]=a[6]-b[6],out[7]=a[7]-b[7],out[8]=a[8]-b[8],out}function multiplyScalar(out,a,b){return out[0]=a[0]*b,out[1]=a[1]*b,out[2]=a[2]*b,out[3]=a[3]*b,out[4]=a[4]*b,out[5]=a[5]*b,out[6]=a[6]*b,out[7]=a[7]*b,out[8]=a[8]*b,out}function multiplyScalarAndAdd(out,a,b,scale){return out[0]=a[0]+b[0]*scale,out[1]=a[1]+b[1]*scale,out[2]=a[2]+b[2]*scale,out[3]=a[3]+b[3]*scale,out[4]=a[4]+b[4]*scale,out[5]=a[5]+b[5]*scale,out[6]=a[6]+b[6]*scale,out[7]=a[7]+b[7]*scale,out[8]=a[8]+b[8]*scale,out}function exactEquals(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]&&a[4]===b[4]&&a[5]===b[5]&&a[6]===b[6]&&a[7]===b[7]&&a[8]===b[8]}function equals(a,b){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],a4=a[4],a5=a[5],a6=a[6],a7=a[7],a8=a[8],b0=b[0],b1=b[1],b2=b[2],b3=b[3],b4=b[4],b5=b[5],b6=b[6],b7=b[7],b8=b[8];return Math.abs(a0-b0)<=glMatrix.EPSILON*Math.max(1,Math.abs(a0),Math.abs(b0))&&Math.abs(a1-b1)<=glMatrix.EPSILON*Math.max(1,Math.abs(a1),Math.abs(b1))&&Math.abs(a2-b2)<=glMatrix.EPSILON*Math.max(1,Math.abs(a2),Math.abs(b2))&&Math.abs(a3-b3)<=glMatrix.EPSILON*Math.max(1,Math.abs(a3),Math.abs(b3))&&Math.abs(a4-b4)<=glMatrix.EPSILON*Math.max(1,Math.abs(a4),Math.abs(b4))&&Math.abs(a5-b5)<=glMatrix.EPSILON*Math.max(1,Math.abs(a5),Math.abs(b5))&&Math.abs(a6-b6)<=glMatrix.EPSILON*Math.max(1,Math.abs(a6),Math.abs(b6))&&Math.abs(a7-b7)<=glMatrix.EPSILON*Math.max(1,Math.abs(a7),Math.abs(b7))&&Math.abs(a8-b8)<=glMatrix.EPSILON*Math.max(1,Math.abs(a8),Math.abs(b8))}Object.defineProperty(exports,"__esModule",{value:!0}),exports.sub=exports.mul=void 0,exports.create=create,exports.fromMat4=fromMat4,exports.clone=clone,exports.copy=copy,exports.fromValues=fromValues,exports.set=set,exports.identity=identity,exports.transpose=transpose,exports.invert=invert,exports.adjoint=adjoint,exports.determinant=determinant,exports.multiply=multiply,exports.translate=translate,exports.rotate=rotate,exports.scale=scale,exports.fromTranslation=fromTranslation,exports.fromRotation=fromRotation,exports.fromScaling=fromScaling,exports.fromMat2d=fromMat2d,exports.fromQuat=fromQuat,exports.normalFromMat4=normalFromMat4,exports.projection=projection,exports.str=str,exports.frob=frob,exports.add=add,exports.subtract=subtract,exports.multiplyScalar=multiplyScalar,exports.multiplyScalarAndAdd=multiplyScalarAndAdd,exports.exactEquals=exactEquals,exports.equals=equals;var _common=__webpack_require__(3),glMatrix=function(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}(_common);exports.mul=multiply,exports.sub=subtract},function(module,exports,__webpack_require__){"use strict";function create(){var out=new glMatrix.ARRAY_TYPE(3);return out[0]=0,out[1]=0,out[2]=0,out}function clone(a){var out=new glMatrix.ARRAY_TYPE(3);return out[0]=a[0],out[1]=a[1],out[2]=a[2],out}function length(a){var x=a[0],y=a[1],z=a[2];return Math.sqrt(x*x+y*y+z*z)}function fromValues(x,y,z){var out=new glMatrix.ARRAY_TYPE(3);return out[0]=x,out[1]=y,out[2]=z,out}function copy(out,a){return out[0]=a[0],out[1]=a[1],out[2]=a[2],out}function set(out,x,y,z){return out[0]=x,out[1]=y,out[2]=z,out}function add(out,a,b){return out[0]=a[0]+b[0],out[1]=a[1]+b[1],out[2]=a[2]+b[2],out}function subtract(out,a,b){return out[0]=a[0]-b[0],out[1]=a[1]-b[1],out[2]=a[2]-b[2],out}function multiply(out,a,b){return out[0]=a[0]*b[0],out[1]=a[1]*b[1],out[2]=a[2]*b[2],out}function divide(out,a,b){return out[0]=a[0]/b[0],out[1]=a[1]/b[1],out[2]=a[2]/b[2],out}function ceil(out,a){return out[0]=Math.ceil(a[0]),out[1]=Math.ceil(a[1]),out[2]=Math.ceil(a[2]),out}function floor(out,a){return out[0]=Math.floor(a[0]),out[1]=Math.floor(a[1]),out[2]=Math.floor(a[2]),out}function min(out,a,b){return out[0]=Math.min(a[0],b[0]),out[1]=Math.min(a[1],b[1]),out[2]=Math.min(a[2],b[2]),out}function max(out,a,b){return out[0]=Math.max(a[0],b[0]),out[1]=Math.max(a[1],b[1]),out[2]=Math.max(a[2],b[2]),out}function round(out,a){return out[0]=Math.round(a[0]),out[1]=Math.round(a[1]),out[2]=Math.round(a[2]),out}function scale(out,a,b){return out[0]=a[0]*b,out[1]=a[1]*b,out[2]=a[2]*b,out}function scaleAndAdd(out,a,b,scale){return out[0]=a[0]+b[0]*scale,out[1]=a[1]+b[1]*scale,out[2]=a[2]+b[2]*scale,out}function distance(a,b){var x=b[0]-a[0],y=b[1]-a[1],z=b[2]-a[2];return Math.sqrt(x*x+y*y+z*z)}function squaredDistance(a,b){var x=b[0]-a[0],y=b[1]-a[1],z=b[2]-a[2];return x*x+y*y+z*z}function squaredLength(a){var x=a[0],y=a[1],z=a[2];return x*x+y*y+z*z}function negate(out,a){return out[0]=-a[0],out[1]=-a[1],out[2]=-a[2],out}function inverse(out,a){return out[0]=1/a[0],out[1]=1/a[1],out[2]=1/a[2],out}function normalize(out,a){var x=a[0],y=a[1],z=a[2],len=x*x+y*y+z*z;return len>0&&(len=1/Math.sqrt(len),out[0]=a[0]*len,out[1]=a[1]*len,out[2]=a[2]*len),out}function dot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]}function cross(out,a,b){var ax=a[0],ay=a[1],az=a[2],bx=b[0],by=b[1],bz=b[2];return out[0]=ay*bz-az*by,out[1]=az*bx-ax*bz,out[2]=ax*by-ay*bx,out}function lerp(out,a,b,t){var ax=a[0],ay=a[1],az=a[2];return out[0]=ax+t*(b[0]-ax),out[1]=ay+t*(b[1]-ay),out[2]=az+t*(b[2]-az),out}function hermite(out,a,b,c,d,t){var factorTimes2=t*t,factor1=factorTimes2*(2*t-3)+1,factor2=factorTimes2*(t-2)+t,factor3=factorTimes2*(t-1),factor4=factorTimes2*(3-2*t);return out[0]=a[0]*factor1+b[0]*factor2+c[0]*factor3+d[0]*factor4,out[1]=a[1]*factor1+b[1]*factor2+c[1]*factor3+d[1]*factor4,out[2]=a[2]*factor1+b[2]*factor2+c[2]*factor3+d[2]*factor4,out}function bezier(out,a,b,c,d,t){var inverseFactor=1-t,inverseFactorTimesTwo=inverseFactor*inverseFactor,factorTimes2=t*t,factor1=inverseFactorTimesTwo*inverseFactor,factor2=3*t*inverseFactorTimesTwo,factor3=3*factorTimes2*inverseFactor,factor4=factorTimes2*t;return out[0]=a[0]*factor1+b[0]*factor2+c[0]*factor3+d[0]*factor4,out[1]=a[1]*factor1+b[1]*factor2+c[1]*factor3+d[1]*factor4,out[2]=a[2]*factor1+b[2]*factor2+c[2]*factor3+d[2]*factor4,out}function random(out,scale){scale=scale||1;var r=2*glMatrix.RANDOM()*Math.PI,z=2*glMatrix.RANDOM()-1,zScale=Math.sqrt(1-z*z)*scale;return out[0]=Math.cos(r)*zScale,out[1]=Math.sin(r)*zScale,out[2]=z*scale,out}function transformMat4(out,a,m){var x=a[0],y=a[1],z=a[2],w=m[3]*x+m[7]*y+m[11]*z+m[15];return w=w||1,out[0]=(m[0]*x+m[4]*y+m[8]*z+m[12])/w,out[1]=(m[1]*x+m[5]*y+m[9]*z+m[13])/w,out[2]=(m[2]*x+m[6]*y+m[10]*z+m[14])/w,out}function transformMat3(out,a,m){var x=a[0],y=a[1],z=a[2];return out[0]=x*m[0]+y*m[3]+z*m[6],out[1]=x*m[1]+y*m[4]+z*m[7],out[2]=x*m[2]+y*m[5]+z*m[8],out}function transformQuat(out,a,q){var x=a[0],y=a[1],z=a[2],qx=q[0],qy=q[1],qz=q[2],qw=q[3],ix=qw*x+qy*z-qz*y,iy=qw*y+qz*x-qx*z,iz=qw*z+qx*y-qy*x,iw=-qx*x-qy*y-qz*z;return out[0]=ix*qw+iw*-qx+iy*-qz-iz*-qy,out[1]=iy*qw+iw*-qy+iz*-qx-ix*-qz,out[2]=iz*qw+iw*-qz+ix*-qy-iy*-qx,out}function rotateX(out,a,b,c){var p=[],r=[];return p[0]=a[0]-b[0],p[1]=a[1]-b[1],p[2]=a[2]-b[2],r[0]=p[0],r[1]=p[1]*Math.cos(c)-p[2]*Math.sin(c),r[2]=p[1]*Math.sin(c)+p[2]*Math.cos(c),out[0]=r[0]+b[0],out[1]=r[1]+b[1],out[2]=r[2]+b[2],out}function rotateY(out,a,b,c){var p=[],r=[];return p[0]=a[0]-b[0],p[1]=a[1]-b[1],p[2]=a[2]-b[2],r[0]=p[2]*Math.sin(c)+p[0]*Math.cos(c),r[1]=p[1],r[2]=p[2]*Math.cos(c)-p[0]*Math.sin(c),out[0]=r[0]+b[0],out[1]=r[1]+b[1],out[2]=r[2]+b[2],out}function rotateZ(out,a,b,c){var p=[],r=[];return p[0]=a[0]-b[0],p[1]=a[1]-b[1],p[2]=a[2]-b[2],r[0]=p[0]*Math.cos(c)-p[1]*Math.sin(c),r[1]=p[0]*Math.sin(c)+p[1]*Math.cos(c),r[2]=p[2],out[0]=r[0]+b[0],out[1]=r[1]+b[1],out[2]=r[2]+b[2],out}function angle(a,b){var tempA=fromValues(a[0],a[1],a[2]),tempB=fromValues(b[0],b[1],b[2]);normalize(tempA,tempA),normalize(tempB,tempB);var cosine=dot(tempA,tempB);return cosine>1?0:cosine<-1?Math.PI:Math.acos(cosine)}function str(a){return"vec3("+a[0]+", "+a[1]+", "+a[2]+")"}function exactEquals(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]}function equals(a,b){var a0=a[0],a1=a[1],a2=a[2],b0=b[0],b1=b[1],b2=b[2];return Math.abs(a0-b0)<=glMatrix.EPSILON*Math.max(1,Math.abs(a0),Math.abs(b0))&&Math.abs(a1-b1)<=glMatrix.EPSILON*Math.max(1,Math.abs(a1),Math.abs(b1))&&Math.abs(a2-b2)<=glMatrix.EPSILON*Math.max(1,Math.abs(a2),Math.abs(b2))}Object.defineProperty(exports,"__esModule",{value:!0}),exports.forEach=exports.sqrLen=exports.len=exports.sqrDist=exports.dist=exports.div=exports.mul=exports.sub=void 0,exports.create=create,exports.clone=clone,exports.length=length,exports.fromValues=fromValues,exports.copy=copy,exports.set=set,exports.add=add,exports.subtract=subtract,exports.multiply=multiply,exports.divide=divide,exports.ceil=ceil,exports.floor=floor,exports.min=min,exports.max=max,exports.round=round,exports.scale=scale,exports.scaleAndAdd=scaleAndAdd,exports.distance=distance,exports.squaredDistance=squaredDistance,exports.squaredLength=squaredLength,exports.negate=negate,exports.inverse=inverse,exports.normalize=normalize,exports.dot=dot,exports.cross=cross,exports.lerp=lerp,exports.hermite=hermite,exports.bezier=bezier,exports.random=random,exports.transformMat4=transformMat4,exports.transformMat3=transformMat3,exports.transformQuat=transformQuat,exports.rotateX=rotateX,exports.rotateY=rotateY,exports.rotateZ=rotateZ,exports.angle=angle,exports.str=str,exports.exactEquals=exactEquals,exports.equals=equals;var _common=__webpack_require__(3),glMatrix=function(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}(_common);exports.sub=subtract,exports.mul=multiply,exports.div=divide,exports.dist=distance,exports.sqrDist=squaredDistance,exports.len=length,exports.sqrLen=squaredLength,exports.forEach=function(){var vec=create();return function(a,stride,offset,count,fn,arg){var i=void 0,l=void 0;for(stride||(stride=3),offset||(offset=0),l=count?Math.min(count*stride+offset,a.length):a.length,i=offset;i<l;i+=stride)vec[0]=a[i],vec[1]=a[i+1],vec[2]=a[i+2],fn(vec,vec,arg),a[i]=vec[0],a[i+1]=vec[1],a[i+2]=vec[2];return a}}()},function(module,exports,__webpack_require__){"use strict";function create(){var out=new glMatrix.ARRAY_TYPE(4);return out[0]=0,out[1]=0,out[2]=0,out[3]=0,out}function clone(a){var out=new glMatrix.ARRAY_TYPE(4);return out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out}function fromValues(x,y,z,w){var out=new glMatrix.ARRAY_TYPE(4);return out[0]=x,out[1]=y,out[2]=z,out[3]=w,out}function copy(out,a){return out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out}function set(out,x,y,z,w){return out[0]=x,out[1]=y,out[2]=z,out[3]=w,out}function add(out,a,b){return out[0]=a[0]+b[0],out[1]=a[1]+b[1],out[2]=a[2]+b[2],out[3]=a[3]+b[3],out}function subtract(out,a,b){return out[0]=a[0]-b[0],out[1]=a[1]-b[1],out[2]=a[2]-b[2],out[3]=a[3]-b[3],out}function multiply(out,a,b){return out[0]=a[0]*b[0],out[1]=a[1]*b[1],out[2]=a[2]*b[2],out[3]=a[3]*b[3],out}function divide(out,a,b){return out[0]=a[0]/b[0],out[1]=a[1]/b[1],out[2]=a[2]/b[2],out[3]=a[3]/b[3],out}function ceil(out,a){return out[0]=Math.ceil(a[0]),out[1]=Math.ceil(a[1]),out[2]=Math.ceil(a[2]),out[3]=Math.ceil(a[3]),out}function floor(out,a){return out[0]=Math.floor(a[0]),out[1]=Math.floor(a[1]),out[2]=Math.floor(a[2]),out[3]=Math.floor(a[3]),out}function min(out,a,b){return out[0]=Math.min(a[0],b[0]),out[1]=Math.min(a[1],b[1]),out[2]=Math.min(a[2],b[2]),out[3]=Math.min(a[3],b[3]),out}function max(out,a,b){return out[0]=Math.max(a[0],b[0]),out[1]=Math.max(a[1],b[1]),out[2]=Math.max(a[2],b[2]),out[3]=Math.max(a[3],b[3]),out}function round(out,a){return out[0]=Math.round(a[0]),out[1]=Math.round(a[1]),out[2]=Math.round(a[2]),out[3]=Math.round(a[3]),out}function scale(out,a,b){return out[0]=a[0]*b,out[1]=a[1]*b,out[2]=a[2]*b,out[3]=a[3]*b,out}function scaleAndAdd(out,a,b,scale){return out[0]=a[0]+b[0]*scale,out[1]=a[1]+b[1]*scale,out[2]=a[2]+b[2]*scale,out[3]=a[3]+b[3]*scale,out}function distance(a,b){var x=b[0]-a[0],y=b[1]-a[1],z=b[2]-a[2],w=b[3]-a[3];return Math.sqrt(x*x+y*y+z*z+w*w)}function squaredDistance(a,b){var x=b[0]-a[0],y=b[1]-a[1],z=b[2]-a[2],w=b[3]-a[3];return x*x+y*y+z*z+w*w}function length(a){var x=a[0],y=a[1],z=a[2],w=a[3];return Math.sqrt(x*x+y*y+z*z+w*w)}function squaredLength(a){var x=a[0],y=a[1],z=a[2],w=a[3];return x*x+y*y+z*z+w*w}function negate(out,a){return out[0]=-a[0],out[1]=-a[1],out[2]=-a[2],out[3]=-a[3],out}function inverse(out,a){return out[0]=1/a[0],out[1]=1/a[1],out[2]=1/a[2],out[3]=1/a[3],out}function normalize(out,a){var x=a[0],y=a[1],z=a[2],w=a[3],len=x*x+y*y+z*z+w*w;return len>0&&(len=1/Math.sqrt(len),out[0]=x*len,out[1]=y*len,out[2]=z*len,out[3]=w*len),out}function dot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3]}function lerp(out,a,b,t){var ax=a[0],ay=a[1],az=a[2],aw=a[3];return out[0]=ax+t*(b[0]-ax),out[1]=ay+t*(b[1]-ay),out[2]=az+t*(b[2]-az),out[3]=aw+t*(b[3]-aw),out}function random(out,vectorScale){return vectorScale=vectorScale||1,out[0]=glMatrix.RANDOM(),out[1]=glMatrix.RANDOM(),out[2]=glMatrix.RANDOM(),out[3]=glMatrix.RANDOM(),normalize(out,out),scale(out,out,vectorScale),out}function transformMat4(out,a,m){var x=a[0],y=a[1],z=a[2],w=a[3];return out[0]=m[0]*x+m[4]*y+m[8]*z+m[12]*w,out[1]=m[1]*x+m[5]*y+m[9]*z+m[13]*w,out[2]=m[2]*x+m[6]*y+m[10]*z+m[14]*w,out[3]=m[3]*x+m[7]*y+m[11]*z+m[15]*w,out}function transformQuat(out,a,q){var x=a[0],y=a[1],z=a[2],qx=q[0],qy=q[1],qz=q[2],qw=q[3],ix=qw*x+qy*z-qz*y,iy=qw*y+qz*x-qx*z,iz=qw*z+qx*y-qy*x,iw=-qx*x-qy*y-qz*z;return out[0]=ix*qw+iw*-qx+iy*-qz-iz*-qy,out[1]=iy*qw+iw*-qy+iz*-qx-ix*-qz,out[2]=iz*qw+iw*-qz+ix*-qy-iy*-qx,out[3]=a[3],out}function str(a){return"vec4("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"}function exactEquals(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]}function equals(a,b){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],b0=b[0],b1=b[1],b2=b[2],b3=b[3];return Math.abs(a0-b0)<=glMatrix.EPSILON*Math.max(1,Math.abs(a0),Math.abs(b0))&&Math.abs(a1-b1)<=glMatrix.EPSILON*Math.max(1,Math.abs(a1),Math.abs(b1))&&Math.abs(a2-b2)<=glMatrix.EPSILON*Math.max(1,Math.abs(a2),Math.abs(b2))&&Math.abs(a3-b3)<=glMatrix.EPSILON*Math.max(1,Math.abs(a3),Math.abs(b3))}Object.defineProperty(exports,"__esModule",{value:!0}),exports.forEach=exports.sqrLen=exports.len=exports.sqrDist=exports.dist=exports.div=exports.mul=exports.sub=void 0,exports.create=create,exports.clone=clone,exports.fromValues=fromValues,exports.copy=copy,exports.set=set,exports.add=add,exports.subtract=subtract,exports.multiply=multiply,exports.divide=divide,exports.ceil=ceil,exports.floor=floor,exports.min=min,exports.max=max,exports.round=round,exports.scale=scale,exports.scaleAndAdd=scaleAndAdd,exports.distance=distance,exports.squaredDistance=squaredDistance,exports.length=length,exports.squaredLength=squaredLength,exports.negate=negate,exports.inverse=inverse,exports.normalize=normalize,exports.dot=dot,exports.lerp=lerp,exports.random=random,exports.transformMat4=transformMat4,exports.transformQuat=transformQuat,exports.str=str,exports.exactEquals=exactEquals,exports.equals=equals;var _common=__webpack_require__(3),glMatrix=function(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}(_common);exports.sub=subtract,exports.mul=multiply,exports.div=divide,exports.dist=distance,exports.sqrDist=squaredDistance,exports.len=length,exports.sqrLen=squaredLength,exports.forEach=function(){var vec=create();return function(a,stride,offset,count,fn,arg){var i=void 0,l=void 0;for(stride||(stride=4),offset||(offset=0),l=count?Math.min(count*stride+offset,a.length):a.length,i=offset;i<l;i+=stride)vec[0]=a[i],vec[1]=a[i+1],vec[2]=a[i+2],vec[3]=a[i+3],fn(vec,vec,arg),a[i]=vec[0],a[i+1]=vec[1],a[i+2]=vec[2],a[i+3]=vec[3];return a}}()},function(module,exports,__webpack_require__){"use strict";module.exports={ACTIVE_ATTRIBUTES:35721,ACTIVE_ATTRIBUTE_MAX_LENGTH:35722,ACTIVE_TEXTURE:34016,ACTIVE_UNIFORMS:35718,ACTIVE_UNIFORM_MAX_LENGTH:35719,ALIASED_LINE_WIDTH_RANGE:33902,ALIASED_POINT_SIZE_RANGE:33901,ALPHA:6406,ALPHA_BITS:3413,ALWAYS:519,ARRAY_BUFFER:34962,ARRAY_BUFFER_BINDING:34964,ATTACHED_SHADERS:35717,BACK:1029,BLEND:3042,BLEND_COLOR:32773,BLEND_DST_ALPHA:32970,BLEND_DST_RGB:32968,BLEND_EQUATION:32777,BLEND_EQUATION_ALPHA:34877,BLEND_EQUATION_RGB:32777,BLEND_SRC_ALPHA:32971,BLEND_SRC_RGB:32969,BLUE_BITS:3412,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,BROWSER_DEFAULT_WEBGL:37444,BUFFER_SIZE:34660,BUFFER_USAGE:34661,BYTE:5120,CCW:2305,CLAMP_TO_EDGE:33071,COLOR_ATTACHMENT0:36064,COLOR_BUFFER_BIT:16384,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,COMPILE_STATUS:35713,COMPRESSED_TEXTURE_FORMATS:34467,CONSTANT_ALPHA:32771,CONSTANT_COLOR:32769,CONTEXT_LOST_WEBGL:37442,CULL_FACE:2884,CULL_FACE_MODE:2885,CURRENT_PROGRAM:35725,CURRENT_VERTEX_ATTRIB:34342,CW:2304,DECR:7683,DECR_WRAP:34056,DELETE_STATUS:35712,DEPTH_ATTACHMENT:36096,DEPTH_BITS:3414,DEPTH_BUFFER_BIT:256,DEPTH_CLEAR_VALUE:2931,DEPTH_COMPONENT:6402,RED:6403,DEPTH_COMPONENT16:33189,DEPTH_FUNC:2932,DEPTH_RANGE:2928,DEPTH_STENCIL:34041,DEPTH_STENCIL_ATTACHMENT:33306,DEPTH_TEST:2929,DEPTH_WRITEMASK:2930,DITHER:3024,DONT_CARE:4352,DST_ALPHA:772,DST_COLOR:774,DYNAMIC_DRAW:35048,ELEMENT_ARRAY_BUFFER:34963,ELEMENT_ARRAY_BUFFER_BINDING:34965,EQUAL:514,FASTEST:4353,FLOAT:5126,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,FRAGMENT_SHADER:35632,FRAMEBUFFER:36160,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_BINDING:36006,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_UNSUPPORTED:36061,FRONT:1028,FRONT_AND_BACK:1032,FRONT_FACE:2886,FUNC_ADD:32774,FUNC_REVERSE_SUBTRACT:32779,FUNC_SUBTRACT:32778,GENERATE_MIPMAP_HINT:33170,GEQUAL:518,GREATER:516,GREEN_BITS:3411,HIGH_FLOAT:36338,HIGH_INT:36341,INCR:7682,INCR_WRAP:34055,INFO_LOG_LENGTH:35716,INT:5124,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,INVALID_ENUM:1280,INVALID_FRAMEBUFFER_OPERATION:1286,INVALID_OPERATION:1282,INVALID_VALUE:1281,INVERT:5386,KEEP:7680,LEQUAL:515,LESS:513,LINEAR:9729,LINEAR_MIPMAP_LINEAR:9987,LINEAR_MIPMAP_NEAREST:9985,LINES:1,LINE_LOOP:2,LINE_STRIP:3,LINE_WIDTH:2849,LINK_STATUS:35714,LOW_FLOAT:36336,LOW_INT:36339,LUMINANCE:6409,LUMINANCE_ALPHA:6410,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_CUBE_MAP_TEXTURE_SIZE:34076,MAX_FRAGMENT_UNIFORM_VECTORS:36349,MAX_RENDERBUFFER_SIZE:34024,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_TEXTURE_SIZE:3379,MAX_VARYING_VECTORS:36348,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VIEWPORT_DIMS:3386,MEDIUM_FLOAT:36337,MEDIUM_INT:36340,MIRRORED_REPEAT:33648,NEAREST:9728,NEAREST_MIPMAP_LINEAR:9986,NEAREST_MIPMAP_NEAREST:9984,NEVER:512,NICEST:4354,NONE:0,NOTEQUAL:517,NO_ERROR:0,NUM_COMPRESSED_TEXTURE_FORMATS:34466,ONE:1,ONE_MINUS_CONSTANT_ALPHA:32772,ONE_MINUS_CONSTANT_COLOR:32770,ONE_MINUS_DST_ALPHA:773,ONE_MINUS_DST_COLOR:775,ONE_MINUS_SRC_ALPHA:771,ONE_MINUS_SRC_COLOR:769,OUT_OF_MEMORY:1285,PACK_ALIGNMENT:3333,POINTS:0,POLYGON_OFFSET_FACTOR:32824,POLYGON_OFFSET_FILL:32823,POLYGON_OFFSET_UNITS:10752,RED_BITS:3410,RENDERBUFFER:36161,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_BINDING:36007,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_STENCIL_SIZE:36181,RENDERBUFFER_WIDTH:36162,RENDERER:7937,REPEAT:10497,REPLACE:7681,RGB:6407,RGB5_A1:32855,RGB565:36194,RGBA:6408,RGBA4:32854,SAMPLER_2D:35678,SAMPLER_CUBE:35680,SAMPLES:32937,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_BUFFERS:32936,SAMPLE_COVERAGE:32928,SAMPLE_COVERAGE_INVERT:32939,SAMPLE_COVERAGE_VALUE:32938,SCISSOR_BOX:3088,SCISSOR_TEST:3089,SHADER_COMPILER:36346,SHADER_SOURCE_LENGTH:35720,SHADER_TYPE:35663,SHADING_LANGUAGE_VERSION:35724,SHORT:5122,SRC_ALPHA:770,SRC_ALPHA_SATURATE:776,SRC_COLOR:768,STATIC_DRAW:35044,STENCIL_ATTACHMENT:36128,STENCIL_BACK_FAIL:34817,STENCIL_BACK_FUNC:34816,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,STENCIL_BITS:3415,STENCIL_BUFFER_BIT:1024,STENCIL_CLEAR_VALUE:2961,STENCIL_FAIL:2964,STENCIL_FUNC:2962,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_TEST:2960,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STREAM_DRAW:35040,SUBPIXEL_BITS:3408,TEXTURE:5890,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,TEXTURE_2D:3553,TEXTURE_BINDING_2D:32873,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP:34067,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TRIANGLES:4,TRIANGLE_FAN:6,TRIANGLE_STRIP:5,UNPACK_ALIGNMENT:3317,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,UNSIGNED_BYTE:5121,UNSIGNED_INT:5125,UNSIGNED_SHORT:5123,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,VALIDATE_STATUS:35715,VENDOR:7936,VERSION:7938,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_SHADER:35633,VIEWPORT:2978,ZERO:0,R8:33321}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(gl,shaderProgram,name){return void 0===shaderProgram.cacheAttribLoc&&(shaderProgram.cacheAttribLoc={}),void 0===shaderProgram.cacheAttribLoc[name]&&(shaderProgram.cacheAttribLoc[name]=gl.getAttribLocation(shaderProgram,name)),shaderProgram.cacheAttribLoc[name]}},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function isPowerOfTwo(x){return 0!==x&&!(x&x-1)}function isSourcePowerOfTwo(obj){var w=obj.width||obj.videoWidth,h=obj.height||obj.videoHeight;return!(!w||!h)&&(isPowerOfTwo(w)&&isPowerOfTwo(h))}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_WebglNumber=__webpack_require__(8),gl=(_interopRequireDefault(_WebglNumber),void 0),GLTexture=function(){function GLTexture(mSource){var isTexture=arguments.length>1&&void 0!==arguments[1]&&arguments[1],mParameters=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(_classCallCheck(this,GLTexture),gl=_GLTool2.default.gl,isTexture)this._texture=mSource;else{this._mSource=mSource,this._texture=gl.createTexture(),this._isVideo="VIDEO"===mSource.tagName,this._premultiplyAlpha=!0,this._magFilter=mParameters.magFilter||gl.LINEAR,this._minFilter=mParameters.minFilter||gl.NEAREST_MIPMAP_LINEAR,this._wrapS=mParameters.wrapS||gl.MIRRORED_REPEAT,this._wrapT=mParameters.wrapT||gl.MIRRORED_REPEAT;mSource.width||mSource.videoWidth?isSourcePowerOfTwo(mSource)||(this._wrapS=this._wrapT=gl.CLAMP_TO_EDGE,this._minFilter===gl.NEAREST_MIPMAP_LINEAR&&(this._minFilter=gl.LINEAR)):(this._wrapS=this._wrapT=gl.CLAMP_TO_EDGE,this._minFilter===gl.NEAREST_MIPMAP_LINEAR&&(this._minFilter=gl.LINEAR)),gl.bindTexture(gl.TEXTURE_2D,this._texture),gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,!0),mSource.exposure?gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,mSource.shape[0],mSource.shape[1],0,gl.RGBA,gl.FLOAT,mSource.data):gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,mSource),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,this._magFilter),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,this._minFilter),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,this._wrapS),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,this._wrapT);var ext=_GLTool2.default.getExtension("EXT_texture_filter_anisotropic");if(ext){var max=gl.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT);gl.texParameterf(gl.TEXTURE_2D,ext.TEXTURE_MAX_ANISOTROPY_EXT,max)}this._canGenerateMipmap()&&gl.generateMipmap(gl.TEXTURE_2D),gl.bindTexture(gl.TEXTURE_2D,null)}}return _createClass(GLTexture,[{key:"generateMipmap",value:function(){this._canGenerateMipmap()&&(gl.bindTexture(gl.TEXTURE_2D,this._texture),gl.generateMipmap(gl.TEXTURE_2D),gl.bindTexture(gl.TEXTURE_2D,null))}},{key:"updateTexture",value:function(mSource){mSource&&(this._mSource=mSource),gl.bindTexture(gl.TEXTURE_2D,this._texture),gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,!0),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,this._mSource),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,this._magFilter),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,this._minFilter),this._canGenerateMipmap()&&gl.generateMipmap(gl.TEXTURE_2D),gl.bindTexture(gl.TEXTURE_2D,null)}},{key:"bind",value:function(index){void 0===index&&(index=0),_GLTool2.default.shader&&(gl.activeTexture(gl.TEXTURE0+index),gl.bindTexture(gl.TEXTURE_2D,this._texture),this._bindIndex=index)}},{key:"_canGenerateMipmap",value:function(){return this._minFilter===gl.LINEAR_MIPMAP_NEAREST||this._minFilter===gl.NEAREST_MIPMAP_LINEAR||this._minFilter===gl.LINEAR_MIPMAP_LINEAR||this._minFilter===gl.NEAREST_MIPMAP_NEAREST}},{key:"minFilter",set:function(mValue){if(mValue!==gl.LINEAR&&mValue!==gl.NEAREST&&mValue!==gl.NEAREST_MIPMAP_LINEAR&&mValue!==gl.NEAREST_MIPMAP_LINEAR&&mValue!==gl.LINEAR_MIPMAP_LINEAR&&mValue!==gl.NEAREST_MIPMAP_NEAREST)return this;this._minFilter=mValue,gl.bindTexture(gl.TEXTURE_2D,this._texture),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,this._minFilter),gl.bindTexture(gl.TEXTURE_2D,null)},get:function(){return this._minFilter}},{key:"magFilter",set:function(mValue){if(mValue!==gl.LINEAR&&mValue!==gl.NEAREST)return this;this._magFilter=mValue,gl.bindTexture(gl.TEXTURE_2D,this._texture),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,this._magFilter),gl.bindTexture(gl.TEXTURE_2D,null)},get:function(){return this._magFilter}},{key:"wrapS",set:function(mValue){if(mValue!==gl.CLAMP_TO_EDGE&&mValue!==gl.REPEAT&&mValue!==gl.MIRRORED_REPEAT)return this;this._wrapS=mValue,gl.bindTexture(gl.TEXTURE_2D,this._texture),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,this._wrapS),gl.bindTexture(gl.TEXTURE_2D,null)},get:function(){return this._wrapS}},{key:"wrapT",set:function(mValue){if(mValue!==gl.CLAMP_TO_EDGE&&mValue!==gl.REPEAT&&mValue!==gl.MIRRORED_REPEAT)return this;this._wrapT=mValue,gl.bindTexture(gl.TEXTURE_2D,this._texture),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,this._wrapT),gl.bindTexture(gl.TEXTURE_2D,null)},get:function(){return this._wrapT}},{key:"premultiplyAlpha",set:function(mValue){this._premultiplyAlpha=mValue,gl.bindTexture(gl.TEXTURE_2D,this._texture),console.log("premultiplyAlpha:",mValue),gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this._premultiplyAlpha),gl.bindTexture(gl.TEXTURE_2D,null)},get:function(){return this._premultiplyAlpha}},{key:"texture",get:function(){return this._texture}}]),GLTexture}(),_whiteTexture=void 0,_greyTexture=void 0,_blackTexture=void 0;GLTexture.whiteTexture=function(){if(void 0===_whiteTexture){var canvas=document.createElement("canvas");canvas.width=canvas.height=4;var ctx=canvas.getContext("2d");ctx.fillStyle="#fff",ctx.fillRect(0,0,4,4),_whiteTexture=new GLTexture(canvas)}return _whiteTexture},GLTexture.greyTexture=function(){if(void 0===_greyTexture){var canvas=document.createElement("canvas");canvas.width=canvas.height=4;var ctx=canvas.getContext("2d");ctx.fillStyle="rgb(127, 127, 127)",ctx.fillRect(0,0,4,4),_greyTexture=new GLTexture(canvas)}return _greyTexture},GLTexture.blackTexture=function(){if(void 0===_blackTexture){var canvas=document.createElement("canvas");canvas.width=canvas.height=4;var ctx=canvas.getContext("2d");ctx.fillStyle="rgb(127, 127, 127)",ctx.fillRect(0,0,4,4),_blackTexture=new GLTexture(canvas)}return _blackTexture},exports.default=GLTexture},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function isPowerOfTwo(x){return 0!==x&&!(x&x-1)}function getSourceType(mSource){var type=_GLTool2.default.UNSIGNED_BYTE;return mSource instanceof Array?type=_GLTool2.default.UNSIGNED_BYTE:mSource instanceof Uint8Array?type=_GLTool2.default.UNSIGNED_BYTE:mSource instanceof Float32Array?type=_GLTool2.default.FLOAT:mSource instanceof HTMLImageElement?type="image":mSource instanceof HTMLCanvasElement?type="canvas":mSource instanceof HTMLVideoElement&&(type="video"),type}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_getTextureParameters=__webpack_require__(54),_getTextureParameters2=_interopRequireDefault(_getTextureParameters),_WebglNumber=__webpack_require__(8),_WebglNumber2=_interopRequireDefault(_WebglNumber),_GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_scheduling=__webpack_require__(6),_scheduling2=_interopRequireDefault(_scheduling),gl=void 0,GLTexture=function(){function GLTexture(mSource){var mParam=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},_this=this,mWidth=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,mHeight=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;_classCallCheck(this,GLTexture),gl=_GLTool2.default.gl,this._source=mSource,this._getDimension(mSource,mWidth,mHeight),this._sourceType=mParam.type||getSourceType(mSource),this._checkSource(),this._texelType=this._getTexelType(),this._isTextureReady=!0,this._params=(0,_getTextureParameters2.default)(mParam,mSource,this._width,this._height),this._checkMipmap(),this._checkWrapping(),this._texture=gl.createTexture(),"video"===this._sourceType?(this._isTextureReady=!1,_scheduling2.default.addEF(function(){return _this._loop()})):this._uploadTexture()}return _createClass(GLTexture,[{key:"_loop",value:function(){4==this._source.readyState&&(this._isTextureReady=!0,this._uploadTexture())}},{key:"_uploadTexture",value:function(){if(gl.bindTexture(gl.TEXTURE_2D,this._texture),gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,!0),this._isSourceHtmlElement()?gl.texImage2D(gl.TEXTURE_2D,0,this._params.internalFormat,this._params.format,this._texelType,this._source):gl.texImage2D(gl.TEXTURE_2D,0,this._params.internalFormat,this._width,this._height,0,this._params.format,this._texelType,this._source),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,this._params.magFilter),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,this._params.minFilter),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,this._params.wrapS),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,this._params.wrapT),gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this._params.premultiplyAlpha),this._params.anisotropy>0){var ext=_GLTool2.default.getExtension("EXT_texture_filter_anisotropic");if(ext){var max=gl.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT),level=Math.min(max,this._params.anisotropy);gl.texParameterf(gl.TEXTURE_2D,ext.TEXTURE_MAX_ANISOTROPY_EXT,level)}}this._generateMipmap&&gl.generateMipmap(gl.TEXTURE_2D),gl.bindTexture(gl.TEXTURE_2D,null)}},{key:"bind",value:function(index){void 0===index&&(index=0),_GLTool2.default.shader&&(gl.activeTexture(gl.TEXTURE0+index),this._isTextureReady?gl.bindTexture(gl.TEXTURE_2D,this._texture):gl.bindTexture(gl.TEXTURE_2D,GLTexture.blackTexture().texture),this._bindIndex=index)}},{key:"updateTexture",value:function(mSource){this._source=mSource,this._checkSource(),this._uploadTexture()}},{key:"generateMipmap",value:function(){this._generateMipmap&&(gl.bindTexture(gl.TEXTURE_2D,this._texture),gl.generateMipmap(gl.TEXTURE_2D),gl.bindTexture(gl.TEXTURE_2D,null))}},{key:"showParameters",value:function(){console.log("Source type : ",_WebglNumber2.default[this._sourceType]||this._sourceType),console.log("Texel type:",_WebglNumber2.default[this.texelType]),console.log("Dimension :",this._width,this._height);for(var s in this._params)console.log(s,_WebglNumber2.default[this._params[s]]||this._params[s]);console.log("Mipmapping :",this._generateMipmap)}},{key:"_getDimension",value:function(mSource,mWidth,mHeight){mSource?(this._width=mSource.width||mSource.videoWidth,this._height=mSource.height||mSource.videoWidth,this._width=this._width||mWidth,this._height=this._height||mHeight,this._width&&this._height||(this._width=this._height=Math.sqrt(mSource.length/4))):(this._width=mWidth,this._height=mHeight)}},{key:"_checkSource",value:function(){this._source&&(this._sourceType===_GLTool2.default.UNSIGNED_BYTE?this._source instanceof Uint8Array||(this._source=new Uint8Array(this._source)):this._sourceType===_GLTool2.default.FLOAT&&(this._source instanceof Float32Array||(this._source=new Float32Array(this._source))))}},{key:"_getTexelType",value:function(){return this._isSourceHtmlElement()?_GLTool2.default.UNSIGNED_BYTE:_GLTool2.default[_WebglNumber2.default[this._sourceType]]||this._sourceType}},{key:"_checkMipmap",value:function(){this._generateMipmap=this._params.mipmap,isPowerOfTwo(this._width)&&isPowerOfTwo(this._height)||(this._generateMipmap=!1),-1==_WebglNumber2.default[this._params.minFilter].indexOf("MIPMAP")&&(this._generateMipmap=!1)}},{key:"_checkWrapping",value:function(){this._generateMipmap||(this._params.wrapS=_GLTool2.default.CLAMP_TO_EDGE,this._params.wrapT=_GLTool2.default.CLAMP_TO_EDGE)}},{key:"_isSourceHtmlElement",value:function(){return"image"===this._sourceType||"video"===this._sourceType||"canvas"===this._sourceType}},{key:"minFilter",get:function(){return this._params.minFilter},set:function(mValue){this._params.minFilter=mValue,this._checkMipmap(),gl.bindTexture(gl.TEXTURE_2D,this._texture),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,this._params.minFilter),gl.bindTexture(gl.TEXTURE_2D,null),this.generateMipmap()}},{key:"magFilter",get:function(){return this._params.minFilter},set:function(mValue){this._params.magFilter=mValue,gl.bindTexture(gl.TEXTURE_2D,this._texture),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,this._params.magFilter),gl.bindTexture(gl.TEXTURE_2D,null)}},{key:"wrapS",get:function(){return this._params.wrapS},set:function(mValue){this._params.wrapS=mValue,this._checkWrapping(),gl.bindTexture(gl.TEXTURE_2D,this._texture),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,this._params.wrapS),gl.bindTexture(gl.TEXTURE_2D,null)}},{key:"wrapT",get:function(){return this._params.wrapT},set:function(mValue){this._params.wrapT=mValue,this._checkWrapping(),gl.bindTexture(gl.TEXTURE_2D,this._texture),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,this._params.wrapT),gl.bindTexture(gl.TEXTURE_2D,null)}},{key:"texelType",get:function(){return this._texelType}},{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}},{key:"texture",get:function(){return this._texture}},{key:"isTextureReady",get:function(){return this._isTextureReady}}]),GLTexture}(),_whiteTexture=void 0,_greyTexture=void 0,_blackTexture=void 0;GLTexture.whiteTexture=function(){if(void 0===_whiteTexture){var canvas=document.createElement("canvas");canvas.width=canvas.height=2;var ctx=canvas.getContext("2d");ctx.fillStyle="#fff",ctx.fillRect(0,0,2,2),_whiteTexture=new GLTexture(canvas)}return _whiteTexture},GLTexture.greyTexture=function(){if(void 0===_greyTexture){var canvas=document.createElement("canvas");canvas.width=canvas.height=2;var ctx=canvas.getContext("2d");ctx.fillStyle="rgb(127, 127, 127)",ctx.fillRect(0,0,2,2),_greyTexture=new GLTexture(canvas)}return _greyTexture},GLTexture.blackTexture=function(){if(void 0===_blackTexture){var canvas=document.createElement("canvas");canvas.width=canvas.height=2;var ctx=canvas.getContext("2d");ctx.fillStyle="rgb(0, 0, 0)",ctx.fillRect(0,0,2,2),_blackTexture=new GLTexture(canvas)}return _blackTexture},exports.default=GLTexture},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_parseDds=__webpack_require__(55),_parseDds2=_interopRequireDefault(_parseDds),gl=void 0,GLCubeTexture=function(){function GLCubeTexture(mSource){var mParameters=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},isCubeTexture=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(_classCallCheck(this,GLCubeTexture),gl=_GLTool2.default.gl,isCubeTexture)return void(this.texture=mSource);var hasMipmaps=mSource.length>6;mSource[0].mipmapCount&&(hasMipmaps=mSource[0].mipmapCount>1),this.texture=gl.createTexture(),this.magFilter=mParameters.magFilter||gl.LINEAR,this.minFilter=mParameters.minFilter||gl.LINEAR_MIPMAP_LINEAR,this.wrapS=mParameters.wrapS||gl.CLAMP_TO_EDGE,this.wrapT=mParameters.wrapT||gl.CLAMP_TO_EDGE,hasMipmaps||this.minFilter!=gl.LINEAR_MIPMAP_LINEAR||(this.minFilter=gl.LINEAR),gl.bindTexture(gl.TEXTURE_CUBE_MAP,this.texture);var targets=[gl.TEXTURE_CUBE_MAP_POSITIVE_X,gl.TEXTURE_CUBE_MAP_NEGATIVE_X,gl.TEXTURE_CUBE_MAP_POSITIVE_Y,gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,gl.TEXTURE_CUBE_MAP_POSITIVE_Z,gl.TEXTURE_CUBE_MAP_NEGATIVE_Z],numLevels=1,index=0;if(numLevels=mSource.length/6,this.numLevels=numLevels,hasMipmaps)for(var j=0;j<6;j++)for(var i=0;i<numLevels;i++)gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,!1),index=j*numLevels+i,mSource[index].shape?gl.texImage2D(targets[j],i,gl.RGBA,mSource[index].shape[0],mSource[index].shape[1],0,gl.RGBA,gl.FLOAT,mSource[index].data):gl.texImage2D(targets[j],i,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,mSource[index]),gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_S,this.wrapS),gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_T,this.wrapT),gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_MAG_FILTER,this.magFilter),gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_MIN_FILTER,this.minFilter);else{for(var _index=0,_j=0;_j<6;_j++)_index=_j*numLevels,gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,!1),mSource[_index].shape?gl.texImage2D(targets[_j],0,gl.RGBA,mSource[_index].shape[0],mSource[_index].shape[1],0,gl.RGBA,gl.FLOAT,mSource[_index].data):gl.texImage2D(targets[_j],0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,mSource[_index]),gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_S,this.wrapS),gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_T,this.wrapT),gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_MAG_FILTER,this.magFilter),gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_MIN_FILTER,this.minFilter);gl.generateMipmap(gl.TEXTURE_CUBE_MAP)}gl.bindTexture(gl.TEXTURE_CUBE_MAP,null)}return _createClass(GLCubeTexture,[{key:"bind",value:function(){var index=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;_GLTool2.default.shader&&(gl.activeTexture(gl.TEXTURE0+index),gl.bindTexture(gl.TEXTURE_CUBE_MAP,this.texture),gl.uniform1i(_GLTool2.default.shader.uniformTextures[index],index),this._bindIndex=index)}},{key:"unbind",value:function(){gl.bindTexture(gl.TEXTURE_CUBE_MAP,null)}}]),GLCubeTexture}();GLCubeTexture.parseDDS=function(mArrayBuffer){var ddsInfos=(0,_parseDds2.default)(mArrayBuffer),flags=ddsInfos.flags,header=new Int32Array(mArrayBuffer,0,31),mipmapCount=1;131072&flags&&(mipmapCount=Math.max(1,header[7]));var sources=ddsInfos.images.map(function(img){return{data:new Float32Array(mArrayBuffer.slice(img.offset,img.offset+img.length)),shape:img.shape,mipmapCount:mipmapCount}});return new GLCubeTexture(sources)},exports.default=GLCubeTexture},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),supportsCustomEvents=!0;try{document.createEvent("CustomEvent");null}catch(e){supportsCustomEvents=!1}var EventDispatcher=function(){function EventDispatcher(){_classCallCheck(this,EventDispatcher),this._eventListeners={}}return _createClass(EventDispatcher,[{key:"addEventListener",value:function(aEventType,aFunction){return null!==this._eventListeners&&void 0!==this._eventListeners||(this._eventListeners={}),this._eventListeners[aEventType]||(this._eventListeners[aEventType]=[]),this._eventListeners[aEventType].push(aFunction),this}},{key:"on",value:function(aEventType,aFunction){return this.addEventListener(aEventType,aFunction)}},{key:"removeEventListener",value:function(aEventType,aFunction){null!==this._eventListeners&&void 0!==this._eventListeners||(this._eventListeners={});var currentArray=this._eventListeners[aEventType];if(void 0===currentArray)return this;for(var currentArrayLength=currentArray.length,i=0;i<currentArrayLength;i++)currentArray[i]===aFunction&&(currentArray.splice(i,1),i--,currentArrayLength--);return this}},{key:"off",value:function(aEventType,aFunction){return this.removeEventListener(aEventType,aFunction)}},{key:"dispatchEvent",value:function(aEvent){null!==this._eventListeners&&void 0!==this._eventListeners||(this._eventListeners={});var eventType=aEvent.type;try{null===aEvent.target&&(aEvent.target=this),aEvent.currentTarget=this}catch(theError){var newEvent={type:eventType,detail:aEvent.detail,dispatcher:this};return this.dispatchEvent(newEvent)}var currentEventListeners=this._eventListeners[eventType];if(null!==currentEventListeners&&void 0!==currentEventListeners)for(var currentArray=this._copyArray(currentEventListeners),currentArrayLength=currentArray.length,i=0;i<currentArrayLength;i++){var currentFunction=currentArray[i];currentFunction.call(this,aEvent)}return this}},{key:"dispatchCustomEvent",value:function(aEventType,aDetail){var newEvent=void 0;return supportsCustomEvents?(newEvent=document.createEvent("CustomEvent"),newEvent.dispatcher=this,newEvent.initCustomEvent(aEventType,!1,!1,aDetail)):newEvent={type:aEventType,detail:aDetail,dispatcher:this},this.dispatchEvent(newEvent)}},{key:"trigger",value:function(aEventType,aDetail){return this.dispatchCustomEvent(aEventType,aDetail)}},{key:"_destroy",value:function(){if(null!==this._eventListeners){for(var objectName in this._eventListeners)if(this._eventListeners.hasOwnProperty(objectName)){for(var currentArray=this._eventListeners[objectName],currentArrayLength=currentArray.length,i=0;i<currentArrayLength;i++)currentArray[i]=null;delete this._eventListeners[objectName]}this._eventListeners=null}}},{key:"_copyArray",value:function(aArray){for(var currentArray=new Array(aArray.length),currentArrayLength=currentArray.length,i=0;i<currentArrayLength;i++)currentArray[i]=aArray[i];return currentArray}}]),EventDispatcher}();exports.default=EventDispatcher},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_EaseNumber=__webpack_require__(13),_EaseNumber2=_interopRequireDefault(_EaseNumber),_scheduling=__webpack_require__(6),_scheduling2=_interopRequireDefault(_scheduling),_glMatrix=__webpack_require__(1),getMouse=function(mEvent,mTarget){var o=mTarget||{};return mEvent.touches?(o.x=mEvent.touches[0].pageX,o.y=mEvent.touches[0].pageY):(o.x=mEvent.clientX,o.y=mEvent.clientY),o},OrbitalControl=function(){function OrbitalControl(mTarget){var _this=this,mListenerTarget=arguments.length>1&&void 0!==arguments[1]?arguments[1]:window,mRadius=arguments.length>2&&void 0!==arguments[2]?arguments[2]:500;_classCallCheck(this,OrbitalControl),this._target=mTarget,this._listenerTarget=mListenerTarget,this._mouse={},this._preMouse={},this.center=_glMatrix.vec3.create(),this._up=_glMatrix.vec3.fromValues(0,1,0),this.radius=new _EaseNumber2.default(mRadius),this.position=_glMatrix.vec3.fromValues(0,0,this.radius.value),this.positionOffset=_glMatrix.vec3.create(),this._rx=new _EaseNumber2.default(0),this._rx.limit(-Math.PI/2,Math.PI/2),this._ry=new _EaseNumber2.default(0),this._preRX=0,this._preRY=0,this._isLockZoom=!1,this._isLockRotation=!1,this._isInvert=!1,this.sensitivity=1,this._wheelBind=function(e){return _this._onWheel(e)},this._downBind=function(e){return _this._onDown(e)},this._moveBind=function(e){return _this._onMove(e)},this._upBind=function(){return _this._onUp()},this.connect(),_scheduling2.default.addEF(function(){return _this._loop()})}return _createClass(OrbitalControl,[{key:"connect",value:function(){this.disconnect(),this._listenerTarget.addEventListener("mousewheel",this._wheelBind),this._listenerTarget.addEventListener("DOMMouseScroll",this._wheelBind),this._listenerTarget.addEventListener("mousedown",this._downBind),this._listenerTarget.addEventListener("touchstart",this._downBind),this._listenerTarget.addEventListener("mousemove",this._moveBind),this._listenerTarget.addEventListener("touchmove",this._moveBind),window.addEventListener("touchend",this._upBind),window.addEventListener("mouseup",this._upBind)}},{key:"disconnect",value:function(){this._listenerTarget.removeEventListener("mousewheel",this._wheelBind),this._listenerTarget.removeEventListener("DOMMouseScroll",this._wheelBind),this._listenerTarget.removeEventListener("mousedown",this._downBind),this._listenerTarget.removeEventListener("touchstart",this._downBind),this._listenerTarget.removeEventListener("mousemove",this._moveBind),this._listenerTarget.removeEventListener("touchmove",this._moveBind),window.removeEventListener("touchend",this._upBind),window.removeEventListener("mouseup",this._upBind)}},{key:"lock",value:function(){var mValue=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this._isLockZoom=mValue,this._isLockRotation=mValue,this._isMouseDown=!1}},{key:"lockZoom",value:function(){var mValue=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this._isLockZoom=mValue}},{key:"lockRotation",value:function(){var mValue=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this._isLockRotation=mValue}},{key:"inverseControl",value:function(){var isInvert=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this._isInvert=isInvert}},{key:"_onDown",value:function(mEvent){this._isLockRotation||(this._isMouseDown=!0,getMouse(mEvent,this._mouse),getMouse(mEvent,this._preMouse),this._preRX=this._rx.targetValue,this._preRY=this._ry.targetValue)}},{key:"_onMove",value:function(mEvent){if(!this._isLockRotation&&(getMouse(mEvent,this._mouse),mEvent.touches&&mEvent.preventDefault(),this._isMouseDown)){var diffX=-(this._mouse.x-this._preMouse.x);this._isInvert&&(diffX*=-1),this._ry.value=this._preRY-.01*diffX*this.sensitivity;var diffY=-(this._mouse.y-this._preMouse.y);this._isInvert&&(diffY*=-1),this._rx.value=this._preRX-.01*diffY*this.sensitivity}}},{key:"_onUp",value:function(){this._isLockRotation||(this._isMouseDown=!1)}},{key:"_onWheel",value:function(mEvent){if(!this._isLockZoom){var w=mEvent.wheelDelta,d=mEvent.detail,value=0;value=d?w?w/d/40*d>0?1:-1:-d/3:w/120,this.radius.add(2*-value)}}},{key:"_loop",value:function(){this._updatePosition(),this._target&&this._updateCamera()}},{key:"_updatePosition",value:function(){this.position[1]=Math.sin(this._rx.value)*this.radius.value;var tr=Math.cos(this._rx.value)*this.radius.value;this.position[0]=Math.cos(this._ry.value+.5*Math.PI)*tr,this.position[2]=Math.sin(this._ry.value+.5*Math.PI)*tr,_glMatrix.vec3.add(this.position,this.position,this.positionOffset)}},{key:"_updateCamera",value:function(){this._target.lookAt(this.position,this.center,this._up)}},{key:"rx",get:function(){return this._rx}},{key:"ry",get:function(){return this._ry}}]),OrbitalControl}();exports.default=OrbitalControl},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_Camera2=__webpack_require__(15),_Camera3=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_Camera2),_glMatrix=__webpack_require__(1),CameraOrtho=function(_Camera){function CameraOrtho(){_classCallCheck(this,CameraOrtho);var _this=_possibleConstructorReturn(this,(CameraOrtho.__proto__||Object.getPrototypeOf(CameraOrtho)).call(this)),eye=_glMatrix.vec3.clone([0,0,15]),center=_glMatrix.vec3.create(),up=_glMatrix.vec3.clone([0,-1,0]);return _this.lookAt(eye,center,up),_this.ortho(1,-1,1,-1),_this}return _inherits(CameraOrtho,_Camera),_createClass(CameraOrtho,[{key:"setBoundary",value:function(left,right,top,bottom){var near=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.1,far=arguments.length>5&&void 0!==arguments[5]?arguments[5]:100;this.ortho(left,right,top,bottom,near,far)}},{key:"ortho",value:function(left,right,top,bottom){var near=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.1,far=arguments.length>5&&void 0!==arguments[5]?arguments[5]:100;this.left=left,this.right=right,this.top=top,this.bottom=bottom,mat4.ortho(this._projection,left,right,top,bottom,near,far)}}]),CameraOrtho}(_Camera3.default);exports.default=CameraOrtho},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_glMatrix=__webpack_require__(1),Object3D=function(){function Object3D(){_classCallCheck(this,Object3D),this._needUpdate=!0,this._x=0,this._y=0,this._z=0,this._sx=1,this._sy=1,this._sz=1,this._rx=0,this._ry=0,this._rz=0,this._position=_glMatrix.vec3.create(),this._scale=_glMatrix.vec3.fromValues(1,1,1),this._rotation=_glMatrix.vec3.create(),this._matrix=_glMatrix.mat4.create(),this._matrixRotation=_glMatrix.mat4.create(),this._matrixScale=_glMatrix.mat4.create(),this._matrixTranslation=_glMatrix.mat4.create(),this._matrixQuaternion=_glMatrix.mat4.create(),this._quat=_glMatrix.quat.create()}return _createClass(Object3D,[{key:"_update",value:function(){_glMatrix.vec3.set(this._scale,this._sx,this._sy,this._sz),_glMatrix.vec3.set(this._rotation,this._rx,this._ry,this._rz),_glMatrix.vec3.set(this._position,this._x,this._y,this._z),_glMatrix.mat4.identity(this._matrixTranslation,this._matrixTranslation),_glMatrix.mat4.identity(this._matrixScale,this._matrixScale),_glMatrix.mat4.identity(this._matrixRotation,this._matrixRotation),_glMatrix.mat4.rotateX(this._matrixRotation,this._matrixRotation,this._rx),_glMatrix.mat4.rotateY(this._matrixRotation,this._matrixRotation,this._ry),_glMatrix.mat4.rotateZ(this._matrixRotation,this._matrixRotation,this._rz),_glMatrix.mat4.fromQuat(this._matrixQuaternion,this._quat),_glMatrix.mat4.mul(this._matrixRotation,this._matrixQuaternion,this._matrixRotation),_glMatrix.mat4.scale(this._matrixScale,this._matrixScale,this._scale),_glMatrix.mat4.translate(this._matrixTranslation,this._matrixTranslation,this._position),_glMatrix.mat4.mul(this._matrix,this._matrixTranslation,this._matrixRotation),_glMatrix.mat4.mul(this._matrix,this._matrix,this._matrixScale),this._needUpdate=!1}},{key:"setRotationFromQuaternion",value:function(mQuat){_glMatrix.quat.copy(this._quat,mQuat),this._needUpdate=!0}},{key:"matrix",get:function(){return this._needUpdate&&this._update(),this._matrix}},{key:"x",get:function(){return this._x},set:function(mValue){this._needUpdate=!0,this._x=mValue}},{key:"y",get:function(){return this._y},set:function(mValue){this._needUpdate=!0,this._y=mValue}},{key:"z",get:function(){return this._z},set:function(mValue){this._needUpdate=!0,this._z=mValue}},{key:"scaleX",get:function(){return this._sx},set:function(mValue){this._needUpdate=!0,this._sx=mValue}},{key:"scaleY",get:function(){return this._sy},set:function(mValue){this._needUpdate=!0,this._sy=mValue}},{key:"scaleZ",get:function(){return this._sz},set:function(mValue){this._needUpdate=!0,this._sz=mValue}},{key:"rotationX",get:function(){return this._rx},set:function(mValue){this._needUpdate=!0,this._rx=mValue}},{key:"rotationY",get:function(){return this._ry},set:function(mValue){this._needUpdate=!0,this._ry=mValue}},{key:"rotationZ",get:function(){return this._rz},set:function(mValue){this._needUpdate=!0,this._rz=mValue}}]),Object3D}();exports.default=Object3D},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,"__esModule",{value:!0});var _simpleColor=__webpack_require__(10),_simpleColor2=_interopRequireDefault(_simpleColor),_bigTriangle=__webpack_require__(18),_bigTriangle2=_interopRequireDefault(_bigTriangle),_general=__webpack_require__(33),_general2=_interopRequireDefault(_general),_copy=__webpack_require__(19),_copy2=_interopRequireDefault(_copy),_basic=__webpack_require__(11),_basic2=_interopRequireDefault(_basic),_skybox=__webpack_require__(34),_skybox2=_interopRequireDefault(_skybox),_skybox3=__webpack_require__(35),_skybox4=_interopRequireDefault(_skybox3),ShaderLibs={simpleColorFrag:_simpleColor2.default,bigTriangleVert:_bigTriangle2.default,generalVert:_general2.default,copyFrag:_copy2.default,basicVert:_basic2.default,skyboxVert:_skybox2.default,skyboxFrag:_skybox4.default};exports.default=ShaderLibs},function(module,exports){module.exports="// generalWithNormal.vert\n\n#define SHADER_NAME GENERAL_VERTEX\n\nprecision highp float;\n#define GLSLIFY 1\nattribute vec3 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec3 aNormal;\n\nuniform mat4 uModelMatrix;\nuniform mat4 uViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nuniform vec3 position;\nuniform vec3 scale;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vNormal;\n\nvoid main(void) {\n\tvec3 pos      = aVertexPosition * scale;\n\tpos           += position;\n\tgl_Position   = uProjectionMatrix * uViewMatrix * uModelMatrix * vec4(pos, 1.0);\n\t\n\tvTextureCoord = aTextureCoord;\n\tvNormal       = normalize(uNormalMatrix * aNormal);\n}"},function(module,exports){module.exports="// basic.vert\n\n#define SHADER_NAME SKYBOX_VERTEX\n\nprecision highp float;\n#define GLSLIFY 1\nattribute vec3 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec3 aNormal;\n\nuniform mat4 uModelMatrix;\nuniform mat4 uViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vVertex;\nvarying vec3 vNormal;\n\nvoid main(void) {\n\tmat4 matView = uViewMatrix;\n\tmatView[3][0] = 0.0;\n\tmatView[3][1] = 0.0;\n\tmatView[3][2] = 0.0;\n\t\n\tgl_Position = uProjectionMatrix * matView * uModelMatrix * vec4(aVertexPosition, 1.0);\n\tvTextureCoord = aTextureCoord;\n\t\n\tvVertex = aVertexPosition;\n\tvNormal = aNormal;\n}"},function(module,exports){module.exports="// basic.frag\n\n#define SHADER_NAME SKYBOX_FRAGMENT\n\nprecision mediump float;\n#define GLSLIFY 1\nuniform samplerCube texture;\nvarying vec2 vTextureCoord;\nvarying vec3 vVertex;\n\nvoid main(void) {\n    gl_FragColor = textureCube(texture, vVertex);\n}"},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),PassMacro=function(){function PassMacro(){_classCallCheck(this,PassMacro),this._passes=[]}return _createClass(PassMacro,[{key:"addPass",value:function(pass){this._passes.push(pass)}},{key:"passes",get:function(){return this._passes}}]),PassMacro}();exports.default=PassMacro},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _PassBlurBase2=__webpack_require__(38),_PassBlurBase3=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_PassBlurBase2),PassVBlur=function(_PassBlurBase){function PassVBlur(){var mQuality=arguments.length>0&&void 0!==arguments[0]?arguments[0]:9,mWidth=arguments[1],mHeight=arguments[2],mParams=arguments[3];return _classCallCheck(this,PassVBlur),_possibleConstructorReturn(this,(PassVBlur.__proto__||Object.getPrototypeOf(PassVBlur)).call(this,mQuality,[0,1],mWidth,mHeight,mParams))}return _inherits(PassVBlur,_PassBlurBase),PassVBlur}(_PassBlurBase3.default);exports.default=PassVBlur},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_Pass2=__webpack_require__(9),_Pass3=_interopRequireDefault(_Pass2),fsBlur5=__webpack_require__(73),fsBlur9=__webpack_require__(74),fsBlur13=__webpack_require__(75),PassBlurBase=function(_Pass){function PassBlurBase(){var mQuality=arguments.length>0&&void 0!==arguments[0]?arguments[0]:9,mDirection=arguments[1],mWidth=arguments[2],mHeight=arguments[3],mParams=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};_classCallCheck(this,PassBlurBase);var fs=void 0;switch(mQuality){case 5:default:fs=fsBlur5;break;case 9:fs=fsBlur9;break;case 13:fs=fsBlur13}var _this=_possibleConstructorReturn(this,(PassBlurBase.__proto__||Object.getPrototypeOf(PassBlurBase)).call(this,fs,mWidth,mHeight,mParams));return _this.uniform("uDirection",mDirection),_this.uniform("uResolution",[_GLTool2.default.width,_GLTool2.default.height]),_this}return _inherits(PassBlurBase,_Pass),PassBlurBase}(_Pass3.default);exports.default=PassBlurBase},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _PassBlurBase2=__webpack_require__(38),_PassBlurBase3=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_PassBlurBase2),PassHBlur=function(_PassBlurBase){function PassHBlur(){var mQuality=arguments.length>0&&void 0!==arguments[0]?arguments[0]:9,mWidth=arguments[1],mHeight=arguments[2],mParams=arguments[3];return _classCallCheck(this,PassHBlur),_possibleConstructorReturn(this,(PassHBlur.__proto__||Object.getPrototypeOf(PassHBlur)).call(this,mQuality,[1,0],mWidth,mHeight,mParams))}return _inherits(PassHBlur,_PassBlurBase),PassHBlur}(_PassBlurBase3.default);exports.default=PassHBlur},function(module,exports){module.exports="// fxaa.frag\n\n#define SHADER_NAME FXAA\n\nprecision highp float;\n#define GLSLIFY 1\nvarying vec2 vTextureCoord;\nuniform sampler2D texture;\nuniform vec2 uResolution;\n\n\nfloat FXAA_SUBPIX_SHIFT = 1.0/4.0;\n#define FXAA_REDUCE_MIN   (1.0/ 128.0)\n#define FXAA_REDUCE_MUL   (1.0 / 8.0)\n#define FXAA_SPAN_MAX     8.0\n\n\nvec4 applyFXAA(sampler2D tex) {\n    vec4 color;\n    vec2 fragCoord = gl_FragCoord.xy;\n    vec3 rgbNW = texture2D(tex, (fragCoord + vec2(-1.0, -1.0)) * uResolution).xyz;\n    vec3 rgbNE = texture2D(tex, (fragCoord + vec2(1.0, -1.0)) * uResolution).xyz;\n    vec3 rgbSW = texture2D(tex, (fragCoord + vec2(-1.0, 1.0)) * uResolution).xyz;\n    vec3 rgbSE = texture2D(tex, (fragCoord + vec2(1.0, 1.0)) * uResolution).xyz;\n    vec3 rgbM  = texture2D(tex, fragCoord  * uResolution).xyz;\n    vec3 luma = vec3(0.299, 0.587, 0.114);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM  = dot(rgbM,  luma);\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n\n    vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n              dir * rcpDirMin)) * uResolution;\n\n    vec3 rgbA = 0.5 * (\n        texture2D(tex, fragCoord * uResolution + dir * (1.0 / 3.0 - 0.5)).xyz +\n        texture2D(tex, fragCoord * uResolution + dir * (2.0 / 3.0 - 0.5)).xyz);\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\n        texture2D(tex, fragCoord * uResolution + dir * -0.5).xyz +\n        texture2D(tex, fragCoord * uResolution + dir * 0.5).xyz);\n\n    float lumaB = dot(rgbB, luma);\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\n        color = vec4(rgbA, 1.0);\n    else\n        color = vec4(rgbB, 1.0);\n    return color;\n}\n\nvoid main(void) {\n \tvec4 color = applyFXAA(texture);\n    gl_FragColor = color;\n}"},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0}),exports.ShaderLibs=exports.View3D=exports.View=exports.Scene=exports.BatchFXAA=exports.BatchSky=exports.BatchSkybox=exports.BatchLine=exports.BatchDotsPlane=exports.BatchBall=exports.BatchAxis=exports.BatchCopy=exports.PassFxaa=exports.PassHBlur=exports.PassVBlur=exports.PassBlur=exports.PassMacro=exports.Pass=exports.EffectComposer=exports.ColladaParser=exports.HDRLoader=exports.ObjLoader=exports.BinaryLoader=exports.Object3D=exports.Ray=exports.CameraCube=exports.CameraPerspective=exports.CameraOrtho=exports.Camera=exports.TouchDetector=exports.QuatRotation=exports.WebglNumber=exports.OrbitalControl=exports.TweenNumber=exports.EaseNumber=exports.EventDispatcher=exports.Scheduler=exports.TransformFeedbackObject=exports.MultisampleFrameBuffer=exports.CubeFrameBuffer=exports.FrameBuffer=exports.Batch=exports.Geom=exports.Mesh=exports.GLCubeTexture=exports.GLTextureOld=exports.GLTexture=exports.GLShader=exports.GL=void 0;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_glMatrix=__webpack_require__(1),GLM=function(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}(_glMatrix),_GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_GLShader=__webpack_require__(2),_GLShader2=_interopRequireDefault(_GLShader),_GLTexture=__webpack_require__(25),_GLTexture2=_interopRequireDefault(_GLTexture),_GLTexture3=__webpack_require__(26),_GLTexture4=_interopRequireDefault(_GLTexture3),_GLCubeTexture=__webpack_require__(27),_GLCubeTexture2=_interopRequireDefault(_GLCubeTexture),_Mesh=__webpack_require__(5),_Mesh2=_interopRequireDefault(_Mesh),_Geom=__webpack_require__(7),_Geom2=_interopRequireDefault(_Geom),_Batch=__webpack_require__(4),_Batch2=_interopRequireDefault(_Batch),_FrameBuffer=__webpack_require__(12),_FrameBuffer2=_interopRequireDefault(_FrameBuffer),_CubeFrameBuffer=__webpack_require__(56),_CubeFrameBuffer2=_interopRequireDefault(_CubeFrameBuffer),_MultisampleFrameBuffer=__webpack_require__(57),_MultisampleFrameBuffer2=_interopRequireDefault(_MultisampleFrameBuffer),_TransformFeedbackObject=__webpack_require__(58),_TransformFeedbackObject2=_interopRequireDefault(_TransformFeedbackObject),_scheduling=__webpack_require__(6),_scheduling2=_interopRequireDefault(_scheduling),_EventDispatcher=__webpack_require__(28),_EventDispatcher2=_interopRequireDefault(_EventDispatcher),_EaseNumber=__webpack_require__(13),_EaseNumber2=_interopRequireDefault(_EaseNumber),_TweenNumber=__webpack_require__(59),_TweenNumber2=_interopRequireDefault(_TweenNumber),_OrbitalControl=__webpack_require__(29),_OrbitalControl2=_interopRequireDefault(_OrbitalControl),_QuatRotation=__webpack_require__(60),_QuatRotation2=_interopRequireDefault(_QuatRotation),_TouchDetector=__webpack_require__(61),_TouchDetector2=_interopRequireDefault(_TouchDetector),_WebglNumber=__webpack_require__(8),_WebglNumber2=_interopRequireDefault(_WebglNumber),_WebglConst=__webpack_require__(23),_Camera=(_interopRequireDefault(_WebglConst),__webpack_require__(15)),_Camera2=_interopRequireDefault(_Camera),_CameraOrtho=__webpack_require__(30),_CameraOrtho2=_interopRequireDefault(_CameraOrtho),_CameraPerspective=__webpack_require__(16),_CameraPerspective2=_interopRequireDefault(_CameraPerspective),_CameraCube=__webpack_require__(63),_CameraCube2=_interopRequireDefault(_CameraCube),_Ray=__webpack_require__(14),_Ray2=_interopRequireDefault(_Ray),_Object3D=__webpack_require__(31),_Object3D2=_interopRequireDefault(_Object3D),_BinaryLoader=__webpack_require__(17),_BinaryLoader2=_interopRequireDefault(_BinaryLoader),_ObjLoader=__webpack_require__(64),_ObjLoader2=_interopRequireDefault(_ObjLoader),_HDRLoader=__webpack_require__(65),_HDRLoader2=_interopRequireDefault(_HDRLoader),_ColladaParser=__webpack_require__(67),_ColladaParser2=_interopRequireDefault(_ColladaParser),_EffectComposer=__webpack_require__(71),_EffectComposer2=_interopRequireDefault(_EffectComposer),_Pass=__webpack_require__(9),_Pass2=_interopRequireDefault(_Pass),_PassMacro=__webpack_require__(36),_PassMacro2=_interopRequireDefault(_PassMacro),_PassBlur=__webpack_require__(72),_PassBlur2=_interopRequireDefault(_PassBlur),_PassVBlur=__webpack_require__(37),_PassVBlur2=_interopRequireDefault(_PassVBlur),_PassHBlur=__webpack_require__(39),_PassHBlur2=_interopRequireDefault(_PassHBlur),_PassFxaa=__webpack_require__(76),_PassFxaa2=_interopRequireDefault(_PassFxaa),_BatchCopy=__webpack_require__(77),_BatchCopy2=_interopRequireDefault(_BatchCopy),_BatchAxis=__webpack_require__(78),_BatchAxis2=_interopRequireDefault(_BatchAxis),_BatchBall=__webpack_require__(81),_BatchBall2=_interopRequireDefault(_BatchBall),_BatchDotsPlane=__webpack_require__(82),_BatchDotsPlane2=_interopRequireDefault(_BatchDotsPlane),_BatchLine=__webpack_require__(84),_BatchLine2=_interopRequireDefault(_BatchLine),_BatchSkybox=__webpack_require__(85),_BatchSkybox2=_interopRequireDefault(_BatchSkybox),_BatchSky=__webpack_require__(86),_BatchSky2=_interopRequireDefault(_BatchSky),_BatchFXAA=__webpack_require__(88),_BatchFXAA2=_interopRequireDefault(_BatchFXAA),_Scene=__webpack_require__(89),_Scene2=_interopRequireDefault(_Scene),_View=__webpack_require__(90),_View2=_interopRequireDefault(_View),_View3D=__webpack_require__(91),_View3D2=_interopRequireDefault(_View3D),_ShaderLibs=__webpack_require__(32),_ShaderLibs2=_interopRequireDefault(_ShaderLibs),Alfrid=function(){function Alfrid(){_classCallCheck(this,Alfrid),this.glm=GLM,this.GL=_GLTool2.default,this.GLTool=_GLTool2.default,this.GLShader=_GLShader2.default,this.GLTexture=_GLTexture4.default,this.GLTextureOld=_GLTexture2.default,this.GLCubeTexture=_GLCubeTexture2.default,this.Mesh=_Mesh2.default,this.Geom=_Geom2.default,this.Batch=_Batch2.default,this.FrameBuffer=_FrameBuffer2.default,this.CubeFrameBuffer=_CubeFrameBuffer2.default,this.Scheduler=_scheduling2.default,this.EventDispatcher=_EventDispatcher2.default,this.EaseNumber=_EaseNumber2.default,this.TweenNumber=_TweenNumber2.default,this.Camera=_Camera2.default,this.CameraOrtho=_CameraOrtho2.default,this.CameraPerspective=_CameraPerspective2.default,this.Ray=_Ray2.default,this.CameraCube=_CameraCube2.default,this.OrbitalControl=_OrbitalControl2.default,this.QuatRotation=_QuatRotation2.default,this.BinaryLoader=_BinaryLoader2.default,this.ObjLoader=_ObjLoader2.default,this.ColladaParser=_ColladaParser2.default,this.HDRLoader=_HDRLoader2.default,this.BatchCopy=_BatchCopy2.default,this.BatchAxis=_BatchAxis2.default,this.BatchBall=_BatchBall2.default,this.BatchBall=_BatchBall2.default,this.BatchLine=_BatchLine2.default,this.BatchSkybox=_BatchSkybox2.default,this.BatchSky=_BatchSky2.default,this.BatchFXAA=_BatchFXAA2.default,this.BatchDotsPlane=_BatchDotsPlane2.default,this.Scene=_Scene2.default,this.View=_View2.default,this.View3D=_View3D2.default,this.Object3D=_Object3D2.default,this.ShaderLibs=_ShaderLibs2.default,this.WebglNumber=_WebglNumber2.default,this.EffectComposer=_EffectComposer2.default,this.Pass=_Pass2.default,this.PassMacro=_PassMacro2.default,this.PassBlur=_PassBlur2.default,this.PassVBlur=_PassVBlur2.default,this.PassHBlur=_PassHBlur2.default,this.PassFxaa=_PassFxaa2.default,this.MultisampleFrameBuffer=_MultisampleFrameBuffer2.default,this.TransformFeedbackObject=_TransformFeedbackObject2.default;for(var s in GLM)GLM[s]&&(window[s]=GLM[s])}return _createClass(Alfrid,[{key:"log",value:function(){navigator.userAgent.indexOf("Chrome")>-1?console.log("%clib alfrid : VERSION 0.2.0","background: #193441; color: #FCFFF5"):console.log("lib alfrid : VERSION ","0.2.0"),console.log("%cClasses : ","color: #193441");for(var s in this)this[s]&&console.log("%c - "+s,"color: #3E606F")}}]),Alfrid}(),al=new Alfrid;exports.default=al,exports.GL=_GLTool2.default,exports.GLShader=_GLShader2.default,exports.GLTexture=_GLTexture4.default,exports.GLTextureOld=_GLTexture2.default,exports.GLCubeTexture=_GLCubeTexture2.default,exports.Mesh=_Mesh2.default,exports.Geom=_Geom2.default,exports.Batch=_Batch2.default,exports.FrameBuffer=_FrameBuffer2.default,exports.CubeFrameBuffer=_CubeFrameBuffer2.default,exports.MultisampleFrameBuffer=_MultisampleFrameBuffer2.default,exports.TransformFeedbackObject=_TransformFeedbackObject2.default,exports.Scheduler=_scheduling2.default,exports.EventDispatcher=_EventDispatcher2.default,exports.EaseNumber=_EaseNumber2.default,exports.TweenNumber=_TweenNumber2.default,exports.OrbitalControl=_OrbitalControl2.default,exports.WebglNumber=_WebglNumber2.default,exports.QuatRotation=_QuatRotation2.default,exports.TouchDetector=_TouchDetector2.default,exports.Camera=_Camera2.default,exports.CameraOrtho=_CameraOrtho2.default,exports.CameraPerspective=_CameraPerspective2.default,exports.CameraCube=_CameraCube2.default,exports.Ray=_Ray2.default,exports.Object3D=_Object3D2.default,exports.BinaryLoader=_BinaryLoader2.default,exports.ObjLoader=_ObjLoader2.default,exports.HDRLoader=_HDRLoader2.default,exports.ColladaParser=_ColladaParser2.default,exports.EffectComposer=_EffectComposer2.default,exports.Pass=_Pass2.default,exports.PassMacro=_PassMacro2.default,exports.PassBlur=_PassBlur2.default,exports.PassVBlur=_PassVBlur2.default,exports.PassHBlur=_PassHBlur2.default,exports.PassFxaa=_PassFxaa2.default,exports.BatchCopy=_BatchCopy2.default,exports.BatchAxis=_BatchAxis2.default,exports.BatchBall=_BatchBall2.default,exports.BatchDotsPlane=_BatchDotsPlane2.default,exports.BatchLine=_BatchLine2.default,exports.BatchSkybox=_BatchSkybox2.default,exports.BatchSky=_BatchSky2.default,exports.BatchFXAA=_BatchFXAA2.default,exports.Scene=_Scene2.default,exports.View=_View2.default,exports.View3D=_View3D2.default,exports.ShaderLibs=_ShaderLibs2.default},function(module,exports,__webpack_require__){"use strict";function create(){var out=new glMatrix.ARRAY_TYPE(4);return out[0]=1,out[1]=0,out[2]=0,out[3]=1,out}function clone(a){var out=new glMatrix.ARRAY_TYPE(4);return out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out}function copy(out,a){return out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out}function identity(out){return out[0]=1,out[1]=0,out[2]=0,out[3]=1,out}function fromValues(m00,m01,m10,m11){var out=new glMatrix.ARRAY_TYPE(4);return out[0]=m00,out[1]=m01,out[2]=m10,out[3]=m11,out}function set(out,m00,m01,m10,m11){return out[0]=m00,out[1]=m01,out[2]=m10,out[3]=m11,out}function transpose(out,a){if(out===a){var a1=a[1];out[1]=a[2],out[2]=a1}else out[0]=a[0],out[1]=a[2],out[2]=a[1],out[3]=a[3];return out}function invert(out,a){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],det=a0*a3-a2*a1;return det?(det=1/det,out[0]=a3*det,out[1]=-a1*det,out[2]=-a2*det,out[3]=a0*det,out):null}function adjoint(out,a){var a0=a[0];return out[0]=a[3],out[1]=-a[1],out[2]=-a[2],out[3]=a0,out}function determinant(a){return a[0]*a[3]-a[2]*a[1]}function multiply(out,a,b){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],b0=b[0],b1=b[1],b2=b[2],b3=b[3];return out[0]=a0*b0+a2*b1,out[1]=a1*b0+a3*b1,out[2]=a0*b2+a2*b3,out[3]=a1*b2+a3*b3,out}function rotate(out,a,rad){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],s=Math.sin(rad),c=Math.cos(rad);return out[0]=a0*c+a2*s,out[1]=a1*c+a3*s,out[2]=a0*-s+a2*c,out[3]=a1*-s+a3*c,out}function scale(out,a,v){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],v0=v[0],v1=v[1];return out[0]=a0*v0,out[1]=a1*v0,out[2]=a2*v1,out[3]=a3*v1,out}function fromRotation(out,rad){var s=Math.sin(rad),c=Math.cos(rad);return out[0]=c,out[1]=s,out[2]=-s,out[3]=c,out}function fromScaling(out,v){return out[0]=v[0],out[1]=0,out[2]=0,out[3]=v[1],out}function str(a){return"mat2("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"}function frob(a){return Math.sqrt(Math.pow(a[0],2)+Math.pow(a[1],2)+Math.pow(a[2],2)+Math.pow(a[3],2))}function LDU(L,D,U,a){return L[2]=a[2]/a[0],U[0]=a[0],U[1]=a[1],U[3]=a[3]-L[2]*U[1],[L,D,U]}function add(out,a,b){return out[0]=a[0]+b[0],out[1]=a[1]+b[1],out[2]=a[2]+b[2],out[3]=a[3]+b[3],out}function subtract(out,a,b){return out[0]=a[0]-b[0],out[1]=a[1]-b[1],out[2]=a[2]-b[2],out[3]=a[3]-b[3],out}function exactEquals(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]}function equals(a,b){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],b0=b[0],b1=b[1],b2=b[2],b3=b[3];return Math.abs(a0-b0)<=glMatrix.EPSILON*Math.max(1,Math.abs(a0),Math.abs(b0))&&Math.abs(a1-b1)<=glMatrix.EPSILON*Math.max(1,Math.abs(a1),Math.abs(b1))&&Math.abs(a2-b2)<=glMatrix.EPSILON*Math.max(1,Math.abs(a2),Math.abs(b2))&&Math.abs(a3-b3)<=glMatrix.EPSILON*Math.max(1,Math.abs(a3),Math.abs(b3))}function multiplyScalar(out,a,b){return out[0]=a[0]*b,out[1]=a[1]*b,out[2]=a[2]*b,out[3]=a[3]*b,out}function multiplyScalarAndAdd(out,a,b,scale){return out[0]=a[0]+b[0]*scale,out[1]=a[1]+b[1]*scale,out[2]=a[2]+b[2]*scale,out[3]=a[3]+b[3]*scale,out}Object.defineProperty(exports,"__esModule",{value:!0}),exports.sub=exports.mul=void 0,exports.create=create,exports.clone=clone,exports.copy=copy,exports.identity=identity,exports.fromValues=fromValues,exports.set=set,exports.transpose=transpose,exports.invert=invert,exports.adjoint=adjoint,exports.determinant=determinant,exports.multiply=multiply,exports.rotate=rotate,exports.scale=scale,exports.fromRotation=fromRotation,exports.fromScaling=fromScaling,exports.str=str,exports.frob=frob,exports.LDU=LDU,exports.add=add,exports.subtract=subtract,exports.exactEquals=exactEquals,exports.equals=equals,exports.multiplyScalar=multiplyScalar,exports.multiplyScalarAndAdd=multiplyScalarAndAdd;var _common=__webpack_require__(3),glMatrix=function(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}(_common);exports.mul=multiply,exports.sub=subtract},function(module,exports,__webpack_require__){"use strict";function create(){var out=new glMatrix.ARRAY_TYPE(6);return out[0]=1,out[1]=0,out[2]=0,out[3]=1,out[4]=0,out[5]=0,out}function clone(a){var out=new glMatrix.ARRAY_TYPE(6);return out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out[4]=a[4],out[5]=a[5],out}function copy(out,a){return out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out[4]=a[4],out[5]=a[5],out}function identity(out){return out[0]=1,out[1]=0,out[2]=0,out[3]=1,out[4]=0,out[5]=0,out}function fromValues(a,b,c,d,tx,ty){var out=new glMatrix.ARRAY_TYPE(6);return out[0]=a,out[1]=b,out[2]=c,out[3]=d,out[4]=tx,out[5]=ty,out}function set(out,a,b,c,d,tx,ty){return out[0]=a,out[1]=b,out[2]=c,out[3]=d,out[4]=tx,out[5]=ty,out}function invert(out,a){var aa=a[0],ab=a[1],ac=a[2],ad=a[3],atx=a[4],aty=a[5],det=aa*ad-ab*ac;return det?(det=1/det,out[0]=ad*det,out[1]=-ab*det,out[2]=-ac*det,out[3]=aa*det,out[4]=(ac*aty-ad*atx)*det,out[5]=(ab*atx-aa*aty)*det,out):null}function determinant(a){return a[0]*a[3]-a[1]*a[2]}function multiply(out,a,b){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],a4=a[4],a5=a[5],b0=b[0],b1=b[1],b2=b[2],b3=b[3],b4=b[4],b5=b[5];return out[0]=a0*b0+a2*b1,out[1]=a1*b0+a3*b1,out[2]=a0*b2+a2*b3,out[3]=a1*b2+a3*b3,out[4]=a0*b4+a2*b5+a4,out[5]=a1*b4+a3*b5+a5,out}function rotate(out,a,rad){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],a4=a[4],a5=a[5],s=Math.sin(rad),c=Math.cos(rad);return out[0]=a0*c+a2*s,out[1]=a1*c+a3*s,out[2]=a0*-s+a2*c,out[3]=a1*-s+a3*c,out[4]=a4,out[5]=a5,out}function scale(out,a,v){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],a4=a[4],a5=a[5],v0=v[0],v1=v[1];return out[0]=a0*v0,out[1]=a1*v0,out[2]=a2*v1,out[3]=a3*v1,out[4]=a4,out[5]=a5,out}function translate(out,a,v){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],a4=a[4],a5=a[5],v0=v[0],v1=v[1];return out[0]=a0,out[1]=a1,out[2]=a2,out[3]=a3,out[4]=a0*v0+a2*v1+a4,out[5]=a1*v0+a3*v1+a5,out}function fromRotation(out,rad){var s=Math.sin(rad),c=Math.cos(rad);return out[0]=c,out[1]=s,out[2]=-s,out[3]=c,out[4]=0,out[5]=0,out}function fromScaling(out,v){return out[0]=v[0],out[1]=0,out[2]=0,out[3]=v[1],out[4]=0,out[5]=0,out}function fromTranslation(out,v){return out[0]=1,out[1]=0,out[2]=0,out[3]=1,out[4]=v[0],out[5]=v[1],out}function str(a){return"mat2d("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+")"}function frob(a){return Math.sqrt(Math.pow(a[0],2)+Math.pow(a[1],2)+Math.pow(a[2],2)+Math.pow(a[3],2)+Math.pow(a[4],2)+Math.pow(a[5],2)+1)}function add(out,a,b){return out[0]=a[0]+b[0],out[1]=a[1]+b[1],out[2]=a[2]+b[2],out[3]=a[3]+b[3],out[4]=a[4]+b[4],out[5]=a[5]+b[5],out}function subtract(out,a,b){return out[0]=a[0]-b[0],out[1]=a[1]-b[1],out[2]=a[2]-b[2],out[3]=a[3]-b[3],out[4]=a[4]-b[4],out[5]=a[5]-b[5],out}function multiplyScalar(out,a,b){return out[0]=a[0]*b,out[1]=a[1]*b,out[2]=a[2]*b,out[3]=a[3]*b,out[4]=a[4]*b,out[5]=a[5]*b,out}function multiplyScalarAndAdd(out,a,b,scale){return out[0]=a[0]+b[0]*scale,out[1]=a[1]+b[1]*scale,out[2]=a[2]+b[2]*scale,out[3]=a[3]+b[3]*scale,out[4]=a[4]+b[4]*scale,out[5]=a[5]+b[5]*scale,out}function exactEquals(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]&&a[4]===b[4]&&a[5]===b[5]}function equals(a,b){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],a4=a[4],a5=a[5],b0=b[0],b1=b[1],b2=b[2],b3=b[3],b4=b[4],b5=b[5];return Math.abs(a0-b0)<=glMatrix.EPSILON*Math.max(1,Math.abs(a0),Math.abs(b0))&&Math.abs(a1-b1)<=glMatrix.EPSILON*Math.max(1,Math.abs(a1),Math.abs(b1))&&Math.abs(a2-b2)<=glMatrix.EPSILON*Math.max(1,Math.abs(a2),Math.abs(b2))&&Math.abs(a3-b3)<=glMatrix.EPSILON*Math.max(1,Math.abs(a3),Math.abs(b3))&&Math.abs(a4-b4)<=glMatrix.EPSILON*Math.max(1,Math.abs(a4),Math.abs(b4))&&Math.abs(a5-b5)<=glMatrix.EPSILON*Math.max(1,Math.abs(a5),Math.abs(b5))}Object.defineProperty(exports,"__esModule",{value:!0}),exports.sub=exports.mul=void 0,exports.create=create,exports.clone=clone,exports.copy=copy,exports.identity=identity,exports.fromValues=fromValues,exports.set=set,exports.invert=invert,exports.determinant=determinant,exports.multiply=multiply,exports.rotate=rotate,exports.scale=scale,exports.translate=translate,exports.fromRotation=fromRotation,exports.fromScaling=fromScaling,exports.fromTranslation=fromTranslation,exports.str=str,exports.frob=frob,exports.add=add,exports.subtract=subtract,exports.multiplyScalar=multiplyScalar,exports.multiplyScalarAndAdd=multiplyScalarAndAdd,exports.exactEquals=exactEquals,exports.equals=equals;var _common=__webpack_require__(3),glMatrix=function(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}(_common);exports.mul=multiply,exports.sub=subtract},function(module,exports,__webpack_require__){"use strict";function create(){var out=new glMatrix.ARRAY_TYPE(16);return out[0]=1,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=1,out[6]=0,out[7]=0,out[8]=0,out[9]=0,out[10]=1,out[11]=0,out[12]=0,out[13]=0,out[14]=0,out[15]=1,out}function clone(a){var out=new glMatrix.ARRAY_TYPE(16);return out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out[4]=a[4],out[5]=a[5],out[6]=a[6],out[7]=a[7],out[8]=a[8],out[9]=a[9],out[10]=a[10],out[11]=a[11],out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15],out}function copy(out,a){return out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out[4]=a[4],out[5]=a[5],out[6]=a[6],out[7]=a[7],out[8]=a[8],out[9]=a[9],out[10]=a[10],out[11]=a[11],out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15],out}function fromValues(m00,m01,m02,m03,m10,m11,m12,m13,m20,m21,m22,m23,m30,m31,m32,m33){var out=new glMatrix.ARRAY_TYPE(16);return out[0]=m00,out[1]=m01,out[2]=m02,out[3]=m03,out[4]=m10,out[5]=m11,out[6]=m12,out[7]=m13,out[8]=m20,out[9]=m21,out[10]=m22,out[11]=m23,out[12]=m30,out[13]=m31,out[14]=m32,out[15]=m33,out}function set(out,m00,m01,m02,m03,m10,m11,m12,m13,m20,m21,m22,m23,m30,m31,m32,m33){return out[0]=m00,out[1]=m01,out[2]=m02,out[3]=m03,out[4]=m10,out[5]=m11,out[6]=m12,out[7]=m13,out[8]=m20,out[9]=m21,out[10]=m22,out[11]=m23,out[12]=m30,out[13]=m31,out[14]=m32,out[15]=m33,out}function identity(out){return out[0]=1,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=1,out[6]=0,out[7]=0,out[8]=0,out[9]=0,out[10]=1,out[11]=0,out[12]=0,out[13]=0,out[14]=0,out[15]=1,out}function transpose(out,a){if(out===a){var a01=a[1],a02=a[2],a03=a[3],a12=a[6],a13=a[7],a23=a[11];out[1]=a[4],out[2]=a[8],out[3]=a[12],out[4]=a01,out[6]=a[9],out[7]=a[13],out[8]=a02,out[9]=a12,out[11]=a[14],out[12]=a03,out[13]=a13,out[14]=a23}else out[0]=a[0],out[1]=a[4],out[2]=a[8],out[3]=a[12],out[4]=a[1],out[5]=a[5],out[6]=a[9],out[7]=a[13],out[8]=a[2],out[9]=a[6],out[10]=a[10],out[11]=a[14],out[12]=a[3],out[13]=a[7],out[14]=a[11],out[15]=a[15];return out}function invert(out,a){var a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15],b00=a00*a11-a01*a10,b01=a00*a12-a02*a10,b02=a00*a13-a03*a10,b03=a01*a12-a02*a11,b04=a01*a13-a03*a11,b05=a02*a13-a03*a12,b06=a20*a31-a21*a30,b07=a20*a32-a22*a30,b08=a20*a33-a23*a30,b09=a21*a32-a22*a31,b10=a21*a33-a23*a31,b11=a22*a33-a23*a32,det=b00*b11-b01*b10+b02*b09+b03*b08-b04*b07+b05*b06;return det?(det=1/det,out[0]=(a11*b11-a12*b10+a13*b09)*det,out[1]=(a02*b10-a01*b11-a03*b09)*det,out[2]=(a31*b05-a32*b04+a33*b03)*det,out[3]=(a22*b04-a21*b05-a23*b03)*det,out[4]=(a12*b08-a10*b11-a13*b07)*det,out[5]=(a00*b11-a02*b08+a03*b07)*det,out[6]=(a32*b02-a30*b05-a33*b01)*det,out[7]=(a20*b05-a22*b02+a23*b01)*det,out[8]=(a10*b10-a11*b08+a13*b06)*det,out[9]=(a01*b08-a00*b10-a03*b06)*det,out[10]=(a30*b04-a31*b02+a33*b00)*det,out[11]=(a21*b02-a20*b04-a23*b00)*det,out[12]=(a11*b07-a10*b09-a12*b06)*det,out[13]=(a00*b09-a01*b07+a02*b06)*det,out[14]=(a31*b01-a30*b03-a32*b00)*det,out[15]=(a20*b03-a21*b01+a22*b00)*det,out):null}function adjoint(out,a){var a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15];return out[0]=a11*(a22*a33-a23*a32)-a21*(a12*a33-a13*a32)+a31*(a12*a23-a13*a22),out[1]=-(a01*(a22*a33-a23*a32)-a21*(a02*a33-a03*a32)+a31*(a02*a23-a03*a22)),out[2]=a01*(a12*a33-a13*a32)-a11*(a02*a33-a03*a32)+a31*(a02*a13-a03*a12),out[3]=-(a01*(a12*a23-a13*a22)-a11*(a02*a23-a03*a22)+a21*(a02*a13-a03*a12)),out[4]=-(a10*(a22*a33-a23*a32)-a20*(a12*a33-a13*a32)+a30*(a12*a23-a13*a22)),out[5]=a00*(a22*a33-a23*a32)-a20*(a02*a33-a03*a32)+a30*(a02*a23-a03*a22),out[6]=-(a00*(a12*a33-a13*a32)-a10*(a02*a33-a03*a32)+a30*(a02*a13-a03*a12)),out[7]=a00*(a12*a23-a13*a22)-a10*(a02*a23-a03*a22)+a20*(a02*a13-a03*a12),out[8]=a10*(a21*a33-a23*a31)-a20*(a11*a33-a13*a31)+a30*(a11*a23-a13*a21),out[9]=-(a00*(a21*a33-a23*a31)-a20*(a01*a33-a03*a31)+a30*(a01*a23-a03*a21)),out[10]=a00*(a11*a33-a13*a31)-a10*(a01*a33-a03*a31)+a30*(a01*a13-a03*a11),out[11]=-(a00*(a11*a23-a13*a21)-a10*(a01*a23-a03*a21)+a20*(a01*a13-a03*a11)),out[12]=-(a10*(a21*a32-a22*a31)-a20*(a11*a32-a12*a31)+a30*(a11*a22-a12*a21)),out[13]=a00*(a21*a32-a22*a31)-a20*(a01*a32-a02*a31)+a30*(a01*a22-a02*a21),out[14]=-(a00*(a11*a32-a12*a31)-a10*(a01*a32-a02*a31)+a30*(a01*a12-a02*a11)),out[15]=a00*(a11*a22-a12*a21)-a10*(a01*a22-a02*a21)+a20*(a01*a12-a02*a11),out}function determinant(a){var a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15];return(a00*a11-a01*a10)*(a22*a33-a23*a32)-(a00*a12-a02*a10)*(a21*a33-a23*a31)+(a00*a13-a03*a10)*(a21*a32-a22*a31)+(a01*a12-a02*a11)*(a20*a33-a23*a30)-(a01*a13-a03*a11)*(a20*a32-a22*a30)+(a02*a13-a03*a12)*(a20*a31-a21*a30)}function multiply(out,a,b){var a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15],b0=b[0],b1=b[1],b2=b[2],b3=b[3];return out[0]=b0*a00+b1*a10+b2*a20+b3*a30,out[1]=b0*a01+b1*a11+b2*a21+b3*a31,out[2]=b0*a02+b1*a12+b2*a22+b3*a32,out[3]=b0*a03+b1*a13+b2*a23+b3*a33,b0=b[4],b1=b[5],b2=b[6],b3=b[7],out[4]=b0*a00+b1*a10+b2*a20+b3*a30,out[5]=b0*a01+b1*a11+b2*a21+b3*a31,out[6]=b0*a02+b1*a12+b2*a22+b3*a32,out[7]=b0*a03+b1*a13+b2*a23+b3*a33,b0=b[8],b1=b[9],b2=b[10],b3=b[11],out[8]=b0*a00+b1*a10+b2*a20+b3*a30,out[9]=b0*a01+b1*a11+b2*a21+b3*a31,out[10]=b0*a02+b1*a12+b2*a22+b3*a32,out[11]=b0*a03+b1*a13+b2*a23+b3*a33,b0=b[12],b1=b[13],b2=b[14],b3=b[15],out[12]=b0*a00+b1*a10+b2*a20+b3*a30,out[13]=b0*a01+b1*a11+b2*a21+b3*a31,out[14]=b0*a02+b1*a12+b2*a22+b3*a32,out[15]=b0*a03+b1*a13+b2*a23+b3*a33,out}function translate(out,a,v){var x=v[0],y=v[1],z=v[2],a00=void 0,a01=void 0,a02=void 0,a03=void 0,a10=void 0,a11=void 0,a12=void 0,a13=void 0,a20=void 0,a21=void 0,a22=void 0,a23=void 0;return a===out?(out[12]=a[0]*x+a[4]*y+a[8]*z+a[12],out[13]=a[1]*x+a[5]*y+a[9]*z+a[13],out[14]=a[2]*x+a[6]*y+a[10]*z+a[14],out[15]=a[3]*x+a[7]*y+a[11]*z+a[15]):(a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],out[0]=a00,out[1]=a01,out[2]=a02,out[3]=a03,out[4]=a10,out[5]=a11,out[6]=a12,out[7]=a13,out[8]=a20,out[9]=a21,out[10]=a22,out[11]=a23,out[12]=a00*x+a10*y+a20*z+a[12],out[13]=a01*x+a11*y+a21*z+a[13],out[14]=a02*x+a12*y+a22*z+a[14],out[15]=a03*x+a13*y+a23*z+a[15]),out}function scale(out,a,v){var x=v[0],y=v[1],z=v[2];return out[0]=a[0]*x,out[1]=a[1]*x,out[2]=a[2]*x,out[3]=a[3]*x,out[4]=a[4]*y,out[5]=a[5]*y,out[6]=a[6]*y,out[7]=a[7]*y,out[8]=a[8]*z,out[9]=a[9]*z,out[10]=a[10]*z,out[11]=a[11]*z,out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15],out}function rotate(out,a,rad,axis){var x=axis[0],y=axis[1],z=axis[2],len=Math.sqrt(x*x+y*y+z*z),s=void 0,c=void 0,t=void 0,a00=void 0,a01=void 0,a02=void 0,a03=void 0,a10=void 0,a11=void 0,a12=void 0,a13=void 0,a20=void 0,a21=void 0,a22=void 0,a23=void 0,b00=void 0,b01=void 0,b02=void 0,b10=void 0,b11=void 0,b12=void 0,b20=void 0,b21=void 0,b22=void 0;return Math.abs(len)<glMatrix.EPSILON?null:(len=1/len,x*=len,y*=len,z*=len,s=Math.sin(rad),c=Math.cos(rad),t=1-c,a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],b00=x*x*t+c,b01=y*x*t+z*s,b02=z*x*t-y*s,b10=x*y*t-z*s,b11=y*y*t+c,b12=z*y*t+x*s,b20=x*z*t+y*s,b21=y*z*t-x*s,b22=z*z*t+c,out[0]=a00*b00+a10*b01+a20*b02,out[1]=a01*b00+a11*b01+a21*b02,out[2]=a02*b00+a12*b01+a22*b02,out[3]=a03*b00+a13*b01+a23*b02,out[4]=a00*b10+a10*b11+a20*b12,out[5]=a01*b10+a11*b11+a21*b12,out[6]=a02*b10+a12*b11+a22*b12,out[7]=a03*b10+a13*b11+a23*b12,out[8]=a00*b20+a10*b21+a20*b22,out[9]=a01*b20+a11*b21+a21*b22,out[10]=a02*b20+a12*b21+a22*b22,out[11]=a03*b20+a13*b21+a23*b22,a!==out&&(out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15]),out)}function rotateX(out,a,rad){var s=Math.sin(rad),c=Math.cos(rad),a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11];return a!==out&&(out[0]=a[0],out[1]=a[1],out[2]=a[2],out[3]=a[3],out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15]),out[4]=a10*c+a20*s,out[5]=a11*c+a21*s,out[6]=a12*c+a22*s,out[7]=a13*c+a23*s,out[8]=a20*c-a10*s,out[9]=a21*c-a11*s,out[10]=a22*c-a12*s,out[11]=a23*c-a13*s,out}function rotateY(out,a,rad){var s=Math.sin(rad),c=Math.cos(rad),a00=a[0],a01=a[1],a02=a[2],a03=a[3],a20=a[8],a21=a[9],a22=a[10],a23=a[11];return a!==out&&(out[4]=a[4],out[5]=a[5],out[6]=a[6],out[7]=a[7],out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15]),out[0]=a00*c-a20*s,out[1]=a01*c-a21*s,out[2]=a02*c-a22*s,out[3]=a03*c-a23*s,out[8]=a00*s+a20*c,out[9]=a01*s+a21*c,out[10]=a02*s+a22*c,out[11]=a03*s+a23*c,out}function rotateZ(out,a,rad){var s=Math.sin(rad),c=Math.cos(rad),a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7];return a!==out&&(out[8]=a[8],out[9]=a[9],out[10]=a[10],out[11]=a[11],out[12]=a[12],out[13]=a[13],out[14]=a[14],out[15]=a[15]),out[0]=a00*c+a10*s,out[1]=a01*c+a11*s,out[2]=a02*c+a12*s,out[3]=a03*c+a13*s,out[4]=a10*c-a00*s,out[5]=a11*c-a01*s,out[6]=a12*c-a02*s,out[7]=a13*c-a03*s,out}function fromTranslation(out,v){return out[0]=1,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=1,out[6]=0,out[7]=0,out[8]=0,out[9]=0,out[10]=1,out[11]=0,out[12]=v[0],out[13]=v[1],out[14]=v[2],out[15]=1,out}function fromScaling(out,v){return out[0]=v[0],out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=v[1],out[6]=0,out[7]=0,out[8]=0,out[9]=0,out[10]=v[2],out[11]=0,out[12]=0,out[13]=0,out[14]=0,out[15]=1,out}function fromRotation(out,rad,axis){var x=axis[0],y=axis[1],z=axis[2],len=Math.sqrt(x*x+y*y+z*z),s=void 0,c=void 0,t=void 0;return Math.abs(len)<glMatrix.EPSILON?null:(len=1/len,x*=len,y*=len,z*=len,s=Math.sin(rad),c=Math.cos(rad),t=1-c,out[0]=x*x*t+c,out[1]=y*x*t+z*s,out[2]=z*x*t-y*s,out[3]=0,out[4]=x*y*t-z*s,out[5]=y*y*t+c,out[6]=z*y*t+x*s,out[7]=0,out[8]=x*z*t+y*s,out[9]=y*z*t-x*s,out[10]=z*z*t+c,out[11]=0,out[12]=0,out[13]=0,out[14]=0,out[15]=1,out)}function fromXRotation(out,rad){var s=Math.sin(rad),c=Math.cos(rad);return out[0]=1,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=c,out[6]=s,out[7]=0,out[8]=0,out[9]=-s,out[10]=c,out[11]=0,out[12]=0,out[13]=0,out[14]=0,out[15]=1,out}function fromYRotation(out,rad){var s=Math.sin(rad),c=Math.cos(rad);return out[0]=c,out[1]=0,out[2]=-s,out[3]=0,out[4]=0,out[5]=1,out[6]=0,out[7]=0,out[8]=s,out[9]=0,out[10]=c,out[11]=0,out[12]=0,out[13]=0,out[14]=0,out[15]=1,out}function fromZRotation(out,rad){var s=Math.sin(rad),c=Math.cos(rad);return out[0]=c,out[1]=s,out[2]=0,out[3]=0,out[4]=-s,out[5]=c,out[6]=0,out[7]=0,out[8]=0,out[9]=0,out[10]=1,out[11]=0,out[12]=0,out[13]=0,out[14]=0,out[15]=1,out}function fromRotationTranslation(out,q,v){var x=q[0],y=q[1],z=q[2],w=q[3],x2=x+x,y2=y+y,z2=z+z,xx=x*x2,xy=x*y2,xz=x*z2,yy=y*y2,yz=y*z2,zz=z*z2,wx=w*x2,wy=w*y2,wz=w*z2;return out[0]=1-(yy+zz),out[1]=xy+wz,out[2]=xz-wy,out[3]=0,out[4]=xy-wz,out[5]=1-(xx+zz),out[6]=yz+wx,out[7]=0,out[8]=xz+wy,out[9]=yz-wx,out[10]=1-(xx+yy),out[11]=0,out[12]=v[0],out[13]=v[1],out[14]=v[2],out[15]=1,out}function getTranslation(out,mat){return out[0]=mat[12],out[1]=mat[13],out[2]=mat[14],out}function getScaling(out,mat){var m11=mat[0],m12=mat[1],m13=mat[2],m21=mat[4],m22=mat[5],m23=mat[6],m31=mat[8],m32=mat[9],m33=mat[10];return out[0]=Math.sqrt(m11*m11+m12*m12+m13*m13),out[1]=Math.sqrt(m21*m21+m22*m22+m23*m23),out[2]=Math.sqrt(m31*m31+m32*m32+m33*m33),out}function getRotation(out,mat){var trace=mat[0]+mat[5]+mat[10],S=0;return trace>0?(S=2*Math.sqrt(trace+1),out[3]=.25*S,out[0]=(mat[6]-mat[9])/S,out[1]=(mat[8]-mat[2])/S,out[2]=(mat[1]-mat[4])/S):mat[0]>mat[5]&mat[0]>mat[10]?(S=2*Math.sqrt(1+mat[0]-mat[5]-mat[10]),out[3]=(mat[6]-mat[9])/S,out[0]=.25*S,out[1]=(mat[1]+mat[4])/S,out[2]=(mat[8]+mat[2])/S):mat[5]>mat[10]?(S=2*Math.sqrt(1+mat[5]-mat[0]-mat[10]),out[3]=(mat[8]-mat[2])/S,out[0]=(mat[1]+mat[4])/S,out[1]=.25*S,out[2]=(mat[6]+mat[9])/S):(S=2*Math.sqrt(1+mat[10]-mat[0]-mat[5]),out[3]=(mat[1]-mat[4])/S,out[0]=(mat[8]+mat[2])/S,out[1]=(mat[6]+mat[9])/S,out[2]=.25*S),out}function fromRotationTranslationScale(out,q,v,s){var x=q[0],y=q[1],z=q[2],w=q[3],x2=x+x,y2=y+y,z2=z+z,xx=x*x2,xy=x*y2,xz=x*z2,yy=y*y2,yz=y*z2,zz=z*z2,wx=w*x2,wy=w*y2,wz=w*z2,sx=s[0],sy=s[1],sz=s[2];return out[0]=(1-(yy+zz))*sx,out[1]=(xy+wz)*sx,out[2]=(xz-wy)*sx,out[3]=0,out[4]=(xy-wz)*sy,out[5]=(1-(xx+zz))*sy,out[6]=(yz+wx)*sy,out[7]=0,out[8]=(xz+wy)*sz,out[9]=(yz-wx)*sz,out[10]=(1-(xx+yy))*sz,out[11]=0,out[12]=v[0],out[13]=v[1],out[14]=v[2],out[15]=1,out}function fromRotationTranslationScaleOrigin(out,q,v,s,o){var x=q[0],y=q[1],z=q[2],w=q[3],x2=x+x,y2=y+y,z2=z+z,xx=x*x2,xy=x*y2,xz=x*z2,yy=y*y2,yz=y*z2,zz=z*z2,wx=w*x2,wy=w*y2,wz=w*z2,sx=s[0],sy=s[1],sz=s[2],ox=o[0],oy=o[1],oz=o[2];return out[0]=(1-(yy+zz))*sx,out[1]=(xy+wz)*sx,out[2]=(xz-wy)*sx,out[3]=0,out[4]=(xy-wz)*sy,out[5]=(1-(xx+zz))*sy,out[6]=(yz+wx)*sy,out[7]=0,out[8]=(xz+wy)*sz,out[9]=(yz-wx)*sz,out[10]=(1-(xx+yy))*sz,out[11]=0,out[12]=v[0]+ox-(out[0]*ox+out[4]*oy+out[8]*oz),out[13]=v[1]+oy-(out[1]*ox+out[5]*oy+out[9]*oz),out[14]=v[2]+oz-(out[2]*ox+out[6]*oy+out[10]*oz),out[15]=1,out}function fromQuat(out,q){var x=q[0],y=q[1],z=q[2],w=q[3],x2=x+x,y2=y+y,z2=z+z,xx=x*x2,yx=y*x2,yy=y*y2,zx=z*x2,zy=z*y2,zz=z*z2,wx=w*x2,wy=w*y2,wz=w*z2;return out[0]=1-yy-zz,out[1]=yx+wz,out[2]=zx-wy,out[3]=0,out[4]=yx-wz,out[5]=1-xx-zz,out[6]=zy+wx,out[7]=0,out[8]=zx+wy,out[9]=zy-wx,out[10]=1-xx-yy,out[11]=0,out[12]=0,out[13]=0,out[14]=0,out[15]=1,out}function frustum(out,left,right,bottom,top,near,far){var rl=1/(right-left),tb=1/(top-bottom),nf=1/(near-far);return out[0]=2*near*rl,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=2*near*tb,out[6]=0,out[7]=0,out[8]=(right+left)*rl,out[9]=(top+bottom)*tb,out[10]=(far+near)*nf,out[11]=-1,out[12]=0,out[13]=0,out[14]=far*near*2*nf,out[15]=0,out}function perspective(out,fovy,aspect,near,far){var f=1/Math.tan(fovy/2),nf=1/(near-far);return out[0]=f/aspect,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=f,out[6]=0,out[7]=0,out[8]=0,out[9]=0,out[10]=(far+near)*nf,out[11]=-1,out[12]=0,out[13]=0,out[14]=2*far*near*nf,out[15]=0,out}function perspectiveFromFieldOfView(out,fov,near,far){var upTan=Math.tan(fov.upDegrees*Math.PI/180),downTan=Math.tan(fov.downDegrees*Math.PI/180),leftTan=Math.tan(fov.leftDegrees*Math.PI/180),rightTan=Math.tan(fov.rightDegrees*Math.PI/180),xScale=2/(leftTan+rightTan),yScale=2/(upTan+downTan);return out[0]=xScale,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=yScale,out[6]=0,out[7]=0,out[8]=-(leftTan-rightTan)*xScale*.5,out[9]=(upTan-downTan)*yScale*.5,out[10]=far/(near-far),out[11]=-1,out[12]=0,out[13]=0,out[14]=far*near/(near-far),out[15]=0,out}function ortho(out,left,right,bottom,top,near,far){var lr=1/(left-right),bt=1/(bottom-top),nf=1/(near-far);return out[0]=-2*lr,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=-2*bt,out[6]=0,out[7]=0,out[8]=0,out[9]=0,out[10]=2*nf,out[11]=0,out[12]=(left+right)*lr,out[13]=(top+bottom)*bt,out[14]=(far+near)*nf,out[15]=1,out}function lookAt(out,eye,center,up){var x0=void 0,x1=void 0,x2=void 0,y0=void 0,y1=void 0,y2=void 0,z0=void 0,z1=void 0,z2=void 0,len=void 0,eyex=eye[0],eyey=eye[1],eyez=eye[2],upx=up[0],upy=up[1],upz=up[2],centerx=center[0],centery=center[1],centerz=center[2];return Math.abs(eyex-centerx)<glMatrix.EPSILON&&Math.abs(eyey-centery)<glMatrix.EPSILON&&Math.abs(eyez-centerz)<glMatrix.EPSILON?mat4.identity(out):(z0=eyex-centerx,z1=eyey-centery,z2=eyez-centerz,len=1/Math.sqrt(z0*z0+z1*z1+z2*z2),z0*=len,z1*=len,z2*=len,x0=upy*z2-upz*z1,x1=upz*z0-upx*z2,x2=upx*z1-upy*z0,len=Math.sqrt(x0*x0+x1*x1+x2*x2),len?(len=1/len,x0*=len,x1*=len,x2*=len):(x0=0,x1=0,x2=0),y0=z1*x2-z2*x1,y1=z2*x0-z0*x2,y2=z0*x1-z1*x0,len=Math.sqrt(y0*y0+y1*y1+y2*y2),len?(len=1/len,y0*=len,y1*=len,y2*=len):(y0=0,y1=0,y2=0),out[0]=x0,out[1]=y0,out[2]=z0,out[3]=0,out[4]=x1,out[5]=y1,out[6]=z1,out[7]=0,out[8]=x2,out[9]=y2,out[10]=z2,out[11]=0,out[12]=-(x0*eyex+x1*eyey+x2*eyez),out[13]=-(y0*eyex+y1*eyey+y2*eyez),out[14]=-(z0*eyex+z1*eyey+z2*eyez),out[15]=1,out)}function targetTo(out,eye,target,up){var eyex=eye[0],eyey=eye[1],eyez=eye[2],upx=up[0],upy=up[1],upz=up[2],z0=eyex-target[0],z1=eyey-target[1],z2=eyez-target[2],len=z0*z0+z1*z1+z2*z2;len>0&&(len=1/Math.sqrt(len),z0*=len,z1*=len,z2*=len);var x0=upy*z2-upz*z1,x1=upz*z0-upx*z2,x2=upx*z1-upy*z0;return out[0]=x0,out[1]=x1,out[2]=x2,out[3]=0,out[4]=z1*x2-z2*x1,out[5]=z2*x0-z0*x2,out[6]=z0*x1-z1*x0,out[7]=0,out[8]=z0,out[9]=z1,out[10]=z2,out[11]=0,out[12]=eyex,out[13]=eyey,out[14]=eyez,out[15]=1,out}function str(a){return"mat4("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+", "+a[9]+", "+a[10]+", "+a[11]+", "+a[12]+", "+a[13]+", "+a[14]+", "+a[15]+")"}function frob(a){return Math.sqrt(Math.pow(a[0],2)+Math.pow(a[1],2)+Math.pow(a[2],2)+Math.pow(a[3],2)+Math.pow(a[4],2)+Math.pow(a[5],2)+Math.pow(a[6],2)+Math.pow(a[7],2)+Math.pow(a[8],2)+Math.pow(a[9],2)+Math.pow(a[10],2)+Math.pow(a[11],2)+Math.pow(a[12],2)+Math.pow(a[13],2)+Math.pow(a[14],2)+Math.pow(a[15],2))}function add(out,a,b){return out[0]=a[0]+b[0],out[1]=a[1]+b[1],out[2]=a[2]+b[2],out[3]=a[3]+b[3],out[4]=a[4]+b[4],out[5]=a[5]+b[5],out[6]=a[6]+b[6],out[7]=a[7]+b[7],out[8]=a[8]+b[8],out[9]=a[9]+b[9],out[10]=a[10]+b[10],out[11]=a[11]+b[11],out[12]=a[12]+b[12],out[13]=a[13]+b[13],out[14]=a[14]+b[14],out[15]=a[15]+b[15],out}function subtract(out,a,b){return out[0]=a[0]-b[0],out[1]=a[1]-b[1],out[2]=a[2]-b[2],out[3]=a[3]-b[3],out[4]=a[4]-b[4],out[5]=a[5]-b[5],out[6]=a[6]-b[6],out[7]=a[7]-b[7],out[8]=a[8]-b[8],out[9]=a[9]-b[9],out[10]=a[10]-b[10],out[11]=a[11]-b[11],out[12]=a[12]-b[12],out[13]=a[13]-b[13],out[14]=a[14]-b[14],out[15]=a[15]-b[15],out}function multiplyScalar(out,a,b){return out[0]=a[0]*b,out[1]=a[1]*b,out[2]=a[2]*b,out[3]=a[3]*b,out[4]=a[4]*b,out[5]=a[5]*b,out[6]=a[6]*b,out[7]=a[7]*b,out[8]=a[8]*b,out[9]=a[9]*b,out[10]=a[10]*b,out[11]=a[11]*b,out[12]=a[12]*b,out[13]=a[13]*b,out[14]=a[14]*b,out[15]=a[15]*b,out}function multiplyScalarAndAdd(out,a,b,scale){return out[0]=a[0]+b[0]*scale,out[1]=a[1]+b[1]*scale,out[2]=a[2]+b[2]*scale,out[3]=a[3]+b[3]*scale,out[4]=a[4]+b[4]*scale,out[5]=a[5]+b[5]*scale,out[6]=a[6]+b[6]*scale,out[7]=a[7]+b[7]*scale,out[8]=a[8]+b[8]*scale,out[9]=a[9]+b[9]*scale,out[10]=a[10]+b[10]*scale,out[11]=a[11]+b[11]*scale,out[12]=a[12]+b[12]*scale,out[13]=a[13]+b[13]*scale,out[14]=a[14]+b[14]*scale,out[15]=a[15]+b[15]*scale,out}function exactEquals(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]&&a[4]===b[4]&&a[5]===b[5]&&a[6]===b[6]&&a[7]===b[7]&&a[8]===b[8]&&a[9]===b[9]&&a[10]===b[10]&&a[11]===b[11]&&a[12]===b[12]&&a[13]===b[13]&&a[14]===b[14]&&a[15]===b[15]}function equals(a,b){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],a4=a[4],a5=a[5],a6=a[6],a7=a[7],a8=a[8],a9=a[9],a10=a[10],a11=a[11],a12=a[12],a13=a[13],a14=a[14],a15=a[15],b0=b[0],b1=b[1],b2=b[2],b3=b[3],b4=b[4],b5=b[5],b6=b[6],b7=b[7],b8=b[8],b9=b[9],b10=b[10],b11=b[11],b12=b[12],b13=b[13],b14=b[14],b15=b[15];return Math.abs(a0-b0)<=glMatrix.EPSILON*Math.max(1,Math.abs(a0),Math.abs(b0))&&Math.abs(a1-b1)<=glMatrix.EPSILON*Math.max(1,Math.abs(a1),Math.abs(b1))&&Math.abs(a2-b2)<=glMatrix.EPSILON*Math.max(1,Math.abs(a2),Math.abs(b2))&&Math.abs(a3-b3)<=glMatrix.EPSILON*Math.max(1,Math.abs(a3),Math.abs(b3))&&Math.abs(a4-b4)<=glMatrix.EPSILON*Math.max(1,Math.abs(a4),Math.abs(b4))&&Math.abs(a5-b5)<=glMatrix.EPSILON*Math.max(1,Math.abs(a5),Math.abs(b5))&&Math.abs(a6-b6)<=glMatrix.EPSILON*Math.max(1,Math.abs(a6),Math.abs(b6))&&Math.abs(a7-b7)<=glMatrix.EPSILON*Math.max(1,Math.abs(a7),Math.abs(b7))&&Math.abs(a8-b8)<=glMatrix.EPSILON*Math.max(1,Math.abs(a8),Math.abs(b8))&&Math.abs(a9-b9)<=glMatrix.EPSILON*Math.max(1,Math.abs(a9),Math.abs(b9))&&Math.abs(a10-b10)<=glMatrix.EPSILON*Math.max(1,Math.abs(a10),Math.abs(b10))&&Math.abs(a11-b11)<=glMatrix.EPSILON*Math.max(1,Math.abs(a11),Math.abs(b11))&&Math.abs(a12-b12)<=glMatrix.EPSILON*Math.max(1,Math.abs(a12),Math.abs(b12))&&Math.abs(a13-b13)<=glMatrix.EPSILON*Math.max(1,Math.abs(a13),Math.abs(b13))&&Math.abs(a14-b14)<=glMatrix.EPSILON*Math.max(1,Math.abs(a14),Math.abs(b14))&&Math.abs(a15-b15)<=glMatrix.EPSILON*Math.max(1,Math.abs(a15),Math.abs(b15))}Object.defineProperty(exports,"__esModule",{value:!0}),exports.sub=exports.mul=void 0,exports.create=create,exports.clone=clone,exports.copy=copy,exports.fromValues=fromValues,exports.set=set,exports.identity=identity,exports.transpose=transpose,exports.invert=invert,exports.adjoint=adjoint,exports.determinant=determinant,exports.multiply=multiply,exports.translate=translate,exports.scale=scale,exports.rotate=rotate,exports.rotateX=rotateX,exports.rotateY=rotateY,exports.rotateZ=rotateZ,exports.fromTranslation=fromTranslation,exports.fromScaling=fromScaling,exports.fromRotation=fromRotation,exports.fromXRotation=fromXRotation,exports.fromYRotation=fromYRotation,exports.fromZRotation=fromZRotation,exports.fromRotationTranslation=fromRotationTranslation,exports.getTranslation=getTranslation,exports.getScaling=getScaling,exports.getRotation=getRotation,exports.fromRotationTranslationScale=fromRotationTranslationScale,exports.fromRotationTranslationScaleOrigin=fromRotationTranslationScaleOrigin,exports.fromQuat=fromQuat,exports.frustum=frustum,exports.perspective=perspective,exports.perspectiveFromFieldOfView=perspectiveFromFieldOfView,exports.ortho=ortho,exports.lookAt=lookAt,exports.targetTo=targetTo,exports.str=str,exports.frob=frob,exports.add=add,exports.subtract=subtract,exports.multiplyScalar=multiplyScalar,exports.multiplyScalarAndAdd=multiplyScalarAndAdd,exports.exactEquals=exactEquals,exports.equals=equals;var _common=__webpack_require__(3),glMatrix=function(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}(_common);exports.mul=multiply,exports.sub=subtract},function(module,exports,__webpack_require__){"use strict";function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}function create(){var out=new glMatrix.ARRAY_TYPE(4);return out[0]=0,out[1]=0,out[2]=0,out[3]=1,out}function identity(out){return out[0]=0,out[1]=0,out[2]=0,out[3]=1,out}function setAxisAngle(out,axis,rad){rad*=.5;var s=Math.sin(rad);return out[0]=s*axis[0],out[1]=s*axis[1],out[2]=s*axis[2],out[3]=Math.cos(rad),out}function getAxisAngle(out_axis,q){var rad=2*Math.acos(q[3]),s=Math.sin(rad/2);return 0!=s?(out_axis[0]=q[0]/s,out_axis[1]=q[1]/s,out_axis[2]=q[2]/s):(out_axis[0]=1,out_axis[1]=0,out_axis[2]=0),rad}function multiply(out,a,b){var ax=a[0],ay=a[1],az=a[2],aw=a[3],bx=b[0],by=b[1],bz=b[2],bw=b[3];return out[0]=ax*bw+aw*bx+ay*bz-az*by,out[1]=ay*bw+aw*by+az*bx-ax*bz,out[2]=az*bw+aw*bz+ax*by-ay*bx,out[3]=aw*bw-ax*bx-ay*by-az*bz,out}function rotateX(out,a,rad){rad*=.5;var ax=a[0],ay=a[1],az=a[2],aw=a[3],bx=Math.sin(rad),bw=Math.cos(rad);return out[0]=ax*bw+aw*bx,out[1]=ay*bw+az*bx,out[2]=az*bw-ay*bx,out[3]=aw*bw-ax*bx,out}function rotateY(out,a,rad){rad*=.5;var ax=a[0],ay=a[1],az=a[2],aw=a[3],by=Math.sin(rad),bw=Math.cos(rad);return out[0]=ax*bw-az*by,out[1]=ay*bw+aw*by,out[2]=az*bw+ax*by,out[3]=aw*bw-ay*by,out}function rotateZ(out,a,rad){rad*=.5;var ax=a[0],ay=a[1],az=a[2],aw=a[3],bz=Math.sin(rad),bw=Math.cos(rad);return out[0]=ax*bw+ay*bz,out[1]=ay*bw-ax*bz,out[2]=az*bw+aw*bz,out[3]=aw*bw-az*bz,out}function calculateW(out,a){var x=a[0],y=a[1],z=a[2];return out[0]=x,out[1]=y,out[2]=z,out[3]=Math.sqrt(Math.abs(1-x*x-y*y-z*z)),out}function slerp(out,a,b,t){var ax=a[0],ay=a[1],az=a[2],aw=a[3],bx=b[0],by=b[1],bz=b[2],bw=b[3],omega=void 0,cosom=void 0,sinom=void 0,scale0=void 0,scale1=void 0;return cosom=ax*bx+ay*by+az*bz+aw*bw,cosom<0&&(cosom=-cosom,bx=-bx,by=-by,bz=-bz,bw=-bw),1-cosom>1e-6?(omega=Math.acos(cosom),sinom=Math.sin(omega),scale0=Math.sin((1-t)*omega)/sinom,scale1=Math.sin(t*omega)/sinom):(scale0=1-t,scale1=t),out[0]=scale0*ax+scale1*bx,out[1]=scale0*ay+scale1*by,out[2]=scale0*az+scale1*bz,out[3]=scale0*aw+scale1*bw,out}function invert(out,a){var a0=a[0],a1=a[1],a2=a[2],a3=a[3],dot=a0*a0+a1*a1+a2*a2+a3*a3,invDot=dot?1/dot:0;return out[0]=-a0*invDot,out[1]=-a1*invDot,out[2]=-a2*invDot,out[3]=a3*invDot,out}function conjugate(out,a){return out[0]=-a[0],out[1]=-a[1],out[2]=-a[2],out[3]=a[3],out}function fromMat3(out,m){var fTrace=m[0]+m[4]+m[8],fRoot=void 0;if(fTrace>0)fRoot=Math.sqrt(fTrace+1),out[3]=.5*fRoot,fRoot=.5/fRoot,out[0]=(m[5]-m[7])*fRoot,out[1]=(m[6]-m[2])*fRoot,out[2]=(m[1]-m[3])*fRoot;else{var i=0;m[4]>m[0]&&(i=1),m[8]>m[3*i+i]&&(i=2);var j=(i+1)%3,k=(i+2)%3;fRoot=Math.sqrt(m[3*i+i]-m[3*j+j]-m[3*k+k]+1),out[i]=.5*fRoot,fRoot=.5/fRoot,out[3]=(m[3*j+k]-m[3*k+j])*fRoot,out[j]=(m[3*j+i]+m[3*i+j])*fRoot,out[k]=(m[3*k+i]+m[3*i+k])*fRoot}return out}function fromEuler(out,x,y,z){var halfToRad=.5*Math.PI/180;x*=halfToRad,y*=halfToRad,z*=halfToRad;var sx=Math.sin(x),cx=Math.cos(x),sy=Math.sin(y),cy=Math.cos(y),sz=Math.sin(z),cz=Math.cos(z);return out[0]=sx*cy*cz-cx*sy*sz,out[1]=cx*sy*cz+sx*cy*sz,out[2]=cx*cy*sz-sx*sy*cz,out[3]=cx*cy*cz+sx*sy*sz,out}function str(a){return"quat("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"}Object.defineProperty(exports,"__esModule",{value:!0}),exports.setAxes=exports.sqlerp=exports.rotationTo=exports.equals=exports.exactEquals=exports.normalize=exports.sqrLen=exports.squaredLength=exports.len=exports.length=exports.lerp=exports.dot=exports.scale=exports.mul=exports.add=exports.set=exports.copy=exports.fromValues=exports.clone=void 0,exports.create=create,exports.identity=identity,exports.setAxisAngle=setAxisAngle,exports.getAxisAngle=getAxisAngle,exports.multiply=multiply,exports.rotateX=rotateX,exports.rotateY=rotateY,exports.rotateZ=rotateZ,exports.calculateW=calculateW,exports.slerp=slerp,exports.invert=invert,exports.conjugate=conjugate,exports.fromMat3=fromMat3,exports.fromEuler=fromEuler,exports.str=str;var _common=__webpack_require__(3),glMatrix=_interopRequireWildcard(_common),_mat=__webpack_require__(20),mat3=_interopRequireWildcard(_mat),_vec=__webpack_require__(21),vec3=_interopRequireWildcard(_vec),_vec2=__webpack_require__(22),vec4=_interopRequireWildcard(_vec2),length=(exports.clone=vec4.clone,exports.fromValues=vec4.fromValues,exports.copy=vec4.copy,exports.set=vec4.set,exports.add=vec4.add,exports.mul=multiply,exports.scale=vec4.scale,exports.dot=vec4.dot,exports.lerp=vec4.lerp,exports.length=vec4.length),squaredLength=(exports.len=length,exports.squaredLength=vec4.squaredLength),normalize=(exports.sqrLen=squaredLength,exports.normalize=vec4.normalize);exports.exactEquals=vec4.exactEquals,exports.equals=vec4.equals,exports.rotationTo=function(){var tmpvec3=vec3.create(),xUnitVec3=vec3.fromValues(1,0,0),yUnitVec3=vec3.fromValues(0,1,0);return function(out,a,b){var dot=vec3.dot(a,b);return dot<-.999999?(vec3.cross(tmpvec3,xUnitVec3,a),vec3.len(tmpvec3)<1e-6&&vec3.cross(tmpvec3,yUnitVec3,a),vec3.normalize(tmpvec3,tmpvec3),setAxisAngle(out,tmpvec3,Math.PI),out):dot>.999999?(out[0]=0,out[1]=0,out[2]=0,out[3]=1,out):(vec3.cross(tmpvec3,a,b),out[0]=tmpvec3[0],out[1]=tmpvec3[1],out[2]=tmpvec3[2],out[3]=1+dot,normalize(out,out))}}(),exports.sqlerp=function(){var temp1=create(),temp2=create();return function(out,a,b,c,d,t){return slerp(temp1,a,d,t),slerp(temp2,b,c,t),slerp(out,temp1,temp2,2*t*(1-t)),out}}(),exports.setAxes=function(){var matr=mat3.create();return function(out,view,right,up){return matr[0]=right[0],matr[3]=right[1],matr[6]=right[2],matr[1]=up[0],matr[4]=up[1],matr[7]=up[2],matr[2]=-view[0],matr[5]=-view[1],matr[8]=-view[2],normalize(out,fromMat3(out,matr))}}()},function(module,exports,__webpack_require__){"use strict";function create(){var out=new glMatrix.ARRAY_TYPE(2);return out[0]=0,out[1]=0,out}function clone(a){var out=new glMatrix.ARRAY_TYPE(2);return out[0]=a[0],out[1]=a[1],out}function fromValues(x,y){var out=new glMatrix.ARRAY_TYPE(2);return out[0]=x,out[1]=y,out}function copy(out,a){return out[0]=a[0],out[1]=a[1],out}function set(out,x,y){return out[0]=x,out[1]=y,out}function add(out,a,b){return out[0]=a[0]+b[0],out[1]=a[1]+b[1],out}function subtract(out,a,b){return out[0]=a[0]-b[0],out[1]=a[1]-b[1],out}function multiply(out,a,b){return out[0]=a[0]*b[0],out[1]=a[1]*b[1],out}function divide(out,a,b){return out[0]=a[0]/b[0],out[1]=a[1]/b[1],out}function ceil(out,a){return out[0]=Math.ceil(a[0]),out[1]=Math.ceil(a[1]),out}function floor(out,a){return out[0]=Math.floor(a[0]),out[1]=Math.floor(a[1]),out}function min(out,a,b){return out[0]=Math.min(a[0],b[0]),out[1]=Math.min(a[1],b[1]),out}function max(out,a,b){return out[0]=Math.max(a[0],b[0]),out[1]=Math.max(a[1],b[1]),out}function round(out,a){return out[0]=Math.round(a[0]),out[1]=Math.round(a[1]),out}function scale(out,a,b){return out[0]=a[0]*b,out[1]=a[1]*b,out}function scaleAndAdd(out,a,b,scale){return out[0]=a[0]+b[0]*scale,out[1]=a[1]+b[1]*scale,out}function distance(a,b){var x=b[0]-a[0],y=b[1]-a[1];return Math.sqrt(x*x+y*y)}function squaredDistance(a,b){var x=b[0]-a[0],y=b[1]-a[1];return x*x+y*y}function length(a){var x=a[0],y=a[1];return Math.sqrt(x*x+y*y)}function squaredLength(a){var x=a[0],y=a[1];return x*x+y*y}function negate(out,a){return out[0]=-a[0],out[1]=-a[1],out}function inverse(out,a){return out[0]=1/a[0],out[1]=1/a[1],out}function normalize(out,a){var x=a[0],y=a[1],len=x*x+y*y;return len>0&&(len=1/Math.sqrt(len),out[0]=a[0]*len,out[1]=a[1]*len),out}function dot(a,b){return a[0]*b[0]+a[1]*b[1]}function cross(out,a,b){var z=a[0]*b[1]-a[1]*b[0];return out[0]=out[1]=0,out[2]=z,out}function lerp(out,a,b,t){var ax=a[0],ay=a[1];return out[0]=ax+t*(b[0]-ax),out[1]=ay+t*(b[1]-ay),out}function random(out,scale){scale=scale||1;var r=2*glMatrix.RANDOM()*Math.PI;return out[0]=Math.cos(r)*scale,out[1]=Math.sin(r)*scale,out}function transformMat2(out,a,m){var x=a[0],y=a[1];return out[0]=m[0]*x+m[2]*y,out[1]=m[1]*x+m[3]*y,out}function transformMat2d(out,a,m){var x=a[0],y=a[1];return out[0]=m[0]*x+m[2]*y+m[4],out[1]=m[1]*x+m[3]*y+m[5],out}function transformMat3(out,a,m){var x=a[0],y=a[1];return out[0]=m[0]*x+m[3]*y+m[6],out[1]=m[1]*x+m[4]*y+m[7],out}function transformMat4(out,a,m){var x=a[0],y=a[1];return out[0]=m[0]*x+m[4]*y+m[12],out[1]=m[1]*x+m[5]*y+m[13],out}function str(a){return"vec2("+a[0]+", "+a[1]+")"}function exactEquals(a,b){return a[0]===b[0]&&a[1]===b[1]}function equals(a,b){var a0=a[0],a1=a[1],b0=b[0],b1=b[1];return Math.abs(a0-b0)<=glMatrix.EPSILON*Math.max(1,Math.abs(a0),Math.abs(b0))&&Math.abs(a1-b1)<=glMatrix.EPSILON*Math.max(1,Math.abs(a1),Math.abs(b1))}Object.defineProperty(exports,"__esModule",{value:!0}),exports.forEach=exports.sqrLen=exports.sqrDist=exports.dist=exports.div=exports.mul=exports.sub=exports.len=void 0,exports.create=create,exports.clone=clone,exports.fromValues=fromValues,exports.copy=copy,exports.set=set,exports.add=add,exports.subtract=subtract,exports.multiply=multiply,exports.divide=divide,exports.ceil=ceil,exports.floor=floor,exports.min=min,exports.max=max,exports.round=round,exports.scale=scale,exports.scaleAndAdd=scaleAndAdd,exports.distance=distance,exports.squaredDistance=squaredDistance,exports.length=length,exports.squaredLength=squaredLength,exports.negate=negate,exports.inverse=inverse,exports.normalize=normalize,exports.dot=dot,exports.cross=cross,exports.lerp=lerp,exports.random=random,exports.transformMat2=transformMat2,exports.transformMat2d=transformMat2d,exports.transformMat3=transformMat3,exports.transformMat4=transformMat4,exports.str=str,exports.exactEquals=exactEquals,exports.equals=equals;var _common=__webpack_require__(3),glMatrix=function(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}(_common);exports.len=length,exports.sub=subtract,exports.mul=multiply,exports.div=divide,exports.dist=distance,exports.sqrDist=squaredDistance,exports.sqrLen=squaredLength,exports.forEach=function(){var vec=create();return function(a,stride,offset,count,fn,arg){var i=void 0,l=void 0;for(stride||(stride=2),offset||(offset=0),l=count?Math.min(count*stride+offset,a.length):a.length,i=offset;i<l;i+=stride)vec[0]=a[i],vec[1]=a[i+1],fn(vec,vec,arg),a[i]=vec[0],a[i+1]=vec[1];return a}}()},function(module,exports,__webpack_require__){"use strict";function getAndApplyExtension(gl,name){var ext=gl.getExtension(name);if(!ext)return!1;var suffix=name.split("_")[0],suffixRE=new RegExp(suffix+"$");for(var key in ext){if("function"==typeof ext[key]){var unsuffixedKey=key.replace(suffixRE,"");key.substring&&(gl[unsuffixedKey]=ext[key].bind(ext))}}return!0}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=getAndApplyExtension},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,"__esModule",{value:!0});var _GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_WebglConst=__webpack_require__(23),_WebglConst2=_interopRequireDefault(_WebglConst),exposeAttributes=function(){for(var s in _WebglConst2.default)_GLTool2.default[s]?console.log("already exist : ",s):_GLTool2.default[s]=_WebglConst2.default[s]};exports.default=exposeAttributes},function(module,exports,__webpack_require__){"use strict";function checkFloat(){return _GLTool2.default.webgl2?_GLTool2.default.gl.FLOAT:_GLTool2.default.getExtension("OES_texture_float")?_GLTool2.default.gl.FLOAT:(console.warn("USING FLOAT BUT OES_texture_float NOT SUPPORTED"),_GLTool2.default.gl.UNSIGNED_BYTE)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(){return hasChecked||(_float=checkFloat()),_float};var _GLTool=__webpack_require__(0),_GLTool2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_GLTool),hasChecked=!1,_float=void 0},function(module,exports,__webpack_require__){"use strict";function checkHalfFloat(){if(_GLTool2.default.webgl2)return _GLTool2.default.gl.HALF_FLOAT;var extHalfFloat=_GLTool2.default.getExtension("OES_texture_half_float");return extHalfFloat?extHalfFloat.HALF_FLOAT_OES:(console.warn("USING HALF FLOAT BUT OES_texture_half_float NOT SUPPORTED"),_GLTool2.default.gl.UNSIGNED_BYTE)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(){return hasChecked||(halfFloat=checkHalfFloat()),halfFloat};var _GLTool=__webpack_require__(0),_GLTool2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_GLTool),hasChecked=!1,halfFloat=void 0},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=["EXT_shader_texture_lod","EXT_sRGB","EXT_frag_depth","OES_texture_float","OES_texture_half_float","OES_texture_float_linear","OES_texture_half_float_linear","OES_standard_derivatives","WEBGL_depth_texture","EXT_texture_filter_anisotropic","OES_vertex_array_object","ANGLE_instanced_arrays","WEBGL_draw_buffers"]},function(module,exports,__webpack_require__){"use strict";module.exports=function(strings){"string"==typeof strings&&(strings=[strings]);for(var exprs=[].slice.call(arguments,1),parts=[],i=0;i<strings.length-1;i++)parts.push(strings[i],exprs[i]||"");return parts.push(strings[i]),parts.join("")}},function(module,exports){module.exports="// basic.frag\n\n#define SHADER_NAME BASIC_FRAGMENT\n\nprecision lowp float;\n#define GLSLIFY 1\nvarying vec2 vTextureCoord;\nuniform float time;\n// uniform sampler2D texture;\n\nvoid main(void) {\n    gl_FragColor = vec4(vTextureCoord, sin(time) * .5 + .5, 1.0);\n}"},function(module,exports,__webpack_require__){"use strict";function isPowerOfTwo(x){return 0!==x&&!(x&x-1)}Object.defineProperty(exports,"__esModule",{value:!0});var _GLTool=__webpack_require__(0),_GLTool2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_GLTool),getTextureParameters=function(mParams,mSource,mWidth,mHeight){if(!mParams.minFilter){var minFilter=_GLTool2.default.LINEAR;mWidth&&mWidth&&isPowerOfTwo(mWidth)&&isPowerOfTwo(mHeight)&&(minFilter=_GLTool2.default.NEAREST_MIPMAP_LINEAR),mParams.minFilter=minFilter}return mParams.mipmap=mParams.mipmap||!0,mParams.magFilter=mParams.magFilter||_GLTool2.default.LINEAR,mParams.wrapS=mParams.wrapS||_GLTool2.default.CLAMP_TO_EDGE,mParams.wrapT=mParams.wrapT||_GLTool2.default.CLAMP_TO_EDGE,mParams.internalFormat=mParams.internalFormat||_GLTool2.default.RGBA,mParams.format=mParams.format||_GLTool2.default.RGBA,mParams.premultiplyAlpha=mParams.premultiplyAlpha||!1,mParams.level=mParams.level||0,mParams.anisotropy=mParams.anisotropy||0,mParams};exports.default=getTextureParameters},function(module,exports,__webpack_require__){"use strict";function parseHeaders(arrayBuffer){var header=new Int32Array(arrayBuffer,0,headerLengthInt);if(header[off_magic]!==DDS_MAGIC)throw new Error("Invalid magic number in DDS header");if(!header[off_pfFlags]&DDPF_FOURCC)throw new Error("Unsupported format, must contain a FourCC code");var blockBytes,format,fourCC=header[off_pfFourCC];switch(fourCC){case FOURCC_DXT1:blockBytes=8,format="dxt1";break;case FOURCC_DXT3:blockBytes=16,format="dxt3";break;case FOURCC_DXT5:blockBytes=16,format="dxt5";break;case FOURCC_FP32F:format="rgba32f";break;case FOURCC_DX10:var dx10Header=new Uint32Array(arrayBuffer.slice(128,148));format=dx10Header[0];var resourceDimension=dx10Header[1];dx10Header[2],dx10Header[3],dx10Header[4];if(resourceDimension!==D3D10_RESOURCE_DIMENSION_TEXTURE2D||format!==DXGI_FORMAT_R32G32B32A32_FLOAT)throw new Error("Unsupported DX10 texture format "+format);format="rgba32f";break;default:throw new Error("Unsupported FourCC code: "+int32ToFourCC(fourCC))}var flags=header[off_flags],mipmapCount=1;flags&DDSD_MIPMAPCOUNT&&(mipmapCount=Math.max(1,header[off_mipmapCount]));var cubemap=!1;header[off_caps2]&DDSCAPS2_CUBEMAP&&(cubemap=!0);var dataLength,width=header[off_width],height=header[off_height],dataOffset=header[off_size]+4,texWidth=width,texHeight=height,images=[];if(fourCC===FOURCC_DX10&&(dataOffset+=20),cubemap)for(var f=0;f<6;f++){if("rgba32f"!==format)throw new Error("Only RGBA32f cubemaps are supported");width=texWidth,height=texHeight;for(var requiredMipLevels=Math.log(width)/Math.log(2)+1,i=0;i<requiredMipLevels;i++)dataLength=width*height*16,images.push({offset:dataOffset,length:dataLength,shape:[width,height]}),i<mipmapCount&&(dataOffset+=dataLength),width=Math.floor(width/2),height=Math.floor(height/2)}else for(var i=0;i<mipmapCount;i++)dataLength=Math.max(4,width)/4*Math.max(4,height)/4*blockBytes,images.push({offset:dataOffset,length:dataLength,shape:[width,height]}),dataOffset+=dataLength,width=Math.floor(width/2),height=Math.floor(height/2);return{shape:[texWidth,texHeight],images:images,format:format,flags:flags,cubemap:cubemap}}function fourCCToInt32(value){return value.charCodeAt(0)+(value.charCodeAt(1)<<8)+(value.charCodeAt(2)<<16)+(value.charCodeAt(3)<<24)}function int32ToFourCC(value){return String.fromCharCode(255&value,value>>8&255,value>>16&255,value>>24&255)}var DDS_MAGIC=542327876,DDSD_MIPMAPCOUNT=131072,DDPF_FOURCC=4,FOURCC_DXT1=fourCCToInt32("DXT1"),FOURCC_DXT3=fourCCToInt32("DXT3"),FOURCC_DXT5=fourCCToInt32("DXT5"),FOURCC_DX10=fourCCToInt32("DX10"),FOURCC_FP32F=116,DDSCAPS2_CUBEMAP=512,D3D10_RESOURCE_DIMENSION_TEXTURE2D=3,DXGI_FORMAT_R32G32B32A32_FLOAT=2,headerLengthInt=31,off_magic=0,off_size=1,off_flags=2,off_height=3,off_width=4,off_mipmapCount=7,off_pfFlags=20,off_pfFourCC=21,off_caps2=28;module.exports=parseHeaders},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_GLCubeTexture=__webpack_require__(27),_GLCubeTexture2=_interopRequireDefault(_GLCubeTexture),gl=void 0,CubeFrameBuffer=function(){function CubeFrameBuffer(size){var mParameters=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};_classCallCheck(this,CubeFrameBuffer),gl=_GLTool2.default.gl,this._size=size,this.magFilter=mParameters.magFilter||gl.LINEAR,this.minFilter=mParameters.minFilter||gl.LINEAR,this.wrapS=mParameters.wrapS||gl.CLAMP_TO_EDGE,this.wrapT=mParameters.wrapT||gl.CLAMP_TO_EDGE,this._init()}return _createClass(CubeFrameBuffer,[{key:"_init",value:function(){this.texture=gl.createTexture(),this.glTexture=new _GLCubeTexture2.default(this.texture,{},!0),gl.bindTexture(gl.TEXTURE_CUBE_MAP,this.texture),gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_MAG_FILTER,this.magFilter),gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_MIN_FILTER,this.minFilter),gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_S,this.wrapS),gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_T,this.wrapT);for(var targets=[gl.TEXTURE_CUBE_MAP_POSITIVE_X,gl.TEXTURE_CUBE_MAP_NEGATIVE_X,gl.TEXTURE_CUBE_MAP_POSITIVE_Y,gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,gl.TEXTURE_CUBE_MAP_POSITIVE_Z,gl.TEXTURE_CUBE_MAP_NEGATIVE_Z],i=0;i<targets.length;i++)gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,!1),gl.texImage2D(targets[i],0,gl.RGBA,this.width,this.height,0,gl.RGBA,gl.FLOAT,null);this._frameBuffers=[];for(var _i=0;_i<targets.length;_i++){var frameBuffer=gl.createFramebuffer();gl.bindFramebuffer(gl.FRAMEBUFFER,frameBuffer),gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,targets[_i],this.texture,0);var status=gl.checkFramebufferStatus(gl.FRAMEBUFFER);status!==gl.FRAMEBUFFER_COMPLETE&&console.log("'gl.checkFramebufferStatus() returned '"+status),this._frameBuffers.push(frameBuffer)}gl.bindFramebuffer(gl.FRAMEBUFFER,null),gl.bindRenderbuffer(gl.RENDERBUFFER,null),gl.bindTexture(gl.TEXTURE_CUBE_MAP,null)}},{key:"bind",value:function(mTargetIndex){_GLTool2.default.viewport(0,0,this.width,this.height),gl.bindFramebuffer(gl.FRAMEBUFFER,this._frameBuffers[mTargetIndex])}},{key:"unbind",value:function(){gl.bindFramebuffer(gl.FRAMEBUFFER,null),_GLTool2.default.viewport(0,0,_GLTool2.default.width,_GLTool2.default.height)}},{key:"getTexture",value:function(){return this.glTexture}},{key:"width",get:function(){return this._size}},{key:"height",get:function(){return this._size}}]),CubeFrameBuffer}();exports.default=CubeFrameBuffer},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function isPowerOfTwo(x){return 0!==x&&!(x&x-1)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_GLTexture=__webpack_require__(25),_GLTexture2=_interopRequireDefault(_GLTexture),gl=void 0,MultisampleFrameBuffer=function(){function MultisampleFrameBuffer(mWidth,mHeight){var mParameters=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};_classCallCheck(this,MultisampleFrameBuffer),gl=_GLTool2.default.gl,this.width=mWidth,this.height=mHeight,this.magFilter=mParameters.magFilter||gl.LINEAR,this.minFilter=mParameters.minFilter||gl.LINEAR,this.wrapS=mParameters.wrapS||gl.CLAMP_TO_EDGE,this.wrapT=mParameters.wrapT||gl.CLAMP_TO_EDGE,this.useDepth=mParameters.useDepth||!0,this.useStencil=mParameters.useStencil||!1,this.texelType=mParameters.type,this._numSample=mParameters.numSample||8,isPowerOfTwo(this.width)&&isPowerOfTwo(this.height)||(this.wrapS=this.wrapT=gl.CLAMP_TO_EDGE,this.minFilter===gl.LINEAR_MIPMAP_NEAREST&&(this.minFilter=gl.LINEAR)),this._init()}return _createClass(MultisampleFrameBuffer,[{key:"_init",value:function(){var texelType=gl.UNSIGNED_BYTE;this.texelType&&(texelType=this.texelType),this.texelType=texelType,this.frameBuffer=gl.createFramebuffer(),this.frameBufferColor=gl.createFramebuffer(),this.renderBufferColor=gl.createRenderbuffer(),this.renderBufferDepth=gl.createRenderbuffer(),this.glTexture=this._createTexture(),this.glDepthTexture=this._createTexture(gl.DEPTH_COMPONENT16,gl.UNSIGNED_SHORT,gl.DEPTH_COMPONENT,!0),gl.bindRenderbuffer(gl.RENDERBUFFER,this.renderBufferColor),gl.renderbufferStorageMultisample(gl.RENDERBUFFER,this._numSample,gl.RGBA8,this.width,this.height),gl.bindRenderbuffer(gl.RENDERBUFFER,this.renderBufferDepth),gl.renderbufferStorageMultisample(gl.RENDERBUFFER,this._numSample,gl.DEPTH_COMPONENT16,this.width,this.height),gl.bindFramebuffer(gl.FRAMEBUFFER,this.frameBuffer),gl.framebufferRenderbuffer(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.RENDERBUFFER,this.renderBufferColor),gl.framebufferRenderbuffer(gl.FRAMEBUFFER,gl.DEPTH_ATTACHMENT,gl.RENDERBUFFER,this.renderBufferDepth),gl.bindFramebuffer(gl.FRAMEBUFFER,null),gl.bindFramebuffer(gl.FRAMEBUFFER,this.frameBufferColor),gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,this.glTexture.texture,0),gl.bindFramebuffer(gl.FRAMEBUFFER,null)}},{key:"_createTexture",value:function(mInternalformat,mTexelType,mFormat){var forceNearest=arguments.length>3&&void 0!==arguments[3]&&arguments[3];void 0===mInternalformat&&(mInternalformat=gl.RGBA),void 0===mTexelType&&(mTexelType=this.texelType),mFormat||(mFormat=mInternalformat);var t=gl.createTexture(),glt=new _GLTexture2.default(t,!0),magFilter=forceNearest?_GLTool2.default.NEAREST:this.magFilter,minFilter=forceNearest?_GLTool2.default.NEAREST:this.minFilter;return gl.bindTexture(gl.TEXTURE_2D,t),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,magFilter),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,minFilter),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,this.wrapS),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,this.wrapT),gl.texImage2D(gl.TEXTURE_2D,0,mInternalformat,this.width,this.height,0,mFormat,mTexelType,null),gl.bindTexture(gl.TEXTURE_2D,null),glt}},{key:"bind",value:function(){(!(arguments.length>0&&void 0!==arguments[0])||arguments[0])&&_GLTool2.default.viewport(0,0,this.width,this.height),gl.bindFramebuffer(gl.FRAMEBUFFER,this.frameBuffer)}},{key:"unbind",value:function(){(!(arguments.length>0&&void 0!==arguments[0])||arguments[0])&&_GLTool2.default.viewport(0,0,_GLTool2.default.width,_GLTool2.default.height);var width=this.width,height=this.height;gl.bindFramebuffer(gl.FRAMEBUFFER,null),gl.bindFramebuffer(gl.READ_FRAMEBUFFER,this.frameBuffer),gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER,this.frameBufferColor),gl.clearBufferfv(gl.COLOR,0,[0,0,0,0]),gl.blitFramebuffer(0,0,width,height,0,0,width,height,gl.COLOR_BUFFER_BIT,_GLTool2.default.NEAREST),gl.bindFramebuffer(gl.FRAMEBUFFER,null)}},{key:"getTexture",value:function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this.glTexture}},{key:"getDepthTexture",value:function(){return this.glDepthTexture}}]),MultisampleFrameBuffer}();exports.default=MultisampleFrameBuffer},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_GLShader=__webpack_require__(2),_GLShader2=_interopRequireDefault(_GLShader),_Mesh=__webpack_require__(5),_Mesh2=_interopRequireDefault(_Mesh),gl=void 0,TransformFeedbackObject=function(){function TransformFeedbackObject(strVertexShader,strFragmentShader){_classCallCheck(this,TransformFeedbackObject),gl=_GLTool2.default.gl,this._vs=strVertexShader,this._fs=strFragmentShader,this._init()}return _createClass(TransformFeedbackObject,[{key:"_init",value:function(){this._meshCurrent=new _Mesh2.default,this._meshTarget=new _Mesh2.default,this._numPoints=-1,this._varyings=[],this.transformFeedback=gl.createTransformFeedback()}},{key:"bufferData",value:function(mData,mName,mVaryingName){var isTransformFeedback=!!mVaryingName;console.log("is Transform feedback ?",mName,isTransformFeedback),this._meshCurrent.bufferData(mData,mName,null,gl.STREAM_COPY,!1),this._meshTarget.bufferData(mData,mName,null,gl.STREAM_COPY,!1),isTransformFeedback&&(this._varyings.push(mVaryingName),this._numPoints<0&&(this._numPoints=mData.length))}},{key:"bufferIndex",value:function(mArrayIndices){this._meshCurrent.bufferIndex(mArrayIndices),this._meshTarget.bufferIndex(mArrayIndices)}},{key:"uniform",value:function(mName,mType,mValue){this.shader&&this.shader.uniform(mName,mType,mValue)}},{key:"generate",value:function(){this.shader=new _GLShader2.default(this._vs,this._fs,this._varyings)}},{key:"render",value:function(){this.shader||this.generate(),this.shader.bind(),_GLTool2.default.drawTransformFeedback(this),this._swap()}},{key:"_swap",value:function(){var tmp=this._meshCurrent;this._meshCurrent=this._meshTarget,this._meshTarget=tmp}},{key:"numPoints",get:function(){return this._numPoints}},{key:"meshCurrent",get:function(){return this._meshCurrent}},{key:"meshTarget",get:function(){return this._meshTarget}},{key:"meshSource",get:function(){return this._meshCurrent}},{key:"meshDestination",get:function(){return this._meshTarget}}]),TransformFeedbackObject}();exports.default=TransformFeedbackObject},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function getFunc(mEasing){switch(mEasing){default:case"linear":return Easing.Linear.None;case"expIn":return Easing.Exponential.In;case"expOut":return Easing.Exponential.Out;case"expInOut":return Easing.Exponential.InOut;case"cubicIn":return Easing.Cubic.In;case"cubicOut":return Easing.Cubic.Out;case"cubicInOut":return Easing.Cubic.InOut;case"quarticIn":return Easing.Quartic.In;case"quarticOut":return Easing.Quartic.Out;case"quarticInOut":return Easing.Quartic.InOut;case"quinticIn":return Easing.Quintic.In;case"quinticOut":return Easing.Quintic.Out;case"quinticInOut":return Easing.Quintic.InOut;case"sinusoidalIn":return Easing.Sinusoidal.In;case"sinusoidalOut":return Easing.Sinusoidal.Out;case"sinusoidalInOut":return Easing.Sinusoidal.InOut;case"circularIn":return Easing.Circular.In;case"circularOut":return Easing.Circular.Out;case"circularInOut":return Easing.Circular.InOut;case"elasticIn":return Easing.Elastic.In;case"elasticOut":return Easing.Elastic.Out;case"elasticInOut":return Easing.Elastic.InOut;case"backIn":return Easing.Back.In;case"backOut":return Easing.Back.Out;case"backInOut":return Easing.Back.InOut;case"bounceIn":return Easing.Bounce.in;case"bounceOut":return Easing.Bounce.out;case"bounceInOut":return Easing.Bounce.inOut}}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_scheduling=__webpack_require__(6),_scheduling2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_scheduling),Easing={Linear:{None:function(k){return k}},Quadratic:{In:function(k){return k*k},Out:function(k){return k*(2-k)},InOut:function(k){return(k*=2)<1?.5*k*k:-.5*(--k*(k-2)-1)}},Cubic:{In:function(k){return k*k*k},Out:function(k){return--k*k*k+1},InOut:function(k){return(k*=2)<1?.5*k*k*k:.5*((k-=2)*k*k+2)}},Quartic:{In:function(k){return k*k*k*k},Out:function(k){return 1- --k*k*k*k},InOut:function(k){return(k*=2)<1?.5*k*k*k*k:-.5*((k-=2)*k*k*k-2)}},Quintic:{In:function(k){return k*k*k*k*k},Out:function(k){return--k*k*k*k*k+1},InOut:function(k){return(k*=2)<1?.5*k*k*k*k*k:.5*((k-=2)*k*k*k*k+2)}},Sinusoidal:{In:function(k){return 1-Math.cos(k*Math.PI/2)},Out:function(k){return Math.sin(k*Math.PI/2)},InOut:function(k){return.5*(1-Math.cos(Math.PI*k))}},Exponential:{In:function(k){return 0===k?0:Math.pow(1024,k-1)},Out:function(k){return 1===k?1:1-Math.pow(2,-10*k)},InOut:function(k){return 0===k?0:1===k?1:(k*=2)<1?.5*Math.pow(1024,k-1):.5*(2-Math.pow(2,-10*(k-1)))}},Circular:{In:function(k){return 1-Math.sqrt(1-k*k)},Out:function(k){return Math.sqrt(1- --k*k)},InOut:function(k){return(k*=2)<1?-.5*(Math.sqrt(1-k*k)-1):.5*(Math.sqrt(1-(k-=2)*k)+1)}},Elastic:{In:function(k){var s=void 0,a=.1;return 0===k?0:1===k?1:(!a||a<1?(a=1,s=.1):s=.4*Math.asin(1/a)/(2*Math.PI),-a*Math.pow(2,10*(k-=1))*Math.sin((k-s)*(2*Math.PI)/.4))},Out:function(k){var s=void 0,a=.1;return 0===k?0:1===k?1:(!a||a<1?(a=1,s=.1):s=.4*Math.asin(1/a)/(2*Math.PI),a*Math.pow(2,-10*k)*Math.sin((k-s)*(2*Math.PI)/.4)+1)},InOut:function(k){var s=void 0,a=.1;return 0===k?0:1===k?1:(!a||a<1?(a=1,s=.1):s=.4*Math.asin(1/a)/(2*Math.PI),(k*=2)<1?a*Math.pow(2,10*(k-=1))*Math.sin((k-s)*(2*Math.PI)/.4)*-.5:a*Math.pow(2,-10*(k-=1))*Math.sin((k-s)*(2*Math.PI)/.4)*.5+1)}},Back:{In:function(k){var s=1.70158;return k*k*((s+1)*k-s)},Out:function(k){var s=1.70158;return--k*k*((s+1)*k+s)+1},InOut:function(k){var s=2.5949095;return(k*=2)<1?k*k*((s+1)*k-s)*.5:.5*((k-=2)*k*((s+1)*k+s)+2)}},Bounce:{in:function(k){return 1-Easing.Bounce.out(1-k)},out:function(k){return k<1/2.75?7.5625*k*k:k<2/2.75?7.5625*(k-=1.5/2.75)*k+.75:k<2.5/2.75?7.5625*(k-=2.25/2.75)*k+.9375:7.5625*(k-=2.625/2.75)*k+.984375},inOut:function(k){return k<.5?.5*Easing.Bounce.in(2*k):.5*Easing.Bounce.out(2*k-1)+.5}}},TweenNumber=function(){function TweenNumber(mValue){var _this=this,mEasing=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"expOut",mSpeed=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.01;_classCallCheck(this,TweenNumber),this._value=mValue,this._startValue=mValue,this._targetValue=mValue,this._counter=1,this.speed=mSpeed,this.easing=mEasing,this._needUpdate=!0,this._efIndex=_scheduling2.default.addEF(function(){return _this._update()})}return _createClass(TweenNumber,[{key:"_update",value:function(){var newCounter=this._counter+this.speed;if(newCounter>1&&(newCounter=1),this._counter===newCounter)return void(this._needUpdate=!1);this._counter=newCounter,this._needUpdate=!0}},{key:"limit",value:function(mMin,mMax){if(mMin>mMax)return void this.limit(mMax,mMin);this._min=mMin,this._max=mMax,this._checkLimit()}},{key:"setTo",value:function(mValue){this._value=mValue,this._targetValue=mValue,this._counter=1}},{key:"_checkLimit",value:function(){void 0!==this._min&&this._targetValue<this._min&&(this._targetValue=this._min),void 0!==this._max&&this._targetValue>this._max&&(this._targetValue=this._max)}},{key:"destroy",value:function(){_scheduling2.default.removeEF(this._efIndex)}},{key:"value",set:function(mValue){this._startValue=this._value,this._targetValue=mValue,this._checkLimit(),this._counter=0},get:function(){if(this._needUpdate){var f=getFunc(this.easing),p=f(this._counter);this._value=this._startValue+p*(this._targetValue-this._startValue),this._needUpdate=!1}return this._value}},{key:"targetValue",get:function(){return this._targetValue}}]),TweenNumber}();exports.default=TweenNumber},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_glMatrix=__webpack_require__(1),_glMatrix2=_interopRequireDefault(_glMatrix),_EaseNumber=__webpack_require__(13),_EaseNumber2=_interopRequireDefault(_EaseNumber),_scheduling=__webpack_require__(6),_scheduling2=_interopRequireDefault(_scheduling),getMouse=function(mEvent,mTarget){var o=mTarget||{};return mEvent.touches?(o.x=mEvent.touches[0].pageX,o.y=mEvent.touches[0].pageY):(o.x=mEvent.clientX,o.y=mEvent.clientY),o},QuatRotation=function(){function QuatRotation(mTarget){var _this=this,mListenerTarget=arguments.length>1&&void 0!==arguments[1]?arguments[1]:window,mEasing=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1;_classCallCheck(this,QuatRotation),this._target=mTarget,this._listenerTarget=mListenerTarget,this.matrix=_glMatrix2.default.mat4.create(),this.m=_glMatrix2.default.mat4.create(),this._vZaxis=_glMatrix2.default.vec3.clone([0,0,0]),this._zAxis=_glMatrix2.default.vec3.clone([0,0,1]),this.preMouse={x:0,y:0},this.mouse={x:0,y:0},this._isMouseDown=!1,this._rotation=_glMatrix2.default.quat.create(),this.tempRotation=_glMatrix2.default.quat.create(),this._rotateZMargin=0,this._offset=.004,this._slerp=-1,this._isLocked=!1,this._diffX=new _EaseNumber2.default(0,mEasing),this._diffY=new _EaseNumber2.default(0,mEasing),this._listenerTarget.addEventListener("mousedown",function(e){return _this._onDown(e)}),this._listenerTarget.addEventListener("touchstart",function(e){return _this._onDown(e)}),this._listenerTarget.addEventListener("mousemove",function(e){return _this._onMove(e)}),this._listenerTarget.addEventListener("touchmove",function(e){return _this._onMove(e)}),window.addEventListener("touchend",function(){return _this._onUp()}),window.addEventListener("mouseup",function(){return _this._onUp()}),_scheduling2.default.addEF(function(){return _this._loop()})}return _createClass(QuatRotation,[{key:"inverseControl",value:function(){var isInvert=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this._isInvert=isInvert}},{key:"lock",value:function(){var mValue=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this._isLocked=mValue}},{key:"setCameraPos",value:function(mQuat){var speed=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;if(this.easing=speed,!(this._slerp>0)){var tempRotation=_glMatrix2.default.quat.clone(this._rotation);this._updateRotation(tempRotation),this._rotation=_glMatrix2.default.quat.clone(tempRotation),this._currDiffX=this.diffX=0,this._currDiffY=this.diffY=0,this._isMouseDown=!1,this._isRotateZ=0,this._targetQuat=_glMatrix2.default.quat.clone(mQuat),this._slerp=1}}},{key:"resetQuat",value:function(){this._rotation=_glMatrix2.default.quat.clone([0,0,1,0]),this.tempRotation=_glMatrix2.default.quat.clone([0,0,0,0]),this._targetQuat=void 0,this._slerp=-1}},{key:"_onDown",value:function(mEvent){if(!this._isLocked){var mouse=getMouse(mEvent),tempRotation=_glMatrix2.default.quat.clone(this._rotation);this._updateRotation(tempRotation),this._rotation=tempRotation,this._isMouseDown=!0,this._isRotateZ=0,this.preMouse={x:mouse.x,y:mouse.y},mouse.y<this._rotateZMargin||mouse.y>window.innerHeight-this._rotateZMargin?this._isRotateZ=1:(mouse.x<this._rotateZMargin||mouse.x>window.innerWidth-this._rotateZMargin)&&(this._isRotateZ=2),this._diffX.setTo(0),this._diffY.setTo(0)}}},{key:"_onMove",value:function(mEvent){this._isLocked||getMouse(mEvent,this.mouse)}},{key:"_onUp",value:function(){this._isLocked||(this._isMouseDown=!1)}},{key:"_updateRotation",value:function(mTempRotation){this._isMouseDown&&!this._isLocked&&(this._diffX.value=-(this.mouse.x-this.preMouse.x),this._diffY.value=this.mouse.y-this.preMouse.y,this._isInvert&&(this._diffX.value=-this._diffX.targetValue,this._diffY.value=-this._diffY.targetValue));var angle=void 0,_quat=void 0;if(this._isRotateZ>0)1===this._isRotateZ?(angle=-this._diffX.value*this._offset,angle*=this.preMouse.y<this._rotateZMargin?-1:1,_quat=_glMatrix2.default.quat.clone([0,0,Math.sin(angle),Math.cos(angle)]),_glMatrix2.default.quat.multiply(_quat,mTempRotation,_quat)):(angle=-this._diffY.value*this._offset,angle*=this.preMouse.x<this._rotateZMargin?1:-1,_quat=_glMatrix2.default.quat.clone([0,0,Math.sin(angle),Math.cos(angle)]),_glMatrix2.default.quat.multiply(_quat,mTempRotation,_quat));else{var v=_glMatrix2.default.vec3.clone([this._diffX.value,this._diffY.value,0]),axis=_glMatrix2.default.vec3.create();_glMatrix2.default.vec3.cross(axis,v,this._zAxis),_glMatrix2.default.vec3.normalize(axis,axis),angle=_glMatrix2.default.vec3.length(v)*this._offset,_quat=_glMatrix2.default.quat.clone([Math.sin(angle)*axis[0],Math.sin(angle)*axis[1],Math.sin(angle)*axis[2],Math.cos(angle)]),_glMatrix2.default.quat.multiply(mTempRotation,_quat,mTempRotation)}}},{key:"_loop",value:function(){_glMatrix2.default.mat4.identity(this.m),void 0===this._targetQuat?(_glMatrix2.default.quat.set(this.tempRotation,this._rotation[0],this._rotation[1],this._rotation[2],this._rotation[3]),this._updateRotation(this.tempRotation)):(this._slerp+=.1*(0-this._slerp),this._slerp<5e-4?(_glMatrix2.default.quat.copy(this._rotation,this._targetQuat),_glMatrix2.default.quat.copy(this.tempRotation,this._targetQuat),this._targetQuat=void 0,this._diffX.setTo(0),this._diffY.setTo(0),this._slerp=-1):(_glMatrix2.default.quat.set(this.tempRotation,0,0,0,0),_glMatrix2.default.quat.slerp(this.tempRotation,this._targetQuat,this._rotation,this._slerp))),_glMatrix2.default.vec3.transformQuat(this._vZaxis,this._vZaxis,this.tempRotation),_glMatrix2.default.mat4.fromQuat(this.matrix,this.tempRotation)}},{key:"easing",set:function(mValue){this._diffX.easing=mValue,this._diffY.easing=mValue},get:function(){return this._diffX.easing}}]),QuatRotation}();exports.default=QuatRotation},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}function distance(a,b){var dx=a.x-b.x,dy=a.y-b.y;return Math.sqrt(dx*dx+dy*dy)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_EventDispatcher2=__webpack_require__(28),_EventDispatcher3=_interopRequireDefault(_EventDispatcher2),_Ray=__webpack_require__(14),_Ray2=_interopRequireDefault(_Ray),_getMouse=__webpack_require__(62),_getMouse2=_interopRequireDefault(_getMouse),TouchDetector=function(_EventDispatcher){function TouchDetector(mMesh,mCamera){var mSkipMoveCheck=arguments.length>2&&void 0!==arguments[2]&&arguments[2],mListenerTarget=arguments.length>3&&void 0!==arguments[3]?arguments[3]:window;_classCallCheck(this,TouchDetector);var _this=_possibleConstructorReturn(this,(TouchDetector.__proto__||Object.getPrototypeOf(TouchDetector)).call(this));return _this._mesh=mMesh,_this._mesh.generateFaces(),_this._camera=mCamera,_this.faceVertices=mMesh.faces.map(function(face){return face.vertices}),_this.clickTolerance=8,_this._ray=new _Ray2.default([0,0,0],[0,0,-1]),_this._hit=vec3.fromValues(-999,-999,-999),_this._lastPos,_this._firstPos,_this.mtxModel=mat4.create(),_this._listenerTarget=mListenerTarget,_this._skippingMove=mSkipMoveCheck,_this._onMoveBind=function(e){return _this._onMove(e)},_this._onDownBind=function(e){return _this._onDown(e)},_this._onUpBind=function(){return _this._onUp()},_this.connect(),_this}return _inherits(TouchDetector,_EventDispatcher),_createClass(TouchDetector,[{key:"connect",value:function(){this._listenerTarget.addEventListener("mousedown",this._onDownBind),this._listenerTarget.addEventListener("mousemove",this._onMoveBind),this._listenerTarget.addEventListener("mouseup",this._onUpBind)}},{key:"disconnect",value:function(){this._listenerTarget.removeEventListener("mousedown",this._onDownBind),this._listenerTarget.removeEventListener("mousemove",this._onMoveBind),this._listenerTarget.removeEventListener("mouseup",this._onUpBind)}},{key:"_checkHit",value:function(){var _this2=this,mType=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"onHit",camera=this._camera;if(camera){var mx=this._lastPos.x/_GLTool2.default.width*2-1,my=-this._lastPos.y/_GLTool2.default.height*2+1;camera.generateRay([mx,my,0],this._ray);for(var hit=void 0,v0=vec3.create(),v1=vec3.create(),v2=vec3.create(),dist=0,getVector=function(v,target){vec3.transformMat4(target,v,_this2.mtxModel)},i=0;i<this.faceVertices.length;i++){var vertices=this.faceVertices[i];getVector(vertices[0],v0),getVector(vertices[1],v1),getVector(vertices[2],v2);var t=this._ray.intersectTriangle(v0,v1,v2);if(t)if(hit){var distToCam=vec3.dist(t,camera.position);distToCam<dist&&(hit=vec3.clone(t),dist=distToCam)}else hit=vec3.clone(t),dist=vec3.dist(hit,camera.position)}hit?(this._hit=vec3.clone(hit),this.dispatchCustomEvent(mType,{hit:hit})):this.dispatchCustomEvent("onUp")}}},{key:"_onDown",value:function(e){this._firstPos=(0,_getMouse2.default)(e),this._lastPos=(0,_getMouse2.default)(e),this._checkHit("onDown")}},{key:"_onMove",value:function(e){this._lastPos=(0,_getMouse2.default)(e),this._skippingMove||this._checkHit()}},{key:"_onUp",value:function(){distance(this._firstPos,this._lastPos)<this.clickTolerance&&this._checkHit()}}]),TouchDetector}(_EventDispatcher3.default);exports.default=TouchDetector},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(e){var x=void 0,y=void 0;return e.touches?(x=e.touches[0].pageX,y=e.touches[0].pageY):(x=e.clientX,y=e.clientY),{x:x,y:y}}},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_CameraPerspective2=__webpack_require__(16),_CameraPerspective3=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_CameraPerspective2),_glMatrix=__webpack_require__(1),CAMERA_SETTINGS=[[_glMatrix.vec3.fromValues(0,0,0),_glMatrix.vec3.fromValues(1,0,0),_glMatrix.vec3.fromValues(0,-1,0)],[_glMatrix.vec3.fromValues(0,0,0),_glMatrix.vec3.fromValues(-1,0,0),_glMatrix.vec3.fromValues(0,-1,0)],[_glMatrix.vec3.fromValues(0,0,0),_glMatrix.vec3.fromValues(0,1,0),_glMatrix.vec3.fromValues(0,0,1)],[_glMatrix.vec3.fromValues(0,0,0),_glMatrix.vec3.fromValues(0,-1,0),_glMatrix.vec3.fromValues(0,0,-1)],[_glMatrix.vec3.fromValues(0,0,0),_glMatrix.vec3.fromValues(0,0,1),_glMatrix.vec3.fromValues(0,-1,0)],[_glMatrix.vec3.fromValues(0,0,0),_glMatrix.vec3.fromValues(0,0,-1),_glMatrix.vec3.fromValues(0,-1,0)]],CameraCube=function(_CameraPerspective){function CameraCube(){_classCallCheck(this,CameraCube);var _this=_possibleConstructorReturn(this,(CameraCube.__proto__||Object.getPrototypeOf(CameraCube)).call(this));return _this.setPerspective(Math.PI/2,1,.1,1e3),_this}return _inherits(CameraCube,_CameraPerspective),_createClass(CameraCube,[{key:"face",value:function(mIndex){var o=CAMERA_SETTINGS[mIndex];this.lookAt(o[0],o[1],o[2])}}]),CameraCube}(_CameraPerspective3.default);exports.default=CameraCube},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_get=function get(object,property,receiver){null===object&&(object=Function.prototype);var desc=Object.getOwnPropertyDescriptor(object,property);if(void 0===desc){var parent=Object.getPrototypeOf(object);return null===parent?void 0:get(parent,property,receiver)}if("value"in desc)return desc.value;var getter=desc.get;if(void 0!==getter)return getter.call(receiver)},_BinaryLoader2=__webpack_require__(17),_BinaryLoader3=_interopRequireDefault(_BinaryLoader2),_Mesh=__webpack_require__(5),_Mesh2=_interopRequireDefault(_Mesh),ObjLoader=function(_BinaryLoader){function ObjLoader(){return _classCallCheck(this,ObjLoader),_possibleConstructorReturn(this,(ObjLoader.__proto__||Object.getPrototypeOf(ObjLoader)).apply(this,arguments))}return _inherits(ObjLoader,_BinaryLoader),_createClass(ObjLoader,[{key:"load",value:function(url,callback){var drawType=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4;this._drawType=drawType,_get(ObjLoader.prototype.__proto__||Object.getPrototypeOf(ObjLoader.prototype),"load",this).call(this,url,callback)}},{key:"_onLoaded",value:function(){this.parseObj(this._req.response)}},{key:"parseObj",value:function(objStr){function parseVertexIndex(value){var index=parseInt(value);return 3*(index>=0?index-1:index+vertices.length/3)}function parseNormalIndex(value){var index=parseInt(value);return 3*(index>=0?index-1:index+normals.length/3)}function parseUVIndex(value){var index=parseInt(value);return 2*(index>=0?index-1:index+uvs.length/2)}function addVertex(a,b,c){positions.push([vertices[a],vertices[a+1],vertices[a+2]]),positions.push([vertices[b],vertices[b+1],vertices[b+2]]),positions.push([vertices[c],vertices[c+1],vertices[c+2]]),indices.push(3*count+0),indices.push(3*count+1),indices.push(3*count+2),count++}function addUV(a,b,c){coords.push([uvs[a],uvs[a+1]]),coords.push([uvs[b],uvs[b+1]]),coords.push([uvs[c],uvs[c+1]])}function addNormal(a,b,c){finalNormals.push([normals[a],normals[a+1],normals[a+2]]),finalNormals.push([normals[b],normals[b+1],normals[b+2]]),finalNormals.push([normals[c],normals[c+1],normals[c+2]])}function addFace(a,b,c,d,ua,ub,uc,ud,na,nb,nc,nd){var ia=parseVertexIndex(a),ib=parseVertexIndex(b),ic=parseVertexIndex(c),id=void 0;void 0===d?addVertex(ia,ib,ic):(id=parseVertexIndex(d),addVertex(ia,ib,id),addVertex(ib,ic,id)),void 0!==ua&&(ia=parseUVIndex(ua),ib=parseUVIndex(ub),ic=parseUVIndex(uc),void 0===d?addUV(ia,ib,ic):(id=parseUVIndex(ud),addUV(ia,ib,id),addUV(ib,ic,id))),void 0!==na&&(ia=parseNormalIndex(na),ib=parseNormalIndex(nb),ic=parseNormalIndex(nc),void 0===d?addNormal(ia,ib,ic):(id=parseNormalIndex(nd),addNormal(ia,ib,id),addNormal(ib,ic,id)))}for(var lines=objStr.split("\n"),positions=[],coords=[],finalNormals=[],vertices=[],normals=[],uvs=[],indices=[],count=0,result=void 0,vertexPattern=/v( +[\d|\.|\+|\-|e|E]+)( +[\d|\.|\+|\-|e|E]+)( +[\d|\.|\+|\-|e|E]+)/,normalPattern=/vn( +[\d|\.|\+|\-|e|E]+)( +[\d|\.|\+|\-|e|E]+)( +[\d|\.|\+|\-|e|E]+)/,uvPattern=/vt( +[\d|\.|\+|\-|e|E]+)( +[\d|\.|\+|\-|e|E]+)/,facePattern1=/f( +-?\d+)( +-?\d+)( +-?\d+)( +-?\d+)?/,facePattern2=/f( +(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+))?/,facePattern3=/f( +(-?\d+)\/(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+)\/(-?\d+))?/,facePattern4=/f( +(-?\d+)\/\/(-?\d+))( +(-?\d+)\/\/(-?\d+))( +(-?\d+)\/\/(-?\d+))( +(-?\d+)\/\/(-?\d+))?/,i=0;i<lines.length;i++){var line=lines[i];line=line.trim(),0!==line.length&&"#"!==line.charAt(0)&&(null!==(result=vertexPattern.exec(line))?vertices.push(parseFloat(result[1]),parseFloat(result[2]),parseFloat(result[3])):null!==(result=normalPattern.exec(line))?normals.push(parseFloat(result[1]),parseFloat(result[2]),parseFloat(result[3])):null!==(result=uvPattern.exec(line))?uvs.push(parseFloat(result[1]),parseFloat(result[2])):null!==(result=facePattern1.exec(line))?addFace(result[1],result[2],result[3],result[4]):null!==(result=facePattern2.exec(line))?addFace(result[2],result[5],result[8],result[11],result[3],result[6],result[9],result[12]):null!==(result=facePattern3.exec(line))?addFace(result[2],result[6],result[10],result[14],result[3],result[7],result[11],result[15],result[4],result[8],result[12],result[16]):null!==(result=facePattern4.exec(line))&&addFace(result[2],result[5],result[8],result[11],void 0,void 0,void 0,void 0,result[3],result[6],result[9],result[12]))}return this._generateMeshes({positions:positions,coords:coords,normals:finalNormals,indices:indices})}},{key:"_generateMeshes",value:function(o){var hasNormals=o.normals.length>0,hasUVs=o.coords.length>0,mesh=void 0;if(o.positions.length>65535){var meshes=[],lastIndex=0,oCopy={};for(oCopy.positions=o.positions.concat(),oCopy.coords=o.coords.concat(),oCopy.indices=o.indices.concat(),oCopy.normals=o.normals.concat();o.indices.length>0;){for(var sliceNum=Math.min(65535,o.positions.length),indices=o.indices.splice(0,sliceNum),positions=[],coords=[],normals=[],index=void 0,tmpIndex=0,i=0;i<indices.length;i++)indices[i]>tmpIndex&&(tmpIndex=indices[i]),index=indices[i],positions.push(oCopy.positions[index]),hasUVs&&coords.push(oCopy.coords[index]),hasNormals&&normals.push(oCopy.normals[index]),indices[i]-=lastIndex;lastIndex=tmpIndex+1,mesh=new _Mesh2.default(this._drawType),mesh.bufferVertex(positions),hasUVs&&mesh.bufferTexCoord(coords),mesh.bufferIndex(indices),hasNormals&&mesh.bufferNormal(normals),meshes.push(mesh)}return this._callback&&this._callback(meshes,oCopy),meshes}return mesh=new _Mesh2.default(this._drawType),mesh.bufferVertex(o.positions),hasUVs&&mesh.bufferTexCoord(o.coords),mesh.bufferIndex(o.indices),hasNormals&&mesh.bufferNormal(o.normals),this._callback&&this._callback(mesh,o),mesh}}]),ObjLoader}(_BinaryLoader3.default);ObjLoader.parse=function(objStr){return(new ObjLoader).parseObj(objStr)},exports.default=ObjLoader},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_BinaryLoader2=__webpack_require__(17),_BinaryLoader3=_interopRequireDefault(_BinaryLoader2),_HDRParser=__webpack_require__(66),_HDRParser2=_interopRequireDefault(_HDRParser),HDRLoader=function(_BinaryLoader){function HDRLoader(){return _classCallCheck(this,HDRLoader),_possibleConstructorReturn(this,(HDRLoader.__proto__||Object.getPrototypeOf(HDRLoader)).call(this,!0))}return _inherits(HDRLoader,_BinaryLoader),_createClass(HDRLoader,[{key:"parse",value:function(mArrayBuffer){return(0,_HDRParser2.default)(mArrayBuffer)}},{key:"_onLoaded",value:function(){var o=this.parse(this._req.response);this._callback&&this._callback(o)}}]),HDRLoader}(_BinaryLoader3.default);HDRLoader.parse=function(mArrayBuffer){return(0,_HDRParser2.default)(mArrayBuffer)},exports.default=HDRLoader},function(module,exports,__webpack_require__){"use strict";function readPixelsRawRLE(buffer,data,offset,fileOffset,scanlineWidth,numScanlines){function readBuf(buf){var bytesRead=0;do{buf[bytesRead++]=buffer[fileOffset]}while(++fileOffset<bufferLength&&bytesRead<buf.length);return bytesRead}function readBufOffset(buf,offset,length){var bytesRead=0;do{buf[offset+bytesRead++]=buffer[fileOffset]}while(++fileOffset<bufferLength&&bytesRead<length);return bytesRead}for(var rgbe=new Array(4),scanlineBuffer=null,ptr=void 0,ptrEnd=void 0,count=void 0,buf=new Array(2),bufferLength=buffer.length;numScanlines>0;){if(readBuf(rgbe)<rgbe.length)throw new Error("Error reading bytes: expected "+rgbe.length);if(2!==rgbe[0]||2!==rgbe[1]||0!=(128&rgbe[2]))return data[offset++]=rgbe[0],data[offset++]=rgbe[1],data[offset++]=rgbe[2],data[offset++]=rgbe[3],void function(buffer,data,offset,numpixels){var numExpected=4*numpixels,numRead=readBufOffset(data,offset,numExpected);if(numRead<numExpected)throw new Error("Error reading raw pixels: got "+numRead+" bytes, expected "+numExpected)}(0,data,offset,scanlineWidth*numScanlines-1);if(((255&rgbe[2])<<8|255&rgbe[3])!==scanlineWidth)throw new Error("Wrong scanline width "+((255&rgbe[2])<<8|255&rgbe[3])+", expected "+scanlineWidth);null===scanlineBuffer&&(scanlineBuffer=new Array(4*scanlineWidth)),ptr=0;for(var i=0;i<4;i++)for(ptrEnd=(i+1)*scanlineWidth;ptr<ptrEnd;){if(readBuf(buf)<buf.length)throw new Error("Error reading 2-byte buffer");if((255&buf[0])>128){if(0===(count=(255&buf[0])-128)||count>ptrEnd-ptr)throw new Error("Bad scanline data");for(;count-- >0;)scanlineBuffer[ptr++]=buf[1]}else{if(0===(count=255&buf[0])||count>ptrEnd-ptr)throw new Error("Bad scanline data");if(scanlineBuffer[ptr++]=buf[1],--count>0){if(readBufOffset(scanlineBuffer,ptr,count)<count)throw new Error("Error reading non-run data");ptr+=count}}}for(var _i=0;_i<scanlineWidth;_i++)data[offset+0]=scanlineBuffer[_i],data[offset+1]=scanlineBuffer[_i+scanlineWidth],data[offset+2]=scanlineBuffer[_i+2*scanlineWidth],data[offset+3]=scanlineBuffer[_i+3*scanlineWidth],offset+=4;numScanlines--}}function parseHdr(buffer){buffer instanceof ArrayBuffer&&(buffer=new Uint8Array(buffer));for(var fileOffset=0,bufferLength=buffer.length,NEW_LINE=10,width=0,height=0,exposure=1,rle=!1,i=0;i<20;i++){var line=function(){var buf="";do{var b=buffer[fileOffset];if(b===NEW_LINE){++fileOffset;break}buf+=String.fromCharCode(b)}while(++fileOffset<bufferLength);return buf}(),match=void 0;if(match=line.match(radiancePattern));else if(match=line.match(formatPattern))rle=!0;else if(match=line.match(exposurePattern))exposure=Number(match[1]);else if(match=line.match(commentPattern));else if(match=line.match(widthHeightPattern)){height=Number(match[1]),width=Number(match[2]);break}}if(!rle)throw new Error("File is not run length encoded!");var data=new Uint8Array(width*height*4);readPixelsRawRLE(buffer,data,0,fileOffset,width,height);for(var floatData=new Float32Array(width*height*4),offset=0;offset<data.length;offset+=4){var r=data[offset+0]/255,g=data[offset+1]/255,b=data[offset+2]/255,e=data[offset+3],f=Math.pow(2,e-128);r*=f,g*=f,b*=f;var floatOffset=offset;floatData[floatOffset+0]=r,floatData[floatOffset+1]=g,floatData[floatOffset+2]=b,floatData[floatOffset+3]=1}return{shape:[width,height],exposure:exposure,gamma:1,data:floatData}}Object.defineProperty(exports,"__esModule",{value:!0});var radiancePattern="#\\?RADIANCE",commentPattern="#.*",exposurePattern="EXPOSURE=\\s*([0-9]*[.][0-9]*)",formatPattern="FORMAT=32-bit_rle_rgbe",widthHeightPattern="-Y ([0-9]+) \\+X ([0-9]+)";exports.default=parseHdr},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,"__esModule",{value:!0});var _colladaParser=__webpack_require__(68),_colladaParser2=_interopRequireDefault(_colladaParser),_Mesh=__webpack_require__(5),_Mesh2=_interopRequireDefault(_Mesh),generateMesh=function(meshes){var caches={};meshes.forEach(function(mesh){var _mesh$mesh=mesh.mesh,vertices=_mesh$mesh.vertices,normals=_mesh$mesh.normals,coords=_mesh$mesh.coords,triangles=_mesh$mesh.triangles,name=_mesh$mesh.name;if(!caches[name]){var glMesh=(new _Mesh2.default).bufferFlattenData(vertices,"aVertexPosition",3).bufferFlattenData(coords,"aTextureCoord",2).bufferFlattenData(normals,"aNormal",3).bufferIndex(triangles);caches[name]=glMesh}mesh.glMesh=caches[name]})},parse=function(mData){var meshes=_colladaParser2.default.parse(mData);return generateMesh(meshes),meshes},load=function(mPath,mCallback){_colladaParser2.default.load(mPath,function(meshes){generateMesh(meshes),mCallback(meshes)})},ColladaParser={parse:parse,load:load};exports.default=ColladaParser},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _Collada=__webpack_require__(69),_Collada2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_Collada),_glMatrix=__webpack_require__(1),parseData=function(mData){function getMaterial(id){var mat=void 0;for(var _s in materials)_s===id&&(mat=materials[_s]);var oMaterial={};return mat.diffuse&&(oMaterial.diffuseColor=mat.diffuse),oMaterial.diffuseColor=mat.diffuse||[0,0,0],oMaterial.shininess=mat.shininess||0,mat.textures&&(mat.textures.diffuse&&(oMaterial.diffuseMapID=mat.textures.diffuse.map_id),mat.textures.normal&&(oMaterial.normalMapID=mat.textures.normal.map_id)),oMaterial}function walk(node,mtxParent){var m=_glMatrix.mat4.create();if(node.model?_glMatrix.mat4.multiply(m,mtxParent,node.model):_glMatrix.mat4.copy(m,mtxParent),node.children.length>0&&node.children.forEach(function(child){walk(child,m)}),node.mesh){var _oMesh={};_oMesh.modelMatrix=m,_oMesh.mesh=meshes[node.mesh],_oMesh.id=node.id,_oMesh.name=node.name,_oMesh.material=getMaterial(node.material),meshObjs.push(_oMesh)}}var materials=mData.materials,meshes=mData.meshes,meshObjs=[],allMeshes=[];for(var s in meshes){var oMesh=meshes[s],vertices=oMesh.vertices,normals=oMesh.normals,coords=oMesh.coords,triangles=oMesh.triangles,buffers={vertices:vertices,normals:normals,coords:coords,triangles:triangles};allMeshes.push({id:s,buffers:buffers})}var mtx=_glMatrix.mat4.create();return walk(mData.root,mtx),meshObjs},parse=function(mFile){var o=_Collada2.default.parse(mFile);return parseData(o)},load=function(mPath,mCallBack){_Collada2.default.load(mPath,function(mData){mCallBack(parseData(mData))})},ColladaParser={load:load,parse:parse};exports.default=ColladaParser,module.exports=exports.default},function(module,exports,__webpack_require__){"use strict";(function(global){function request(url,callback){var req=new XMLHttpRequest;req.onload=function(){this.response;200==this.status&&callback&&callback(this.response)},req.open("get",url,!0),req.send()}Object.defineProperty(exports,"__esModule",{value:!0});var _glMatrix=__webpack_require__(1),isWorker=void 0===global.document,DEG2RAD=2*Math.PI/360,temp_mat4=null,temp_vec2=null,temp_vec3=null,temp_vec4=null,temp_quat=null,Collada={libsPath:"./",workerPath:"./",no_flip:!0,use_transferables:!0,onerror:null,verbose:!1,config:{forceParser:!1},init:function(config){config=config||{};for(var i in config)this[i]=config[i];if(this.config=config,isWorker)try{importScripts(this.libsPath+"gl-matrix-min.js",this.libsPath+"tinyxml.js")}catch(err){Collada.throwException(Collada.LIBMISSING_ERROR)}temp_mat4=_glMatrix.mat4.create(),temp_vec2=vec3.create(),temp_vec3=vec3.create(),temp_vec4=vec3.create(),temp_quat=_glMatrix.quat.create(),isWorker&&console.log("Collada worker ready")},load:function(url,callback){request(url,function(data){callback(data?Collada.parse(data):null)})},_xmlroot:null,_nodes_by_id:null,_transferables:null,_controllers_found:null,_geometries_found:null,safeString:function(str){return str?this.convertID?this.convertID(str):str.replace(/ /g,"_"):""},LIBMISSING_ERROR:"Libraries loading error, when using workers remember to pass the URL to the tinyxml.js in the options.libsPath",NOXMLPARSER_ERROR:"TinyXML not found, when using workers remember to pass the URL to the tinyxml.js in the options.libsPath (Workers do not allow to access the native XML DOMParser)",throwException:function(msg){throw isWorker?self.postMessage({action:"exception",msg:msg}):Collada.onerror&&Collada.onerror(msg),msg},getFilename:function(filename){var pos=filename.lastIndexOf("\\");return-1!=pos&&(filename=filename.substr(pos+1)),pos=filename.lastIndexOf("/"),-1!=pos&&(filename=filename.substr(pos+1)),filename},last_name:0,generateName:function(v){v=v||"name_";var name=v+this.last_name;return this.last_name++,name},parse:function(data,options,filename){options=options||{},filename=filename||"_dae_"+Date.now()+".dae";var xmlparser=null,root=null;if(this._transferables=[],this.verbose&&console.log(" - XML parsing..."),global.DOMParser&&!this.config.forceParser)xmlparser=new DOMParser,root=xmlparser.parseFromString(data,"text/xml"),this.verbose&&console.log(" - XML parsed");else{if(!global.DOMImplementation)return Collada.throwException(Collada.NOXMLPARSER_ERROR);try{xmlparser=new DOMImplementation}catch(err){return Collada.throwException(Collada.NOXMLPARSER_ERROR)}root=xmlparser.loadXML(data),this.verbose&&console.log(" - XML parsed");for(var by_ids=root._nodes_by_id={},i=0,l=root.all.length;i<l;++i){var node=root.all[i];by_ids[node.id]=node,node.getAttribute("sid")&&(by_ids[node.getAttribute("sid")]=node)}this.extra_functions||(this.extra_functions=!0,DOMDocument.prototype.querySelector=DOMElement.prototype.querySelector=function(selector){for(var tags=selector.split(" "),current_element=this;tags.length;){var current=tags.shift(),tokens=current.split("#"),tagname=tokens[0],id=tokens[1],elements=tagname?current_element.getElementsByTagName(tagname):current_element.childNodes;if(id){for(var i=0;i<elements.length;i++)if(elements.item(i).getAttribute("id")==id){if(0==tags.length)return elements.item(i);current_element=elements.item(i);break}}else{if(0==tags.length)return elements.item(0);current_element=elements.item(0)}}return null},DOMDocument.prototype.querySelectorAll=DOMElement.prototype.querySelectorAll=function(selector){function inner(root,tags){if(tags){var current=tags.shift(),elements=root.getElementsByTagName(current);if(0!=tags.length)for(var i=0;i<elements.length;i++)inner(elements.item(i),tags.concat());else for(var i=0;i<elements.length;i++)result.push(elements.item(i))}}var tags=selector.split(" ");if(1==tags.length)return this.getElementsByTagName(selector);var result=[];inner(this,tags);var list=new DOMNodeList(this.documentElement);return list._nodes=result,list.length=result.length,list},Object.defineProperty(DOMElement.prototype,"textContent",{get:function(){return this.getChildNodes().item(0).toString()},set:function(){}}))}this._xmlroot=root;var xmlcollada=root.querySelector("COLLADA");xmlcollada&&(this._current_DAE_version=xmlcollada.getAttribute("version"),console.log("DAE Version:"+this._current_DAE_version));var xmlvisual_scene=root.getElementsByTagName("visual_scene").item(0);if(!xmlvisual_scene)throw"visual_scene XML node not found in DAE";this._nodes_by_id={},this._controllers_found={},this._geometries_found={};var scene={object_type:"SceneTree",light:null,materials:{},meshes:{},resources:{},root:{children:[]},external_files:{}},xmlasset=root.getElementsByTagName("asset")[0];xmlasset&&(scene.metadata=this.readAsset(xmlasset));for(var xmlnodes=xmlvisual_scene.childNodes,i=0;i<xmlnodes.length;i++)if("node"==xmlnodes.item(i).localName){var node=this.readNodeTree(xmlnodes.item(i),scene,0,!1);node&&scene.root.children.push(node)}for(var i=0;i<xmlnodes.length;i++)"node"==xmlnodes.item(i).localName&&this.readNodeInfo(xmlnodes.item(i),scene,0,!1);this.readLibraryControllers(scene);var animations=this.readAnimations(root,scene);if(animations){var animations_name="#animations_"+filename.substr(0,filename.indexOf("."));scene.resources[animations_name]=animations,scene.root.animations=animations_name}return scene.images=this.readImages(root),this._nodes_by_id={},this._controllers_found={},this._geometries_found={},this._xmlroot=null,scene},readAsset:function(xmlasset){for(var metadata={},i=0;i<xmlasset.childNodes.length;i++){var xmlchild=xmlasset.childNodes.item(i);if(1==xmlchild.nodeType)switch(xmlchild.localName){case"contributor":var tool=xmlchild.querySelector("authoring_tool");tool&&(metadata.authoring_tool=tool.textContext);break;case"unit":metadata.unit=xmlchild.getAttribute("name");break;default:metadata[xmlchild.localName]=xmlchild.textContent}}return metadata},readNodeTree:function(xmlnode,scene,level,flip){var node_id=this.safeString(xmlnode.getAttribute("id")),node_sid=this.safeString(xmlnode.getAttribute("sid"));if(!node_id&&!node_sid)return null;var node={id:node_sid||node_id,children:[],_depth:level},node_type=xmlnode.getAttribute("type");node_type&&(node.type=node_type);var node_name=xmlnode.getAttribute("name");node_name&&(node.name=node_name),this._nodes_by_id[node.id]=node,node_id&&(this._nodes_by_id[node_id]=node),node_sid&&(this._nodes_by_id[node_sid]=node),node.model=this.readTransform(xmlnode,level,flip);for(var i=0;i<xmlnode.childNodes.length;i++){var xmlchild=xmlnode.childNodes.item(i);if(1==xmlchild.nodeType)if("node"!=xmlchild.localName);else{var child_node=this.readNodeTree(xmlchild,scene,level+1,flip);child_node&&node.children.push(child_node)}}return node},readNodeInfo:function(xmlnode,scene,level,flip,parent){var node,node_id=this.safeString(xmlnode.getAttribute("id")),node_sid=this.safeString(xmlnode.getAttribute("sid"));if(node_id||node_sid)node=this._nodes_by_id[node_id||node_sid];else{if(!parent)return null;node=this._nodes_by_id[parent.id||parent.sid]}if(!node)return console.warn("Collada: Node not found by id: "+(node_id||node_sid)),null;for(var i=0;i<xmlnode.childNodes.length;i++){var xmlchild=xmlnode.childNodes.item(i);if(1==xmlchild.nodeType)if("node"!=xmlchild.localName){if("instance_geometry"==xmlchild.localName){var url=xmlchild.getAttribute("url"),mesh_id=url.toString().substr(1);if(node.mesh=mesh_id,!scene.meshes[url]){var mesh_data=this.readGeometry(url,flip);mesh_data&&(mesh_data.name=mesh_id,scene.meshes[mesh_id]=mesh_data)}var xmlmaterials=xmlchild.querySelectorAll("instance_material");if(xmlmaterials)for(var iMat=0;iMat<xmlmaterials.length;++iMat){var xmlmaterial=xmlmaterials.item(iMat);if(xmlmaterial){var matname=xmlmaterial.getAttribute("target").toString().substr(1);if(!scene.materials[matname]){var material=this.readMaterial(matname);material&&(material.id=matname,scene.materials[material.id]=material)}0==iMat?node.material=matname:(node.materials||(node.materials=[]),node.materials.push(matname))}else console.warn("instance_material not found: "+i)}}if("instance_controller"==xmlchild.localName){var url=xmlchild.getAttribute("url"),xmlcontroller=this._xmlroot.querySelector("controller"+url);if(xmlcontroller){var mesh_data=this.readController(xmlcontroller,flip,scene),xmlbind_material=xmlchild.querySelector("bind_material");if(xmlbind_material)for(var xmltechniques=xmlbind_material.querySelectorAll("technique_common"),iTec=0;iTec<xmltechniques.length;iTec++)for(var xmltechnique=xmltechniques.item(iTec),xmlinstance_materials=xmltechnique.querySelectorAll("instance_material"),iMat=0;iMat<xmlinstance_materials.length;iMat++){var xmlinstance_material=xmlinstance_materials.item(iMat);if(xmlinstance_material){var matname=xmlinstance_material.getAttribute("target").toString().substr(1);if(!scene.materials[matname]){var material=this.readMaterial(matname);material&&(material.id=matname,scene.materials[material.id]=material)}0==iMat?node.material=matname:(node.materials||(node.materials=[]),node.materials.push(matname))}else console.warn("instance_material for controller not found: "+xmlinstance_material)}if(mesh_data){var mesh=mesh_data;"morph"==mesh_data.type&&(mesh=mesh_data.mesh,node.morph_targets=mesh_data.morph_targets),mesh.name=url.toString(),node.mesh=url.toString(),scene.meshes[url]=mesh}}}if("instance_light"==xmlchild.localName){var url=xmlchild.getAttribute("url");this.readLight(node,url)}if("instance_camera"==xmlchild.localName){var url=xmlchild.getAttribute("url");this.readCamera(node,url)}}else this.readNodeInfo(xmlchild,scene,level+1,flip,xmlnode)}},material_translate_table:{},light_translate_table:{point:"omni",directional:"directional",spot:"spot"},camera_translate_table:{xfov:"fov",aspect_ratio:"aspect",znear:"near",zfar:"far"},querySelectorAndId:function(root,selector,id){for(var nodes=root.querySelectorAll(selector),i=0;i<nodes.length;i++){var attr_id=nodes.item(i).getAttribute("id");if(attr_id&&(attr_id=attr_id.toString())==id)return nodes.item(i)}return null},getFirstChildElement:function(root,localName){for(var c=root.childNodes,i=0;i<c.length;++i){var item=c.item(i);if(item.localName&&!localName||localName&&localName==item.localName)return item}return null},readMaterial:function(url){var xmlmaterial=this.querySelectorAndId(this._xmlroot,"library_materials material",url);if(!xmlmaterial)return null;var xmleffect=xmlmaterial.querySelector("instance_effect");if(!xmleffect)return null;var effect_url=xmleffect.getAttribute("url").substr(1),xmleffects=this.querySelectorAndId(this._xmlroot,"library_effects effect",effect_url);if(!xmleffects)return null;var xmltechnique=xmleffects.querySelector("technique");if(!xmltechnique)return null;for(var xmlnewparams=xmleffects.querySelectorAll("newparam"),newparams={},i=0;i<xmlnewparams.length;i++){var parent,init_from=xmlnewparams[i].querySelector("init_from");if(init_from)parent=init_from.innerHTML;else{parent=xmlnewparams[i].querySelector("source").innerHTML}newparams[xmlnewparams[i].getAttribute("sid")]={parent:parent}}var material={},images=this.readImages(this._xmlroot),xmlphong=xmltechnique.querySelector("phong");if(xmlphong||(xmlphong=xmltechnique.querySelector("blinn")),xmlphong||(xmlphong=xmltechnique.querySelector("lambert")),!xmlphong)return null;for(var i=0;i<xmlphong.childNodes.length;++i){var xmlparam=xmlphong.childNodes.item(i);if(xmlparam.localName){var param_name=xmlparam.localName.toString();this.material_translate_table[param_name]&&(param_name=this.material_translate_table[param_name]);var xmlparam_value=this.getFirstChildElement(xmlparam);if(xmlparam_value)if("color"!=xmlparam_value.localName.toString())if("float"!=xmlparam_value.localName.toString()){if("texture"==xmlparam_value.localName.toString()){material.textures||(material.textures={});var map_id=xmlparam_value.getAttribute("texture");if(!map_id)continue;-1===map_id.indexOf(".")&&(map_id=this.getParentParam(newparams,map_id),images[map_id]&&(map_id=images[map_id].path));var map_info={map_id:map_id},uvs=xmlparam_value.getAttribute("texcoord");map_info.uvs=uvs,material.textures[param_name]=map_info}}else material[param_name]=this.readContentAsFloats(xmlparam_value)[0];else{var value=this.readContentAsFloats(xmlparam_value);"RGB_ZERO"==xmlparam.getAttribute("opaque")?material[param_name]=value.subarray(0,4):material[param_name]=value.subarray(0,3)}}}return material.object_type="Material",material},getParentParam:function(newparams,param){return newparams[param]&&newparams[param].parent?this.getParentParam(newparams,newparams[param].parent):param},readLight:function(node,url){function parse_params(light,xml){for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes.item(i);if(child&&1==child.nodeType)switch(child.localName){case"color":light.color=Collada.readContentAsFloats(child);break;case"falloff_angle":light.angle_end=Collada.readContentAsFloats(child)[0],light.angle=light.angle_end-10}}}var light={},xmlnode=null;if(url.length>1)xmlnode=this._xmlroot.querySelector("library_lights "+url);else{var xmlliblights=this._xmlroot.querySelector("library_lights");xmlnode=this.getFirstChildElement(xmlliblights,"light")}if(!xmlnode)return null;var children=[],xml=xmlnode.querySelector("technique_common");if(xml)for(var i=0;i<xml.childNodes.length;i++)1==xml.childNodes.item(i).nodeType&&children.push(xml.childNodes.item(i));for(var xmls=xmlnode.querySelectorAll("technique"),i=0;i<xmls.length;i++)for(var xml2=xmls.item(i),j=0;j<xml2.childNodes.length;j++)1==xml2.childNodes.item(j).nodeType&&children.push(xml2.childNodes.item(j));for(var i=0;i<children.length;i++){var xml=children[i];switch(xml.localName){case"point":case"directional":case"spot":light.type=this.light_translate_table[xml.localName],parse_params(light,xml);break;case"intensity":light.intensity=this.readContentAsFloats(xml)[0]}}if(node.model){light.position=[node.model[12],node.model[13],node.model[14]];var forward=[-node.model[8],-node.model[9],-node.model[10]];light.target=[light.position[0]+forward[0],light.position[1]+forward[1],light.position[2]+forward[2]]}else console.warn("Could not read light position for light: "+node.name+". Setting defaults."),light.position=[0,0,0],light.target=[0,-1,0];node.light=light},readCamera:function(node,url){var camera={},xmlnode=this._xmlroot.querySelector("library_cameras "+url);if(!xmlnode)return null;var children=[],xml=xmlnode.querySelector("technique_common");if(xml)for(var i=0;i<xml.childNodes.length;i++)1==xml.childNodes.item(i).nodeType&&children.push(xml.childNodes.item(i));for(var i=0;i<children.length;i++){var tag=children[i];!function(camera,xml){for(var i=0;i<xml.childNodes.length;i++){var child=xml.childNodes.item(i);child&&1==child.nodeType&&(camera[Collada.camera_translate_table[child.localName]||child.localName]=parseFloat(child.textContent))}}(camera,tag)}camera.yfov&&!camera.fov&&(camera.aspect?camera.fov=camera.yfov*camera.aspect:console.warn("Could not convert camera yfov to xfov because aspect ratio not set")),node.camera=camera},readTransform:function(xmlnode,level,flip){for(var matrix=_glMatrix.mat4.create(),temp=_glMatrix.mat4.create(),tmpq=_glMatrix.quat.create(),i=0;i<xmlnode.childNodes.length;i++){var xml=xmlnode.childNodes.item(i);if(xml&&1==xml.nodeType){if("matrix"==xml.localName){var matrix=this.readContentAsFloats(xml);return this.transformMatrix(matrix,0==level),matrix}if("translate"!=xml.localName)if("rotate"!=xml.localName){if("scale"==xml.localName){var values=this.readContentAsFloats(xml);if(flip){var tmp=values[1];values[1]=values[2],values[2]=-tmp}_glMatrix.mat4.scale(matrix,matrix,values)}}else{var values=this.readContentAsFloats(xml);if(4==values.length){var id=xml.getAttribute("sid");if("jointOrientX"==id&&(values[3]+=90,!0),flip){var tmp=values[1];values[1]=values[2],values[2]=-tmp}0!=values[3]&&(_glMatrix.quat.setAxisAngle(tmpq,values.subarray(0,3),values[3]*DEG2RAD),_glMatrix.mat4.fromQuat(temp,tmpq),_glMatrix.mat4.multiply(matrix,matrix,temp))}}else{var values=this.readContentAsFloats(xml);if(flip&&level>0){var tmp=values[1];values[1]=values[2],values[2]=-tmp}_glMatrix.mat4.translate(matrix,matrix,values)}}}return matrix},readTransform2:function(xmlnode,level,flip){for(var matrix=_glMatrix.mat4.create(),rotation=_glMatrix.quat.create(),tmpmatrix=_glMatrix.mat4.create(),tmpq=_glMatrix.quat.create(),translate=vec3.create(),scale=vec3.fromValues(1,1,1),i=0;i<xmlnode.childNodes.length;i++){var xml=xmlnode.childNodes.item(i);if("matrix"==xml.localName){var matrix=this.readContentAsFloats(xml);return this.transformMatrix(matrix,0==level),matrix}if("translate"!=xml.localName)if("rotate"!=xml.localName){if("scale"==xml.localName){var values=this.readContentAsFloats(xml);if(flip){var tmp=values[1];values[1]=values[2],values[2]=-tmp}scale.set(values)}}else{var values=this.readContentAsFloats(xml);if(4==values.length){var id=xml.getAttribute("sid");if("jointOrientX"==id&&(values[3]+=90,!0),flip){var tmp=values[1];values[1]=values[2],values[2]=-tmp}0!=values[3]&&(_glMatrix.quat.setAxisAngle(tmpq,values.subarray(0,3),values[3]*DEG2RAD),_glMatrix.quat.multiply(rotation,rotation,tmpq))}}else{var values=this.readContentAsFloats(xml);translate.set(values)}}if(flip&&level>0){var tmp=translate[1];translate[1]=translate[2],translate[2]=-tmp}return _glMatrix.mat4.translate(matrix,matrix,translate),_glMatrix.mat4.fromQuat(tmpmatrix,rotation),_glMatrix.mat4.multiply(matrix,matrix,tmpmatrix),_glMatrix.mat4.scale(matrix,matrix,scale),matrix},readGeometry:function(id,flip,scene){if(void 0!==this._geometries_found[id])return this._geometries_found[id];var xmlgeometry=this._xmlroot.getElementById(id.substr(1));if(!xmlgeometry)return console.warn("readGeometry: geometry not found: "+id),this._geometries_found[id]=null,null;if("controller"==xmlgeometry.localName){var geometry=this.readController(xmlgeometry,flip,scene);return this._geometries_found[id]=geometry,geometry}if("geometry"!=xmlgeometry.localName)return console.warn("readGeometry: tag should be geometry, instead it was found: "+xmlgeometry.localName),this._geometries_found[id]=null,null;var xmlmesh=xmlgeometry.querySelector("mesh");if(!xmlmesh)return console.warn("readGeometry: mesh not found in geometry: "+id),this._geometries_found[id]=null,null;for(var sources={},xmlsources=xmlmesh.querySelectorAll("source"),i=0;i<xmlsources.length;i++){var xmlsource=xmlsources.item(i);if(xmlsource.querySelector){var float_array=xmlsource.querySelector("float_array");if(float_array){var floats=this.readContentAsFloats(float_array),xmlaccessor=xmlsource.querySelector("accessor"),stride=parseInt(xmlaccessor.getAttribute("stride"));sources[xmlsource.getAttribute("id")]={stride:stride,data:floats}}}}var xmlvertices=xmlmesh.querySelector("vertices input"),vertices_source=sources[xmlvertices.getAttribute("source").substr(1)];sources[xmlmesh.querySelector("vertices").getAttribute("id")]=vertices_source;var mesh=null,xmlpolygons=xmlmesh.querySelector("polygons");if(xmlpolygons&&(mesh=this.readTriangles(xmlpolygons,sources)),!mesh){var xmltriangles=xmlmesh.querySelectorAll("triangles");xmltriangles&&xmltriangles.length&&(mesh=this.readTriangles(xmltriangles,sources))}if(!mesh){var xmlpolylist=xmlmesh.querySelector("polylist");xmlpolylist&&(mesh=this.readPolylist(xmlpolylist,sources))}if(!mesh){var xmllinestrip=xmlmesh.querySelector("linestrips");xmllinestrip&&(mesh=this.readLineStrip(sources,xmllinestrip))}if(!mesh)return console.log("no polygons or triangles in mesh: "+id),this._geometries_found[id]=null,null;if(flip&&!this.no_flip){for(var tmp=0,array=mesh.vertices,i=0,l=array.length;i<l;i+=3)tmp=array[i+1],array[i+1]=array[i+2],array[i+2]=-tmp;array=mesh.normals;for(var i=0,l=array.length;i<l;i+=3)tmp=array[i+1],array[i+1]=array[i+2],array[i+2]=-tmp}if(isWorker&&this.use_transferables)for(var i in mesh){var data=mesh[i];data&&data.buffer&&data.length>100&&this._transferables.push(data.buffer)}return mesh.filename=id,mesh.object_type="Mesh",this._geometries_found[id]=mesh,mesh},readTriangles:function(xmltriangles,sources){for(var groups=[],buffers=[],last_index=0,facemap={},vertex_remap=[],indicesArray=[],last_start=0,material_name="",tris=0;tris<xmltriangles.length;tris++){var xml_shape_root=xmltriangles.item(tris),triangles="triangles"==xml_shape_root.localName;material_name=xml_shape_root.getAttribute("material"),0==tris&&(buffers=this.readShapeInputs(xml_shape_root,sources));for(var xmlps=xml_shape_root.querySelectorAll("p"),i=(buffers.length,0);i<xmlps.length;i++){var xmlp=xmlps.item(i);if(!xmlp||!xmlp.textContent)break;var data=xmlp.textContent.trim().split(" "),first_index=-1,current_index=-1,prev_index=-1,num_values_per_vertex=1;for(var b in buffers)num_values_per_vertex=Math.max(num_values_per_vertex,buffers[b][4]+1);for(var k=0,l=data.length;k<l;k+=num_values_per_vertex){var vertex_id=data.slice(k,k+num_values_per_vertex).join(" ");if(prev_index=current_index,facemap.hasOwnProperty(vertex_id))current_index=facemap[vertex_id];else{for(var j=0;j<buffers.length;++j){var buffer=buffers[j],array=buffer[1],source=buffer[3],index=parseInt(data[k+buffer[4]]);0==j&&(vertex_remap[array.length/buffer[2]]=index),index*=buffer[2];for(var x=0;x<buffer[2];++x){if(void 0===source[index+x])throw"UNDEFINED!";array.push(source[index+x])}}current_index=last_index,last_index+=1,facemap[vertex_id]=current_index}triangles||(0==k&&(first_index=current_index),k>2&&(indicesArray.push(first_index),indicesArray.push(prev_index))),indicesArray.push(current_index)}}var group={name:"group"+tris,start:last_start,length:indicesArray.length-last_start,material:material_name||""};last_start=indicesArray.length,groups.push(group)}var mesh={vertices:new Float32Array(buffers[0][1]),info:{groups:groups},_remap:new Uint32Array(vertex_remap)};return this.transformMeshInfo(mesh,buffers,indicesArray),mesh},readPolylist:function(xml_shape_root,sources){var buffers=[],last_index=0,facemap={},vertex_remap=[],indicesArray=[];xml_shape_root.getAttribute("material"),buffers=this.readShapeInputs(xml_shape_root,sources);for(var xmlvcount=xml_shape_root.querySelector("vcount"),vcount=this.readContentAsUInt32(xmlvcount),xmlp=xml_shape_root.querySelector("p"),data=this.readContentAsUInt32(xmlp),num_data_vertex=buffers.length,pos=0,i=0,l=vcount.length;i<l;++i)for(var num_vertices=vcount[i],first_index=-1,current_index=-1,prev_index=-1,k=0;k<num_vertices;++k){var vertex_id=data.subarray(pos,pos+num_data_vertex).join(" ");if(prev_index=current_index,facemap.hasOwnProperty(vertex_id))current_index=facemap[vertex_id];else{for(var j=0;j<buffers.length;++j){var buffer=buffers[j],index=parseInt(data[pos+j]),array=buffer[1],source=buffer[3];0==j&&(vertex_remap[array.length/num_data_vertex]=index),index*=buffer[2];for(var x=0;x<buffer[2];++x)array.push(source[index+x])}current_index=last_index,last_index+=1,facemap[vertex_id]=current_index}num_vertices>3&&(0==k&&(first_index=current_index),k>2&&(indicesArray.push(first_index),indicesArray.push(prev_index))),indicesArray.push(current_index),pos+=num_data_vertex}var mesh={vertices:new Float32Array(buffers[0][1]),info:{},_remap:new Uint32Array(vertex_remap)};return this.transformMeshInfo(mesh,buffers,indicesArray),mesh},readShapeInputs:function(xml_shape_root,sources){for(var buffers=[],xmlinputs=xml_shape_root.querySelectorAll("input"),i=0;i<xmlinputs.length;i++){var xmlinput=xmlinputs.item(i);if(xmlinput.getAttribute){var semantic=xmlinput.getAttribute("semantic").toUpperCase(),stream_source=sources[xmlinput.getAttribute("source").substr(1)],offset=parseInt(xmlinput.getAttribute("offset")),data_set=0;xmlinput.getAttribute("set")&&(data_set=parseInt(xmlinput.getAttribute("set"))),buffers.push([semantic,[],stream_source.stride,stream_source.data,offset,data_set])}}return buffers},transformMeshInfo:function(mesh,buffers,indicesArray){for(var translator={normal:"normals",texcoord:"coords"},i=1;i<buffers.length;++i){var name=buffers[i][0].toLowerCase(),data=buffers[i][1];data.length&&(translator[name]&&(name=translator[name]),mesh[name]&&(name+=buffers[i][5]),mesh[name]=new Float32Array(data))}return indicesArray&&indicesArray.length&&(mesh.vertices.length>65536?mesh.triangles=new Uint32Array(indicesArray):mesh.triangles=new Uint16Array(indicesArray)),mesh},readLineStrip:function(sources,xmllinestrip){for(var buffers=[],last_index=0,facemap={},vertex_remap=[],indicesArray=[],xmlinputs=xmllinestrip.querySelectorAll("input"),i=0;i<xmlinputs.length;i++){var xmlinput=xmlinputs.item(i);if(xmlinput.getAttribute){var semantic=xmlinput.getAttribute("semantic").toUpperCase(),stream_source=sources[xmlinput.getAttribute("source").substr(1)],offset=parseInt(xmlinput.getAttribute("offset")),data_set=0;xmlinput.getAttribute("set")&&(data_set=parseInt(xmlinput.getAttribute("set"))),buffers.push([semantic,[],stream_source.stride,stream_source.data,offset,data_set])}}for(var xmlps=xmllinestrip.querySelectorAll("p"),num_data_vertex=buffers.length,i=0;i<xmlps.length;i++){var xmlp=xmlps.item(i);if(!xmlp||!xmlp.textContent)break;for(var data=xmlp.textContent.trim().split(" "),current_index=-1,k=0,l=data.length;k<l;k+=num_data_vertex){var vertex_id=data.slice(k,k+num_data_vertex).join(" ");if(current_index,facemap.hasOwnProperty(vertex_id))current_index=facemap[vertex_id];else{for(var j=0;j<buffers.length;++j){var buffer=buffers[j],index=parseInt(data[k+j]),array=buffer[1],source=buffer[3];0==j&&(vertex_remap[array.length/num_data_vertex]=index),index*=buffer[2];for(var x=0;x<buffer[2];++x)array.push(source[index+x])}current_index=last_index,last_index+=1,facemap[vertex_id]=current_index}indicesArray.push(current_index)}}var mesh={primitive:"line_strip",vertices:new Float32Array(buffers[0][1]),info:{}};return this.transformMeshInfo(mesh,buffers,indicesArray)},findXMLNodeById:function(root,nodename,id){if(this._xmlroot._nodes_by_id){var n=this._xmlroot._nodes_by_id[id];if(n&&n.localName==nodename)return n}else{var n=this._xmlroot.getElementById(id);if(n)return n}for(var childs=root.childNodes,i=0;i<childs.length;++i){var xmlnode=childs.item(i);if(1==xmlnode.nodeType&&xmlnode.localName==nodename){if(xmlnode.getAttribute("id")==id)return xmlnode}}return null},readImages:function(root){var xmlimages=root.querySelector("library_images");if(!xmlimages)return null;for(var images={},xmlimages_childs=xmlimages.childNodes,i=0;i<xmlimages_childs.length;++i){var xmlimage=xmlimages_childs.item(i);if(1==xmlimage.nodeType){var xmlinitfrom=xmlimage.querySelector("init_from");if(xmlinitfrom&&xmlinitfrom.textContent){var filename=this.getFilename(xmlinitfrom.textContent),id=xmlimage.getAttribute("id");images[id]={filename:filename,map:id,name:xmlimage.getAttribute("name"),path:xmlinitfrom.textContent}}}}return images},readAnimations:function(root,scene){var xmlanimations=root.querySelector("library_animations");if(!xmlanimations)return null;for(var xmlanimation_childs=xmlanimations.childNodes,animations={object_type:"Animation",takes:{}},default_take={tracks:[]},tracks=default_take.tracks,i=0;i<xmlanimation_childs.length;++i){var xmlanimation=xmlanimation_childs.item(i);if(1==xmlanimation.nodeType&&"animation"==xmlanimation.localName){if(xmlanimation.getAttribute("id"))this.readAnimation(xmlanimation,tracks);else{var xmlanimation2_childs=xmlanimation.querySelectorAll("animation");if(xmlanimation2_childs.length)for(var j=0;j<xmlanimation2_childs.length;++j){var xmlanimation2=xmlanimation2_childs.item(j);this.readAnimation(xmlanimation2,tracks)}else this.readAnimation(xmlanimation,tracks)}}}if(!tracks.length)return null;for(var max_time=0,i=0;i<tracks.length;++i)max_time<tracks[i].duration&&(max_time=tracks[i].duration);return default_take.name="default",default_take.duration=max_time,animations.takes[default_take.name]=default_take,animations},readAnimation:function(xmlanimation,result){if("animation"!=xmlanimation.localName)return null;var xmlchannel_list=(xmlanimation.getAttribute("id"),xmlanimation.querySelectorAll("channel"));if(!xmlchannel_list.length)return null;for(var tracks=result||[],i=0;i<xmlchannel_list.length;++i){var anim=this.readChannel(xmlchannel_list.item(i),xmlanimation);anim&&tracks.push(anim)}return tracks},readChannel:function(xmlchannel,xmlanimation){if("channel"!=xmlchannel.localName||"animation"!=xmlanimation.localName)return null;var source=xmlchannel.getAttribute("source"),target=xmlchannel.getAttribute("target"),xmlsampler=this.findXMLNodeById(xmlanimation,"sampler",source.substr(1));if(!xmlsampler)return console.error("Error DAE: Sampler not found in "+source),null;for(var inputs={},params={},sources={},xmlinputs=xmlsampler.querySelectorAll("input"),time_data=null,j=0;j<xmlinputs.length;j++){var xmlinput=xmlinputs.item(j),source_name=xmlinput.getAttribute("source"),semantic=xmlinput.getAttribute("semantic"),xmlsource=this.findXMLNodeById(xmlanimation,"source",source_name.substr(1));if(xmlsource){var xmlparam=xmlsource.querySelector("param");if(xmlparam){var type=xmlparam.getAttribute("type");inputs[semantic]={source:source_name,type:type};var data_array=null;if("float"==type||"float4x4"==type){var xmlfloatarray=xmlsource.querySelector("float_array"),floats=this.readContentAsFloats(xmlfloatarray);sources[source_name]=floats,data_array=floats;var param_name=xmlparam.getAttribute("name");"TIME"==param_name&&(time_data=data_array),"OUTPUT"==semantic&&(param_name=semantic),param_name?params[param_name]=type:console.warn("Collada: <param> without name attribute in <animation>")}}}}if(!time_data)return console.error("Error DAE: no TIME info found in <channel>: "+xmlchannel.getAttribute("source")),null;var path=target.split("/"),anim={},nodename=path[0],node=this._nodes_by_id[nodename],locator=node.id+"/"+path[1];anim.name=path[1],anim.property=locator;var type="number",element_size=1,param_type=params.OUTPUT;switch(param_type){case"float":element_size=1;break;case"float3x3":element_size=9,type="mat3";break;case"float4x4":element_size=16,type="mat4"}anim.type=type,anim.value_size=element_size,anim.duration=time_data[time_data.length-1];var value_data=sources[inputs.OUTPUT.source];if(!value_data)return null;for(var num_samples=time_data.length,sample_size=element_size+1,anim_data=new Float32Array(num_samples*sample_size),j=0;j<time_data.length;++j){anim_data[j*sample_size]=time_data[j];var value=value_data.subarray(j*element_size,(j+1)*element_size);"float4x4"==param_type&&this.transformMatrix(value,node?0==node._depth:0),anim_data.set(value,j*sample_size+1)}if(isWorker&&this.use_transferables){var data=anim_data;data&&data.buffer&&data.length>100&&this._transferables.push(data.buffer)}return anim.data=anim_data,anim},findNode:function(root,id){if(root.id==id)return root;if(root.children)for(var i in root.children){var ret=this.findNode(root.children[i],id);if(ret)return ret}return null},readLibraryControllers:function(scene){var xmllibrarycontrollers=this._xmlroot.querySelector("library_controllers");if(!xmllibrarycontrollers)return null;for(var xmllibrarycontrollers_childs=xmllibrarycontrollers.childNodes,i=0;i<xmllibrarycontrollers_childs.length;++i){var xmlcontroller=xmllibrarycontrollers_childs.item(i);if(1==xmlcontroller.nodeType&&"controller"==xmlcontroller.localName){var id=xmlcontroller.getAttribute("id");this._controllers_found[id]||this.readController(xmlcontroller,null,scene)}}},readController:function(xmlcontroller,flip,scene){if("controller"==!xmlcontroller.localName)return console.warn("readController: not a controller: "+xmlcontroller.localName),null;var id=xmlcontroller.getAttribute("id");if(this._controllers_found[id])return this._controllers_found[id];var mesh=null,xmlskin=xmlcontroller.querySelector("skin");xmlskin&&(mesh=this.readSkinController(xmlskin,flip,scene));var xmlmorph=xmlcontroller.querySelector("morph");return xmlmorph&&(mesh=this.readMorphController(xmlmorph,flip,scene,mesh)),this._controllers_found[id]?id+="_1blah":this._controllers_found[id]=mesh,mesh},readSkinController:function(xmlskin,flip,scene){var id_geometry=xmlskin.getAttribute("source"),mesh=this.readGeometry(id_geometry,flip,scene);if(!mesh)return null;var sources=this.readSources(xmlskin,flip);if(!sources)return null;var bind_matrix=null,xmlbindmatrix=xmlskin.querySelector("bind_shape_matrix");xmlbindmatrix?(bind_matrix=this.readContentAsFloats(xmlbindmatrix),this.transformMatrix(bind_matrix,!0,!0)):bind_matrix=_glMatrix.mat4.create();var joints=[],xmljoints=xmlskin.querySelector("joints");if(xmljoints){for(var joints_source=null,inv_bind_source=null,xmlinputs=xmljoints.querySelectorAll("input"),i=0;i<xmlinputs.length;i++){var xmlinput=xmlinputs[i],sem=xmlinput.getAttribute("semantic").toUpperCase(),src=xmlinput.getAttribute("source"),source=sources[src.substr(1)];"JOINT"==sem?joints_source=source:"INV_BIND_MATRIX"==sem&&(inv_bind_source=source)}if(!inv_bind_source||!joints_source)return console.error("Error DAE: no joints or inv_bind sources found"),null;for(var i in joints_source){var inv_mat=inv_bind_source.subarray(16*i,16*i+16),nodename=joints_source[i],node=this._nodes_by_id[nodename];node?(this.transformMatrix(inv_mat,0==node._depth,!0),joints.push([nodename,inv_mat])):console.warn("Node "+nodename+" not found")}}var xmlvertexweights=xmlskin.querySelector("vertex_weights");if(xmlvertexweights){for(var weights_indexed_array=null,xmlinputs=xmlvertexweights.querySelectorAll("input"),i=0;i<xmlinputs.length;i++)"WEIGHT"==xmlinputs[i].getAttribute("semantic").toUpperCase()&&(weights_indexed_array=sources[xmlinputs.item(i).getAttribute("source").substr(1)]);if(!weights_indexed_array)throw"no weights found";for(var xmlvcount=xmlvertexweights.querySelector("vcount"),vcount=this.readContentAsUInt32(xmlvcount),xmlv=xmlvertexweights.querySelector("v"),v=this.readContentAsUInt32(xmlv),num_vertices=mesh.vertices.length/3,weights_array=new Float32Array(4*num_vertices),bone_index_array=new Uint8Array(4*num_vertices),pos=0,remap=mesh._remap,max_bone=0,i=0,l=vcount.length;i<l;++i){for(var num_bones=vcount[i],offset=pos,b=bone_index_array.subarray(4*i,4*i+4),w=weights_array.subarray(4*i,4*i+4),sum=0,j=0;j<num_bones&&j<4;++j)b[j]=v[offset+2*j],b[j]>max_bone&&(max_bone=b[j]),w[j]=weights_indexed_array[v[offset+2*j+1]],sum+=w[j];if(num_bones>4&&sum<1)for(var inv_sum=1/sum,j=0;j<4;++j)w[j]*=inv_sum;pos+=2*num_bones}for(var final_weights=new Float32Array(4*num_vertices),final_bone_indices=new Uint8Array(4*num_vertices),used_joints=[],i=0;i<num_vertices;++i){for(var p=4*remap[i],w=weights_array.subarray(p,p+4),b=bone_index_array.subarray(p,p+4),k=0;k<3;++k){for(var max_pos=k,max_value=w[k],j=k+1;j<4;++j)w[j]<=max_value||(max_pos=j,max_value=w[j]);if(max_pos!=k){var tmp=w[k];w[k]=w[max_pos],w[max_pos]=tmp,tmp=b[k],b[k]=b[max_pos],b[max_pos]=tmp}}final_weights.set(w,4*i),final_bone_indices.set(b,4*i),w[0]&&(used_joints[b[0]]=!0),w[1]&&(used_joints[b[1]]=!0),w[2]&&(used_joints[b[2]]=!0),w[3]&&(used_joints[b[3]]=!0)}max_bone>=joints.length&&console.warn("Mesh uses higher bone index than bones found");for(var new_bones=[],bones_translation={},i=0;i<used_joints.length;++i)used_joints[i]&&(bones_translation[i]=new_bones.length,new_bones.push(joints[i]));if(new_bones.length<joints.length){for(var i=0;i<final_bone_indices.length;i++)final_bone_indices[i]=bones_translation[final_bone_indices[i]];joints=new_bones}mesh.weights=final_weights,mesh.bone_indices=final_bone_indices,mesh.bones=joints,mesh.bind_matrix=bind_matrix}return mesh},readMorphController:function(xmlmorph,flip,scene,mesh){var id_geometry=xmlmorph.getAttribute("source"),base_mesh=this.readGeometry(id_geometry,flip,scene);if(!base_mesh)return null;var sources=this.readSources(xmlmorph,flip),morphs=[],xmltargets=xmlmorph.querySelector("targets");if(!xmltargets)return null;for(var xmlinputs=xmltargets.querySelectorAll("input"),targets=null,weights=null,i=0;i<xmlinputs.length;i++){var xmlinput=xmlinputs.item(i),semantic=xmlinput.getAttribute("semantic").toUpperCase(),data=sources[xmlinput.getAttribute("source").substr(1)];"MORPH_TARGET"==semantic?targets=data:"MORPH_WEIGHT"==semantic&&(weights=data)}if(!targets||!weights)return console.warn("Morph controller without targets or weights. Skipping it."),null;for(var i in targets){var id="#"+targets[i],geometry=this.readGeometry(id,flip,scene);scene.meshes[id]=geometry,morphs.push({mesh:id,weight:weights[i]})}return base_mesh.morph_targets=morphs,base_mesh},readBindMaterials:function(xmlbind_material,mesh){for(var materials=[],xmltechniques=xmlbind_material.querySelectorAll("technique_common"),i=0;i<xmltechniques.length;i++)for(var xmltechnique=xmltechniques.item(i),xmlinstance_materials=xmltechnique.querySelectorAll("instance_material"),j=0;j<xmlinstance_materials.length;j++){var xmlinstance_material=xmlinstance_materials.item(j);xmlinstance_material&&materials.push(xmlinstance_material.getAttribute("symbol"))}return materials},readSources:function(xmlnode,flip){for(var sources={},xmlsources=xmlnode.querySelectorAll("source"),i=0;i<xmlsources.length;i++){var xmlsource=xmlsources.item(i);if(xmlsource.querySelector){if(xmlsource.querySelector("float_array")){var floats=this.readContentAsFloats(xmlsource);sources[xmlsource.getAttribute("id")]=floats}else{var name_array=xmlsource.querySelector("Name_array");if(name_array){var names=this.readContentAsStringsArray(name_array);if(!names)continue;sources[xmlsource.getAttribute("id")]=names}else{var ref_array=xmlsource.querySelector("IDREF_array");if(ref_array){var names=this.readContentAsStringsArray(ref_array);if(!names)continue;sources[xmlsource.getAttribute("id")]=names}else;}}}}return sources},readContentAsUInt32:function(xmlnode){if(!xmlnode)return null;var text=xmlnode.textContent;if(text=text.replace(/\n/gi," "),text=text.trim(),0==text.length)return null;for(var numbers=text.split(" "),floats=new Uint32Array(numbers.length),k=0;k<numbers.length;k++)floats[k]=parseInt(numbers[k]);return floats},readContentAsFloats:function(xmlnode){if(!xmlnode)return null;var text=xmlnode.textContent;text=text.replace(/\n/gi," "),text=text.replace(/\s\s+/gi," "),text=text.replace(/\t/gi,""),text=text.trim();for(var numbers=text.split(" "),count=xmlnode.getAttribute("count"),length=count?parseInt(count):numbers.length,floats=new Float32Array(length),k=0;k<numbers.length;k++)floats[k]=parseFloat(numbers[k]);return floats},readContentAsStringsArray:function(xmlnode){if(!xmlnode)return null;var text=xmlnode.textContent;text=text.replace(/\n/gi," "),text=text.replace(/\s\s/gi," "),text=text.trim();for(var words=text.split(" "),k=0;k<words.length;k++)words[k]=words[k].trim();if(xmlnode.getAttribute("count")&&parseInt(xmlnode.getAttribute("count"))!=words.length){var merged_words=[],name="";for(var i in words)name?name+=" "+words[i]:name=words[i],this._nodes_by_id[this.safeString(name)]&&(merged_words.push(this.safeString(name)),name="");var count=parseInt(xmlnode.getAttribute("count"));return merged_words.length==count?merged_words:(console.error("Error: bone names have spaces, avoid using spaces in names"),null)}return words},max3d_matrix_0:new Float32Array([0,-1,0,0,0,0,-1,0,1,0,0,-0,0,0,0,1]),transformMatrix:function(matrix,first_level,inverted){if(_glMatrix.mat4.transpose(matrix,matrix),this.no_flip)return matrix;if(first_level){var temp=new Float32Array(matrix.subarray(4,8));matrix.set(matrix.subarray(8,12),4),matrix.set(temp,8),temp=matrix.subarray(8,12),vec4.scale(temp,temp,-1)}else{var M=_glMatrix.mat4.create(),m=matrix;M.set([m[0],m[2],-m[1]],0),M.set([m[8],m[10],-m[9]],4),M.set([-m[4],-m[6],m[5]],8),M.set([m[12],m[14],-m[13]],12),m.set(M)}return matrix}};exports.default=Collada,module.exports=exports.default}).call(exports,__webpack_require__(70))},function(module,exports,__webpack_require__){"use strict";var g,_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj};g=function(){return this}();try{g=g||Function("return this")()||(0,eval)("this")}catch(e){"object"===("undefined"==typeof window?"undefined":_typeof(window))&&(g=window)}module.exports=g},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_Pass=__webpack_require__(9),_GLTool=(_interopRequireDefault(_Pass),__webpack_require__(0)),_GLTool2=_interopRequireDefault(_GLTool),_Geom=__webpack_require__(7),_Geom2=_interopRequireDefault(_Geom),_FrameBuffer=__webpack_require__(12),_FrameBuffer2=_interopRequireDefault(_FrameBuffer),EffectComposer=function(){function EffectComposer(mWidth,mHeight){arguments.length>2&&void 0!==arguments[2]&&arguments[2];_classCallCheck(this,EffectComposer),this._width=mWidth||_GLTool2.default.width,this._height=mHeight||_GLTool2.default.height,this._params={},this.setSize(mWidth,mHeight),this._mesh=_Geom2.default.bigTriangle(),this._passes=[],this._returnTexture}return _createClass(EffectComposer,[{key:"addPass",value:function(pass){if(pass.passes)return void this.addPass(pass.passes);if(pass.length)for(var i=0;i<pass.length;i++)this._passes.push(pass[i]);else this._passes.push(pass)}},{key:"render",value:function(mSource){var _this=this,source=mSource,fboTarget=void 0;return this._passes.forEach(function(pass){fboTarget=pass.hasFbo?pass.fbo:_this._fboTarget,fboTarget.bind(),_GLTool2.default.clear(0,0,0,0),pass.render(source),_GLTool2.default.draw(_this._mesh),fboTarget.unbind(),pass.hasFbo?source=pass.fbo.getTexture():(_this._swap(),source=_this._fboCurrent.getTexture())}),this._returnTexture=source,source}},{key:"_swap",value:function(){var tmp=this._fboCurrent;this._fboCurrent=this._fboTarget,this._fboTarget=tmp,this._current=this._fboCurrent,this._target=this._fboTarget}},{key:"setSize",value:function(mWidth,mHeight){this._width=mWidth,this._height=mHeight,this._fboCurrent=new _FrameBuffer2.default(this._width,this._height,this._params),this._fboTarget=new _FrameBuffer2.default(this._width,this._height,this._params)}},{key:"getTexture",value:function(){return this._returnTexture}},{key:"passes",get:function(){return this._passes}}]),EffectComposer}();exports.default=EffectComposer},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _PassVBlur=__webpack_require__(37),_PassVBlur2=_interopRequireDefault(_PassVBlur),_PassHBlur=__webpack_require__(39),_PassHBlur2=_interopRequireDefault(_PassHBlur),_PassMacro2=__webpack_require__(36),_PassMacro3=_interopRequireDefault(_PassMacro2),PassBlur=function(_PassMacro){function PassBlur(){var mQuality=arguments.length>0&&void 0!==arguments[0]?arguments[0]:9,mWidth=arguments[1],mHeight=arguments[2],mParams=arguments[3];_classCallCheck(this,PassBlur);var _this=_possibleConstructorReturn(this,(PassBlur.__proto__||Object.getPrototypeOf(PassBlur)).call(this)),vBlur=new _PassVBlur2.default(mQuality,mWidth,mHeight,mParams),hBlur=new _PassHBlur2.default(mQuality,mWidth,mHeight,mParams);return _this.addPass(vBlur),_this.addPass(hBlur),_this}return _inherits(PassBlur,_PassMacro),PassBlur}(_PassMacro3.default);exports.default=PassBlur},function(module,exports){module.exports="// blur5.frag\n// source  : https://github.com/Jam3/glsl-fast-gaussian-blur\n\n#define SHADER_NAME BLUR_5\n\nprecision highp float;\n#define GLSLIFY 1\nvarying vec2 vTextureCoord;\nuniform sampler2D texture;\nuniform vec2 uDirection;\nuniform vec2 uResolution;\n\nvec4 blur5(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n\tvec4 color = vec4(0.0);\n\tvec2 off1 = vec2(1.3333333333333333) * direction;\n\tcolor += texture2D(image, uv) * 0.29411764705882354;\n\tcolor += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n\tcolor += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n\treturn color; \n}\n\n\nvoid main(void) {\n    gl_FragColor = blur5(texture, vTextureCoord, uResolution, uDirection);\n}"},function(module,exports){module.exports="// blur9.frag\n// source  : https://github.com/Jam3/glsl-fast-gaussian-blur\n\n#define SHADER_NAME BLUR_9\n\nprecision highp float;\n#define GLSLIFY 1\nvarying vec2 vTextureCoord;\nuniform sampler2D texture;\nuniform vec2 uDirection;\nuniform vec2 uResolution;\n\nvec4 blur9(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n\tvec4 color = vec4(0.0);\n\tvec2 off1 = vec2(1.3846153846) * direction;\n\tvec2 off2 = vec2(3.2307692308) * direction;\n\tcolor += texture2D(image, uv) * 0.2270270270;\n\tcolor += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n\tcolor += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n\tcolor += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n\tcolor += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n\treturn color;\n}\n\n\nvoid main(void) {\n    gl_FragColor = blur9(texture, vTextureCoord, uResolution, uDirection);\n}"},function(module,exports){module.exports="// blur13.frag\n// source  : https://github.com/Jam3/glsl-fast-gaussian-blur\n\n#define SHADER_NAME BLUR_13\n\nprecision highp float;\n#define GLSLIFY 1\nvarying vec2 vTextureCoord;\nuniform sampler2D texture;\nuniform vec2 uDirection;\nuniform vec2 uResolution;\n\nvec4 blur13(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n\tvec4 color = vec4(0.0);\n\tvec2 off1 = vec2(1.411764705882353) * direction;\n\tvec2 off2 = vec2(3.2941176470588234) * direction;\n\tvec2 off3 = vec2(5.176470588235294) * direction;\n\tcolor += texture2D(image, uv) * 0.1964825501511404;\n\tcolor += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n\tcolor += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n\tcolor += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n\tcolor += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n\tcolor += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n\tcolor += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n\treturn color;\n}\n\n\nvoid main(void) {\n    gl_FragColor = blur13(texture, vTextureCoord, uResolution, uDirection);\n}"},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_Pass2=__webpack_require__(9),_Pass3=_interopRequireDefault(_Pass2),_fxaa=__webpack_require__(40),_fxaa2=_interopRequireDefault(_fxaa),PassFxaa=function(_Pass){function PassFxaa(){_classCallCheck(this,PassFxaa);var _this=_possibleConstructorReturn(this,(PassFxaa.__proto__||Object.getPrototypeOf(PassFxaa)).call(this,_fxaa2.default));return _this.uniform("uResolution",[1/_GLTool2.default.width,1/_GLTool2.default.height]),_this}return _inherits(PassFxaa,_Pass),PassFxaa}(_Pass3.default);exports.default=PassFxaa},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_get=function get(object,property,receiver){null===object&&(object=Function.prototype);var desc=Object.getOwnPropertyDescriptor(object,property);if(void 0===desc){var parent=Object.getPrototypeOf(object);return null===parent?void 0:get(parent,property,receiver)}if("value"in desc)return desc.value;var getter=desc.get;if(void 0!==getter)return getter.call(receiver)},_Geom=__webpack_require__(7),_Geom2=_interopRequireDefault(_Geom),_GLShader=__webpack_require__(2),_GLShader2=_interopRequireDefault(_GLShader),_Batch2=__webpack_require__(4),_Batch3=_interopRequireDefault(_Batch2),vs=__webpack_require__(18),fs=__webpack_require__(19),BatchCopy=function(_Batch){function BatchCopy(){_classCallCheck(this,BatchCopy);var mesh=_Geom2.default.bigTriangle(),shader=new _GLShader2.default(vs,fs),_this=_possibleConstructorReturn(this,(BatchCopy.__proto__||Object.getPrototypeOf(BatchCopy)).call(this,mesh,shader));return shader.bind(),shader.uniform("texture","uniform1i",0),_this}return _inherits(BatchCopy,_Batch),_createClass(BatchCopy,[{key:"draw",value:function(texture){this.shader.bind(),texture.bind(0),_get(BatchCopy.prototype.__proto__||Object.getPrototypeOf(BatchCopy.prototype),"draw",this).call(this)}}]),BatchCopy}(_Batch3.default);exports.default=BatchCopy},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_Mesh=__webpack_require__(5),_Mesh2=_interopRequireDefault(_Mesh),_GLShader=__webpack_require__(2),_GLShader2=_interopRequireDefault(_GLShader),_Batch2=__webpack_require__(4),_Batch3=_interopRequireDefault(_Batch2),vs=__webpack_require__(79),fs=__webpack_require__(80),BatchAxis=function(_Batch){function BatchAxis(){_classCallCheck(this,BatchAxis);var positions=[],colors=[],indices=[0,1,2,3,4,5],r=9999;positions.push([-r,0,0]),positions.push([r,0,0]),positions.push([0,-r,0]),positions.push([0,r,0]),positions.push([0,0,-r]),positions.push([0,0,r]),colors.push([1,0,0]),colors.push([1,0,0]),colors.push([0,1,0]),colors.push([0,1,0]),colors.push([0,0,1]),colors.push([0,0,1]);var mesh=new _Mesh2.default(_GLTool2.default.LINES);mesh.bufferVertex(positions),mesh.bufferIndex(indices),mesh.bufferData(colors,"aColor",3);var shader=new _GLShader2.default(vs,fs);return _possibleConstructorReturn(this,(BatchAxis.__proto__||Object.getPrototypeOf(BatchAxis)).call(this,mesh,shader))}return _inherits(BatchAxis,_Batch),BatchAxis}(_Batch3.default);exports.default=BatchAxis},function(module,exports){module.exports="// axis.vert\n\n#define SHADER_NAME BASIC_VERTEX\n\nprecision highp float;\n#define GLSLIFY 1\nattribute vec3 aVertexPosition;\nattribute vec3 aColor;\nattribute vec3 aNormal;\n\nuniform mat4 uModelMatrix;\nuniform mat4 uViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nvarying vec3 vColor;\nvarying vec3 vNormal;\n\nvoid main(void) {\n    gl_Position = uProjectionMatrix * uViewMatrix * uModelMatrix * vec4(aVertexPosition, 1.0);\n    vColor = aColor;\n    vNormal = aNormal;\n}"},function(module,exports){module.exports="// axis.frag\n\n#define SHADER_NAME SIMPLE_TEXTURE\n\nprecision lowp float;\n#define GLSLIFY 1\nvarying vec3 vColor;\nvarying vec3 vNormal;\n\nvoid main(void) {\n\t// vec3 color = vNormal;\n\tvec3 color = vColor + vNormal * 0.0001;\n    gl_FragColor = vec4(color, 1.0);\n}"},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_get=function get(object,property,receiver){null===object&&(object=Function.prototype);var desc=Object.getOwnPropertyDescriptor(object,property);if(void 0===desc){var parent=Object.getPrototypeOf(object);return null===parent?void 0:get(parent,property,receiver)}if("value"in desc)return desc.value;var getter=desc.get;if(void 0!==getter)return getter.call(receiver)},_Geom=__webpack_require__(7),_Geom2=_interopRequireDefault(_Geom),_GLShader=__webpack_require__(2),_GLShader2=_interopRequireDefault(_GLShader),_Batch2=__webpack_require__(4),_Batch3=_interopRequireDefault(_Batch2),vs=__webpack_require__(33),fs=__webpack_require__(10),BatchBall=function(_Batch){function BatchBall(){_classCallCheck(this,BatchBall);var mesh=_Geom2.default.sphere(1,24),shader=new _GLShader2.default(vs,fs);return _possibleConstructorReturn(this,(BatchBall.__proto__||Object.getPrototypeOf(BatchBall)).call(this,mesh,shader))}return _inherits(BatchBall,_Batch),_createClass(BatchBall,[{key:"draw",value:function(){var position=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[0,0,0],scale=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],color=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1,1],opacity=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this.shader.bind(),this.shader.uniform("position","uniform3fv",position),this.shader.uniform("scale","uniform3fv",scale),this.shader.uniform("color","uniform3fv",color),this.shader.uniform("opacity","uniform1f",opacity),_get(BatchBall.prototype.__proto__||Object.getPrototypeOf(BatchBall.prototype),"draw",this).call(this)}}]),BatchBall}(_Batch3.default);exports.default=BatchBall},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_get=function get(object,property,receiver){null===object&&(object=Function.prototype);var desc=Object.getOwnPropertyDescriptor(object,property);if(void 0===desc){var parent=Object.getPrototypeOf(object);return null===parent?void 0:get(parent,property,receiver)}if("value"in desc)return desc.value;var getter=desc.get;if(void 0!==getter)return getter.call(receiver)},_GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_Mesh=__webpack_require__(5),_Mesh2=_interopRequireDefault(_Mesh),_GLShader=__webpack_require__(2),_GLShader2=_interopRequireDefault(_GLShader),_Batch2=__webpack_require__(4),_Batch3=_interopRequireDefault(_Batch2),vs=__webpack_require__(83),fs=__webpack_require__(10),BatchDotsPlane=function(_Batch){function BatchDotsPlane(){_classCallCheck(this,BatchDotsPlane);var positions=[],indices=[],index=0,i=void 0,j=void 0;for(i=-100;i<100;i+=1)for(j=-100;j<100;j+=1)positions.push([i,j,0]),indices.push(index),index++,positions.push([i,0,j]),indices.push(index),index++;var mesh=new _Mesh2.default(_GLTool2.default.POINTS);mesh.bufferVertex(positions),mesh.bufferIndex(indices);var shader=new _GLShader2.default(vs,fs),_this=_possibleConstructorReturn(this,(BatchDotsPlane.__proto__||Object.getPrototypeOf(BatchDotsPlane)).call(this,mesh,shader));return _this.color=[1,1,1],_this.opacity=.5,_this}return _inherits(BatchDotsPlane,_Batch),_createClass(BatchDotsPlane,[{key:"draw",value:function(){this.shader.bind(),this.shader.uniform("color","uniform3fv",this.color),this.shader.uniform("opacity","uniform1f",this.opacity),_get(BatchDotsPlane.prototype.__proto__||Object.getPrototypeOf(BatchDotsPlane.prototype),"draw",this).call(this)}}]),BatchDotsPlane}(_Batch3.default);exports.default=BatchDotsPlane},function(module,exports){module.exports="// basic.vert\n\n#define SHADER_NAME DOTS_PLANE_VERTEX\n\nprecision highp float;\n#define GLSLIFY 1\nattribute vec3 aVertexPosition;\nattribute vec3 aNormal;\n\nuniform mat4 uModelMatrix;\nuniform mat4 uViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nvarying vec3 vNormal;\n\nvoid main(void) {\n    gl_Position = uProjectionMatrix * uViewMatrix * uModelMatrix * vec4(aVertexPosition + aNormal * 0.000001, 1.0);\n    gl_PointSize = 1.0;\n    vNormal = aNormal;\n}"},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_get=function get(object,property,receiver){null===object&&(object=Function.prototype);var desc=Object.getOwnPropertyDescriptor(object,property);if(void 0===desc){var parent=Object.getPrototypeOf(object);return null===parent?void 0:get(parent,property,receiver)}if("value"in desc)return desc.value;var getter=desc.get;if(void 0!==getter)return getter.call(receiver)},_GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_Mesh=__webpack_require__(5),_Mesh2=_interopRequireDefault(_Mesh),_GLShader=__webpack_require__(2),_GLShader2=_interopRequireDefault(_GLShader),_Batch2=__webpack_require__(4),_Batch3=_interopRequireDefault(_Batch2),vs=__webpack_require__(11),fs=__webpack_require__(10),BatchAxis=function(_Batch){function BatchAxis(){_classCallCheck(this,BatchAxis);var positions=[],indices=[0,1],coords=[[0,0],[1,1]];positions.push([0,0,0]),positions.push([0,0,0]);var mesh=new _Mesh2.default(_GLTool2.default.LINES);mesh.bufferVertex(positions),mesh.bufferTexCoord(coords),mesh.bufferIndex(indices);var shader=new _GLShader2.default(vs,fs);return _possibleConstructorReturn(this,(BatchAxis.__proto__||Object.getPrototypeOf(BatchAxis)).call(this,mesh,shader))}return _inherits(BatchAxis,_Batch),_createClass(BatchAxis,[{key:"draw",value:function(mPositionA,mPositionB){var color=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1,1],opacity=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this._mesh.bufferVertex([mPositionA,mPositionB]),this._shader.bind(),this._shader.uniform("color","vec3",color),this._shader.uniform("opacity","float",opacity),_get(BatchAxis.prototype.__proto__||Object.getPrototypeOf(BatchAxis.prototype),"draw",this).call(this)}}]),BatchAxis}(_Batch3.default);exports.default=BatchAxis},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_get=function get(object,property,receiver){null===object&&(object=Function.prototype);var desc=Object.getOwnPropertyDescriptor(object,property);if(void 0===desc){var parent=Object.getPrototypeOf(object);return null===parent?void 0:get(parent,property,receiver)}if("value"in desc)return desc.value;var getter=desc.get;if(void 0!==getter)return getter.call(receiver)},_Geom=__webpack_require__(7),_Geom2=_interopRequireDefault(_Geom),_GLShader=__webpack_require__(2),_GLShader2=_interopRequireDefault(_GLShader),_Batch2=__webpack_require__(4),_Batch3=_interopRequireDefault(_Batch2),vs=__webpack_require__(34),fs=__webpack_require__(35),BatchSkybox=function(_Batch){function BatchSkybox(){var size=arguments.length>0&&void 0!==arguments[0]?arguments[0]:20;_classCallCheck(this,BatchSkybox);var mesh=_Geom2.default.skybox(size),shader=new _GLShader2.default(vs,fs);return _possibleConstructorReturn(this,(BatchSkybox.__proto__||Object.getPrototypeOf(BatchSkybox)).call(this,mesh,shader))}return _inherits(BatchSkybox,_Batch),_createClass(BatchSkybox,[{key:"draw",value:function(texture){this.shader.bind(),texture.bind(0),_get(BatchSkybox.prototype.__proto__||Object.getPrototypeOf(BatchSkybox.prototype),"draw",this).call(this)}}]),BatchSkybox}(_Batch3.default);exports.default=BatchSkybox},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_get=function get(object,property,receiver){null===object&&(object=Function.prototype);var desc=Object.getOwnPropertyDescriptor(object,property);if(void 0===desc){var parent=Object.getPrototypeOf(object);return null===parent?void 0:get(parent,property,receiver)}if("value"in desc)return desc.value;var getter=desc.get;if(void 0!==getter)return getter.call(receiver)},_Geom=__webpack_require__(7),_Geom2=_interopRequireDefault(_Geom),_GLShader=__webpack_require__(2),_GLShader2=_interopRequireDefault(_GLShader),_Batch2=__webpack_require__(4),_Batch3=_interopRequireDefault(_Batch2),vs=__webpack_require__(87),fs=__webpack_require__(19),BatchSky=function(_Batch){function BatchSky(){var size=arguments.length>0&&void 0!==arguments[0]?arguments[0]:50,seg=arguments.length>1&&void 0!==arguments[1]?arguments[1]:24;_classCallCheck(this,BatchSky);var mesh=_Geom2.default.sphere(size,seg,!0),shader=new _GLShader2.default(vs,fs);return _possibleConstructorReturn(this,(BatchSky.__proto__||Object.getPrototypeOf(BatchSky)).call(this,mesh,shader))}return _inherits(BatchSky,_Batch),_createClass(BatchSky,[{key:"draw",value:function(texture){this.shader.bind(),texture.bind(0),_get(BatchSky.prototype.__proto__||Object.getPrototypeOf(BatchSky.prototype),"draw",this).call(this)}}]),BatchSky}(_Batch3.default);exports.default=BatchSky},function(module,exports){module.exports="// sky.vert\n\nprecision highp float;\n#define GLSLIFY 1\nattribute vec3 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec3 aNormal;\n\nuniform mat4 uModelMatrix;\nuniform mat4 uViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vNormal;\n\nvoid main(void) {\n\tmat4 matView = uViewMatrix;\n\tmatView[3][0] = 0.0;\n\tmatView[3][1] = 0.0;\n\tmatView[3][2] = 0.0;\n\t\n    gl_Position = uProjectionMatrix * matView * uModelMatrix * vec4(aVertexPosition, 1.0);\n    vTextureCoord = aTextureCoord;\n    vNormal = aNormal;\n}"},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_get=function get(object,property,receiver){null===object&&(object=Function.prototype);var desc=Object.getOwnPropertyDescriptor(object,property);if(void 0===desc){var parent=Object.getPrototypeOf(object);return null===parent?void 0:get(parent,property,receiver)}if("value"in desc)return desc.value;var getter=desc.get;if(void 0!==getter)return getter.call(receiver)},_GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_Geom=__webpack_require__(7),_Geom2=_interopRequireDefault(_Geom),_GLShader=__webpack_require__(2),_GLShader2=_interopRequireDefault(_GLShader),_Batch2=__webpack_require__(4),_Batch3=_interopRequireDefault(_Batch2),vs=__webpack_require__(18),fs=__webpack_require__(40),BatchFXAA=function(_Batch){function BatchFXAA(){_classCallCheck(this,BatchFXAA);var mesh=_Geom2.default.bigTriangle(),shader=new _GLShader2.default(vs,fs),_this=_possibleConstructorReturn(this,(BatchFXAA.__proto__||Object.getPrototypeOf(BatchFXAA)).call(this,mesh,shader));return shader.bind(),shader.uniform("texture","uniform1i",0),_this}return _inherits(BatchFXAA,_Batch),_createClass(BatchFXAA,[{key:"draw",value:function(texture){this.shader.bind(),texture.bind(0),this.shader.uniform("uResolution","vec2",[1/_GLTool2.default.width,1/_GLTool2.default.height]),_get(BatchFXAA.prototype.__proto__||Object.getPrototypeOf(BatchFXAA.prototype),"draw",this).call(this)}}]),BatchFXAA}(_Batch3.default);exports.default=BatchFXAA},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_scheduling=__webpack_require__(6),_scheduling2=_interopRequireDefault(_scheduling),_GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),_CameraPerspective=__webpack_require__(16),_CameraPerspective2=_interopRequireDefault(_CameraPerspective),_CameraOrtho=__webpack_require__(30),_CameraOrtho2=_interopRequireDefault(_CameraOrtho),_OrbitalControl=__webpack_require__(29),_OrbitalControl2=_interopRequireDefault(_OrbitalControl),Scene=function(){function Scene(){var _this=this;_classCallCheck(this,Scene),this._children=[],this._matrixIdentity=mat4.create(),_GLTool2.default.enableAlphaBlending(),this._init(),this._initTextures(),this._initViews(),this._efIndex=_scheduling2.default.addEF(function(){return _this._loop()}),window.addEventListener("resize",function(){return _this.resize()})}return _createClass(Scene,[{key:"update",value:function(){}},{key:"render",value:function(){}},{key:"stop",value:function(){-1!==this._efIndex&&(this._efIndex=_scheduling2.default.removeEF(this._efIndex))}},{key:"start",value:function(){var _this2=this;-1===this._efIndex&&(this._efIndex=_scheduling2.default.addEF(function(){return _this2._loop()}))}},{key:"resize",value:function(){_GLTool2.default.setSize(window.innerWidth,window.innerHeight),this.camera.setAspectRatio(_GLTool2.default.aspectRatio)}},{key:"addChild",value:function(mChild){this._children.push(mChild)}},{key:"removeChild",value:function(mChild){var index=this._children.indexOf(mChild);if(-1==index)return void console.warn("Child no exist");this._children.splice(index,1)}},{key:"_initTextures",value:function(){}},{key:"_initViews",value:function(){}},{key:"_renderChildren",value:function(){for(var child=void 0,i=0;i<this._children.length;i++)child=this._children[i],child.toRender();_GLTool2.default.rotate(this._matrixIdentity)}},{key:"_init",value:function(){this.camera=new _CameraPerspective2.default,this.camera.setPerspective(45*Math.PI/180,_GLTool2.default.aspectRatio,.1,100),this.orbitalControl=new _OrbitalControl2.default(this.camera,window,15),this.orbitalControl.radius.value=10,this.cameraOrtho=new _CameraOrtho2.default}},{key:"_loop",value:function(){_GLTool2.default.viewport(0,0,_GLTool2.default.width,_GLTool2.default.height),_GLTool2.default.setMatrices(this.camera),this.update(),this._renderChildren(),this.render()}}]),Scene}();exports.default=Scene},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_GLShader=__webpack_require__(2),_GLShader2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_GLShader),View=function(){function View(mStrVertex,mStrFrag){_classCallCheck(this,View),this.shader=new _GLShader2.default(mStrVertex,mStrFrag),this._init()}return _createClass(View,[{key:"_init",value:function(){}},{key:"render",value:function(){}}]),View}();exports.default=View},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_Object3D2=__webpack_require__(31),_Object3D3=_interopRequireDefault(_Object3D2),_GLShader=__webpack_require__(2),_GLShader2=_interopRequireDefault(_GLShader),_GLTool=__webpack_require__(0),_GLTool2=_interopRequireDefault(_GLTool),View3D=function(_Object3D){function View3D(mStrVertex,mStrFrag){_classCallCheck(this,View3D);var _this=_possibleConstructorReturn(this,(View3D.__proto__||Object.getPrototypeOf(View3D)).call(this));return _this._children=[],_this.shader=new _GLShader2.default(mStrVertex,mStrFrag),_this._init(),_this._matrixTemp=mat4.create(),_this}return _inherits(View3D,_Object3D),_createClass(View3D,[{key:"_init",value:function(){}},{key:"addChild",value:function(mChild){this._children.push(mChild)}},{key:"removeChild",value:function(mChild){var index=this._children.indexOf(mChild);if(-1==index)return void console.warn("Child no exist");this._children.splice(index,1)}},{key:"toRender",value:function(matrix){void 0===matrix&&(matrix=mat4.create()),mat4.mul(this._matrixTemp,matrix,this.matrix),_GLTool2.default.rotate(this._matrixTemp),this.render();for(var i=0;i<this._children.length;i++){this._children[i].toRender(this.matrix)}}},{key:"render",value:function(){}}]),View3D}(_Object3D3.default);exports.default=View3D}])});

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _saveImage = __webpack_require__(11);

Object.defineProperty(exports, 'saveImage', {
  enumerable: true,
  get: function get() {
    return _saveImage.saveImage;
  }
});

var _fromLatLngToPixel = __webpack_require__(12);

Object.defineProperty(exports, 'fromLatLngToPixel', {
  enumerable: true,
  get: function get() {
    return _fromLatLngToPixel.fromLatLngToPixel;
  }
});

var _distanceLatLng = __webpack_require__(13);

Object.defineProperty(exports, 'distanceLatLng', {
  enumerable: true,
  get: function get() {
    return _distanceLatLng.distanceLatLng;
  }
});

var _directionLatLng = __webpack_require__(14);

Object.defineProperty(exports, 'directionLatLng', {
  enumerable: true,
  get: function get() {
    return _directionLatLng.directionLatLng;
  }
});

var _directionMapPoint = __webpack_require__(15);

Object.defineProperty(exports, 'directionMapPoint', {
  enumerable: true,
  get: function get() {
    return _directionMapPoint.directionMapPoint;
  }
});

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(5)(false);
// imports


// module
exports.push([module.i, "html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n  position: fixed;\n  background: white; }\n\nhtml {\n  -webkit-text-size-adjust: none;\n  -moz-text-size-adjust: none;\n  text-size-adjust: none; }\n\nh1, h2, h3, h4, text, p, button {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-webkit-font-smoothing: antialiased;\n  font-family: 'Open Sans', sans-serif; }\n\nbutton {\n  outline: none; }\n\n.canvas-overlay {\n  z-index: 9999;\n  pointer-events: none;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0; }\n\n#map {\n  height: 100%; }\n\n.ui-container {\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  z-index: 999;\n  display: flex;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.25);\n  transition: opacity .5s ease-out; }\n  .hasCalibrated .ui-container {\n    opacity: 0; }\n\n.btn-calibrate {\n  position: absolute;\n  width: 200px;\n  height: 40px;\n  bottom: 15%;\n  background: white;\n  font-size: 16px;\n  border-radius: 18px; }\n", ""]);

// exports


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(4);

var _debugPolyfill = __webpack_require__(8);

var _debugPolyfill2 = _interopRequireDefault(_debugPolyfill);

var _alfrid = __webpack_require__(0);

var _alfrid2 = _interopRequireDefault(_alfrid);

var _googleMaps = __webpack_require__(9);

var _googleMaps2 = _interopRequireDefault(_googleMaps);

var _PathTracker = __webpack_require__(10);

var _PathTracker2 = _interopRequireDefault(_PathTracker);

var _HeadingCalibre = __webpack_require__(16);

var _HeadingCalibre2 = _interopRequireDefault(_HeadingCalibre);

var _HeadingCalibrate = __webpack_require__(17);

var _HeadingCalibrate2 = _interopRequireDefault(_HeadingCalibrate);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var GOOGLE_MAP_API_KEY = 'AIzaSyBqCqukoHGzJjI7Sqo41Nw9XT0AhnGoVDw';

if (document.body) {
	_init();
} else {
	window.addEventListener('DOMContentLoaded', _init);
}

var zoom = 16;
var map = void 0,
    marker = void 0,
    markerTarget1 = void 0,
    markerTarget2 = void 0,
    markerStart = void 0;

var target1 = {
	lat: 51.52864213850285,
	lng: -0.08503963359066802
};

var target2 = {
	lat: 51.52790792006495,
	lng: -0.08365561373898345
};

var oDebug = {
	latitude: '0',
	longitude: '0',
	dist1: '0',
	dist2: '0',
	dist: '0',
	heading: '0',
	headingLocal: '0',
	alpha: '0',
	headingOffset: '0',
	headingOffsetNew: '0'

};

var canvas = void 0,
    ctx = void 0,
    projection = void 0,
    pathTracker = void 0;
var point = {
	x: 0, y: 0
};
var target = {
	x: 0, y: 0
};
var heading = 0;
var headingLocal = 1.;
var headingOffset = 0;
var headingTarget = 0;
var hasLoggedInit = false;
var hasCalibrated = false;

var locPrev = { lat: 51.528111499999994, lng: -0.0859945 };
var locCurr = { lat: 51.528111499999994, lng: -0.0859945 };

var _fake = 0;

function _initMap() {
	canvas = document.createElement("canvas");
	canvas.className = 'canvas-overlay';
	canvas.width = window.innerWidth;
	canvas.height = window.innerHeight;

	document.body.appendChild(canvas);
	ctx = canvas.getContext('2d');

	pathTracker = new _PathTracker2.default(canvas, map);

	markerTarget1 = new google.maps.Marker({
		position: target1,
		map: map,
		title: 'Target 1'
	});

	// markerTarget2 = new google.maps.Marker({
	// 	position: target2,
	// 	map: map,
	// 	title: 'Target 2'
	// });


	var updateLocation = function updateLocation() {

		if (navigator.geolocation) {
			navigator.geolocation.getCurrentPosition(function (o) {

				oDebug.latitude = o.coords.latitude.toString();
				oDebug.longitude = o.coords.longitude.toString();

				if (marker) {
					marker.setMap(null);
				}

				var myLatlng = {
					lat: o.coords.latitude,
					lng: o.coords.longitude + _fake
				};
				locPrev.lat = locCurr.lat;
				locPrev.lng = locCurr.lng;
				locCurr.lat = myLatlng.lat;
				locCurr.lng = myLatlng.lng;

				var dist = (0, _utils.distanceLatLng)(locPrev, locCurr);

				_HeadingCalibre2.default.update(headingLocal);

				pathTracker.add(new google.maps.LatLng(myLatlng.lat, myLatlng.lng));

				marker = new google.maps.Marker({
					position: myLatlng,
					map: map,
					title: 'Me'
				});

				// oDebug.dist = `${dist}`;
				oDebug.dist1 = '' + (0, _utils.distanceLatLng)(myLatlng, target1);
				// oDebug.dist2 = `${distanceLatLng(myLatlng, target2)}`;

				target = (0, _utils.fromLatLngToPixel)(map, markerTarget1.position);
				point = (0, _utils.fromLatLngToPixel)(map, marker.position);

				//	get heading to target
				headingTarget = (0, _utils.directionMapPoint)(point, target) + Math.PI / 2;
			});
		}

		if (!_alfrid.GL.isMobile) {
			// _fake += 0.00005;
			var t = new Date().getTime() * 0.05;
			_fake = Math.sin(t) * 0.0015;
		}
	};

	setInterval(updateLocation, 1000);

	setTimeout(function () {
		// gui.add(oDebug, 'latitude').listen();
		// gui.add(oDebug, 'longitude').listen();
		gui.add(oDebug, 'dist1').name('Distance to Target').listen();
		gui.add(oDebug, 'headingOffset').listen();
		gui.add(oDebug, 'headingOffsetNew').listen();
		// gui.add(oDebug, 'dist2').listen();
		gui.add(_HeadingCalibrate2.default, 'stateString').listen();
		gui.add(pathTracker, 'clear').name('Clear tracks');
	}, 200);

	_alfrid2.default.Scheduler.addEF(update);

	window.addEventListener('deviceorientationabsolute', function (event) {
		console.log('on deviceorientation absolute');
		if (!hasLoggedInit) {
			console.log(event.absolute, event.alpha);
			hasLoggedInit = true;
		}

		oDebug.heading = '' + heading;
		oDebug.alpha = '' + event.alpha;
		heading = -event.alpha * Math.PI / 180;
		if (!_alfrid.GL.isMobile) {
			heading = -0.5;
		}
	}, false);

	window.addEventListener('deviceorientation', function (event) {
		console.log('on deviceorientation');
		headingLocal = -event.alpha * Math.PI / 180;
		if (!_alfrid.GL.isMobile) {
			headingLocal = 0.5;
		}
	}, false);

	var btnCalibre = document.body.querySelector('.btn-calibrate');
	btnCalibre.addEventListener('click', function (e) {

		if (!hasCalibrated) {
			btnCalibre.innerHTML = 'END';
			hasCalibrated = true;

			// markerStart = new google.maps.Marker({
			// 	position: locCurr,
			// 	map: map,
			// 	title: 'Target 1'
			// });
			_HeadingCalibre2.default.start({
				lat: locCurr.lat,
				lng: locCurr.lng
			});

			_HeadingCalibrate2.default.once('onStart', function (loc) {
				markerStart = new google.maps.Marker({
					position: loc,
					map: map,
					title: 'Target 1'
				});
			});

			_HeadingCalibrate2.default.on('onProgress', function (percent) {
				console.log('Calibrating progress :', percent);
			});

			_HeadingCalibrate2.default.start().then(function (offset) {
				console.log('Heading Offset:', offset, _HeadingCalibrate2.default.offset);
				oDebug.headingOffsetNew = '' + offset;

				markerStart.setMap(null);
				_HeadingCalibre2.default.stop({
					lat: locCurr.lat,
					lng: locCurr.lng
				});
				oDebug.headingOffset = '' + _HeadingCalibre2.default.offset;
				document.body.classList.add('hasCalibrated');
			}, function (e) {
				console.log('Error', e);
			});
		} else {
			markerStart.setMap(null);
			_HeadingCalibre2.default.stop({
				lat: locCurr.lat,
				lng: locCurr.lng
			});
			oDebug.headingOffset = '' + _HeadingCalibre2.default.offset;
			document.body.classList.add('hasCalibrated');
		}
	});
}

function update() {
	ctx.clearRect(0, 0, canvas.width, canvas.height);

	ctx.save();

	var w = 8;
	var h = 50;
	ctx.translate(point.x, point.y);

	ctx.save();
	// console.log('angle :', heading, HeadingCalibre.offset);
	ctx.rotate(headingLocal + _HeadingCalibre2.default.offset);
	ctx.fillStyle = 'rgba(255, 200, 0, 1)';
	ctx.fillRect(-w / 2, -h, w, h);
	ctx.restore();

	w = 4;
	ctx.save();
	// ctx.rotate(headingLocal + HeadingCalibre.offset);
	ctx.rotate(headingTarget);
	ctx.fillStyle = 'rgba(0, 128, 200, 1)';
	ctx.fillRect(-w / 2, -h, w, h);
	ctx.restore();

	w = 2;
	ctx.save();
	ctx.rotate(headingLocal);
	ctx.fillStyle = 'rgba(20, 80, 28, 1)';
	ctx.fillRect(-w / 2, -h, w, h);
	ctx.restore();

	ctx.restore();

	// pathTracker.update(heading);
	pathTracker.update(headingLocal);

	oDebug.headingOffset = '' + _HeadingCalibre2.default.offset;
}

function _init() {
	_googleMaps2.default.KEY = GOOGLE_MAP_API_KEY;
	var el = document.getElementById('map');

	_googleMaps2.default.load(function (_google) {
		map = new google.maps.Map(el, {
			center: { lat: 51.528111499999994, lng: -0.0859945 },
			zoom: zoom
		});

		_initMap();
	});
}

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(2);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(6)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept(2, function() {
			var newContent = __webpack_require__(2);
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 5 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getElement = (function (fn) {
	var memo = {};

	return function(selector) {
		if (typeof memo[selector] === "undefined") {
			memo[selector] = fn.call(this, selector);
		}

		return memo[selector]
	};
})(function (target) {
	return document.querySelector(target)
});

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(7);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton) options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
	if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	options.attrs.type = "text/css";

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	options.attrs.type = "text/css";
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 7 */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// debugPolyfill.js

window.gui = {
	add: function add() {}
};

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {

	if (root === null) {
		throw new Error('Google-maps package can be used only in browser');
	}

	if (true) {
		!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if (typeof exports === 'object') {
		module.exports = factory();
	} else {
		root.GoogleMapsLoader = factory();
	}

})(typeof window !== 'undefined' ? window : null, function() {


	'use strict';


	var googleVersion = '3.31';

	var script = null;

	var google = null;

	var loading = false;

	var callbacks = [];

	var onLoadEvents = [];

	var originalCreateLoaderMethod = null;


	var GoogleMapsLoader = {};


	GoogleMapsLoader.URL = 'https://maps.googleapis.com/maps/api/js';

	GoogleMapsLoader.KEY = null;

	GoogleMapsLoader.LIBRARIES = [];

	GoogleMapsLoader.CLIENT = null;

	GoogleMapsLoader.CHANNEL = null;

	GoogleMapsLoader.LANGUAGE = null;

	GoogleMapsLoader.REGION = null;

	GoogleMapsLoader.VERSION = googleVersion;

	GoogleMapsLoader.WINDOW_CALLBACK_NAME = '__google_maps_api_provider_initializator__';


	GoogleMapsLoader._googleMockApiObject = {};


	GoogleMapsLoader.load = function(fn) {
		if (google === null) {
			if (loading === true) {
				if (fn) {
					callbacks.push(fn);
				}
			} else {
				loading = true;

				window[GoogleMapsLoader.WINDOW_CALLBACK_NAME] = function() {
					ready(fn);
				};

				GoogleMapsLoader.createLoader();
			}
		} else if (fn) {
			fn(google);
		}
	};


	GoogleMapsLoader.createLoader = function() {
		script = document.createElement('script');
		script.type = 'text/javascript';
		script.src = GoogleMapsLoader.createUrl();

		document.body.appendChild(script);
	};


	GoogleMapsLoader.isLoaded = function() {
		return google !== null;
	};


	GoogleMapsLoader.createUrl = function() {
		var url = GoogleMapsLoader.URL;

		url += '?callback=' + GoogleMapsLoader.WINDOW_CALLBACK_NAME;

		if (GoogleMapsLoader.KEY) {
			url += '&key=' + GoogleMapsLoader.KEY;
		}

		if (GoogleMapsLoader.LIBRARIES.length > 0) {
			url += '&libraries=' + GoogleMapsLoader.LIBRARIES.join(',');
		}

		if (GoogleMapsLoader.CLIENT) {
			url += '&client=' + GoogleMapsLoader.CLIENT;
		}

		if (GoogleMapsLoader.CHANNEL) {
			url += '&channel=' + GoogleMapsLoader.CHANNEL;
		}

		if (GoogleMapsLoader.LANGUAGE) {
			url += '&language=' + GoogleMapsLoader.LANGUAGE;
		}

		if (GoogleMapsLoader.REGION) {
			url += '&region=' + GoogleMapsLoader.REGION;
		}

		if (GoogleMapsLoader.VERSION) {
			url += '&v=' + GoogleMapsLoader.VERSION;
		}

		return url;
	};


	GoogleMapsLoader.release = function(fn) {
		var release = function() {
			GoogleMapsLoader.KEY = null;
			GoogleMapsLoader.LIBRARIES = [];
			GoogleMapsLoader.CLIENT = null;
			GoogleMapsLoader.CHANNEL = null;
			GoogleMapsLoader.LANGUAGE = null;
			GoogleMapsLoader.REGION = null;
			GoogleMapsLoader.VERSION = googleVersion;

			google = null;
			loading = false;
			callbacks = [];
			onLoadEvents = [];

			if (typeof window.google !== 'undefined') {
				delete window.google;
			}

			if (typeof window[GoogleMapsLoader.WINDOW_CALLBACK_NAME] !== 'undefined') {
				delete window[GoogleMapsLoader.WINDOW_CALLBACK_NAME];
			}

			if (originalCreateLoaderMethod !== null) {
				GoogleMapsLoader.createLoader = originalCreateLoaderMethod;
				originalCreateLoaderMethod = null;
			}

			if (script !== null) {
				script.parentElement.removeChild(script);
				script = null;
			}

			if (fn) {
				fn();
			}
		};

		if (loading) {
			GoogleMapsLoader.load(function() {
				release();
			});
		} else {
			release();
		}
	};


	GoogleMapsLoader.onLoad = function(fn) {
		onLoadEvents.push(fn);
	};


	GoogleMapsLoader.makeMock = function() {
		originalCreateLoaderMethod = GoogleMapsLoader.createLoader;

		GoogleMapsLoader.createLoader = function() {
			window.google = GoogleMapsLoader._googleMockApiObject;
			window[GoogleMapsLoader.WINDOW_CALLBACK_NAME]();
		};
	};


	var ready = function(fn) {
		var i;

		loading = false;

		if (google === null) {
			google = window.google;
		}

		for (i = 0; i < onLoadEvents.length; i++) {
			onLoadEvents[i](google);
		}

		if (fn) {
			fn(google);
		}

		for (i = 0; i < callbacks.length; i++) {
			callbacks[i](google);
		}

		callbacks = [];
	};


	return GoogleMapsLoader;

});


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // PathTracker.js

var _alfrid = __webpack_require__(0);

var _alfrid2 = _interopRequireDefault(_alfrid);

var _ = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PathTracker = function () {
	function PathTracker(canvas, map) {
		_classCallCheck(this, PathTracker);

		this._canvas = canvas;
		this._map = map;
		this._ctx = this._canvas.getContext('2d');

		this._coords = [];
		this._points = [];
	}

	_createClass(PathTracker, [{
		key: 'update',
		value: function update() {
			var _this = this;

			this._points = this._coords.map(function (p) {
				return (0, _.fromLatLngToPixel)(_this._map, p);
			});

			this._ctx.strokeStyle = 'rgba(200, 0, 0, 1)';
			this._ctx.lineWidth = 1;
			this._ctx.beginPath();

			var p = void 0;
			for (var i = 0; i < this._points.length; i++) {
				p = this._points[i];
				if (i === 0) {
					this._ctx.moveTo(p.x, p.y);
				} else {
					this._ctx.lineTo(p.x, p.y);
				}
			}

			this._ctx.stroke();
		}
	}, {
		key: 'clear',
		value: function clear() {
			this._coords = [];
		}
	}, {
		key: 'add',
		value: function add(mPoint) {
			this._coords.push(mPoint);
		}
	}]);

	return PathTracker;
}();

exports.default = PathTracker;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
				value: true
});
// saveImage.js

var FILE_EXTENTION = 'jpg';
var MIME_TYPE = "image/jpeg";

var dataURLtoBlob = function dataURLtoBlob(dataurl) {
				var arr = dataurl.split(','),
				    mime = arr[0].match(/:(.*?);/)[1],
				    bstr = atob(arr[1]),
				    n = bstr.length,
				    u8arr = new Uint8Array(n);
				while (n--) {
								u8arr[n] = bstr.charCodeAt(n);
				}
				return new Blob([u8arr], { type: mime });
};

var saveImage = function saveImage(canvas, filename) {

				var link = document.createElement("a");
				var imgData = canvas.toDataURL({
								format: 'png',
								multiplier: 4 });
				// var strDataURI = imgData.substr(22, imgData.length);
				var blob = dataURLtoBlob(imgData);
				var objurl = URL.createObjectURL(blob);

				link.download = filename + '.png';

				link.href = objurl;

				link.click();
};

exports.saveImage = saveImage;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
// fromLatLngToPixel.js

var fromLatLngToPixel = function fromLatLngToPixel(map, position) {
	var scale = Math.pow(2, map.getZoom());
	var proj = map.getProjection();
	var bounds = map.getBounds();

	var nw = proj.fromLatLngToPoint(new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getSouthWest().lng()));
	var point = proj.fromLatLngToPoint(position);

	return new google.maps.Point(Math.floor((point.x - nw.x) * scale), Math.floor((point.y - nw.y) * scale));

	// return point;
};

exports.fromLatLngToPixel = fromLatLngToPixel;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
// distanceLatLng.js


var toRadians = function toRadians(v) {
	return v * Math.PI / 180;
};

var distanceLatLng = function distanceLatLng(pa, pb) {
	var R = 6371e3; // metres
	var φ1 = toRadians(pa.lat);
	var φ2 = toRadians(pb.lat);
	var Δφ = toRadians(pb.lat - pa.lat);
	var Δλ = toRadians(pb.lng - pa.lng);

	var a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);
	var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));

	var d = R * c;

	return d;
};

exports.distanceLatLng = distanceLatLng;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
// directionLatLng.js

var directionLatLng = function directionLatLng(a, b) {
	var dx = b.lng - a.lng;
	var dy = b.lat - a.lat;

	var theta = Math.atan2(dy, -dx);

	return theta;
};

exports.directionLatLng = directionLatLng;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
// directionMapPoint.js

var directionMapPoint = function directionMapPoint(a, b) {
	var dx = b.x - a.x;
	var dy = b.y - a.y;

	var theta = Math.atan2(dy, dx);

	return theta;
};

exports.directionMapPoint = directionMapPoint;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // HeadingCalibre.js


var _ = __webpack_require__(1);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var HeadingCalibre = function () {
	function HeadingCalibre() {
		_classCallCheck(this, HeadingCalibre);

		this._heading = 0;
		this._offset = 0;
		this._isCalibrating = false;
		this._locStart;
		this._locEnd;
	}

	_createClass(HeadingCalibre, [{
		key: 'start',
		value: function start(loc) {
			this._headings = [];
			this._locStart = loc;
			this._isCalibrating = true;
		}
	}, {
		key: 'update',
		value: function update(heading) {
			if (!this._isCalibrating) {
				return;
			}

			this._heading = heading;
			this._headings.push(this._heading);
		}
	}, {
		key: 'stop',
		value: function stop(loc) {
			var rad = 180 / Math.PI;
			this._isCalibrating = false;
			this._locEnd = loc;
			var sumHeading = 0;

			for (var i = 0; i < this._headings.length; i++) {
				sumHeading += this._headings[i];
			}

			sumHeading /= this._headings.length;

			var headingGeo = (0, _.directionLatLng)(this._locEnd, this._locStart) + Math.PI / 2;
			if (headingGeo > Math.PI * 2) {
				headingGeo -= Math.PI * 2;
			}

			this._offset = headingGeo - sumHeading;
		}
	}, {
		key: 'offset',
		get: function get() {
			return this._offset;
		}
	}]);

	return HeadingCalibre;
}();

var _instance = new HeadingCalibre();

exports.default = _instance;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ = __webpack_require__(1);

var _getGeolocation = __webpack_require__(18);

var _getGeolocation2 = _interopRequireDefault(_getGeolocation);

var _alfrid = __webpack_require__(0);

var _events = __webpack_require__(19);

var _events2 = _interopRequireDefault(_events);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // HeadingCalibrate.js

var HeadingCalibrate = function (_EventEmitter) {
	_inherits(HeadingCalibrate, _EventEmitter);

	function HeadingCalibrate() {
		_classCallCheck(this, HeadingCalibrate);

		var _this = _possibleConstructorReturn(this, (HeadingCalibrate.__proto__ || Object.getPrototypeOf(HeadingCalibrate)).call(this));

		_this._heading = _alfrid.GL.isMobile ? 0 : Math.random() * Math.PI * 2;
		_this._headingStart = 0;
		_this._state = 0;
		_this._offset = 0;

		//	states 
		//	0 -> not started 
		//	1 -> calibrating
		//	2 -> done
		window.addEventListener('deviceorientation', function (e) {
			return _this._onDeviceOrientation(e);
		});
		return _this;
	}

	_createClass(HeadingCalibrate, [{
		key: 'start',
		value: function start() {
			var _this2 = this;

			this._headingStart = this._heading;

			return new Promise(function (resolve, reject) {

				(0, _getGeolocation2.default)().then(function (oCoord) {
					_this2._state = 1;
					_this2._locStart = {
						lat: oCoord.latitude,
						lng: oCoord.longitude
					};
					console.log('location start :', _this2._locStart);

					_this2.emit('onStart', _this2._locStart);
				}).then(function () {
					return _this2._capture();
				}).then(function (heading) {
					_this2._avgHeading = heading;
					console.log('average heading :', _this2._avgHeading);
				}).then(_getGeolocation2.default).then(function (oCoord) {
					_this2._locEnd = {
						lat: oCoord.latitude,
						lng: oCoord.longitude
					};
					if (!_alfrid.GL.isMobile) {
						_this2._locEnd.lng += 0.001;
					}

					_this2.emit('onStart', _this2._locEnd);
					console.log('location end :', _this2._locEnd);

					var headingGeo = (0, _.directionLatLng)(_this2._locEnd, _this2._locStart) + Math.PI / 2;
					if (headingGeo > Math.PI * 2) {
						headingGeo -= Math.PI * 2;
					}

					_this2._offset = headingGeo - _this2._avgHeading;

					_this2._state = 2;
					resolve(_this2._offset);
				}).catch(function (e) {
					_this2._state = 0;
					reject(e);
				});
			});
		}
	}, {
		key: '_capture',
		value: function _capture() {
			var _this3 = this;

			var count = 0;
			var heading = 0;

			return new Promise(function (resolve, reject) {

				var interval = setInterval(function () {
					heading += _this3._heading;
					count++;

					_this3.emit('onProgress', count / 10);

					if (count >= 10) {
						clearInterval(interval);
						resolve(heading / 10);
					}
				}, 1000);
			});
		}
	}, {
		key: '_onDeviceOrientation',
		value: function _onDeviceOrientation(e) {
			this._heading = -event.alpha * Math.PI / 180;
		}
	}, {
		key: 'offset',
		get: function get() {
			return this._offset;
		}
	}, {
		key: 'state',
		get: function get() {
			return this._state;
		}
	}, {
		key: 'heading',
		get: function get() {
			return this._heading;
		}
	}, {
		key: 'stateString',
		get: function get() {
			var s = '';

			if (this._state === 0) {
				s = 'NEED CALIBRATING';
			} else if (this._state === 1) {
				s = 'CALIBRATING ...';
			} else {
				s = 'CALIBRATING FINISHED';
			}

			return s;
		}
	}]);

	return HeadingCalibrate;
}(_events2.default);

var _instance = new HeadingCalibrate();

exports.default = _instance;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var getGeolocation = function getGeolocation() {
	return new Promise(function (resolve, reject) {
		if (navigator.geolocation) {
			navigator.geolocation.getCurrentPosition(function (o) {
				resolve(o.coords);
			});
		} else {
			reject('getlocation not supported');
		}
	});
};

exports.default = getGeolocation;

/***/ }),
/* 19 */
/***/ (function(module, exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}


/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgNGI4YzUzN2MzMGUxNjBiMjFkZDMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FsZnJpZC9idWlsZC9hbGZyaWQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3V0aWxzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9zY3NzL2dsb2JhbC5zY3NzIiwid2VicGFjazovLy8uL3NyYy9qcy9hcHAuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3Njc3MvZ2xvYmFsLnNjc3M/OTczNSIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2RlYnVnL2RlYnVnUG9seWZpbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2dvb2dsZS1tYXBzL2xpYi9Hb29nbGUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3V0aWxzL1BhdGhUcmFja2VyLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy91dGlscy9zYXZlSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3V0aWxzL2Zyb21MYXRMbmdUb1BpeGVsLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy91dGlscy9kaXN0YW5jZUxhdExuZy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvdXRpbHMvZGlyZWN0aW9uTGF0TG5nLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy91dGlscy9kaXJlY3Rpb25NYXBQb2ludC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvdXRpbHMvSGVhZGluZ0NhbGlicmUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3V0aWxzL0hlYWRpbmdDYWxpYnJhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3V0aWxzL2dldEdlb2xvY2F0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ldmVudHMvZXZlbnRzLmpzIl0sIm5hbWVzIjpbInNhdmVJbWFnZSIsImZyb21MYXRMbmdUb1BpeGVsIiwiZGlzdGFuY2VMYXRMbmciLCJkaXJlY3Rpb25MYXRMbmciLCJkaXJlY3Rpb25NYXBQb2ludCIsIkdPT0dMRV9NQVBfQVBJX0tFWSIsImRvY3VtZW50IiwiYm9keSIsIl9pbml0Iiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsInpvb20iLCJtYXAiLCJtYXJrZXIiLCJtYXJrZXJUYXJnZXQxIiwibWFya2VyVGFyZ2V0MiIsIm1hcmtlclN0YXJ0IiwidGFyZ2V0MSIsImxhdCIsImxuZyIsInRhcmdldDIiLCJvRGVidWciLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsImRpc3QxIiwiZGlzdDIiLCJkaXN0IiwiaGVhZGluZyIsImhlYWRpbmdMb2NhbCIsImFscGhhIiwiaGVhZGluZ09mZnNldCIsImhlYWRpbmdPZmZzZXROZXciLCJjYW52YXMiLCJjdHgiLCJwcm9qZWN0aW9uIiwicGF0aFRyYWNrZXIiLCJwb2ludCIsIngiLCJ5IiwidGFyZ2V0IiwiaGVhZGluZ1RhcmdldCIsImhhc0xvZ2dlZEluaXQiLCJoYXNDYWxpYnJhdGVkIiwibG9jUHJldiIsImxvY0N1cnIiLCJfZmFrZSIsIl9pbml0TWFwIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsIndpZHRoIiwiaW5uZXJXaWR0aCIsImhlaWdodCIsImlubmVySGVpZ2h0IiwiYXBwZW5kQ2hpbGQiLCJnZXRDb250ZXh0IiwiUGF0aFRyYWNrZXIiLCJnb29nbGUiLCJtYXBzIiwiTWFya2VyIiwicG9zaXRpb24iLCJ0aXRsZSIsInVwZGF0ZUxvY2F0aW9uIiwibmF2aWdhdG9yIiwiZ2VvbG9jYXRpb24iLCJnZXRDdXJyZW50UG9zaXRpb24iLCJvIiwiY29vcmRzIiwidG9TdHJpbmciLCJzZXRNYXAiLCJteUxhdGxuZyIsIkhlYWRpbmdDYWxpYnJlIiwidXBkYXRlIiwiYWRkIiwiTGF0TG5nIiwiTWF0aCIsIlBJIiwiR0wiLCJpc01vYmlsZSIsInQiLCJEYXRlIiwiZ2V0VGltZSIsInNpbiIsInNldEludGVydmFsIiwic2V0VGltZW91dCIsImd1aSIsIm5hbWUiLCJsaXN0ZW4iLCJIZWFkaW5nQ2FsaWJyYXRlIiwiYWxmcmlkIiwiU2NoZWR1bGVyIiwiYWRkRUYiLCJldmVudCIsImNvbnNvbGUiLCJsb2ciLCJhYnNvbHV0ZSIsImJ0bkNhbGlicmUiLCJxdWVyeVNlbGVjdG9yIiwiZSIsImlubmVySFRNTCIsInN0YXJ0Iiwib25jZSIsImxvYyIsIm9uIiwicGVyY2VudCIsInRoZW4iLCJvZmZzZXQiLCJzdG9wIiwiY2xhc3NMaXN0IiwiY2xlYXJSZWN0Iiwic2F2ZSIsInciLCJoIiwidHJhbnNsYXRlIiwicm90YXRlIiwiZmlsbFN0eWxlIiwiZmlsbFJlY3QiLCJyZXN0b3JlIiwiR29vZ2xlTWFwc0xvYWRlciIsIktFWSIsImVsIiwiZ2V0RWxlbWVudEJ5SWQiLCJsb2FkIiwiX2dvb2dsZSIsIk1hcCIsImNlbnRlciIsIl9jYW52YXMiLCJfbWFwIiwiX2N0eCIsIl9jb29yZHMiLCJfcG9pbnRzIiwicCIsInN0cm9rZVN0eWxlIiwibGluZVdpZHRoIiwiYmVnaW5QYXRoIiwiaSIsImxlbmd0aCIsIm1vdmVUbyIsImxpbmVUbyIsInN0cm9rZSIsIm1Qb2ludCIsInB1c2giLCJGSUxFX0VYVEVOVElPTiIsIk1JTUVfVFlQRSIsImRhdGFVUkx0b0Jsb2IiLCJkYXRhdXJsIiwiYXJyIiwic3BsaXQiLCJtaW1lIiwibWF0Y2giLCJic3RyIiwiYXRvYiIsIm4iLCJ1OGFyciIsIlVpbnQ4QXJyYXkiLCJjaGFyQ29kZUF0IiwiQmxvYiIsInR5cGUiLCJmaWxlbmFtZSIsImxpbmsiLCJpbWdEYXRhIiwidG9EYXRhVVJMIiwiZm9ybWF0IiwibXVsdGlwbGllciIsImJsb2IiLCJvYmp1cmwiLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJkb3dubG9hZCIsImhyZWYiLCJjbGljayIsInNjYWxlIiwicG93IiwiZ2V0Wm9vbSIsInByb2oiLCJnZXRQcm9qZWN0aW9uIiwiYm91bmRzIiwiZ2V0Qm91bmRzIiwibnciLCJmcm9tTGF0TG5nVG9Qb2ludCIsImdldE5vcnRoRWFzdCIsImdldFNvdXRoV2VzdCIsIlBvaW50IiwiZmxvb3IiLCJ0b1JhZGlhbnMiLCJ2IiwicGEiLCJwYiIsIlIiLCLPhjEiLCLPhjIiLCLOlM+GIiwizpTOuyIsImEiLCJjb3MiLCJjIiwiYXRhbjIiLCJzcXJ0IiwiZCIsImIiLCJkeCIsImR5IiwidGhldGEiLCJfaGVhZGluZyIsIl9vZmZzZXQiLCJfaXNDYWxpYnJhdGluZyIsIl9sb2NTdGFydCIsIl9sb2NFbmQiLCJfaGVhZGluZ3MiLCJyYWQiLCJzdW1IZWFkaW5nIiwiaGVhZGluZ0dlbyIsIl9pbnN0YW5jZSIsInJhbmRvbSIsIl9oZWFkaW5nU3RhcnQiLCJfc3RhdGUiLCJfb25EZXZpY2VPcmllbnRhdGlvbiIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Iiwib0Nvb3JkIiwiZW1pdCIsIl9jYXB0dXJlIiwiX2F2Z0hlYWRpbmciLCJnZXRHZW9sb2NhdGlvbiIsImNhdGNoIiwiY291bnQiLCJpbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJzIiwiRXZlbnRFbWl0dGVyIl0sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1FQUEyRDtBQUMzRDtBQUNBO0FBQ0EsV0FBRzs7QUFFSCxvREFBNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx3REFBZ0Q7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFNO0FBQ047QUFDQTtBQUNBLGNBQU07QUFDTjtBQUNBO0FBQ0EsY0FBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLGVBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFJO0FBQ0o7Ozs7QUFJQTtBQUNBLHNEQUE4QztBQUM5QztBQUNBO0FBQ0Esb0NBQTRCO0FBQzVCLHFDQUE2QjtBQUM3Qix5Q0FBaUM7O0FBRWpDLCtDQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw4Q0FBc0M7QUFDdEM7QUFDQTtBQUNBLHFDQUE2QjtBQUM3QixxQ0FBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsYUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQW9CLGdCQUFnQjtBQUNwQztBQUNBO0FBQ0E7QUFDQSxhQUFLO0FBQ0w7QUFDQTtBQUNBLGFBQUs7QUFDTDtBQUNBO0FBQ0EsYUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGFBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBSztBQUNMO0FBQ0E7QUFDQSxhQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsYUFBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EseUJBQWlCLDhCQUE4QjtBQUMvQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBSztBQUNMO0FBQ0E7QUFDQSxhQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFJO0FBQ0o7O0FBRUEsNERBQW9EO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBSztBQUNMO0FBQ0E7QUFDQSxjQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUFtQiwyQkFBMkI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQWtCLGNBQWM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EscUJBQWEsNEJBQTRCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFNO0FBQ047O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBSTs7QUFFSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLHNCQUFjLDRCQUE0QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLHNCQUFjLDRCQUE0QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBZ0IsdUNBQXVDO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBZ0IsdUNBQXVDO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQWdCLHNCQUFzQjtBQUN0QztBQUNBO0FBQ0E7QUFDQSxnQkFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxxQkFBYSx3Q0FBd0M7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxlQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQUk7QUFDSjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsbUNBQTJCLDBCQUEwQixFQUFFO0FBQ3ZELHlDQUFpQyxlQUFlO0FBQ2hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhEQUFzRCwrREFBK0Q7O0FBRXJIO0FBQ0E7O0FBRUE7QUFDQSw4Q0FBc0MsdUJBQXVCOztBQUU3RDtBQUNBOzs7Ozs7O0FDbnRCQSx3QkFBd0IsS0FBaUQsb0tBQW9LLGlCQUFpQix5QkFBeUIsdUNBQXVDLHdFQUF3RSx1Q0FBdUMsNEJBQTRCLG1IQUFtSCx3QkFBd0IsZ0lBQWdJLHlFQUF5RSx5Q0FBeUMsRUFBRSx3Q0FBd0MsZ0RBQWdELHNCQUFzQixZQUFZLGVBQWUsdURBQXVELGlEQUFpRCw2REFBNkQsd0VBQXdFLCtDQUErQyxhQUFhLHFDQUFxQyxnQ0FBZ0MsYUFBYSwrQ0FBK0MsK0ZBQStGLDRDQUE0QyxTQUFTLEVBQUUsNEJBQTRCLHdDQUF3QyxZQUFZLGVBQWUsS0FBSyx3QkFBd0IsbUxBQW1MLG9EQUFvRCwwSUFBMEksbW5CQUFtbkIsa0JBQWtCLGdvQkFBZ29CLDZCQUE2QixtQ0FBbUMsMEVBQTBFLGtGQUFrRixnTEFBZ0wsZUFBZSwwZEFBMGQsRUFBRSxxQ0FBcUMsd0VBQXdFLFlBQVksa0NBQWtDLDhGQUE4RiwyVUFBMlUsRUFBRSwwQ0FBMEMsa0JBQWtCLHlOQUF5TixFQUFFLHNDQUFzQyxxQkFBcUIsRUFBRSxvQ0FBb0MsMEVBQTBFLEVBQUUsc0NBQXNDLHFCQUFxQixFQUFFLDBDQUEwQyxzREFBc0QsRUFBRSx3Q0FBd0Msa0VBQWtFLEVBQUUsdUNBQXVDLHVjQUF1YyxFQUFFLDhDQUE4Qyw0QkFBNEIsZUFBZSx3QkFBd0IsS0FBSywwWUFBMFksNEJBQTRCLDZUQUE2VCxFQUFFLDZEQUE2RCxzTEFBc0wsOE1BQThNLDhEQUE4RCxxUkFBcVIsdURBQXVELDRFQUE0RSxFQUFFLDZDQUE2QyxrTUFBa00sRUFBRSxzQ0FBc0MsNkNBQTZDLGdHQUFnRyxFQUFFLGdEQUFnRCxxQ0FBcUMsRUFBRSw4Q0FBOEMsb0NBQW9DLEVBQUUsMkNBQTJDLG1EQUFtRCxFQUFFLDhDQUE4Qyw2QkFBNkIsRUFBRSxrQ0FBa0MsZ0RBQWdELDhCQUE4QixFQUFFLGlDQUFpQyw0Q0FBNEMsaUNBQWlDLGtCQUFrQixFQUFFLHdDQUF3Qyx1QkFBdUIsRUFBRSx5Q0FBeUMsd0JBQXdCLEVBQUUsdUNBQXVDLDJCQUEyQixFQUFFLCtCQUErQiw4QkFBOEIsZ0RBQWdELFNBQVMsMEJBQTBCLGtCQUFrQixFQUFFLDJCQUEyQixnQ0FBZ0MsRUFBRSxnQ0FBZ0Msb0NBQW9DLEVBQUUsMkJBQTJCLG9CQUFvQixFQUFFLDRCQUE0QixxQkFBcUIsRUFBRSxpQ0FBaUMsMEJBQTBCLEVBQUUsNEJBQTRCLHdCQUF3QixVQUFVLGlCQUFpQixtQkFBbUIsOENBQThDLGFBQWEsc0NBQXNDLGtDQUFrQyxjQUFjLHNHQUFzRyxpQ0FBaUMsNENBQTRDLFNBQVMsbUlBQW1JLDRsQkFBNGxCLDRLQUE0Syw4Q0FBOEMsYUFBYSwrQ0FBK0MsK0ZBQStGLDRDQUE0QyxTQUFTLEVBQUUsc0ZBQXNGLGtCQUFrQixlQUFlLDRHQUE0Ryx5QkFBeUIsd0NBQXdDLFlBQVksZUFBZSxLQUFLLHdCQUF3QixtTEFBbUwsb0RBQW9ELDBJQUEwSSx5REFBeUQsZ0NBQWdDLGFBQWEsa0VBQWtFLDBDQUEwQyxZQUFZLGdCQUFnQixzQ0FBc0MsU0FBUyxrQ0FBa0MscUNBQXFDLGVBQWUsK0JBQStCLHdCQUF3Qiw2QkFBNkIsNkRBQTZELHFIQUFxSCx3SUFBd0kscUJBQXFCLG9CQUFvQixxTkFBcU4sNE9BQTRPLG9IQUFvSCw2Q0FBNkMsK0JBQStCLDRCQUE0Qiw4SEFBOEgsRUFBRSxpREFBaUQsZ0dBQWdHLHFHQUFxRyx5QkFBeUIsMERBQTBELCtCQUErQixNQUFNLGdCQUFnQixpUUFBaVEsZ0dBQWdHLHdCQUF3Qiw0R0FBNEcseUlBQXlJLDJFQUEyRSw2R0FBNkcsb0xBQW9MLHdMQUF3TCxFQUFFLGdEQUFnRCxvQ0FBb0MsNEZBQTRGLGdEQUFnRCxtQkFBbUIsc0JBQXNCLG9DQUFvQyxpQkFBaUIscURBQXFELEVBQUUscUVBQXFFLGlJQUFpSSx5T0FBeU8sRUFBRSx5RUFBeUUsZ1pBQWdaLFlBQVksR0FBRyx5Q0FBeUMsaUVBQWlFLHVHQUF1Ryw4RUFBOEUsMEJBQTBCLDhDQUE4QyxhQUFhLGtDQUFrQyxtQ0FBbUMscUJBQXFCLGdCQUFnQixxQkFBcUIsa0VBQWtFLDRDQUE0QyxTQUFTLGdHQUFnRyxtS0FBbUssOENBQThDLGFBQWEsK0NBQStDLCtGQUErRiw0Q0FBNEMsU0FBUyxFQUFFLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLHlEQUF5RCxnQ0FBZ0MsYUFBYSwyQkFBMkIsOEJBQThCLGtFQUFrRSw0QkFBNEIsNEJBQTRCLHNEQUFzRCxFQUFFLDBCQUEwQixtQkFBbUIsRUFBRSw0QkFBNEIscUJBQXFCLFNBQVMsR0FBRyxzQkFBc0IsOENBQThDLGFBQWEscUNBQXFDLGdDQUFnQyxhQUFhLCtDQUErQywrRkFBK0YsNENBQTRDLFNBQVMsRUFBRSw0QkFBNEIsd0NBQXdDLFlBQVksZUFBZSxLQUFLLHdCQUF3QixtTEFBbUwsb0RBQW9ELDBJQUEwSSwwT0FBME8sa0JBQWtCLG9HQUFvRyxpQ0FBaUMsbUJBQW1CLGVBQWUsU0FBUyxpQkFBaUIsT0FBTyx1QkFBdUIsWUFBWSxXQUFXLGlCQUFpQixnQkFBZ0IsNklBQTZJLDJXQUEyVywyQkFBMkIsa0RBQWtELDJFQUEyRSxpS0FBaUssRUFBRSxxREFBcUQsMkVBQTJFLDBFQUEwRSxFQUFFLDRDQUE0QywyRUFBMkUsNkRBQTZELEVBQUUsZ0RBQWdELHNFQUFzRSxzSkFBc0osRUFBRSw4REFBOEQsdUpBQXVKLDREQUE0RCxFQUFFLHVEQUF1RCxvTEFBb0wsZ0dBQWdHLGVBQWUsZ0JBQWdCLGtCQUFrQixpQ0FBaUMsOEVBQThFLDRIQUE0SCx5R0FBeUcsd0NBQXdDLEVBQUUsaURBQWlELGdKQUFnSiw2QkFBNkIsK0VBQStFLEVBQUUsMENBQTBDLDJIQUEySCxnREFBZ0Qsd0NBQXdDLHNJQUFzSSx3REFBd0QsRUFBRSxxREFBcUQsZUFBZSxxS0FBcUssb0RBQW9ELDhCQUE4Qix3R0FBd0csNEVBQTRFLDhNQUE4TSxrSEFBa0gsb0RBQW9ELDhCQUE4Qix3R0FBd0csNEVBQTRFLDhNQUE4TSxxRkFBcUYsRUFBRSw4QkFBOEIsb0ZBQW9GLHdFQUF3RSxHQUFHLEVBQUUsMENBQTBDLG9RQUFvUSxFQUFFLHNDQUFzQyw2RUFBNkUsK0ZBQStGLEVBQUUsMkNBQTJDLG9EQUFvRCx1QkFBdUIsTUFBTSwwQ0FBMEMsa0JBQWtCLGlGQUFpRiw0QkFBNEIsRUFBRSw2Q0FBNkMsNEZBQTRGLGtCQUFrQixLQUFLLG9DQUFvQyxZQUFZLHFCQUFxQiw2SUFBNkkscUdBQXFHLDRCQUE0QixFQUFFLHFDQUFxQyxzS0FBc0ssdUJBQXVCLE1BQU0sNkdBQTZHLFVBQVUscUNBQXFDLHlCQUF5QixFQUFFLHlDQUF5Qyx5Q0FBeUMsc0JBQXNCLEdBQUcsRUFBRSxzQ0FBc0Msa0NBQWtDLDRCQUE0QixFQUFFLDhCQUE4QiwwQ0FBMEMsRUFBRSw2QkFBNkIsa0NBQWtDLEVBQUUsNEJBQTRCLHdDQUF3QyxFQUFFLDZCQUE2QixzQkFBc0IsRUFBRSxnQ0FBZ0MsNkJBQTZCLEVBQUUsMkJBQTJCLG9CQUFvQixFQUFFLGdDQUFnQyx5QkFBeUIsRUFBRSw0QkFBNEIscUJBQXFCLEVBQUUseUJBQXlCLGtCQUFrQixFQUFFLGlDQUFpQywwQkFBMEIsRUFBRSxpQ0FBaUMsMEJBQTBCLFFBQVEsR0FBRyxxQkFBcUIsOENBQThDLGFBQWEsK0NBQStDLCtGQUErRiw0Q0FBNEMsU0FBUyxFQUFFLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLHdCQUF3QixxQkFBcUIsOE9BQThPLGdDQUFnQyx3Q0FBd0Msa0JBQWtCLHFCQUFxQixrQ0FBa0Msd0JBQXdCLHFCQUFxQixFQUFFLGtDQUFrQyxnRkFBZ0YsRUFBRSwrQ0FBK0MsaUNBQWlDLGdEQUFnRCwwQkFBMEIsRUFBRSx3Q0FBd0MsT0FBTyx5QkFBeUIsMEJBQTBCLEVBQUUsdUNBQXVDLE9BQU8seUJBQXlCLHlCQUF5QixFQUFFLHdDQUF3QyxPQUFPLHlCQUF5Qix5QkFBeUIsRUFBRSxnQ0FBZ0Msb0NBQW9DLFFBQVEsK0JBQStCLGtGQUFrRixLQUFLLHlCQUF5QixtREFBbUQsbUNBQW1DLHdEQUF3RCwwQkFBMEIsbUhBQW1ILG1HQUFtRywwQkFBMEIsRUFBRSw2RUFBNkUsK0JBQStCLE1BQU0sdUJBQXVCLG1HQUFtRyx5QkFBeUIsOEZBQThGLCtGQUErRixFQUFFLDZCQUE2QixlQUFlLHdEQUF3RCxxQkFBcUIsR0FBRyxFQUFFLCtCQUErQix3QkFBd0IsYUFBYSwyQkFBMkIsMEJBQTBCLDhDQUE4QyxhQUFhLDRDQUE0QyxTQUFTLEVBQUUsc0RBQXNELGdDQUFnQyxhQUFhLGVBQWUsZ0JBQWdCLDhDQUE4QyxrU0FBa1MsY0FBYyxnQkFBZ0IsY0FBYyxLQUFLLDhEQUE4RCwwbUNBQTBtQyxzQ0FBc0MsMEhBQTBILHdDQUF3QywwQkFBMEIsNkpBQTZKLHNCQUFzQixxQkFBcUIsNENBQTRDLGlIQUFpSCx3TkFBd04sY0FBYyxnQkFBZ0IsY0FBYyxLQUFLLDRSQUE0UixvQ0FBb0Msb1FBQW9RLDRCQUE0QixzQ0FBc0MsMEhBQTBILDJCQUEyQixzRUFBc0UsY0FBYywyRUFBMkUsdzlFQUF3OUUsc0NBQXNDLDBIQUEwSCw0QkFBNEIsMkhBQTJILHdxRkFBd3FGLHNDQUFzQywwSEFBMEgsNkJBQTZCLGFBQWEsc0RBQXNELG9HQUFvRyxlQUFlLHNCQUFzQiw4Q0FBOEMsYUFBYSxnQkFBZ0IsOHdOQUE4d04sOENBQThDLGFBQWEscUNBQXFDLGdDQUFnQyxhQUFhLCtDQUErQywrRkFBK0YsNENBQTRDLFNBQVMsRUFBRSw0QkFBNEIsd0NBQXdDLFlBQVksZUFBZSxLQUFLLHdCQUF3QixtTEFBbUwsb0RBQW9ELDBJQUEwSSw4UUFBOFEsdUJBQXVCLHFJQUFxSSx3REFBd0QscUtBQXFLLCtEQUErRCx5RkFBeUYsMkJBQTJCLDJDQUEyQyw4QkFBOEIsRUFBRSxxQ0FBcUMscUhBQXFILEVBQUUsMkJBQTJCLG9CQUFvQixFQUFFLDRCQUE0QixxQkFBcUIsRUFBRSx5QkFBeUIsa0JBQWtCLEVBQUUsNEJBQTRCLHdCQUF3QixRQUFRLEdBQUcscUJBQXFCLDBCQUEwQixtR0FBbUcsMENBQTBDLHdCQUF3QixxQkFBcUIsMENBQTBDLEdBQUcsRUFBRSwwQkFBMEIsMkZBQTJGLG9EQUFvRCwrQkFBK0IseUJBQXlCLDhCQUE4QiwyQkFBMkIsaUNBQWlDLCtCQUErQix1QkFBdUIscUJBQXFCLGdHQUFnRyxvQ0FBb0Msd0JBQXdCLEdBQUcsRUFBRSw4Q0FBOEMsYUFBYSxxQ0FBcUMsZ0NBQWdDLGFBQWEsK0NBQStDLCtGQUErRiw0Q0FBNEMsU0FBUyxFQUFFLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLHdXQUF3Vyx1R0FBdUcsd0JBQXdCLHFDQUFxQyx5RUFBeUUsc0VBQXNFLDJYQUEyWCxrQ0FBa0MsNkJBQTZCLDZJQUE2SSx1QkFBdUIsbUJBQW1CLHlKQUF5SixxSUFBcUksS0FBSyxhQUFhLG9CQUFvQixnSEFBZ0gsMEJBQTBCLDZCQUE2QixxQkFBcUIsdUVBQXVFLDRDQUE0QywySEFBMkgsd0RBQXdELGdSQUFnUixFQUFFLGdEQUFnRCw2RkFBNkYsMEpBQTBKLEVBQUUscUNBQXFDLGtCQUFrQixZQUFZLG1CQUFtQixLQUFLLDhCQUE4Qix5QkFBeUIsK05BQStOLGtDQUFrQyxHQUFHLEVBQUUsd0VBQXdFLHlFQUF5RSw0QkFBNEIsbUJBQW1CLDRMQUE0TCxzREFBc0Qsd0VBQXdFLEVBQUUsNEJBQTRCLHlLQUF5SyxFQUFFLDhCQUE4Qiw2TkFBNk4seUJBQXlCLEdBQUcsRUFBRSw2QkFBNkIsZ1BBQWdQLDJEQUEyRCxFQUFFLGtDQUFrQyxvRUFBb0UsK0JBQStCLEVBQUUsdUNBQXVDLDRCQUE0QixFQUFFLHNDQUFzQyxvQ0FBb0MsRUFBRSwrQkFBK0IsbUNBQW1DLHNCQUFzQix5Q0FBeUMseUJBQXlCLEdBQUcsRUFBRSwrQkFBK0IsbUNBQW1DLHNCQUFzQix5Q0FBeUMseUJBQXlCLEdBQUcsRUFBRSwyQkFBMkIsK0JBQStCLHNCQUFzQix5Q0FBeUMscUJBQXFCLEdBQUcsRUFBRSwyQkFBMkIsK0JBQStCLHNCQUFzQix5Q0FBeUMscUJBQXFCLEdBQUcsRUFBRSxnQ0FBZ0MseUJBQXlCLGVBQWUsR0FBRyw0QkFBNEIsOENBQThDLGFBQWEsK0NBQStDLCtGQUErRiw0Q0FBNEMsU0FBUyxFQUFFLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLGlFQUFpRSxnQ0FBZ0MsYUFBYSxvQ0FBb0MsNEJBQTRCLGlGQUFpRixxSkFBcUosdUJBQXVCLEVBQUUsaUNBQWlDLCtCQUErQiwySkFBMkosRUFBRSxtQ0FBbUMsc0NBQXNDLEVBQUUsK0JBQStCLHlCQUF5QixFQUFFLHNDQUFzQywrQ0FBK0Msa0RBQWtELEVBQUUsbUNBQW1DLCtKQUErSixFQUFFLCtCQUErQiw4Q0FBOEMsRUFBRSxpQ0FBaUMseUJBQXlCLGdCQUFnQixvQkFBb0IsRUFBRSxpQ0FBaUMsMEJBQTBCLGNBQWMsR0FBRywyQkFBMkIsOENBQThDLGFBQWEsK0NBQStDLCtGQUErRiw0Q0FBNEMsU0FBUyxFQUFFLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLHdSQUF3UixpQ0FBaUMsb0hBQW9ILDBCQUEwQiwyQkFBMkIsOElBQThJLEVBQUUscUNBQXFDLDBHQUEwRyxFQUFFLGlEQUFpRCxtQ0FBbUMsdUNBQXVDLGdFQUFnRSxzTkFBc04sRUFBRSw2Q0FBNkMsa0RBQWtELEVBQUUsK0NBQStDLCtCQUErQiwwQ0FBMEMsNERBQTRELHNQQUFzUCxFQUFFLHVEQUF1RCwrQ0FBK0MsRUFBRSxzREFBc0QsK0JBQStCLDJDQUEyQywyR0FBMkcsMEJBQTBCLG9EQUFvRCxxREFBcUQsRUFBRSwyREFBMkQsNENBQTRDLEVBQUUsb0RBQW9ELCtFQUErRSxzTEFBc0wsOERBQThELFVBQVUsK0JBQStCLE9BQU8sS0FBSyx3QkFBd0IsaUJBQWlCLDhFQUE4RSx5REFBeUQsd0JBQXdCLHVDQUF1Qyx5REFBeUQsd0JBQXdCLGlDQUFpQyw4Q0FBOEMsb0NBQW9DLE9BQU8sR0FBRyxvQkFBb0IsOENBQThDLGFBQWEsK0NBQStDLCtGQUErRiw0Q0FBNEMsU0FBUyxFQUFFLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLHNEQUFzRCxrQkFBa0Isb05BQW9OLDZCQUE2QiwwQ0FBMEMsdUVBQXVFLHNMQUFzTCxFQUFFLGlEQUFpRCwyS0FBMkssRUFBRSwwQ0FBMEMsOENBQThDLEVBQUUsb0NBQW9DLDBDQUEwQyxFQUFFLGtEQUFrRCwrQ0FBK0MsRUFBRSw0QkFBNEIscUJBQXFCLEVBQUUsZ0NBQWdDLHFCQUFxQixFQUFFLGdDQUFnQyx5QkFBeUIsRUFBRSxzQ0FBc0MseUJBQXlCLEVBQUUseUJBQXlCLGtCQUFrQixFQUFFLDRCQUE0QixxQkFBcUIsVUFBVSxHQUFHLHVCQUF1Qiw4Q0FBOEMsYUFBYSxxQ0FBcUMsZ0NBQWdDLGFBQWEsK0NBQStDLCtGQUErRiwrQ0FBK0MsK0ZBQStGLHNFQUFzRSx3Q0FBd0Msc0pBQXNKLG1FQUFtRSxhQUFhLDBEQUEwRCwrR0FBK0csNENBQTRDLFNBQVMsRUFBRSw0QkFBNEIsd0NBQXdDLFlBQVksZUFBZSxLQUFLLHdCQUF3QixtTEFBbUwsb0RBQW9ELDBJQUEwSSw4UkFBOFIsNkJBQTZCLDhLQUE4Syw2RUFBNkUsa0VBQWtFLHlKQUF5SixFQUFFLGtEQUFrRCx3SEFBd0gsRUFBRSx1REFBdUQsb0RBQW9ELGlaQUFpWixxQkFBcUIsbUJBQW1CLGtDQUFrQyw4Q0FBOEMsYUFBYSwrQ0FBK0MsK0ZBQStGLDRDQUE0QyxTQUFTLEVBQUUsNEJBQTRCLHdDQUF3QyxZQUFZLGVBQWUsS0FBSyx3QkFBd0IsbUxBQW1MLG9EQUFvRCwwSUFBMEksMkJBQTJCLHdCQUF3QixxRkFBcUYsOEdBQThHLDBCQUEwQixvREFBb0QsNEJBQTRCLHdEQUF3RCxtQ0FBbUMsd0NBQXdDLGtHQUFrRyxFQUFFLGlDQUFpQyxvQ0FBb0MsRUFBRSxxQ0FBcUMsZ0JBQWdCLEdBQUcsNkJBQTZCLDBCQUEwQiwwR0FBMEcsOENBQThDLDZCQUE2QixxQkFBcUIsOENBQThDLDBDQUEwQyxHQUFHLEVBQUUsMEJBQTBCLDZGQUE2RixrREFBa0QsNEJBQTRCLHFCQUFxQix1REFBdUQsR0FBRyxFQUFFLDhDQUE4QyxhQUFhLGtCQUFrQixtQ0FBbUMsNEZBQTRGLHlCQUF5Qix3SEFBd0gsa0JBQWtCLG1DQUFtQyx1SEFBdUgscUJBQXFCLHVIQUF1SCx5REFBeUQsbUNBQW1DLDhHQUE4RyxzREFBc0QsOEdBQThHLHVCQUF1Qiw0RkFBNEYsMEJBQTBCLFlBQVksK0JBQStCLHFFQUFxRSxpSEFBaUgsV0FBVyx1QkFBdUIsOEtBQThLLDhQQUE4UCx3QkFBd0IscUZBQXFGLDBOQUEwTix3QkFBd0IscUZBQXFGLDBFQUEwRSwyQkFBMkIsc0tBQXNLLGtTQUFrUyw0QkFBNEIsbUdBQW1HLGtKQUFrSiwyQkFBMkIscUhBQXFILDhKQUE4Six3QkFBd0Isa0JBQWtCLG1JQUFtSSxnQ0FBZ0Msa0dBQWtHLCtCQUErQixvQ0FBb0MsNkZBQTZGLDRCQUE0QixrR0FBa0csMEJBQTBCLDhHQUE4Ryx5QkFBeUIsNkhBQTZILHNJQUFzSSwrQkFBK0IsOGJBQThiLDZXQUE2VyxzQ0FBc0MsMkdBQTJHLGdCQUFnQix1R0FBdUcsaUJBQWlCLDJLQUEySyxzQkFBc0Isb0tBQW9LLDJCQUEyQixvS0FBb0ssaUNBQWlDLHlJQUF5SSw2Q0FBNkMsME5BQTBOLDBCQUEwQiwySEFBMkgscUJBQXFCLG9KQUFvSix1cEJBQXVwQiw0Q0FBNEMsU0FBUyx1MEJBQXUwQiwwREFBMEQsa0NBQWtDLGNBQWMsc0dBQXNHLGlDQUFpQyxVQUFVLDBDQUEwQyw4Q0FBOEMsYUFBYSxrQkFBa0IsbUNBQW1DLHNDQUFzQyxrQkFBa0IsbUNBQW1DLCtDQUErQyxtQkFBbUIseUJBQXlCLDhCQUE4QiwyQkFBMkIsbUNBQW1DLHNDQUFzQyxxQkFBcUIsK0NBQStDLHdCQUF3QixzQ0FBc0Msc0JBQXNCLDhEQUE4RCwyQkFBMkIsOERBQThELDJCQUEyQiw4REFBOEQseUJBQXlCLDhEQUE4RCxxQkFBcUIsZ0ZBQWdGLHNCQUFzQixtRkFBbUYsc0JBQXNCLDRGQUE0RixzQkFBc0IsNEZBQTRGLHNCQUFzQixtRkFBbUYsd0JBQXdCLHFEQUFxRCxvQ0FBb0MsZ0ZBQWdGLHVCQUF1Qix3Q0FBd0MsOEJBQThCLDhCQUE4Qix3Q0FBd0MsbUJBQW1CLDBCQUEwQix5QkFBeUIsbUJBQW1CLHVCQUF1QixrREFBa0Qsd0JBQXdCLHFEQUFxRCwwQkFBMEIseUNBQXlDLHlGQUF5RixrQkFBa0IscUNBQXFDLHdCQUF3QixvREFBb0Qsb0VBQW9FLHlCQUF5Qiw0QkFBNEIsNkVBQTZFLGdDQUFnQyx5SUFBeUksNExBQTRMLCtCQUErQixtT0FBbU8sNExBQTRMLDJCQUEyQixlQUFlLHdGQUF3Riw4RUFBOEUsZ0NBQWdDLHVEQUF1RCxxSUFBcUksZ0NBQWdDLHlCQUF5QiwrRkFBK0YsZ0NBQWdDLGtJQUFrSSxpSEFBaUgsNEJBQTRCLGNBQWMsbU1BQW1NLDRCQUE0QixjQUFjLG1NQUFtTSw0QkFBNEIsY0FBYyxtTUFBbU0sb0JBQW9CLHNFQUFzRSw4Q0FBOEMsNEJBQTRCLHNEQUFzRCxnQkFBZ0IsMkNBQTJDLDBCQUEwQiw2Q0FBNkMscUJBQXFCLG9EQUFvRCxpT0FBaU8sNENBQTRDLFNBQVMscWhDQUFxaEMsMERBQTBELGtDQUFrQyxjQUFjLHNHQUFzRyxpQ0FBaUMsVUFBVSw4TEFBOEwsaUJBQWlCLDhDQUE4QyxzQkFBc0IsMkdBQTJHLElBQUksMEdBQTBHLFVBQVUsR0FBRyw4Q0FBOEMsYUFBYSxrQkFBa0IsbUNBQW1DLCtDQUErQyxrQkFBa0IsbUNBQW1DLDJEQUEyRCw2QkFBNkIsbUNBQW1DLCtDQUErQyxxQkFBcUIsMkRBQTJELDBCQUEwQiwrQ0FBK0Msc0JBQXNCLCtFQUErRSwyQkFBMkIsK0VBQStFLDJCQUEyQiwrRUFBK0UseUJBQXlCLCtFQUErRSxxQkFBcUIsdUdBQXVHLHNCQUFzQiwyR0FBMkcsc0JBQXNCLHVIQUF1SCxzQkFBc0IsdUhBQXVILHNCQUFzQiwyR0FBMkcsd0JBQXdCLG1FQUFtRSxvQ0FBb0MsdUdBQXVHLHVCQUF1QixvREFBb0Qsa0NBQWtDLDhCQUE4QixvREFBb0QsdUJBQXVCLG1CQUFtQixnQ0FBZ0Msa0NBQWtDLDBCQUEwQixnQ0FBZ0MsdUJBQXVCLHVCQUF1QiwrREFBK0Qsd0JBQXdCLG1FQUFtRSwwQkFBMEIsb0RBQW9ELDZGQUE2RixrQkFBa0IsK0NBQStDLHlCQUF5QixvQ0FBb0MsbUdBQW1HLGlDQUFpQyx3TEFBd0wsZ0NBQWdDLGdDQUFnQyw2SkFBNkosZ0NBQWdDLGtJQUFrSSw2SEFBNkgsZ0JBQWdCLHFEQUFxRCwwQkFBMEIsMERBQTBELHFCQUFxQixvRUFBb0UsMFNBQTBTLDRDQUE0QyxTQUFTLG0xQkFBbTFCLDBEQUEwRCxrQ0FBa0MsY0FBYyxzR0FBc0csaUNBQWlDLFVBQVUsOExBQThMLGlCQUFpQiw4Q0FBOEMsc0JBQXNCLDJHQUEyRyxJQUFJLHNJQUFzSSxVQUFVLEdBQUcsOENBQThDLGFBQWEsZ0JBQWdCLGt2TUFBa3ZNLDhDQUE4QyxhQUFhLDRDQUE0QyxTQUFTLGtEQUFrRCw4RUFBOEUsaUtBQWlLLDhDQUE4QyxhQUFhLHFDQUFxQyxnQ0FBZ0MsYUFBYSwrQ0FBK0MsK0ZBQStGLHlCQUF5Qix1QkFBdUIsaUNBQWlDLDhEQUE4RCxvREFBb0QsNENBQTRDLFNBQVMsRUFBRSw0QkFBNEIsd0NBQXdDLFlBQVksZUFBZSxLQUFLLHdCQUF3QixtTEFBbUwsb0RBQW9ELDBJQUEwSSxxTEFBcUwsNEJBQTRCLDRJQUE0SSwwRkFBMEYsS0FBSyw4VUFBOFUscTBCQUFxMEIsd0VBQXdFLFFBQVEsNERBQTRELG1FQUFtRSxnR0FBZ0csZ0NBQWdDLHNDQUFzQyw4SUFBOEksRUFBRSw0Q0FBNEMsaWJBQWliLEVBQUUsaUNBQWlDLDRKQUE0SixFQUFFLDBDQUEwQyx1TEFBdUwsRUFBRSxxQ0FBcUMsbU1BQW1NLDRLQUE0SyxnQkFBZ0Isd0JBQXdCLEVBQUUscUNBQXFDLHVEQUF1RCw0S0FBNEssZ0JBQWdCLHdCQUF3QixFQUFFLGlDQUFpQywwRkFBMEYsZ0tBQWdLLGdCQUFnQixvQkFBb0IsRUFBRSxpQ0FBaUMsMEZBQTBGLGdLQUFnSyxnQkFBZ0Isb0JBQW9CLEVBQUUsNENBQTRDLDhOQUE4TixnQkFBZ0IsK0JBQStCLEVBQUUsNkJBQTZCLHNCQUFzQixhQUFhLGlFQUFpRSxrQ0FBa0MsMkJBQTJCLDRDQUE0Qyw2QkFBNkIsZ0NBQWdDLCtFQUErRSxxQkFBcUIsa0NBQWtDLDBCQUEwQiw0Q0FBNEMsNkJBQTZCLGdDQUFnQyw0RkFBNEYsb0JBQW9CLG1DQUFtQywyQkFBMkIsNENBQTRDLDZCQUE2QixnQ0FBZ0MsNkZBQTZGLHFCQUFxQiwyQkFBMkIsOENBQThDLGFBQWEscUNBQXFDLGdDQUFnQyxhQUFhLCtDQUErQywrRkFBK0YseUJBQXlCLHVCQUF1QixnQ0FBZ0Msd0NBQXdDLCtWQUErViw0Q0FBNEMsU0FBUyxFQUFFLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLHdZQUF3WSw0QkFBNEIsb0VBQW9FLDZJQUE2SSwyZkFBMmYscUJBQXFCLHlCQUF5QixnQ0FBZ0MsNkJBQTZCLDZFQUE2RSxFQUFFLHNDQUFzQyx1dkJBQXV2Qix3RUFBd0UsUUFBUSx3R0FBd0csc0VBQXNFLDJGQUEyRixFQUFFLGlDQUFpQyxnUEFBZ1AsRUFBRSw0Q0FBNEMsZ0VBQWdFLEVBQUUsc0NBQXNDLHlJQUF5SSxFQUFFLHNDQUFzQyw2TUFBNk0saUdBQWlHLGtEQUFrRCxFQUFFLDJEQUEyRCx3U0FBd1MsRUFBRSxvQ0FBb0Msb1JBQW9SLEVBQUUscUNBQXFDLCtJQUErSSxFQUFFLG9DQUFvQywwTkFBME4sRUFBRSxzQ0FBc0MsNkhBQTZILEVBQUUsNENBQTRDLDJGQUEyRixFQUFFLCtCQUErQiw4QkFBOEIsc0JBQXNCLHFPQUFxTyxFQUFFLCtCQUErQiw4QkFBOEIsc0JBQXNCLDJMQUEyTCxFQUFFLDJCQUEyQiwwQkFBMEIsc0JBQXNCLHFNQUFxTSxFQUFFLDJCQUEyQiwwQkFBMEIsc0JBQXNCLHFNQUFxTSxFQUFFLCtCQUErQix3QkFBd0IsRUFBRSwyQkFBMkIsb0JBQW9CLEVBQUUsNEJBQTRCLHFCQUFxQixFQUFFLDZCQUE2QixzQkFBc0IsRUFBRSxvQ0FBb0MsNkJBQTZCLGFBQWEsaUVBQWlFLGtDQUFrQywyQkFBMkIsNENBQTRDLDZCQUE2QixnQ0FBZ0MsK0VBQStFLHFCQUFxQixrQ0FBa0MsMEJBQTBCLDRDQUE0Qyw2QkFBNkIsZ0NBQWdDLDRGQUE0RixvQkFBb0IsbUNBQW1DLDJCQUEyQiw0Q0FBNEMsNkJBQTZCLGdDQUFnQyx1RkFBdUYscUJBQXFCLDJCQUEyQiw4Q0FBOEMsYUFBYSxxQ0FBcUMsZ0NBQWdDLGFBQWEsK0NBQStDLCtGQUErRiw0Q0FBNEMsU0FBUyxFQUFFLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLDZMQUE2TCxnQ0FBZ0MseUVBQXlFLHVFQUF1RSw4R0FBOEcsZ0NBQWdDLDJhQUEyYSw0TkFBNE4sOEVBQThFLElBQUksZ0JBQWdCLFlBQVksMGpCQUEwakIsS0FBSyxzQkFBc0IsS0FBSyxra0JBQWtrQix1Q0FBdUMseUNBQXlDLG9DQUFvQyw0QkFBNEIsbUVBQW1FLDBNQUEwTSxFQUFFLDhCQUE4QiwwQ0FBMEMsaUJBQWlCLEdBQUcsOENBQThDLDhIQUE4SCxrREFBa0QsOENBQThDLE9BQU8scUhBQXFILEVBQUUsa0NBQWtDLCtCQUErQiw4Q0FBOEMsYUFBYSwrQ0FBK0MsK0ZBQStGLDRDQUE0QyxTQUFTLEVBQUUsNEJBQTRCLHdDQUF3QyxZQUFZLGVBQWUsS0FBSyx3QkFBd0IsbUxBQW1MLG9EQUFvRCwwSUFBMEksMkJBQTJCLElBQUksb0NBQW9DLEtBQUssU0FBUyx3QkFBd0IsK0JBQStCLDJCQUEyQiw4REFBOEQsc0NBQXNDLDREQUE0RCwyRkFBMkYsaUlBQWlJLEVBQUUsOENBQThDLG9EQUFvRCxFQUFFLCtEQUErRCxvRkFBb0YsRUFBRSxrREFBa0QscUNBQXFDLG1EQUFtRCxxQkFBcUIscUZBQXFGLGFBQWEsRUFBRSwrQ0FBK0MsdURBQXVELEVBQUUsMkNBQTJDLG9GQUFvRixFQUFFLDBCQUEwQixJQUFJLHFFQUFxRSxnQkFBZ0IsY0FBYyxxREFBcUQsb0NBQW9DLDBEQUEwRCx1S0FBdUsscUJBQXFCLEtBQUssb0NBQW9DLGtDQUFrQyxhQUFhLEVBQUUsNkRBQTZELG9CQUFvQixpS0FBaUssK0NBQStDLCtCQUErQixFQUFFLGlEQUFpRCxxREFBcUQsRUFBRSxnQ0FBZ0MsZ0NBQWdDLCtGQUErRixpR0FBaUcscUJBQXFCLHlCQUF5Qix3Q0FBd0MsNEJBQTRCLEVBQUUsd0NBQXdDLHlGQUF5RixxQkFBcUIsOEJBQThCLHFCQUFxQixtQkFBbUIsR0FBRyxnQ0FBZ0MsOENBQThDLGFBQWEscUNBQXFDLGdDQUFnQyxhQUFhLCtDQUErQywrRkFBK0YsNENBQTRDLFNBQVMsRUFBRSw0QkFBNEIsd0NBQXdDLFlBQVksZUFBZSxLQUFLLHdCQUF3QixtTEFBbUwsb0RBQW9ELDBJQUEwSSwrT0FBK08sa0JBQWtCLDBIQUEwSCwyQkFBMkIsaUNBQWlDLGdLQUFnSyw2R0FBNkcsa0JBQWtCLGdlQUFnZSx5QkFBeUIsNEJBQTRCLHdCQUF3Qiw0QkFBNEIsd0JBQXdCLHlCQUF5QixxQkFBcUIsc0RBQXNELHFCQUFxQixFQUFFLHFDQUFxQywrQkFBK0IseWdCQUF5Z0IsRUFBRSxrQ0FBa0MsK2dCQUErZ0IsRUFBRSw0QkFBNEIsc0VBQXNFLDBFQUEwRSxFQUFFLGdDQUFnQyxzRUFBc0UseUJBQXlCLEVBQUUsb0NBQW9DLHNFQUFzRSw2QkFBNkIsRUFBRSxzQ0FBc0Msd0VBQXdFLHlCQUF5QixFQUFFLHFDQUFxQyw2S0FBNkssRUFBRSxxQ0FBcUMsb0hBQW9ILDRDQUE0QyxrRkFBa0YsNENBQTRDLG9GQUFvRixFQUFFLDZCQUE2Qiw4Q0FBOEMsRUFBRSxzQ0FBc0Msc0JBQXNCLGdEQUFnRCxpRUFBaUUsRUFBRSw2QkFBNkIsMkRBQTJELEVBQUUsdUNBQXVDLDREQUE0RCxrREFBa0QscUxBQXFMLEVBQUUscUNBQXFDLHlEQUF5RCxFQUFFLHdCQUF3QixpQkFBaUIsRUFBRSx3QkFBd0IsaUJBQWlCLGtCQUFrQixHQUFHLCtCQUErQiw4Q0FBOEMsYUFBYSwrQ0FBK0MsK0ZBQStGLCtDQUErQywrRkFBK0Ysc0VBQXNFLHdDQUF3QyxzSkFBc0osbUVBQW1FLGFBQWEsMERBQTBELCtHQUErRyw0Q0FBNEMsU0FBUyxFQUFFLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLDJEQUEyRCxnQ0FBZ0MsYUFBYSwwRUFBMEUsdUJBQXVCLGtDQUFrQyxzTkFBc04sZ0VBQWdFLGlFQUFpRSx3REFBd0Qsa0lBQWtJLDRDQUE0QyxFQUFFLGtEQUFrRCxrSUFBa0ksNkhBQTZILGVBQWUsbUJBQW1CLDRCQUE0Qiw4Q0FBOEMsYUFBYSwrQ0FBK0MsK0ZBQStGLDRDQUE0QyxTQUFTLEVBQUUsNEJBQTRCLHdDQUF3QyxZQUFZLGVBQWUsS0FBSyx3QkFBd0IsbUxBQW1MLG9EQUFvRCwwSUFBMEksd0RBQXdELG9CQUFvQiw0Z0JBQTRnQiwrQkFBK0IsK0JBQStCLGdqQ0FBZ2pDLEVBQUUsc0RBQXNELDJEQUEyRCxFQUFFLDRCQUE0QixzREFBc0QsRUFBRSx1QkFBdUIsZUFBZSxzQkFBc0Isb0NBQW9DLEVBQUUsdUJBQXVCLGVBQWUsc0JBQXNCLG9DQUFvQyxFQUFFLHVCQUF1QixlQUFlLHNCQUFzQixvQ0FBb0MsRUFBRSw0QkFBNEIsZ0JBQWdCLHNCQUFzQixxQ0FBcUMsRUFBRSw0QkFBNEIsZ0JBQWdCLHNCQUFzQixxQ0FBcUMsRUFBRSw0QkFBNEIsZ0JBQWdCLHNCQUFzQixxQ0FBcUMsRUFBRSwrQkFBK0IsZ0JBQWdCLHNCQUFzQixxQ0FBcUMsRUFBRSwrQkFBK0IsZ0JBQWdCLHNCQUFzQixxQ0FBcUMsRUFBRSwrQkFBK0IsZ0JBQWdCLHNCQUFzQixxQ0FBcUMsWUFBWSxHQUFHLHlCQUF5Qiw4Q0FBOEMsYUFBYSxxQ0FBcUMsZ0NBQWdDLGFBQWEsNENBQTRDLFNBQVMsRUFBRSx5aUJBQXlpQixxTkFBcU4sMkJBQTJCLDBCQUEwQix5R0FBeUcsb0RBQW9ELCtCQUErQix5QkFBeUIsOEJBQThCLDJCQUEyQixpQ0FBaUMsNkJBQTZCLDBCQUEwQixxQkFBcUIsK0JBQStCLHVCQUF1QixxQkFBcUIsNENBQTRDLDhCQUE4QixvRkFBb0Ysc0NBQXNDLHVEQUF1RCxHQUFHLEVBQUUsMEJBQTBCLDRGQUE0RixvREFBb0QsK0JBQStCLHlCQUF5Qiw4QkFBOEIsMkJBQTJCLGlDQUFpQywrQkFBK0IsdUJBQXVCLHVCQUF1QixxQkFBcUIsK0JBQStCLHdCQUF3Qix3QkFBd0Isd0JBQXdCLDhGQUE4RixrQ0FBa0Msa0NBQWtDLHNCQUFzQixHQUFHLEVBQUUsMEJBQTBCLGdHQUFnRyxpREFBaUQsNkJBQTZCLHVCQUF1QixxQkFBcUIsbURBQW1ELEdBQUcsRUFBRSw4Q0FBOEMsYUFBYSwrQ0FBK0MsK0ZBQStGLDRDQUE0QyxTQUFTLEVBQUUsNEJBQTRCLHdDQUF3QyxZQUFZLGVBQWUsS0FBSyx3QkFBd0IsbUxBQW1MLG9EQUFvRCwwSUFBMEksd0JBQXdCLHFCQUFxQixnREFBZ0QsZ0NBQWdDLG1DQUFtQyx5QkFBeUIsRUFBRSw0QkFBNEIscUJBQXFCLGFBQWEsR0FBRywwQkFBMEIsOENBQThDLGFBQWEsK0NBQStDLCtGQUErRiwrQ0FBK0MsK0ZBQStGLHNFQUFzRSx3Q0FBd0Msc0pBQXNKLG1FQUFtRSxhQUFhLDBEQUEwRCwrR0FBK0csNENBQTRDLFNBQVMsRUFBRSx3RUFBd0UsZ0NBQWdDLGFBQWEsbURBQW1ELHFCQUFxQixvSUFBb0ksaUxBQWlMLG9EQUFvRCx5QkFBeUIsMEJBQTBCLDhDQUE4QyxhQUFhLHFDQUFxQyxnQ0FBZ0MsYUFBYSwrQ0FBK0MsK0ZBQStGLCtDQUErQywrRkFBK0Ysc0VBQXNFLHdDQUF3QyxzSkFBc0osbUVBQW1FLGFBQWEsMERBQTBELCtHQUErRyw0Q0FBNEMsU0FBUyxFQUFFLDhRQUE4USx3QkFBd0IseU1BQXlNLG1DQUFtQyxjQUFjLGlCQUFpQiwwQkFBMEIsTUFBTSxrQkFBa0IsTUFBTSxvQkFBb0IsOElBQThJLGtJQUFrSSxrREFBa0QsaUJBQWlCLDZCQUE2Qiw4Q0FBOEMsYUFBYSwrQ0FBK0MsK0ZBQStGLCtDQUErQywrRkFBK0Ysc0VBQXNFLHdDQUF3QyxzSkFBc0osbUVBQW1FLGFBQWEsMERBQTBELCtHQUErRyw0Q0FBNEMsU0FBUyxFQUFFLHdFQUF3RSxnQ0FBZ0MsYUFBYSxtREFBbUQscUJBQXFCLG9JQUFvSSxpTEFBaUwsb0RBQW9ELHlCQUF5QiwwQkFBMEIsMEJBQTBCLGtGQUFrRixnREFBZ0QsNEJBQTRCLDJCQUEyQix3Q0FBd0MsbUpBQW1KLGlCQUFpQix1Q0FBdUMsb0ZBQW9GLG1GQUFtRixtRkFBbUYsa0ZBQWtGLGdFQUFnRSw0Q0FBNEMsc0NBQXNDLHNDQUFzQyxzQ0FBc0Msc0NBQXNDLHNDQUFzQyxnRkFBZ0YsZ0ZBQWdGLGlCQUFpQix1REFBdUQsdURBQXVELDBJQUEwSSwwRUFBMEUsNEpBQTRKLDZMQUE2TCw4S0FBOEssc0NBQXNDLG1GQUFtRiw0Q0FBNEMsbUJBQW1CLEdBQUcscUJBQXFCLHFDQUFxQywyQkFBMkIsR0FBRyxFQUFFLDhDQUE4QyxhQUFhLHFDQUFxQyxnQ0FBZ0MsYUFBYSwrQ0FBK0MsK0ZBQStGLDRDQUE0QyxTQUFTLHU2QkFBdTZCLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLHNEQUFzRCxrQ0FBa0MsY0FBYyxzR0FBc0csaUNBQWlDLDhwSUFBOHBJLGtCQUFrQiw0MERBQTQwRCw0Q0FBNEMsNkJBQTZCLDJCQUEyQix5R0FBeUcsNEdBQTRHLG9FQUFvRSxVQUFVLGlCQUFpQixtN0RBQW03RCw4Q0FBOEMsYUFBYSxrQkFBa0IsbUNBQW1DLCtDQUErQyxrQkFBa0IsbUNBQW1DLDJEQUEyRCxxQkFBcUIsMkRBQTJELHVCQUF1QiwrQ0FBK0MscUNBQXFDLG1DQUFtQyx1REFBdUQsa0NBQWtDLHVEQUF1RCwwQkFBMEIsWUFBWSxZQUFZLHNCQUFzQixxREFBcUQsV0FBVyx1QkFBdUIsb0RBQW9ELDBGQUEwRix3QkFBd0IsWUFBWSwyREFBMkQsd0JBQXdCLDJCQUEyQiwyQkFBMkIsb0VBQW9FLHVGQUF1RiwyQkFBMkIsb0VBQW9FLGlGQUFpRix3QkFBd0Isb0RBQW9ELCtEQUErRCwrQkFBK0Isb0NBQW9DLGdEQUFnRCw0QkFBNEIscURBQXFELGdCQUFnQixxREFBcUQsaUJBQWlCLHNGQUFzRixzQkFBc0Isc0VBQXNFLHNCQUFzQiwrRUFBK0UsMkJBQTJCLCtFQUErRSwwQkFBMEIsMERBQTBELHFCQUFxQixvRUFBb0UsMFNBQTBTLGlDQUFpQyxtRUFBbUUsNkNBQTZDLHVHQUF1Ryw0Q0FBNEMsU0FBUywrbkJBQStuQiwwREFBMEQsa0NBQWtDLGNBQWMsc0dBQXNHLGlDQUFpQyxVQUFVLDBDQUEwQyw4Q0FBOEMsYUFBYSxrQkFBa0IsbUNBQW1DLGlFQUFpRSxrQkFBa0IsbUNBQW1DLG1GQUFtRixxQkFBcUIsbUZBQW1GLHVCQUF1QixpRUFBaUUsbUNBQW1DLG1DQUFtQyxtRUFBbUUsZ0NBQWdDLG1FQUFtRSx1QkFBdUIsc0VBQXNFLGdKQUFnSix3QkFBd0IsMkJBQTJCLDJCQUEyQixvR0FBb0csbUlBQW1JLDJCQUEyQixvRkFBb0YscUdBQXFHLHdCQUF3QixvRUFBb0UsbUZBQW1GLDRCQUE0QixvRUFBb0UsK0ZBQStGLCtCQUErQixvQ0FBb0Msa0VBQWtFLDRCQUE0Qix1RUFBdUUsZ0NBQWdDLHVFQUF1RSxnQkFBZ0IsMEVBQTBFLGlCQUFpQiwwSEFBMEgsc0JBQXNCLGlIQUFpSCwyQkFBMkIsaUhBQWlILGlDQUFpQywrRkFBK0YsNkNBQTZDLHFKQUFxSiwwQkFBMEIsb0ZBQW9GLHFCQUFxQixvR0FBb0csNGJBQTRiLDRDQUE0QyxTQUFTLCtuQkFBK25CLDBEQUEwRCxrQ0FBa0MsY0FBYyxzR0FBc0csaUNBQWlDLFVBQVUsMENBQTBDLDhDQUE4QyxhQUFhLGtCQUFrQixvQ0FBb0MsaUtBQWlLLGtCQUFrQixvQ0FBb0MsdU5BQXVOLHFCQUFxQix1TkFBdU4scUZBQXFGLG9DQUFvQyxpTUFBaU0sa0ZBQWtGLGlNQUFpTSx1QkFBdUIsaUtBQWlLLDBCQUEwQixZQUFZLDJEQUEyRCxpSkFBaUosaU5BQWlOLFdBQVcsdUJBQXVCLDhiQUE4YixzbkJBQXNuQix3QkFBd0IsMEpBQTBKLHlyQ0FBeXJDLHdCQUF3QiwwSkFBMEosOE5BQThOLDJCQUEyQiwwTEFBMEwsdXFCQUF1cUIsNEJBQTRCLDZKQUE2Six5aEJBQXloQix3QkFBd0IseUJBQXlCLCtPQUErTyxnQ0FBZ0MsK1RBQStULHF4QkFBcXhCLDRCQUE0Qiw4R0FBOEcsd1JBQXdSLDRCQUE0Qiw4R0FBOEcsd1JBQXdSLDRCQUE0Qiw0R0FBNEcsMFJBQTBSLGdDQUFnQywwS0FBMEssNEJBQTRCLDBLQUEwSyxvQ0FBb0Msd0ZBQXdGLDhVQUE4VSxnQ0FBZ0Msb0NBQW9DLGtLQUFrSyxnQ0FBZ0Msb0NBQW9DLGtLQUFrSyxnQ0FBZ0Msb0NBQW9DLGtLQUFrSywwQ0FBMEMsNkhBQTZILDBOQUEwTixpQ0FBaUMsd0RBQXdELDZCQUE2Qix3R0FBd0cseUlBQXlJLDhCQUE4QixvQ0FBb0MsbWpCQUFtakIsaURBQWlELHFKQUFxSix1UUFBdVEseURBQXlELDZLQUE2SyxpWEFBaVgseUJBQXlCLDZIQUE2SCwyTUFBMk0scURBQXFELHdEQUF3RCxzT0FBc08sK0NBQStDLHlDQUF5QyxpTUFBaU0sc0RBQXNELCtPQUErTywrUEFBK1AsbURBQW1ELHdEQUF3RCxvTkFBb04sbUNBQW1DLGlPQUFpTyxtd0JBQW13QixxQ0FBcUMsa0pBQWtKLHNEQUFzRCx1REFBdUQsOE1BQThNLGdCQUFnQixtTEFBbUwsaUJBQWlCLHdTQUF3UyxzQkFBc0IsNlNBQTZTLDJCQUEyQiw2U0FBNlMsaUNBQWlDLHVQQUF1UCw2Q0FBNkMsNllBQTZZLDBCQUEwQixrT0FBa08scUJBQXFCLDRSQUE0Uiw4cUNBQThxQyw0Q0FBNEMsU0FBUyx1MkNBQXUyQywwREFBMEQsa0NBQWtDLGNBQWMsc0dBQXNHLGlDQUFpQyxVQUFVLDBDQUEwQyw4Q0FBOEMsYUFBYSxzQ0FBc0Msa0NBQWtDLGNBQWMsc0dBQXNHLGlDQUFpQyxrQkFBa0IsbUNBQW1DLCtDQUErQyx1QkFBdUIsK0NBQStDLG9DQUFvQyxRQUFRLG9CQUFvQixtRkFBbUYsa0NBQWtDLDRDQUE0Qyx1SEFBdUgsMkJBQTJCLG9FQUFvRSx1SUFBdUksNEJBQTRCLFFBQVEsc0VBQXNFLHVGQUF1Riw0QkFBNEIsUUFBUSxzRUFBc0UsdUZBQXVGLDRCQUE0QixRQUFRLHNFQUFzRSx1RkFBdUYsMkJBQTJCLHlCQUF5QixnRkFBZ0YsMEJBQTBCLHVJQUF1SSw2VkFBNlYsdUJBQXVCLG1GQUFtRixrRkFBa0YsMEJBQTBCLDhEQUE4RCx5QkFBeUIsdUNBQXVDLGdKQUFnSixLQUFLLFFBQVEsc0NBQXNDLHdCQUF3QixnTEFBZ0wsV0FBVyw4QkFBOEIsNkJBQTZCLHVDQUF1Qyw4RkFBOEYsK0dBQStHLGdCQUFnQixxREFBcUQsNENBQTRDLFNBQVMseXFCQUF5cUIsZ3FCQUFncUIsOEZBQThGLDRGQUE0Rix5QkFBeUIsc0JBQXNCLDJWQUEyViw2QkFBNkIsa0NBQWtDLCtCQUErQixtRkFBbUYsOEJBQThCLHVCQUF1QixtQ0FBbUMsMExBQTBMLEdBQUcsOENBQThDLGFBQWEsa0JBQWtCLG1DQUFtQyw2QkFBNkIsa0JBQWtCLG1DQUFtQyxtQ0FBbUMseUJBQXlCLG1DQUFtQyw2QkFBNkIscUJBQXFCLG1DQUFtQyxzQkFBc0IsNkJBQTZCLHNCQUFzQiw2Q0FBNkMsMkJBQTJCLDZDQUE2QywyQkFBMkIsNkNBQTZDLHlCQUF5Qiw2Q0FBNkMscUJBQXFCLHlEQUF5RCxzQkFBc0IsMkRBQTJELHNCQUFzQixpRUFBaUUsc0JBQXNCLGlFQUFpRSxzQkFBc0IsMkRBQTJELHdCQUF3Qix1Q0FBdUMsb0NBQW9DLHlEQUF5RCx1QkFBdUIsNEJBQTRCLDBCQUEwQiw4QkFBOEIsNEJBQTRCLGVBQWUsbUJBQW1CLGtCQUFrQiwwQkFBMEIsMEJBQTBCLGtCQUFrQixlQUFlLHVCQUF1QixxQ0FBcUMsd0JBQXdCLHVDQUF1QywwQkFBMEIsOEJBQThCLHlFQUF5RSxrQkFBa0IsMkJBQTJCLHdCQUF3QiwwQkFBMEIsb0NBQW9DLHlCQUF5QixvQkFBb0IsdURBQXVELDJCQUEyQixlQUFlLGtDQUFrQyw2REFBNkQsZ0NBQWdDLGtCQUFrQixxREFBcUQsaUNBQWlDLGtCQUFrQiwrREFBK0QsZ0NBQWdDLGtCQUFrQiwrREFBK0QsZ0NBQWdDLGtCQUFrQixpRUFBaUUsZ0JBQWdCLGlDQUFpQywwQkFBMEIsZ0NBQWdDLHFCQUFxQixvQ0FBb0Msd0pBQXdKLDRDQUE0QyxTQUFTLGk3QkFBaTdCLDBEQUEwRCxrQ0FBa0MsY0FBYyxzR0FBc0csaUNBQWlDLFVBQVUsOExBQThMLGlCQUFpQiw4Q0FBOEMsc0JBQXNCLDJHQUEyRyxJQUFJLDhFQUE4RSxVQUFVLEdBQUcsOENBQThDLGFBQWEsdUNBQXVDLDhCQUE4QixpQkFBaUIsOERBQThELG9CQUFvQixnQ0FBZ0MsMkNBQTJDLHVEQUF1RCxTQUFTLDRDQUE0QyxTQUFTLHVDQUF1Qyw4Q0FBOEMsYUFBYSxxQ0FBcUMsZ0NBQWdDLGFBQWEsNENBQTRDLFNBQVMsRUFBRSw2TEFBNkwscUlBQXFJLGlDQUFpQyw4Q0FBOEMsYUFBYSxzQkFBc0IsME9BQTBPLDRDQUE0QyxTQUFTLDZCQUE2QixpREFBaUQsMERBQTBELGdDQUFnQyxhQUFhLHNDQUFzQyw4Q0FBOEMsYUFBYSwwQkFBMEIsaUVBQWlFLHlFQUF5RSw4SkFBOEosNENBQTRDLFNBQVMsNkJBQTZCLDJEQUEyRCwwREFBMEQsZ0NBQWdDLGFBQWEseUNBQXlDLDhDQUE4QyxhQUFhLDRDQUE0QyxTQUFTLDJVQUEyVSw4Q0FBOEMsYUFBYSxpQ0FBaUMsOENBQThDLHNEQUFzRCxtQkFBbUIsd0NBQXdDLDhDQUE4QywwQkFBMEIsNEZBQTRGLGdEQUFnRCxxQkFBcUIsK0JBQStCLHFCQUFxQixtRUFBbUUsR0FBRyxFQUFFLDhDQUE4QyxhQUFhLHlCQUF5Qix1QkFBdUIsNENBQTRDLFNBQVMsRUFBRSwwREFBMEQsZ0NBQWdDLGFBQWEsd0VBQXdFLHVCQUF1QixzQ0FBc0MsNElBQTRJLCtkQUErZCxxQ0FBcUMsOENBQThDLGFBQWEsbUNBQW1DLHlEQUF5RCx1RkFBdUYsc0dBQXNHLGtEQUFrRCxlQUFlLDRDQUE0QyxNQUFNLDZDQUE2QyxNQUFNLDZDQUE2QyxNQUFNLG1DQUFtQyxNQUFNLDRFQUE0RSxxQkFBcUIsb0NBQW9DLDBDQUEwQyw4SkFBOEosaUJBQWlCLE1BQU0sMkVBQTJFLDBDQUEwQywwRUFBMEUsZUFBZSxpREFBaUQseUlBQXlJLDhEQUE4RCxJQUFJLEtBQUssNkVBQTZFLGdDQUFnQyw0REFBNEQsb0JBQW9CLDRDQUE0Qyx5REFBeUQsZ0dBQWdHLGlCQUFpQixjQUFjLGdGQUFnRix5REFBeUQsK0VBQStFLE9BQU8sb0ZBQW9GLDhCQUE4Qix3R0FBd0csOEJBQThCLCtFQUErRSwrYkFBK2IsNEJBQTRCLDhDQUE4QyxhQUFhLHFDQUFxQyxnQ0FBZ0MsYUFBYSwrQ0FBK0MsK0ZBQStGLDRDQUE0QyxTQUFTLEVBQUUsNEJBQTRCLHdDQUF3QyxZQUFZLGVBQWUsS0FBSyx3QkFBd0IsbUxBQW1MLG9EQUFvRCwwSUFBMEksOE1BQThNLCtCQUErQiwwRUFBMEUsd1JBQXdSLHNDQUFzQyw2QkFBNkIsMEZBQTBGLGtWQUFrVixnTkFBZ04saUJBQWlCLGlJQUFpSSxzQkFBc0IsYUFBYSxrQkFBa0IsTUFBTSx1Q0FBdUMsdUlBQXVJLHFEQUFxRCxxSUFBcUksNEhBQTRILEVBQUUsd0NBQXdDLDJIQUEySCxFQUFFLDhCQUE4Qix1SEFBdUgsRUFBRSxrQ0FBa0MsdUJBQXVCLEVBQUUsMkJBQTJCLG1CQUFtQixFQUFFLDRCQUE0QixtQkFBbUIsbUJBQW1CLEdBQUcsZ0NBQWdDLDhDQUE4QyxhQUFhLHFDQUFxQyxnQ0FBZ0MsYUFBYSwrQ0FBK0MsK0ZBQStGLHlCQUF5Qix1QkFBdUIsNENBQTRDLFNBQVMsRUFBRSw0QkFBNEIsd0NBQXdDLFlBQVksZUFBZSxLQUFLLHdCQUF3QixtTEFBbUwsb0RBQW9ELDBJQUEwSSx5TUFBeU0sZ0RBQWdELDBFQUEwRSxvbkJBQW9uQiw2Q0FBNkMsNkJBQTZCLCtCQUErQiwyckNBQTJyQyxFQUFFLHdFQUF3RSx5RUFBeUUsd0lBQXdJLHlMQUF5TCx5YUFBeWEsRUFBRSw0QkFBNEIseUtBQXlLLEVBQUUsOEJBQThCLDRJQUE0SSx3Q0FBd0Msa1ZBQWtWLEVBQUUsa0NBQWtDLHdEQUF3RCx1QkFBdUIsRUFBRSx1Q0FBdUMsNEJBQTRCLDBCQUEwQixHQUFHLHVDQUF1Qyw4Q0FBOEMsYUFBYSxxQ0FBcUMsZ0NBQWdDLGFBQWEsK0NBQStDLCtGQUErRiw0Q0FBNEMsU0FBUyxFQUFFLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLHdRQUF3USxvRUFBb0Usc0lBQXNJLDhDQUE4Qyw2QkFBNkIsbUtBQW1LLEVBQUUsMERBQTBELHVDQUF1Qyw4U0FBOFMsRUFBRSxnREFBZ0QsMEZBQTBGLEVBQUUsaURBQWlELHNEQUFzRCxFQUFFLGdDQUFnQyxzRUFBc0UsRUFBRSw4QkFBOEIsMkdBQTJHLEVBQUUsNkJBQTZCLDBCQUEwQix5REFBeUQsRUFBRSwrQkFBK0Isd0JBQXdCLEVBQUUsaUNBQWlDLDBCQUEwQixFQUFFLGdDQUFnQyx5QkFBeUIsRUFBRSxnQ0FBZ0MsMEJBQTBCLEVBQUUscUNBQXFDLHlCQUF5QiwyQkFBMkIsR0FBRyx3Q0FBd0MsOENBQThDLGFBQWEsK0NBQStDLCtGQUErRiwwQkFBMEIsZ0JBQWdCLCtDQUErQyx5Q0FBeUMsMkNBQTJDLCtDQUErQyxxQ0FBcUMsdUNBQXVDLDJDQUEyQyx5Q0FBeUMsMkNBQTJDLCtDQUErQyx5Q0FBeUMsMkNBQTJDLCtDQUErQywrQ0FBK0MsaURBQWlELHFEQUFxRCwyQ0FBMkMsNkNBQTZDLGlEQUFpRCx5Q0FBeUMsMkNBQTJDLCtDQUErQyxtQ0FBbUMscUNBQXFDLHlDQUF5Qyx1Q0FBdUMseUNBQXlDLDhDQUE4Qyw0Q0FBNEMsU0FBUyxFQUFFLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLGlFQUFpRSxnQ0FBZ0MsYUFBYSxzQkFBc0IsUUFBUSxpQkFBaUIsVUFBVSxZQUFZLGVBQWUsV0FBVyxpQkFBaUIsZUFBZSxtQkFBbUIseUNBQXlDLFFBQVEsZUFBZSxhQUFhLGlCQUFpQixnQkFBZ0IsbUJBQW1CLDJDQUEyQyxVQUFVLGVBQWUsZUFBZSxpQkFBaUIsb0JBQW9CLG1CQUFtQixnREFBZ0QsVUFBVSxlQUFlLGlCQUFpQixpQkFBaUIsb0JBQW9CLG1CQUFtQixtREFBbUQsYUFBYSxlQUFlLCtCQUErQixpQkFBaUIsNkJBQTZCLG1CQUFtQixrQ0FBa0MsY0FBYyxlQUFlLGtDQUFrQyxpQkFBaUIsbUNBQW1DLG1CQUFtQixvRkFBb0YsV0FBVyxlQUFlLDBCQUEwQixpQkFBaUIsMkJBQTJCLG1CQUFtQixzRUFBc0UsVUFBVSxlQUFlLGtCQUFrQixvSUFBb0ksaUJBQWlCLGtCQUFrQixpSUFBaUksbUJBQW1CLGtCQUFrQiw4TUFBOE0sT0FBTyxlQUFlLGNBQWMsdUJBQXVCLGlCQUFpQixjQUFjLDBCQUEwQixtQkFBbUIsZ0JBQWdCLCtEQUErRCxTQUFTLGVBQWUsZ0NBQWdDLGlCQUFpQix5SUFBeUksbUJBQW1CLHNFQUFzRSx3QkFBd0IsNkJBQTZCLHlKQUF5SixvT0FBb08sdUJBQXVCLEVBQUUsa0NBQWtDLCtCQUErQix3Q0FBd0MsNEZBQTRGLDhDQUE4QyxFQUFFLHNDQUFzQywrQ0FBK0Msa0RBQWtELEVBQUUsbUNBQW1DLDZEQUE2RCxFQUFFLG1DQUFtQywrSkFBK0osRUFBRSwrQkFBK0IsOENBQThDLEVBQUUsaUNBQWlDLHlGQUF5RixnQkFBZ0IscUJBQXFCLDhDQUE4Qyx3RkFBd0Ysb0JBQW9CLEVBQUUsaUNBQWlDLDBCQUEwQixlQUFlLEdBQUcsNEJBQTRCLDhDQUE4QyxhQUFhLHFDQUFxQyxnQ0FBZ0MsYUFBYSwrQ0FBK0MsK0ZBQStGLDRDQUE0QyxTQUFTLEVBQUUsNEJBQTRCLHdDQUF3QyxZQUFZLGVBQWUsS0FBSyx3QkFBd0IsbUxBQW1MLG9EQUFvRCwwSUFBMEksNFJBQTRSLGtCQUFrQiwwSEFBMEgseUJBQXlCLCtCQUErQiwrSkFBK0osd1NBQXdTLFFBQVEsYUFBYSxRQUFRLGdXQUFnVyx3QkFBd0IsaUVBQWlFLHdCQUF3QixnRUFBZ0Usd0JBQXdCLGdFQUFnRSx3QkFBd0IsZ0RBQWdELHFCQUFxQiwrQ0FBK0MscUJBQXFCLHdDQUF3QyxxQkFBcUIsRUFBRSxtQ0FBbUMsc0NBQXNDLHdFQUF3RSx5QkFBeUIsRUFBRSw0QkFBNEIsc0VBQXNFLHVCQUF1QixFQUFFLHlDQUF5QyxvRUFBb0UsdUNBQXVDLCtEQUErRCxxUUFBcVEsRUFBRSxpQ0FBaUMsMkpBQTJKLEVBQUUscUNBQXFDLG9CQUFvQixzRkFBc0YscUhBQXFILG9CQUFvQiw2T0FBNk8sRUFBRSxxQ0FBcUMsNkNBQTZDLEVBQUUsNkJBQTZCLHdDQUF3QyxFQUFFLG9EQUFvRCwrT0FBK08sOEJBQThCLHVlQUF1ZSxLQUFLLG1IQUFtSCx5VkFBeVYsRUFBRSw2QkFBNkIsbXhCQUFteEIsRUFBRSxrQ0FBa0Msb0RBQW9ELGdCQUFnQiwyQkFBMkIsZ0JBQWdCLEdBQUcsNkJBQTZCLDhDQUE4QyxhQUFhLHFDQUFxQyxnQ0FBZ0MsYUFBYSwrQ0FBK0MsK0ZBQStGLCtDQUErQywrRkFBK0Ysc0VBQXNFLHdDQUF3QyxzSkFBc0osbUVBQW1FLGFBQWEsMERBQTBELCtHQUErRyx1QkFBdUIsMEJBQTBCLDhCQUE4Qiw0Q0FBNEMsU0FBUyxFQUFFLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLHlXQUF5VyxzQ0FBc0MseUpBQXlKLG9DQUFvQyxzSEFBc0gsNkhBQTZILHFCQUFxQixzUkFBc1Isd0JBQXdCLCtCQUErQix3QkFBd0IsNEJBQTRCLHFCQUFxQix1QkFBdUIsOEVBQThFLCtCQUErQix5TUFBeU0sRUFBRSxrQ0FBa0Msa05BQWtOLEVBQUUsaUNBQWlDLHlHQUF5RyxXQUFXLGtHQUFrRyx3Q0FBd0MsMEdBQTBHLDZDQUE2QyxLQUFLLDJCQUEyQixLQUFLLGtDQUFrQyw4RUFBOEUsNENBQTRDLGFBQWEsMkNBQTJDLG1EQUFtRCwyREFBMkQsK0RBQStELFFBQVEsc0NBQXNDLEVBQUUsZ0NBQWdDLDJHQUEyRyxFQUFFLGdDQUFnQyw4RUFBOEUsRUFBRSw2QkFBNkIsOEVBQThFLGlCQUFpQiw0QkFBNEIsOEJBQThCLDhDQUE4QyxhQUFhLDRDQUE0QyxTQUFTLDhCQUE4QixzQkFBc0Isd0ZBQXdGLFVBQVUsOENBQThDLGFBQWEsK0NBQStDLCtGQUErRiwrQ0FBK0MsK0ZBQStGLHNFQUFzRSx3Q0FBd0Msc0pBQXNKLG1FQUFtRSxhQUFhLDBEQUEwRCwrR0FBK0csNENBQTRDLFNBQVMsRUFBRSw0QkFBNEIsd0NBQXdDLFlBQVksZUFBZSxLQUFLLHdCQUF3QixtTEFBbUwsb0RBQW9ELDBJQUEwSSxpRkFBaUYsZ0NBQWdDLGFBQWEsdXRCQUF1dEIsc0JBQXNCLGlDQUFpQyxnSEFBZ0gsc0RBQXNELDBFQUEwRSxrQ0FBa0MsOEJBQThCLDZCQUE2QixjQUFjLDhCQUE4QiwyQkFBMkIsOENBQThDLGFBQWEscUNBQXFDLGdDQUFnQyxhQUFhLCtDQUErQywrRkFBK0YsK0NBQStDLCtGQUErRixzRUFBc0Usd0NBQXdDLHNKQUFzSixtRUFBbUUsYUFBYSwwREFBMEQsK0dBQStHLDRDQUE0QyxTQUFTLEVBQUUsNEJBQTRCLHdDQUF3QyxZQUFZLGVBQWUsS0FBSyx3QkFBd0IsbUxBQW1MLG9EQUFvRCwwSUFBMEksK0NBQStDLDJDQUEyQywwREFBMEQsa0JBQWtCLHlDQUF5QywwREFBMEQsb0NBQW9DLG9CQUFvQixnREFBZ0Qsa01BQWtNLHFCQUFxQixzSkFBc0osbUVBQW1FLHdDQUF3QyxzRUFBc0UsNklBQTZJLEVBQUUsaUNBQWlDLG1DQUFtQyxFQUFFLHNDQUFzQyxpQ0FBaUMsMEJBQTBCLG9EQUFvRCxpQ0FBaUMsMEJBQTBCLG1EQUFtRCw2QkFBNkIsMEJBQTBCLCtDQUErQywwQkFBMEIsOFBBQThQLHNCQUFzQiw2RkFBNkYsMEJBQTBCLDhLQUE4SyxrREFBa0QsbUZBQW1GLG9iQUFvYix1dkJBQXV2QixlQUFlLEtBQUssa0JBQWtCLG03QkFBbTdCLDZCQUE2Qix1RUFBdUUsR0FBRyxFQUFFLHdDQUF3Qyx1RUFBdUUsNkJBQTZCLG1DQUFtQywwSUFBMEksbUJBQW1CLEVBQUUsdUpBQXVKLGlCQUFpQixxTkFBcU4saU5BQWlOLDJEQUEyRCxzT0FBc08sYUFBYSx5QkFBeUIsaUNBQWlDLHVDQUF1QywyQkFBMkIsOENBQThDLGFBQWEscUNBQXFDLGdDQUFnQyxhQUFhLCtDQUErQywrRkFBK0YsK0NBQStDLCtGQUErRixzRUFBc0Usd0NBQXdDLHNKQUFzSixtRUFBbUUsYUFBYSwwREFBMEQsK0dBQStHLDRDQUE0QyxTQUFTLEVBQUUsNEJBQTRCLHdDQUF3QyxZQUFZLGVBQWUsS0FBSyx3QkFBd0IsbUxBQW1MLG9EQUFvRCwwSUFBMEksb05BQW9OLHFCQUFxQiw4SUFBOEksbUVBQW1FLHlDQUF5Qyw2Q0FBNkMsRUFBRSxpQ0FBaUMscUNBQXFDLG1DQUFtQyxhQUFhLHlCQUF5Qix1Q0FBdUMsNENBQTRDLDJCQUEyQiw4Q0FBOEMsYUFBYSxvRkFBb0Ysc0JBQXNCLGdCQUFnQixHQUFHLG9DQUFvQyx1REFBdUQsaUJBQWlCLDBDQUEwQyxnQkFBZ0IsR0FBRywyQ0FBMkMsbURBQW1ELGlCQUFpQixnSUFBZ0ksZUFBZSxFQUFFLDJGQUEyRiw2TEFBNkwsMkVBQTJFLGlIQUFpSCw2Q0FBNkMsc0pBQXNKLHlFQUF5RSxZQUFZLElBQUksbUNBQW1DLFdBQVcsRUFBRSwwRUFBMEUscUJBQXFCLHVGQUF1RixLQUFLLFdBQVcsOEJBQThCLEtBQUssaUZBQWlGLDJDQUEyQywrRkFBK0YsYUFBYSxhQUFhLGlCQUFpQixxTUFBcU0sZ0JBQWdCLDBCQUEwQiwrREFBK0QsbUdBQW1HLEtBQUssS0FBSyxvQkFBb0IsV0FBVyxHQUFHLHlCQUF5QixpQkFBaUIsYUFBYSxNQUFNLDRCQUE0QixpQ0FBaUMsV0FBVyxnQkFBZ0Isc0NBQXNDLCtDQUErQyxvRUFBb0UsMENBQTBDLDhDQUE4QywrQ0FBK0MsT0FBTywyREFBMkQsd0NBQXdDLHdEQUF3RCw0REFBNEQsbUJBQW1CLFdBQVcsd0dBQXdHLGVBQWUsdUJBQXVCLDRHQUE0RyxPQUFPLCtEQUErRCw0Q0FBNEMsU0FBUyxFQUFFLCtMQUErTCx5QkFBeUIsOENBQThDLGFBQWEscUNBQXFDLGdDQUFnQyxhQUFhLDRDQUE0QyxTQUFTLEVBQUUsa01BQWtNLGNBQWMsOEJBQThCLDhKQUE4SixrQkFBa0IsMExBQTBMLG9CQUFvQix5QkFBeUIsRUFBRSx1QkFBdUIsZ0RBQWdELG1DQUFtQyxnQ0FBZ0Msb0RBQW9ELHVDQUF1QyxFQUFFLGdCQUFnQix1QkFBdUIsOEJBQThCLDhDQUE4QyxhQUFhLDRDQUE0QyxTQUFTLEVBQUUsNkRBQTZELGdDQUFnQyxhQUFhLHNFQUFzRSx5QkFBeUIsZUFBZSxxREFBcUQsaUJBQWlCLHVUQUF1VCw4QkFBOEIsOEJBQThCLDZKQUE2SixjQUFjLGFBQWEsY0FBYyw2SkFBNkosMkVBQTJFLHFCQUFxQix5SEFBeUgscUVBQXFFLGdCQUFnQixxQkFBcUIsRUFBRSxnQ0FBZ0MscUNBQXFDLHVCQUF1QixxQ0FBcUMsb0JBQW9CLGdDQUFnQyw2Q0FBNkMsNEJBQTRCLEVBQUUsZ0JBQWdCLHVCQUF1Qiw2REFBNkQsOENBQThDLGFBQWEsa0JBQWtCLCtCQUErQiwyQkFBMkIsc0JBQXNCLGNBQWMsb0RBQW9ELG1DQUFtQyw0Q0FBNEMsU0FBUyxFQUFFLGlMQUFpTCw4RkFBOEYsZUFBZSx1QkFBdUIsa0JBQWtCLHNDQUFzQyxtQ0FBbUMsMkVBQTJFLFdBQVcsaURBQWlELDBMQUEwTCw2QkFBNkIsMkJBQTJCLHdDQUF3QyxFQUFFLDZIQUE2SCx1RUFBdUUsdVZBQXVWLGlDQUFpQywyQkFBMkIsNENBQTRDLGdDQUFnQyxtQ0FBbUMsbUlBQW1JLHNDQUFzQyxhQUFhLDBCQUEwQiw2QkFBNkIsdUNBQXVDLG1CQUFtQiw4Q0FBOEMsNkJBQTZCLHVPQUF1TyxLQUFLLHNGQUFzRixJQUFJLGdDQUFnQyxXQUFXLHlEQUF5RCx3RUFBd0UsbUNBQW1DLHVCQUF1QixJQUFJLEtBQUsscUJBQXFCLHVGQUF1Rix5SUFBeUksc0RBQXNELFlBQVksRUFBRSw0S0FBNEssT0FBTyxZQUFZLGtCQUFrQixnREFBZ0QsMENBQTBDLGlDQUFpQyxPQUFPLEtBQUssMENBQTBDLGtDQUFrQyxZQUFZLGlHQUFpRywwQkFBMEIsU0FBUyxxRUFBcUUsOEJBQThCLGtCQUFrQiwwQ0FBMEMsaUJBQWlCLGtCQUFrQixtQ0FBbUMsNkJBQTZCLDZEQUE2RCxjQUFjLGlCQUFpQiwrQ0FBK0MseURBQXlELDJEQUEyRCxlQUFlLCtDQUErQyxrQkFBa0IsR0FBRyxtQkFBbUIsNkNBQTZDLGlJQUFpSSxzRUFBc0Usa0VBQWtFLG9CQUFvQiwyQkFBMkIsMkJBQTJCLFdBQVcsK0NBQStDLFVBQVUsYUFBYSxPQUFPLFlBQVksbUJBQW1CLGdEQUFnRCxvREFBb0QsZ0RBQWdELGtCQUFrQiwyQ0FBMkMsd0RBQXdELHFDQUFxQyxZQUFZLGtCQUFrQix1RkFBdUYsbUNBQW1DLCtDQUErQyxlQUFlLDRFQUE0RSxrRkFBa0YsOERBQThELDJCQUEyQiwwQkFBMEIsMEJBQTBCLDhCQUE4QixtQkFBbUIsS0FBSyw2QkFBNkIsS0FBSyx5Q0FBeUMsbURBQW1ELG9FQUFvRSxpREFBaUQsTUFBTSx1REFBdUQsTUFBTSwyREFBMkQsZ0JBQWdCLGlEQUFpRCw4R0FBOEcsbUNBQW1DLFVBQVUsOENBQThDLHdDQUF3QyxpQ0FBaUMsMkNBQTJDLDJNQUEyTSxZQUFZLDRCQUE0QixLQUFLLHdDQUF3Qyx1REFBdUQsS0FBSyw4REFBOEQsNENBQTRDLFlBQVksd0RBQXdELG1IQUFtSCwrREFBK0QsS0FBSyx1QkFBdUIsOENBQThDLHlGQUF5RixZQUFZLDRCQUE0QixLQUFLLHdDQUF3Qyx1REFBdUQsNENBQTRDLHNFQUFzRSx5Q0FBeUMsMENBQTBDLG9FQUFvRSxnRUFBZ0UsK0JBQStCLHlCQUF5QixRQUFRLHdDQUF3QyxnQkFBZ0Isb0VBQW9FLDhCQUE4Qix3Q0FBd0Msc0VBQXNFLGlHQUFpRyxzREFBc0QsOENBQThDLGlHQUFpRyxrQkFBa0IscUhBQXFILHVHQUF1RywwQkFBMEIscUlBQXFJLGtDQUFrQyxRQUFRLDBEQUEwRCx5QkFBeUIsNkVBQTZFLDhCQUE4Qix3Q0FBd0Msc0VBQXNFLGlHQUFpRyx1RkFBdUYsY0FBYyxtQkFBbUIscUtBQXFLLHlDQUF5QyxxQ0FBcUMseUJBQXlCLDBDQUEwQyxxQ0FBcUMsMkJBQTJCLDZEQUE2RCw0QkFBNEIsd0JBQXdCLG1EQUFtRCx5QkFBeUIseURBQXlELCtDQUErQyxrREFBa0QsZUFBZSxLQUFLLDZDQUE2QyxrRUFBa0UsWUFBWSwrQ0FBK0MsOEJBQThCLFdBQVcsS0FBSyxtQkFBbUIsZ0ZBQWdGLFlBQVksNEJBQTRCLHdGQUF3Riw0QkFBNEIsMkRBQTJELDBCQUEwQiw2SUFBNkksMkJBQTJCLHVEQUF1RCw2QkFBNkIseUVBQXlFLEtBQUssc0JBQXNCLEtBQUssZ0VBQWdFLHdDQUF3QyxLQUFLLHlEQUF5RCxnREFBZ0QsZUFBZSxlQUFlLG9GQUFvRiw2SUFBNkksWUFBWSw2QkFBNkIsS0FBSyx5Q0FBeUMsdUJBQXVCLDZDQUE2QyxrR0FBa0csdURBQXVELG1IQUFtSCxtREFBbUQsd0NBQXdDLEVBQUUsa0RBQWtELG9CQUFvQixzSEFBc0gsY0FBYyxjQUFjLDZDQUE2Qyx5REFBeUQsc0VBQXNFLEtBQUssbURBQW1ELGdJQUFnSSxnREFBZ0QsMENBQTBDLDhHQUE4Ryw4QkFBOEIsaUNBQWlDLFlBQVksd0JBQXdCLEtBQUssaUNBQWlDLG9EQUFvRCwyREFBMkQsTUFBTSwyR0FBMkcsWUFBWSxjQUFjLDJFQUEyRSxLQUFLLCtEQUErRCx3REFBd0Qsd0JBQXdCLDhEQUE4RCxtQkFBbUIsd0JBQXdCLDhFQUE4RSx1REFBdUQsY0FBYyxrQ0FBa0MseUJBQXlCLGdGQUFnRixZQUFZLGtCQUFrQixLQUFLLG9CQUFvQixzQkFBc0Isc0hBQXNILE1BQU0sa0VBQWtFLGVBQWUsOERBQThELDREQUE0RCxzR0FBc0csNElBQTRJLGlCQUFpQiwrQkFBK0IsYUFBYSw2REFBNkQsd0JBQXdCLDhEQUE4RCxtQkFBbUIsd0JBQXdCLDhFQUE4RSxZQUFZLGtCQUFrQixLQUFLLG9CQUFvQixzQkFBc0IsWUFBWSx3QkFBd0IsS0FBSyxpQ0FBaUMsb0lBQW9JLGFBQWEscUxBQXFMLDRDQUE0QyxxR0FBcUcsNEJBQTRCLEtBQUssbUNBQW1DLHlCQUF5Qiw0QkFBNEIseUNBQXlDLG9EQUFvRCwwREFBMEQsMkJBQTJCLHlDQUF5QyxTQUFTLGtCQUFrQixtQ0FBbUMsNENBQTRDLEtBQUsseUNBQXlDLHFCQUFxQiwrQkFBK0IsZ0RBQWdELGtCQUFrQixtQ0FBbUMseUtBQXlLLEtBQUsseUNBQXlDLGtCQUFrQixrQkFBa0IsbUNBQW1DLGlEQUFpRCxjQUFjLDZDQUE2QyxnTUFBZ00sNEJBQTRCLEtBQUssbUNBQW1DLDRCQUE0Qix5Q0FBeUMsb0RBQW9ELDBEQUEwRCwyQkFBMkIseUNBQXlDLFNBQVMsa0JBQWtCLG1DQUFtQyxtQkFBbUIsS0FBSyx5Q0FBeUMscUJBQXFCLCtCQUErQixnREFBZ0Qsa0JBQWtCLG1DQUFtQywwSUFBMEksS0FBSyx5Q0FBeUMsdUJBQXVCLGtCQUFrQixxQkFBcUIsNENBQTRDLHVNQUF1TSxzQ0FBc0MseUVBQXlFLDJEQUEyRCxrSEFBa0gsd0NBQXdDLHlEQUF5RCxvREFBb0Qsb0xBQW9MLDhDQUE4QyxzSEFBc0gsa0JBQWtCLG1EQUFtRCxvQkFBb0IsS0FBSyxpQ0FBaUMsNEJBQTRCLHVEQUF1RCxnQkFBZ0IscUpBQXFKLHVDQUF1Qyw2QkFBNkIsOEhBQThILDhFQUE4RSw0REFBNEQsc0VBQXNFLHVEQUF1RCxtRkFBbUYsVUFBVSxrREFBa0QsMkRBQTJELFVBQVUscURBQXFELDhEQUE4RCwwR0FBMEcsd0JBQXdCLHFEQUFxRCxJQUFJLDBEQUEwRCxtQkFBbUIsMkJBQTJCLElBQUksMERBQTBELHVEQUF1RCxpQkFBaUIsMEVBQTBFLHFGQUFxRiw4Q0FBOEMsb0RBQW9ELHNFQUFzRSx5QkFBeUIsUUFBUSwyRkFBMkYsc0hBQXNILHdFQUF3RSxlQUFlLEtBQUssdUJBQXVCLGtDQUFrQyxrSEFBa0gsMkZBQTJGLDBCQUEwQixJQUFJLDBCQUEwQiw4REFBOEQsK0ZBQStGLEtBQUssWUFBWSxpQkFBaUIsS0FBSyx5RkFBeUYsb0VBQW9FLFlBQVksWUFBWSxLQUFLLDhDQUE4Qyw2QkFBNkIsd0VBQXdFLHFKQUFxSixXQUFXLHFHQUFxRyxrREFBa0QsVUFBVSwrQ0FBK0MsY0FBYyx1Q0FBdUMsOERBQThELCtDQUErQyxzQ0FBc0MsaUNBQWlDLDZGQUE2Rix3T0FBd08sSUFBSSxxRkFBcUYsZUFBZSxLQUFLLCtEQUErRCwrRkFBK0YsS0FBSyxZQUFZLGlCQUFpQixLQUFLLG1GQUFtRiwwRUFBMEUsWUFBWSxZQUFZLGdDQUFnQyx3RUFBd0UsOEtBQThLLFVBQVUsZ0RBQWdELHVDQUF1Qyw4REFBOEQsa0RBQWtELDBFQUEwRSxtQkFBbUIsS0FBSywrQkFBK0IsMEJBQTBCLDBMQUEwTCxxS0FBcUssZUFBZSx1REFBdUQsb0JBQW9CLG1DQUFtQyxLQUFLLGlCQUFpQixLQUFLLHdEQUF3RCw2SEFBNkgsc0tBQXNLLDhDQUE4QywwQ0FBMEMsc0ZBQXNGLG1CQUFtQixLQUFLLCtCQUErQiwwQkFBMEIsMExBQTBMLHFLQUFxSyxvRkFBb0YsZUFBZSxLQUFLLHVCQUF1QixrQ0FBa0MsbUZBQW1GLElBQUksb0JBQW9CLHdEQUF3RCxvRkFBb0YsS0FBSyxZQUFZLGlCQUFpQixLQUFLLGlGQUFpRiwwRUFBMEUsWUFBWSxZQUFZLGdDQUFnQyx3RUFBd0Usa0NBQWtDLFVBQVUseUVBQXlFLHlEQUF5RCw0Q0FBNEMsK0JBQStCLHFDQUFxQyxxQ0FBcUMsS0FBSyx1Q0FBdUMsY0FBYyxtQ0FBbUMsZ0JBQWdCLEtBQUssMkJBQTJCLHFEQUFxRCxrREFBa0QsWUFBWSwyQkFBMkIsbURBQW1ELDBCQUEwQixpQkFBaUIsMkNBQTJDLDBCQUEwQixLQUFLLHNDQUFzQyx5QkFBeUIsb0RBQW9ELHlDQUF5QyxzRkFBc0YsWUFBWSw0RkFBNEYsY0FBYyxxQ0FBcUMsMkRBQTJELDhCQUE4QixpRUFBaUUsaUNBQWlDLGVBQWUsVUFBVSxnQ0FBZ0MsNkJBQTZCLEtBQUssNkNBQTZDLGtFQUFrRSwyRUFBMkUsS0FBSyxvRUFBb0UsMkNBQTJDLDhCQUE4QixLQUFLLCtDQUErQyx5Q0FBeUMsK0NBQStDLDhCQUE4Qix1QkFBdUIsZ0JBQWdCLCtEQUErRCw4SEFBOEgsNkNBQTZDLG1EQUFtRCwrRkFBK0YsdUNBQXVDLDhCQUE4Qix5QkFBeUIsS0FBSyxnRUFBZ0Usd0JBQXdCLGNBQWMsK0NBQStDLG9GQUFvRiwrSkFBK0osb0ZBQW9GLGlCQUFpQixVQUFVLFdBQVcsbUVBQW1FLG1CQUFtQixLQUFLLGtNQUFrTSxjQUFjLDhDQUE4QyxhQUFhLHVDQUF1QyxrQkFBa0IsOEJBQThCLG9CQUFvQixvQ0FBb0Msd0dBQXdHLDhDQUE4Qyw2Q0FBNkMsa01BQWtNLDBIQUEwSCxrQ0FBa0MsK0VBQStFLHdDQUF3QywwREFBMEQsbUJBQW1CLDJCQUEyQixNQUFNLDBDQUEwQyxNQUFNLDJDQUEyQyx3RkFBd0YsNkNBQTZDLDJCQUEyQix3SEFBd0gsbUJBQW1CLEtBQUssc0NBQXNDLGlFQUFpRSwrR0FBK0cscUNBQXFDLG1CQUFtQiwwRUFBMEUsZ0NBQWdDLDRCQUE0QiwyQkFBMkIsNkNBQTZDLDJDQUEyQyxrQkFBa0IsWUFBWSx3Q0FBd0MsNkVBQTZFLHNDQUFzQywwRUFBMEUsc0NBQXNDLEtBQUssdURBQXVELHFFQUFxRSx3Q0FBd0MsNkVBQTZFLG1EQUFtRCxpSUFBaUksd0NBQXdDLGtFQUFrRSwwREFBMEQsNERBQTRELGtEQUFrRCwwSkFBMEosaURBQWlELDhGQUE4RixxQkFBcUIsMkNBQTJDLHdCQUF3Qiw4RUFBOEUsZ0pBQWdKLHdEQUF3RCxjQUFjLGtHQUFrRyxtQkFBbUIsS0FBSyxnSkFBZ0osbUZBQW1GLGdIQUFnSCw0QkFBNEIsOEdBQThHLG9JQUFvSSw2REFBNkQscUJBQXFCLDRGQUE0RixtQkFBbUIsdUpBQXVKLGtEQUFrRCwwV0FBMFcsSUFBSSxLQUFLLDRIQUE0SCxpQkFBaUIsNEdBQTRHLGdEQUFnRCxJQUFJLGtCQUFrQixpQkFBaUIsNEhBQTRILGVBQWUsS0FBSyw0RkFBNEYsSUFBSSxLQUFLLHVDQUF1QyxJQUFJLGdEQUFnRCxlQUFlLGFBQWEsd0VBQXdFLDJLQUEySyxzRkFBc0YseUNBQXlDLEtBQUsscUJBQXFCLHNGQUFzRixtQ0FBbUMsWUFBWSw0QkFBNEIsbUVBQW1FLGlCQUFpQiwrR0FBK0csWUFBWSx3REFBd0Qsb0dBQW9HLDBCQUEwQixtR0FBbUcsMkJBQTJCLHFGQUFxRixtQkFBbUIsS0FBSyxnSkFBZ0osK0VBQStFLDRHQUE0RyxzQkFBc0IsZ0VBQWdFLHVDQUF1QywwQkFBMEIsRUFBRSxnREFBZ0QsbURBQW1ELDZGQUE2Rix1QkFBdUIsNEhBQTRILCtCQUErQixLQUFLLHVEQUF1RCxrRkFBa0YsaUJBQWlCLG9DQUFvQyxrQkFBa0IsbURBQW1ELG9CQUFvQixLQUFLLGlDQUFpQyw0QkFBNEIsMkNBQTJDLCtDQUErQyw2Q0FBNkMsS0FBSyxxREFBcUQsZUFBZSxxREFBcUQsbUJBQW1CLDRDQUE0QyxLQUFLLHFEQUFxRCxjQUFjLG9EQUFvRCxtQkFBbUIsNENBQTRDLFNBQVMsZUFBZSx1Q0FBdUMsd0JBQXdCLDZCQUE2Qiw2RUFBNkUsMkVBQTJFLGlCQUFpQixtQ0FBbUMsY0FBYyx1Q0FBdUMsd0JBQXdCLDZCQUE2Qiw2R0FBNkcsb0pBQW9KLGlCQUFpQixxQ0FBcUMsY0FBYyw2Q0FBNkMsd0JBQXdCLDZCQUE2QiwrRUFBK0Usa0NBQWtDLGVBQWUsNkJBQTZCLHlGQUF5Riw0QkFBNEIsc0pBQXNKLGtEQUFrRCxrSUFBa0ksYUFBYSw2SEFBNkgsc0VBQXNFLGdCQUFnQixnREFBZ0QsMkdBQTJHLEtBQUssdUNBQXVDLDJIQUEySCxnQkFBZ0IsdURBQXVELHdDQUF3Qyw4Q0FBOEMsYUFBYSx3RkFBd0Ysa0JBQWtCLGVBQWUsNkdBQTZHLGFBQWEsWUFBWSxHQUFHLElBQUksaURBQWlELFNBQVMsZ0ZBQWdGLGlCQUFpQiw4Q0FBOEMsYUFBYSxxQ0FBcUMsZ0NBQWdDLGFBQWEsK0NBQStDLCtGQUErRiw0Q0FBNEMsU0FBUyxFQUFFLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLDRUQUE0VCx3Q0FBd0Msd0RBQXdELDZJQUE2SSwwR0FBMEcscUNBQXFDLG1DQUFtQyxxREFBcUQsMkJBQTJCLGNBQWMsK0JBQStCLDhCQUE4QixFQUFFLHFDQUFxQywrQ0FBK0MsMkNBQTJDLDBRQUEwUSxxQ0FBcUMsRUFBRSw2QkFBNkIseUJBQXlCLGtIQUFrSCxFQUFFLDZDQUE2Qyw0TUFBNE0sRUFBRSxrQ0FBa0MsNEJBQTRCLEVBQUUsNEJBQTRCLHFCQUFxQixrQkFBa0IsR0FBRywrQkFBK0IsOENBQThDLGFBQWEscUNBQXFDLGdDQUFnQyxhQUFhLCtDQUErQywrRkFBK0YsK0NBQStDLCtGQUErRixzRUFBc0Usd0NBQXdDLHNKQUFzSixtRUFBbUUsYUFBYSwwREFBMEQsK0dBQStHLDRDQUE0QyxTQUFTLEVBQUUsMFJBQTBSLG9CQUFvQixvSUFBb0ksK0JBQStCLDBPQUEwTyx1REFBdUQsK0NBQStDLHNCQUFzQix5QkFBeUIsMEJBQTBCLG1KQUFtSixnREFBZ0QsNEJBQTRCLDBCQUEwQiwyQkFBMkIsMkVBQTJFLDJCQUEyQixxREFBcUQsd0RBQXdELDhFQUE4RSw4RUFBOEUsaUJBQWlCLElBQUksdUJBQXVCLDRFQUE0RSxHQUFHLEVBQUUsMEJBQTBCLG1KQUFtSixnREFBZ0QsNEJBQTRCLDBCQUEwQiwyQkFBMkIsMkVBQTJFLDJCQUEyQiwrQ0FBK0MsK0NBQStDLGlEQUFpRCx1RUFBdUUsdUVBQXVFLHVFQUF1RSx1RUFBdUUsaUJBQWlCLEdBQUcsdUJBQXVCLDRFQUE0RSxHQUFHLEVBQUUsMEJBQTBCLHFKQUFxSixnREFBZ0QsNEJBQTRCLDBCQUEwQiwyQkFBMkIsNEVBQTRFLDJCQUEyQixvREFBb0QscURBQXFELG9EQUFvRCx1REFBdUQsNkVBQTZFLDZFQUE2RSw4RUFBOEUsOEVBQThFLCtFQUErRSwrRUFBK0UsaUJBQWlCLEdBQUcsdUJBQXVCLDZFQUE2RSxHQUFHLEVBQUUsOENBQThDLGFBQWEscUNBQXFDLGdDQUFnQyxhQUFhLCtDQUErQywrRkFBK0YsK0NBQStDLCtGQUErRixzRUFBc0Usd0NBQXdDLHNKQUFzSixtRUFBbUUsYUFBYSwwREFBMEQsK0dBQStHLDRDQUE0QyxTQUFTLEVBQUUsNE9BQTRPLG9CQUFvQiwrQkFBK0IsMkhBQTJILCtGQUErRiwwQ0FBMEMsaUJBQWlCLHlCQUF5Qiw4Q0FBOEMsYUFBYSxxQ0FBcUMsZ0NBQWdDLGFBQWEsK0NBQStDLCtGQUErRiwrQ0FBK0MsK0ZBQStGLHNFQUFzRSx3Q0FBd0Msc0pBQXNKLG1FQUFtRSxhQUFhLDBEQUEwRCwrR0FBK0csNENBQTRDLFNBQVMsRUFBRSw0QkFBNEIsd0NBQXdDLFlBQVksZUFBZSxLQUFLLHdCQUF3QixtTEFBbUwsb0RBQW9ELDBJQUEwSSwrQ0FBK0MsMkNBQTJDLDBEQUEwRCxrQkFBa0IseUNBQXlDLDBEQUEwRCxvQ0FBb0Msb0JBQW9CLGdEQUFnRCx5U0FBeVMscUJBQXFCLGdDQUFnQyxpTUFBaU0sbUVBQW1FLDREQUE0RCxtQ0FBbUMsMklBQTJJLGFBQWEsa0JBQWtCLDBCQUEwQiw4Q0FBOEMsYUFBYSxxQ0FBcUMsZ0NBQWdDLGFBQWEsK0NBQStDLCtGQUErRiwrQ0FBK0MsK0ZBQStGLHNFQUFzRSx3Q0FBd0Msc0pBQXNKLG1FQUFtRSxhQUFhLDBEQUEwRCwrR0FBK0csNENBQTRDLFNBQVMsRUFBRSxvWEFBb1gscUJBQXFCLGdDQUFnQyx3REFBd0QsaVJBQWlSLG9EQUFvRCwwRkFBMEYseUNBQXlDLHVIQUF1SCw2Q0FBNkMsa0JBQWtCLDBCQUEwQiwwQkFBMEIsMEZBQTBGLG9EQUFvRCx3QkFBd0IseUJBQXlCLDhCQUE4QiwyQkFBMkIsaUNBQWlDLHdCQUF3Qix1QkFBdUIscUJBQXFCLGdHQUFnRyxzQkFBc0Isd0JBQXdCLEdBQUcsRUFBRSwwQkFBMEIsMkZBQTJGLHlDQUF5Qyx1QkFBdUIscUJBQXFCLDRCQUE0QiwyQ0FBMkMsc0NBQXNDLEdBQUcsRUFBRSw4Q0FBOEMsYUFBYSxxQ0FBcUMsZ0NBQWdDLGFBQWEsK0NBQStDLCtGQUErRiwrQ0FBK0MsK0ZBQStGLHNFQUFzRSx3Q0FBd0Msc0pBQXNKLG1FQUFtRSxhQUFhLDBEQUEwRCwrR0FBK0csNENBQTRDLFNBQVMsRUFBRSw0QkFBNEIsd0NBQXdDLFlBQVksZUFBZSxLQUFLLHdCQUF3QixtTEFBbUwsb0RBQW9ELDBJQUEwSSwrQ0FBK0MsMkNBQTJDLDBEQUEwRCxrQkFBa0IseUNBQXlDLDBEQUEwRCxvQ0FBb0Msb0JBQW9CLGdEQUFnRCx5U0FBeVMscUJBQXFCLGdDQUFnQywwRUFBMEUsdUhBQXVILDREQUE0RCw0QkFBNEIsdVJBQXVSLG9VQUFvVSxhQUFhLGtCQUFrQiwwQkFBMEIsOENBQThDLGFBQWEscUNBQXFDLGdDQUFnQyxhQUFhLCtDQUErQywrRkFBK0YsK0NBQStDLCtGQUErRixzRUFBc0Usd0NBQXdDLHNKQUFzSixtRUFBbUUsYUFBYSwwREFBMEQsK0dBQStHLDRDQUE0QyxTQUFTLEVBQUUsNEJBQTRCLHdDQUF3QyxZQUFZLGVBQWUsS0FBSyx3QkFBd0IsbUxBQW1MLG9EQUFvRCwwSUFBMEksK0NBQStDLDJDQUEyQywwREFBMEQsa0JBQWtCLHlDQUF5QywwREFBMEQsb0NBQW9DLG9CQUFvQixnREFBZ0Qsc1hBQXNYLDBCQUEwQixxQ0FBcUMsc0RBQXNELFdBQVcsTUFBTSxnQkFBZ0IsTUFBTSw2R0FBNkcscURBQXFELHVEQUF1RCx5S0FBeUssa0RBQWtELHNFQUFzRSw0QkFBNEIsa1BBQWtQLGtCQUFrQixrQkFBa0IsK0JBQStCLDBCQUEwQixnR0FBZ0csb0RBQW9ELHlCQUF5Qiw4QkFBOEIsMkJBQTJCLGlDQUFpQyx5QkFBeUIscUJBQXFCLHFIQUFxSCx5QkFBeUIsd0JBQXdCLEdBQUcsRUFBRSw4Q0FBOEMsYUFBYSxxQ0FBcUMsZ0NBQWdDLGFBQWEsK0NBQStDLCtGQUErRiwrQ0FBK0MsK0ZBQStGLHNFQUFzRSx3Q0FBd0Msc0pBQXNKLG1FQUFtRSxhQUFhLDBEQUEwRCwrR0FBK0csNENBQTRDLFNBQVMsRUFBRSw0QkFBNEIsd0NBQXdDLFlBQVksZUFBZSxLQUFLLHdCQUF3QixtTEFBbUwsb0RBQW9ELDBJQUEwSSwrQ0FBK0MsMkNBQTJDLDBEQUEwRCxrQkFBa0IseUNBQXlDLDBEQUEwRCxvQ0FBb0Msb0JBQW9CLGdEQUFnRCxpWEFBaVgscUJBQXFCLGdDQUFnQyxvREFBb0QsZ0RBQWdELG9EQUFvRCxtRkFBbUYseUNBQXlDLHVIQUF1SCw0REFBNEQsaURBQWlELDBJQUEwSSx3UUFBd1EsYUFBYSxrQkFBa0IsMEJBQTBCLDhDQUE4QyxhQUFhLHFDQUFxQyxnQ0FBZ0MsYUFBYSwrQ0FBK0MsK0ZBQStGLCtDQUErQywrRkFBK0Ysc0VBQXNFLHdDQUF3QyxzSkFBc0osbUVBQW1FLGFBQWEsMERBQTBELCtHQUErRyw0Q0FBNEMsU0FBUyxFQUFFLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLCtDQUErQywyQ0FBMkMsMERBQTBELGtCQUFrQix5Q0FBeUMsMERBQTBELG9DQUFvQyxvQkFBb0IsZ0RBQWdELDJTQUEyUyx1QkFBdUIsbUVBQW1FLGtDQUFrQywwRUFBMEUsMkhBQTJILGdFQUFnRSxtQ0FBbUMsK0lBQStJLGVBQWUsa0JBQWtCLDRCQUE0Qiw4Q0FBOEMsYUFBYSxxQ0FBcUMsZ0NBQWdDLGFBQWEsK0NBQStDLCtGQUErRiwrQ0FBK0MsK0ZBQStGLHNFQUFzRSx3Q0FBd0Msc0pBQXNKLG1FQUFtRSxhQUFhLDBEQUEwRCwrR0FBK0csNENBQTRDLFNBQVMsRUFBRSw0QkFBNEIsd0NBQXdDLFlBQVksZUFBZSxLQUFLLHdCQUF3QixtTEFBbUwsb0RBQW9ELDBJQUEwSSwrQ0FBK0MsMkNBQTJDLDBEQUEwRCxrQkFBa0IseUNBQXlDLDBEQUEwRCxvQ0FBb0Msb0JBQW9CLGdEQUFnRCx3U0FBd1Msb0JBQW9CLGlJQUFpSSwrQkFBK0IsaUZBQWlGLHFIQUFxSCwwREFBMEQsbUNBQW1DLHlJQUF5SSxZQUFZLGtCQUFrQix5QkFBeUIsMEJBQTBCLHFEQUFxRCxvREFBb0QsK0JBQStCLHlCQUF5Qiw4QkFBOEIsMkJBQTJCLGlDQUFpQywrQkFBK0IsdUJBQXVCLHFCQUFxQiwrQkFBK0Isd0JBQXdCLHdCQUF3Qix3QkFBd0IsZ0dBQWdHLG9DQUFvQyx3QkFBd0IsR0FBRyxFQUFFLDhDQUE4QyxhQUFhLHFDQUFxQyxnQ0FBZ0MsYUFBYSwrQ0FBK0MsK0ZBQStGLCtDQUErQywrRkFBK0Ysc0VBQXNFLHdDQUF3QyxzSkFBc0osbUVBQW1FLGFBQWEsMERBQTBELCtHQUErRyw0Q0FBNEMsU0FBUyxFQUFFLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLCtDQUErQywyQ0FBMkMsMERBQTBELGtCQUFrQix5Q0FBeUMsMERBQTBELG9DQUFvQyxvQkFBb0IsZ0RBQWdELGlYQUFpWCxxQkFBcUIsZ0NBQWdDLGlNQUFpTSxtRUFBbUUsNERBQTRELG1DQUFtQywwT0FBME8sYUFBYSxrQkFBa0IsMEJBQTBCLDhDQUE4QyxhQUFhLHFDQUFxQyxnQ0FBZ0MsYUFBYSwrQ0FBK0MsK0ZBQStGLDRDQUE0QyxTQUFTLEVBQUUsNEJBQTRCLHdDQUF3QyxZQUFZLGVBQWUsS0FBSyx3QkFBd0IsbUxBQW1MLG9EQUFvRCwwSUFBMEksbWRBQW1kLGlCQUFpQixlQUFlLGdPQUFnTyxxQkFBcUIsOENBQThDLHNCQUFzQixFQUFFLDRCQUE0QixnQ0FBZ0MsRUFBRSxnQ0FBZ0MsRUFBRSw0QkFBNEIsa0ZBQWtGLEVBQUUsNkJBQTZCLGdCQUFnQix5RUFBeUUsc0JBQXNCLElBQUksRUFBRSw4QkFBOEIseUhBQXlILEVBQUUsc0NBQXNDLDZCQUE2QixFQUFFLHlDQUF5Qyx5Q0FBeUMsd0RBQXdELGdDQUFnQyxFQUFFLHVDQUF1QyxFQUFFLG9DQUFvQyxFQUFFLHVDQUF1Qyx5QkFBeUIsd0JBQXdCLDZDQUE2QywrQ0FBK0MsRUFBRSw2QkFBNkIsbVJBQW1SLEVBQUUsNkJBQTZCLDRLQUE0SyxTQUFTLEdBQUcsc0JBQXNCLDhDQUE4QyxhQUFhLCtDQUErQywrRkFBK0YsNENBQTRDLFNBQVMsRUFBRSw0QkFBNEIsd0NBQXdDLFlBQVksZUFBZSxLQUFLLHdCQUF3QixtTEFBbUwsb0RBQW9ELDBJQUEwSSw2REFBNkQsZ0NBQWdDLGFBQWEsNEJBQTRCLG1DQUFtQyxnR0FBZ0csMkJBQTJCLCtCQUErQixFQUFFLGdDQUFnQyxRQUFRLEdBQUcscUJBQXFCLDhDQUE4QyxhQUFhLHFDQUFxQyxnQ0FBZ0MsYUFBYSwrQ0FBK0MsK0ZBQStGLCtDQUErQywrRkFBK0Ysc0VBQXNFLHdDQUF3QyxzSkFBc0osbUVBQW1FLGFBQWEsMERBQTBELCtHQUErRyw0Q0FBNEMsU0FBUyxFQUFFLDRCQUE0Qix3Q0FBd0MsWUFBWSxlQUFlLEtBQUssd0JBQXdCLG1MQUFtTCxvREFBb0QsMElBQTBJLHFRQUFxUSxxQ0FBcUMsNkJBQTZCLHdHQUF3Ryx1SUFBdUkseURBQXlELCtCQUErQixFQUFFLHNDQUFzQyw2QkFBNkIsRUFBRSx5Q0FBeUMseUNBQXlDLHdEQUF3RCxnQ0FBZ0MsRUFBRSxzQ0FBc0MsOElBQThJLFlBQVksd0JBQXdCLEtBQUssMENBQTBDLEVBQUUsZ0NBQWdDLFVBQVUscUJBQXFCLHVCQUF1QixHQUFHLEU7Ozs7Ozs7Ozs7Ozs7Ozs7OztzQkNFbnFvVUEsUzs7Ozs7Ozs7OzhCQUNBQyxpQjs7Ozs7Ozs7OzJCQUNBQyxjOzs7Ozs7Ozs7NEJBQ0FDLGU7Ozs7Ozs7Ozs4QkFDQUMsaUI7Ozs7Ozs7O0FDTlQsMkJBQTJCLG1CQUFPLENBQUMsQ0FBK0M7QUFDbEY7OztBQUdBO0FBQ0EsY0FBYyxRQUFTLGVBQWUsZ0JBQWdCLGlCQUFpQixjQUFjLGVBQWUscUJBQXFCLG9CQUFvQixzQkFBc0IsRUFBRSxVQUFVLG1DQUFtQyxnQ0FBZ0MsMkJBQTJCLEVBQUUscUNBQXFDLHdDQUF3QyxnREFBZ0QseUNBQXlDLEVBQUUsWUFBWSxrQkFBa0IsRUFBRSxxQkFBcUIsa0JBQWtCLHlCQUF5QixnQkFBZ0IsaUJBQWlCLG9CQUFvQixXQUFXLFlBQVksRUFBRSxVQUFVLGlCQUFpQixFQUFFLG1CQUFtQixXQUFXLFlBQVksZ0JBQWdCLGlCQUFpQixvQkFBb0IsaUJBQWlCLGtCQUFrQiw0QkFBNEIsMENBQTBDLHFDQUFxQyxFQUFFLGtDQUFrQyxpQkFBaUIsRUFBRSxvQkFBb0IsdUJBQXVCLGlCQUFpQixpQkFBaUIsZ0JBQWdCLHNCQUFzQixvQkFBb0Isd0JBQXdCLEVBQUU7O0FBRXZrQzs7Ozs7Ozs7OztBQ1BBOztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUtBOzs7O0FBSEEsSUFBTUMscUJBQXFCLHlDQUEzQjs7QUFLQSxJQUFHQyxTQUFTQyxJQUFaLEVBQWtCO0FBQ2pCQztBQUNBLENBRkQsTUFFTztBQUNOQyxRQUFPQyxnQkFBUCxDQUF3QixrQkFBeEIsRUFBNENGLEtBQTVDO0FBQ0E7O0FBRUQsSUFBTUcsT0FBTyxFQUFiO0FBQ0EsSUFBSUMsWUFBSjtBQUFBLElBQVNDLGVBQVQ7QUFBQSxJQUFpQkMsc0JBQWpCO0FBQUEsSUFBZ0NDLHNCQUFoQztBQUFBLElBQStDQyxvQkFBL0M7O0FBRUEsSUFBSUMsVUFBVTtBQUNiQyxNQUFJLGlCQURTO0FBRWJDLE1BQUksQ0FBQztBQUZRLENBQWQ7O0FBS0EsSUFBSUMsVUFBVTtBQUNiRixNQUFJLGlCQURTO0FBRWJDLE1BQUksQ0FBQztBQUZRLENBQWQ7O0FBS0EsSUFBTUUsU0FBUztBQUNkQyxXQUFTLEdBREs7QUFFZEMsWUFBVSxHQUZJO0FBR2RDLFFBQU0sR0FIUTtBQUlkQyxRQUFNLEdBSlE7QUFLZEMsT0FBSyxHQUxTO0FBTWRDLFVBQVEsR0FOTTtBQU9kQyxlQUFhLEdBUEM7QUFRZEMsUUFBTSxHQVJRO0FBU2RDLGdCQUFjLEdBVEE7QUFVZEMsbUJBQWlCOztBQVZILENBQWY7O0FBZ0JBLElBQUlDLGVBQUo7QUFBQSxJQUFZQyxZQUFaO0FBQUEsSUFBaUJDLG1CQUFqQjtBQUFBLElBQTZCQyxvQkFBN0I7QUFDQSxJQUFJQyxRQUFRO0FBQ1hDLElBQUUsQ0FEUyxFQUNOQyxHQUFFO0FBREksQ0FBWjtBQUdBLElBQUlDLFNBQVM7QUFDWkYsSUFBRSxDQURVLEVBQ1BDLEdBQUU7QUFESyxDQUFiO0FBR0EsSUFBSVgsVUFBVSxDQUFkO0FBQ0EsSUFBSUMsZUFBZSxFQUFuQjtBQUNBLElBQUlFLGdCQUFnQixDQUFwQjtBQUNBLElBQUlVLGdCQUFnQixDQUFwQjtBQUNBLElBQUlDLGdCQUFnQixLQUFwQjtBQUNBLElBQUlDLGdCQUFnQixLQUFwQjs7QUFFQSxJQUFJQyxVQUFVLEVBQUN6QixLQUFLLGtCQUFOLEVBQTBCQyxLQUFLLENBQUMsU0FBaEMsRUFBZDtBQUNBLElBQUl5QixVQUFVLEVBQUMxQixLQUFLLGtCQUFOLEVBQTBCQyxLQUFLLENBQUMsU0FBaEMsRUFBZDs7QUFFQSxJQUFJMEIsUUFBUSxDQUFaOztBQUVBLFNBQVNDLFFBQVQsR0FBb0I7QUFDbkJkLFVBQVMxQixTQUFTeUMsYUFBVCxDQUF1QixRQUF2QixDQUFUO0FBQ0FmLFFBQU9nQixTQUFQLEdBQW1CLGdCQUFuQjtBQUNBaEIsUUFBT2lCLEtBQVAsR0FBZXhDLE9BQU95QyxVQUF0QjtBQUNBbEIsUUFBT21CLE1BQVAsR0FBZ0IxQyxPQUFPMkMsV0FBdkI7O0FBRUE5QyxVQUFTQyxJQUFULENBQWM4QyxXQUFkLENBQTBCckIsTUFBMUI7QUFDQUMsT0FBTUQsT0FBT3NCLFVBQVAsQ0FBa0IsSUFBbEIsQ0FBTjs7QUFFQW5CLGVBQWMsSUFBSW9CLHFCQUFKLENBQWdCdkIsTUFBaEIsRUFBd0JwQixHQUF4QixDQUFkOztBQUVBRSxpQkFBZ0IsSUFBSTBDLE9BQU9DLElBQVAsQ0FBWUMsTUFBaEIsQ0FBdUI7QUFDdENDLFlBQVUxQyxPQUQ0QjtBQUV0Q0wsT0FBS0EsR0FGaUM7QUFHdENnRCxTQUFPO0FBSCtCLEVBQXZCLENBQWhCOztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBLEtBQU1DLGlCQUFpQixTQUFqQkEsY0FBaUIsR0FBTTs7QUFFNUIsTUFBSUMsVUFBVUMsV0FBZCxFQUEyQjtBQUN4QkQsYUFBVUMsV0FBVixDQUFzQkMsa0JBQXRCLENBQTBDLFVBQUNDLENBQUQsRUFBTTs7QUFFL0M1QyxXQUFPQyxRQUFQLEdBQWtCMkMsRUFBRUMsTUFBRixDQUFTNUMsUUFBVCxDQUFrQjZDLFFBQWxCLEVBQWxCO0FBQ0E5QyxXQUFPRSxTQUFQLEdBQW1CMEMsRUFBRUMsTUFBRixDQUFTM0MsU0FBVCxDQUFtQjRDLFFBQW5CLEVBQW5COztBQUVBLFFBQUd0RCxNQUFILEVBQVc7QUFBRUEsWUFBT3VELE1BQVAsQ0FBYyxJQUFkO0FBQXNCOztBQUVuQyxRQUFNQyxXQUFXO0FBQ2hCbkQsVUFBSytDLEVBQUVDLE1BQUYsQ0FBUzVDLFFBREU7QUFFaEJILFVBQUs4QyxFQUFFQyxNQUFGLENBQVMzQyxTQUFULEdBQXFCc0I7QUFGVixLQUFqQjtBQUlBRixZQUFRekIsR0FBUixHQUFjMEIsUUFBUTFCLEdBQXRCO0FBQ0F5QixZQUFReEIsR0FBUixHQUFjeUIsUUFBUXpCLEdBQXRCO0FBQ0F5QixZQUFRMUIsR0FBUixHQUFjbUQsU0FBU25ELEdBQXZCO0FBQ0EwQixZQUFRekIsR0FBUixHQUFja0QsU0FBU2xELEdBQXZCOztBQUVBLFFBQUlPLE9BQU8sMkJBQWVpQixPQUFmLEVBQXdCQyxPQUF4QixDQUFYOztBQUVBMEIsNkJBQWVDLE1BQWYsQ0FBc0IzQyxZQUF0Qjs7QUFFQU8sZ0JBQVlxQyxHQUFaLENBQWdCLElBQUloQixPQUFPQyxJQUFQLENBQVlnQixNQUFoQixDQUF1QkosU0FBU25ELEdBQWhDLEVBQXFDbUQsU0FBU2xELEdBQTlDLENBQWhCOztBQUVBTixhQUFTLElBQUkyQyxPQUFPQyxJQUFQLENBQVlDLE1BQWhCLENBQXVCO0FBQy9CQyxlQUFVVSxRQURxQjtBQUUvQnpELFVBQUtBLEdBRjBCO0FBRy9CZ0QsWUFBTztBQUh3QixLQUF2QixDQUFUOztBQU1BO0FBQ0F2QyxXQUFPRyxLQUFQLFFBQWtCLDJCQUFlNkMsUUFBZixFQUF5QnBELE9BQXpCLENBQWxCO0FBQ0E7O0FBRUFzQixhQUFTLDhCQUFrQjNCLEdBQWxCLEVBQXVCRSxjQUFjNkMsUUFBckMsQ0FBVDtBQUNBdkIsWUFBUSw4QkFBa0J4QixHQUFsQixFQUF1QkMsT0FBTzhDLFFBQTlCLENBQVI7O0FBR0E7QUFDQW5CLG9CQUFnQiw4QkFBa0JKLEtBQWxCLEVBQXlCRyxNQUF6QixJQUFtQ21DLEtBQUtDLEVBQUwsR0FBUSxDQUEzRDtBQUVBLElBdkNEO0FBd0NGOztBQUVELE1BQUcsQ0FBQ0MsV0FBR0MsUUFBUCxFQUFpQjtBQUNoQjtBQUNBLE9BQU1DLElBQUksSUFBSUMsSUFBSixHQUFXQyxPQUFYLEtBQXVCLElBQWpDO0FBQ0FuQyxXQUFRNkIsS0FBS08sR0FBTCxDQUFTSCxDQUFULElBQWMsTUFBdEI7QUFDQTtBQUNELEVBbEREOztBQXFEQUksYUFBWXJCLGNBQVosRUFBNEIsSUFBNUI7O0FBSUFzQixZQUFXLFlBQUs7QUFDZjtBQUNBO0FBQ0FDLE1BQUlaLEdBQUosQ0FBUW5ELE1BQVIsRUFBZ0IsT0FBaEIsRUFBeUJnRSxJQUF6QixDQUE4QixvQkFBOUIsRUFBb0RDLE1BQXBEO0FBQ0FGLE1BQUlaLEdBQUosQ0FBUW5ELE1BQVIsRUFBZ0IsZUFBaEIsRUFBaUNpRSxNQUFqQztBQUNBRixNQUFJWixHQUFKLENBQVFuRCxNQUFSLEVBQWdCLGtCQUFoQixFQUFvQ2lFLE1BQXBDO0FBQ0E7QUFDQUYsTUFBSVosR0FBSixDQUFRZSwwQkFBUixFQUEwQixhQUExQixFQUF5Q0QsTUFBekM7QUFDQUYsTUFBSVosR0FBSixDQUFRckMsV0FBUixFQUFxQixPQUFyQixFQUE4QmtELElBQTlCLENBQW1DLGNBQW5DO0FBQ0EsRUFURCxFQVNHLEdBVEg7O0FBWUFHLGtCQUFPQyxTQUFQLENBQWlCQyxLQUFqQixDQUF1Qm5CLE1BQXZCOztBQUVBOUQsUUFBT0MsZ0JBQVAsQ0FBd0IsMkJBQXhCLEVBQXFELFVBQVNpRixLQUFULEVBQWdCO0FBQ3BFQyxVQUFRQyxHQUFSLENBQVksK0JBQVo7QUFDQSxNQUFHLENBQUNwRCxhQUFKLEVBQW1CO0FBQ2xCbUQsV0FBUUMsR0FBUixDQUFZRixNQUFNRyxRQUFsQixFQUE0QkgsTUFBTTlELEtBQWxDO0FBQ0FZLG1CQUFnQixJQUFoQjtBQUNBOztBQUVFcEIsU0FBT00sT0FBUCxRQUFvQkEsT0FBcEI7QUFDQU4sU0FBT1EsS0FBUCxRQUFrQjhELE1BQU05RCxLQUF4QjtBQUNBRixZQUFVLENBQUNnRSxNQUFNOUQsS0FBUCxHQUFlNkMsS0FBS0MsRUFBcEIsR0FBeUIsR0FBbkM7QUFDQSxNQUFHLENBQUNDLFdBQUdDLFFBQVAsRUFBaUI7QUFDaEJsRCxhQUFVLENBQUMsR0FBWDtBQUNBO0FBQ0osRUFiRCxFQWFHLEtBYkg7O0FBZUFsQixRQUFPQyxnQkFBUCxDQUF3QixtQkFBeEIsRUFBNkMsVUFBU2lGLEtBQVQsRUFBZ0I7QUFDNURDLFVBQVFDLEdBQVIsQ0FBWSxzQkFBWjtBQUNHakUsaUJBQWUsQ0FBQytELE1BQU05RCxLQUFQLEdBQWU2QyxLQUFLQyxFQUFwQixHQUF5QixHQUF4QztBQUNBLE1BQUcsQ0FBQ0MsV0FBR0MsUUFBUCxFQUFpQjtBQUNoQmpELGtCQUFlLEdBQWY7QUFDQTtBQUVKLEVBUEQsRUFPRyxLQVBIOztBQVVBLEtBQU1tRSxhQUFhekYsU0FBU0MsSUFBVCxDQUFjeUYsYUFBZCxDQUE0QixnQkFBNUIsQ0FBbkI7QUFDQUQsWUFBV3JGLGdCQUFYLENBQTRCLE9BQTVCLEVBQXFDLFVBQUN1RixDQUFELEVBQU07O0FBRTFDLE1BQUcsQ0FBQ3ZELGFBQUosRUFBbUI7QUFDbEJxRCxjQUFXRyxTQUFYLEdBQXVCLEtBQXZCO0FBQ0F4RCxtQkFBZ0IsSUFBaEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBNEIsNEJBQWU2QixLQUFmLENBQXFCO0FBQ3BCakYsU0FBSTBCLFFBQVExQixHQURRO0FBRXBCQyxTQUFJeUIsUUFBUXpCO0FBRlEsSUFBckI7O0FBTUFvRSw4QkFBaUJhLElBQWpCLENBQXNCLFNBQXRCLEVBQWlDLGVBQU87QUFDdkNwRixrQkFBYyxJQUFJd0MsT0FBT0MsSUFBUCxDQUFZQyxNQUFoQixDQUF1QjtBQUNwQ0MsZUFBVTBDLEdBRDBCO0FBRXBDekYsVUFBS0EsR0FGK0I7QUFHcENnRCxZQUFPO0FBSDZCLEtBQXZCLENBQWQ7QUFLQSxJQU5EOztBQVNBMkIsOEJBQWlCZSxFQUFqQixDQUFvQixZQUFwQixFQUFrQyxtQkFBVztBQUM1Q1YsWUFBUUMsR0FBUixDQUFZLHdCQUFaLEVBQXNDVSxPQUF0QztBQUNBLElBRkQ7O0FBSUFoQiw4QkFBaUJZLEtBQWpCLEdBQ0NLLElBREQsQ0FDTSxVQUFDQyxNQUFELEVBQVc7QUFDaEJiLFlBQVFDLEdBQVIsQ0FBWSxpQkFBWixFQUErQlksTUFBL0IsRUFBdUNsQiwyQkFBaUJrQixNQUF4RDtBQUNBcEYsV0FBT1UsZ0JBQVAsUUFBNkIwRSxNQUE3Qjs7QUFFQXpGLGdCQUFZb0QsTUFBWixDQUFtQixJQUFuQjtBQUNBRSw2QkFBZW9DLElBQWYsQ0FBb0I7QUFDbkJ4RixVQUFJMEIsUUFBUTFCLEdBRE87QUFFbkJDLFVBQUl5QixRQUFRekI7QUFGTyxLQUFwQjtBQUlBRSxXQUFPUyxhQUFQLFFBQTBCd0MseUJBQWVtQyxNQUF6QztBQUNBbkcsYUFBU0MsSUFBVCxDQUFjb0csU0FBZCxDQUF3Qm5DLEdBQXhCLENBQTRCLGVBQTVCO0FBQ0EsSUFaRCxFQVlHLFVBQUN5QixDQUFELEVBQU07QUFDUkwsWUFBUUMsR0FBUixDQUFZLE9BQVosRUFBcUJJLENBQXJCO0FBQ0EsSUFkRDtBQWVBLEdBM0NELE1BMkNPO0FBQ05qRixlQUFZb0QsTUFBWixDQUFtQixJQUFuQjtBQUNBRSw0QkFBZW9DLElBQWYsQ0FBb0I7QUFDbkJ4RixTQUFJMEIsUUFBUTFCLEdBRE87QUFFbkJDLFNBQUl5QixRQUFRekI7QUFGTyxJQUFwQjtBQUlBRSxVQUFPUyxhQUFQLFFBQTBCd0MseUJBQWVtQyxNQUF6QztBQUNBbkcsWUFBU0MsSUFBVCxDQUFjb0csU0FBZCxDQUF3Qm5DLEdBQXhCLENBQTRCLGVBQTVCO0FBQ0E7QUFDRCxFQXRERDtBQXVEQTs7QUFHRCxTQUFTRCxNQUFULEdBQWtCO0FBQ2pCdEMsS0FBSTJFLFNBQUosQ0FBYyxDQUFkLEVBQWlCLENBQWpCLEVBQW9CNUUsT0FBT2lCLEtBQTNCLEVBQWtDakIsT0FBT21CLE1BQXpDOztBQUVBbEIsS0FBSTRFLElBQUo7O0FBRUEsS0FBSUMsSUFBSSxDQUFSO0FBQ0EsS0FBTUMsSUFBSSxFQUFWO0FBQ0E5RSxLQUFJK0UsU0FBSixDQUFjNUUsTUFBTUMsQ0FBcEIsRUFBdUJELE1BQU1FLENBQTdCOztBQUVBTCxLQUFJNEUsSUFBSjtBQUNBO0FBQ0E1RSxLQUFJZ0YsTUFBSixDQUFXckYsZUFBZTBDLHlCQUFlbUMsTUFBekM7QUFDQXhFLEtBQUlpRixTQUFKLEdBQWdCLHNCQUFoQjtBQUNBakYsS0FBSWtGLFFBQUosQ0FBYSxDQUFDTCxDQUFELEdBQUcsQ0FBaEIsRUFBbUIsQ0FBQ0MsQ0FBcEIsRUFBdUJELENBQXZCLEVBQTBCQyxDQUExQjtBQUNBOUUsS0FBSW1GLE9BQUo7O0FBRUFOLEtBQUksQ0FBSjtBQUNBN0UsS0FBSTRFLElBQUo7QUFDQTtBQUNBNUUsS0FBSWdGLE1BQUosQ0FBV3pFLGFBQVg7QUFDQVAsS0FBSWlGLFNBQUosR0FBZ0Isc0JBQWhCO0FBQ0FqRixLQUFJa0YsUUFBSixDQUFhLENBQUNMLENBQUQsR0FBRyxDQUFoQixFQUFtQixDQUFDQyxDQUFwQixFQUF1QkQsQ0FBdkIsRUFBMEJDLENBQTFCO0FBQ0E5RSxLQUFJbUYsT0FBSjs7QUFFQU4sS0FBSSxDQUFKO0FBQ0E3RSxLQUFJNEUsSUFBSjtBQUNBNUUsS0FBSWdGLE1BQUosQ0FBV3JGLFlBQVg7QUFDQUssS0FBSWlGLFNBQUosR0FBZ0IscUJBQWhCO0FBQ0FqRixLQUFJa0YsUUFBSixDQUFhLENBQUNMLENBQUQsR0FBRyxDQUFoQixFQUFtQixDQUFDQyxDQUFwQixFQUF1QkQsQ0FBdkIsRUFBMEJDLENBQTFCO0FBQ0E5RSxLQUFJbUYsT0FBSjs7QUFFQW5GLEtBQUltRixPQUFKOztBQUVBO0FBQ0FqRixhQUFZb0MsTUFBWixDQUFtQjNDLFlBQW5COztBQUVBUCxRQUFPUyxhQUFQLFFBQTBCd0MseUJBQWVtQyxNQUF6QztBQUNBOztBQUdELFNBQVNqRyxLQUFULEdBQWlCO0FBQ2hCNkcsc0JBQWlCQyxHQUFqQixHQUF1QmpILGtCQUF2QjtBQUNBLEtBQU1rSCxLQUFLakgsU0FBU2tILGNBQVQsQ0FBd0IsS0FBeEIsQ0FBWDs7QUFFQUgsc0JBQWlCSSxJQUFqQixDQUFzQixVQUFDQyxPQUFELEVBQWE7QUFDL0I5RyxRQUFNLElBQUk0QyxPQUFPQyxJQUFQLENBQVlrRSxHQUFoQixDQUFvQkosRUFBcEIsRUFBd0I7QUFDN0JLLFdBQVEsRUFBQzFHLEtBQUssa0JBQU4sRUFBMEJDLEtBQUssQ0FBQyxTQUFoQyxFQURxQjtBQUU3QlI7QUFGNkIsR0FBeEIsQ0FBTjs7QUFLQW1DO0FBQ0gsRUFQRDtBQVNBLEM7Ozs7OztBQzdTRDs7QUFFQTtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxDQUErRztBQUNySSw0Q0FBNEMsUUFBUztBQUNyRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxDQUFtRDtBQUN4RTtBQUNBO0FBQ0EsR0FBRyxJQUFVO0FBQ2I7QUFDQTtBQUNBLG9CQUFvQixDQUErRztBQUNuSSxvQkFBb0IsbUJBQU8sQ0FBQyxDQUErRztBQUMzSSxxREFBcUQsUUFBUztBQUM5RDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsZ0NBQWdDLFVBQVUsRUFBRTtBQUM1QyxDOzs7Ozs7QUN6QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxnQkFBZ0I7QUFDbkQsSUFBSTtBQUNKO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixpQkFBaUI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG9CQUFvQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsY0FBYzs7QUFFbEU7QUFDQTs7Ozs7OztBQzNFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBOztBQUVBLGNBQWMsbUJBQU8sQ0FBQyxDQUFROztBQUU5QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEsaUJBQWlCLG1CQUFtQjtBQUNwQztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsc0JBQXNCO0FBQ3ZDOztBQUVBO0FBQ0EsbUJBQW1CLDJCQUEyQjs7QUFFOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQiwyQkFBMkI7QUFDNUM7QUFDQTs7QUFFQSxRQUFRLHVCQUF1QjtBQUMvQjtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBLGlCQUFpQix1QkFBdUI7QUFDeEM7QUFDQTs7QUFFQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxnQkFBZ0IsaUJBQWlCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjOztBQUVkLGtEQUFrRCxzQkFBc0I7QUFDeEU7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZEOztBQUVBLDZCQUE2QixtQkFBbUI7O0FBRWhEOztBQUVBOztBQUVBO0FBQ0E7Ozs7Ozs7O0FDL1ZBO0FBQ0E7QUFDQTtBQUNB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O0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxHQUFHO0FBQ0gsb0JBQW9CLFNBQVM7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiYXNzZXRzL2pzL2FwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdGZ1bmN0aW9uIGhvdERpc3Bvc2VDaHVuayhjaHVua0lkKSB7XG4gXHRcdGRlbGV0ZSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF07XG4gXHR9XG4gXHR2YXIgcGFyZW50SG90VXBkYXRlQ2FsbGJhY2sgPSB3aW5kb3dbXCJ3ZWJwYWNrSG90VXBkYXRlXCJdO1xuIFx0d2luZG93W1wid2VicGFja0hvdFVwZGF0ZVwiXSA9IFxyXG4gXHRmdW5jdGlvbiB3ZWJwYWNrSG90VXBkYXRlQ2FsbGJhY2soY2h1bmtJZCwgbW9yZU1vZHVsZXMpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xyXG4gXHRcdGhvdEFkZFVwZGF0ZUNodW5rKGNodW5rSWQsIG1vcmVNb2R1bGVzKTtcclxuIFx0XHRpZihwYXJlbnRIb3RVcGRhdGVDYWxsYmFjaykgcGFyZW50SG90VXBkYXRlQ2FsbGJhY2soY2h1bmtJZCwgbW9yZU1vZHVsZXMpO1xyXG4gXHR9IDtcclxuIFx0XHJcbiBcdGZ1bmN0aW9uIGhvdERvd25sb2FkVXBkYXRlQ2h1bmsoY2h1bmtJZCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXHJcbiBcdFx0dmFyIGhlYWQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF07XHJcbiBcdFx0dmFyIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XHJcbiBcdFx0c2NyaXB0LnR5cGUgPSBcInRleHQvamF2YXNjcmlwdFwiO1xyXG4gXHRcdHNjcmlwdC5jaGFyc2V0ID0gXCJ1dGYtOFwiO1xyXG4gXHRcdHNjcmlwdC5zcmMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLnAgKyBcIlwiICsgY2h1bmtJZCArIFwiLlwiICsgaG90Q3VycmVudEhhc2ggKyBcIi5ob3QtdXBkYXRlLmpzXCI7XHJcbiBcdFx0O1xyXG4gXHRcdGhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcclxuIFx0fVxyXG4gXHRcclxuIFx0ZnVuY3Rpb24gaG90RG93bmxvYWRNYW5pZmVzdChyZXF1ZXN0VGltZW91dCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXHJcbiBcdFx0cmVxdWVzdFRpbWVvdXQgPSByZXF1ZXN0VGltZW91dCB8fCAxMDAwMDtcclxuIFx0XHRyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiBcdFx0XHRpZih0eXBlb2YgWE1MSHR0cFJlcXVlc3QgPT09IFwidW5kZWZpbmVkXCIpXHJcbiBcdFx0XHRcdHJldHVybiByZWplY3QobmV3IEVycm9yKFwiTm8gYnJvd3NlciBzdXBwb3J0XCIpKTtcclxuIFx0XHRcdHRyeSB7XHJcbiBcdFx0XHRcdHZhciByZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcbiBcdFx0XHRcdHZhciByZXF1ZXN0UGF0aCA9IF9fd2VicGFja19yZXF1aXJlX18ucCArIFwiXCIgKyBob3RDdXJyZW50SGFzaCArIFwiLmhvdC11cGRhdGUuanNvblwiO1xyXG4gXHRcdFx0XHRyZXF1ZXN0Lm9wZW4oXCJHRVRcIiwgcmVxdWVzdFBhdGgsIHRydWUpO1xyXG4gXHRcdFx0XHRyZXF1ZXN0LnRpbWVvdXQgPSByZXF1ZXN0VGltZW91dDtcclxuIFx0XHRcdFx0cmVxdWVzdC5zZW5kKG51bGwpO1xyXG4gXHRcdFx0fSBjYXRjaChlcnIpIHtcclxuIFx0XHRcdFx0cmV0dXJuIHJlamVjdChlcnIpO1xyXG4gXHRcdFx0fVxyXG4gXHRcdFx0cmVxdWVzdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHtcclxuIFx0XHRcdFx0aWYocmVxdWVzdC5yZWFkeVN0YXRlICE9PSA0KSByZXR1cm47XHJcbiBcdFx0XHRcdGlmKHJlcXVlc3Quc3RhdHVzID09PSAwKSB7XHJcbiBcdFx0XHRcdFx0Ly8gdGltZW91dFxyXG4gXHRcdFx0XHRcdHJlamVjdChuZXcgRXJyb3IoXCJNYW5pZmVzdCByZXF1ZXN0IHRvIFwiICsgcmVxdWVzdFBhdGggKyBcIiB0aW1lZCBvdXQuXCIpKTtcclxuIFx0XHRcdFx0fSBlbHNlIGlmKHJlcXVlc3Quc3RhdHVzID09PSA0MDQpIHtcclxuIFx0XHRcdFx0XHQvLyBubyB1cGRhdGUgYXZhaWxhYmxlXHJcbiBcdFx0XHRcdFx0cmVzb2x2ZSgpO1xyXG4gXHRcdFx0XHR9IGVsc2UgaWYocmVxdWVzdC5zdGF0dXMgIT09IDIwMCAmJiByZXF1ZXN0LnN0YXR1cyAhPT0gMzA0KSB7XHJcbiBcdFx0XHRcdFx0Ly8gb3RoZXIgZmFpbHVyZVxyXG4gXHRcdFx0XHRcdHJlamVjdChuZXcgRXJyb3IoXCJNYW5pZmVzdCByZXF1ZXN0IHRvIFwiICsgcmVxdWVzdFBhdGggKyBcIiBmYWlsZWQuXCIpKTtcclxuIFx0XHRcdFx0fSBlbHNlIHtcclxuIFx0XHRcdFx0XHQvLyBzdWNjZXNzXHJcbiBcdFx0XHRcdFx0dHJ5IHtcclxuIFx0XHRcdFx0XHRcdHZhciB1cGRhdGUgPSBKU09OLnBhcnNlKHJlcXVlc3QucmVzcG9uc2VUZXh0KTtcclxuIFx0XHRcdFx0XHR9IGNhdGNoKGUpIHtcclxuIFx0XHRcdFx0XHRcdHJlamVjdChlKTtcclxuIFx0XHRcdFx0XHRcdHJldHVybjtcclxuIFx0XHRcdFx0XHR9XHJcbiBcdFx0XHRcdFx0cmVzb2x2ZSh1cGRhdGUpO1xyXG4gXHRcdFx0XHR9XHJcbiBcdFx0XHR9O1xyXG4gXHRcdH0pO1xyXG4gXHR9XHJcblxuIFx0XHJcbiBcdFxyXG4gXHR2YXIgaG90QXBwbHlPblVwZGF0ZSA9IHRydWU7XHJcbiBcdHZhciBob3RDdXJyZW50SGFzaCA9IFwiNGI4YzUzN2MzMGUxNjBiMjFkZDNcIjsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xyXG4gXHR2YXIgaG90UmVxdWVzdFRpbWVvdXQgPSAxMDAwMDtcclxuIFx0dmFyIGhvdEN1cnJlbnRNb2R1bGVEYXRhID0ge307XHJcbiBcdHZhciBob3RDdXJyZW50Q2hpbGRNb2R1bGU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcclxuIFx0dmFyIGhvdEN1cnJlbnRQYXJlbnRzID0gW107IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcclxuIFx0dmFyIGhvdEN1cnJlbnRQYXJlbnRzVGVtcCA9IFtdOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXHJcbiBcdFxyXG4gXHRmdW5jdGlvbiBob3RDcmVhdGVSZXF1aXJlKG1vZHVsZUlkKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcclxuIFx0XHR2YXIgbWUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcclxuIFx0XHRpZighbWUpIHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fO1xyXG4gXHRcdHZhciBmbiA9IGZ1bmN0aW9uKHJlcXVlc3QpIHtcclxuIFx0XHRcdGlmKG1lLmhvdC5hY3RpdmUpIHtcclxuIFx0XHRcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1tyZXF1ZXN0XSkge1xyXG4gXHRcdFx0XHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbcmVxdWVzdF0ucGFyZW50cy5pbmRleE9mKG1vZHVsZUlkKSA8IDApXHJcbiBcdFx0XHRcdFx0XHRpbnN0YWxsZWRNb2R1bGVzW3JlcXVlc3RdLnBhcmVudHMucHVzaChtb2R1bGVJZCk7XHJcbiBcdFx0XHRcdH0gZWxzZSB7XHJcbiBcdFx0XHRcdFx0aG90Q3VycmVudFBhcmVudHMgPSBbbW9kdWxlSWRdO1xyXG4gXHRcdFx0XHRcdGhvdEN1cnJlbnRDaGlsZE1vZHVsZSA9IHJlcXVlc3Q7XHJcbiBcdFx0XHRcdH1cclxuIFx0XHRcdFx0aWYobWUuY2hpbGRyZW4uaW5kZXhPZihyZXF1ZXN0KSA8IDApXHJcbiBcdFx0XHRcdFx0bWUuY2hpbGRyZW4ucHVzaChyZXF1ZXN0KTtcclxuIFx0XHRcdH0gZWxzZSB7XHJcbiBcdFx0XHRcdGNvbnNvbGUud2FybihcIltITVJdIHVuZXhwZWN0ZWQgcmVxdWlyZShcIiArIHJlcXVlc3QgKyBcIikgZnJvbSBkaXNwb3NlZCBtb2R1bGUgXCIgKyBtb2R1bGVJZCk7XHJcbiBcdFx0XHRcdGhvdEN1cnJlbnRQYXJlbnRzID0gW107XHJcbiBcdFx0XHR9XHJcbiBcdFx0XHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhyZXF1ZXN0KTtcclxuIFx0XHR9O1xyXG4gXHRcdHZhciBPYmplY3RGYWN0b3J5ID0gZnVuY3Rpb24gT2JqZWN0RmFjdG9yeShuYW1lKSB7XHJcbiBcdFx0XHRyZXR1cm4ge1xyXG4gXHRcdFx0XHRjb25maWd1cmFibGU6IHRydWUsXHJcbiBcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXHJcbiBcdFx0XHRcdGdldDogZnVuY3Rpb24oKSB7XHJcbiBcdFx0XHRcdFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX19bbmFtZV07XHJcbiBcdFx0XHRcdH0sXHJcbiBcdFx0XHRcdHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuIFx0XHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fW25hbWVdID0gdmFsdWU7XHJcbiBcdFx0XHRcdH1cclxuIFx0XHRcdH07XHJcbiBcdFx0fTtcclxuIFx0XHRmb3IodmFyIG5hbWUgaW4gX193ZWJwYWNrX3JlcXVpcmVfXykge1xyXG4gXHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKF9fd2VicGFja19yZXF1aXJlX18sIG5hbWUpICYmIG5hbWUgIT09IFwiZVwiKSB7XHJcbiBcdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShmbiwgbmFtZSwgT2JqZWN0RmFjdG9yeShuYW1lKSk7XHJcbiBcdFx0XHR9XHJcbiBcdFx0fVxyXG4gXHRcdGZuLmUgPSBmdW5jdGlvbihjaHVua0lkKSB7XHJcbiBcdFx0XHRpZihob3RTdGF0dXMgPT09IFwicmVhZHlcIilcclxuIFx0XHRcdFx0aG90U2V0U3RhdHVzKFwicHJlcGFyZVwiKTtcclxuIFx0XHRcdGhvdENodW5rc0xvYWRpbmcrKztcclxuIFx0XHRcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fLmUoY2h1bmtJZCkudGhlbihmaW5pc2hDaHVua0xvYWRpbmcsIGZ1bmN0aW9uKGVycikge1xyXG4gXHRcdFx0XHRmaW5pc2hDaHVua0xvYWRpbmcoKTtcclxuIFx0XHRcdFx0dGhyb3cgZXJyO1xyXG4gXHRcdFx0fSk7XHJcbiBcdFxyXG4gXHRcdFx0ZnVuY3Rpb24gZmluaXNoQ2h1bmtMb2FkaW5nKCkge1xyXG4gXHRcdFx0XHRob3RDaHVua3NMb2FkaW5nLS07XHJcbiBcdFx0XHRcdGlmKGhvdFN0YXR1cyA9PT0gXCJwcmVwYXJlXCIpIHtcclxuIFx0XHRcdFx0XHRpZighaG90V2FpdGluZ0ZpbGVzTWFwW2NodW5rSWRdKSB7XHJcbiBcdFx0XHRcdFx0XHRob3RFbnN1cmVVcGRhdGVDaHVuayhjaHVua0lkKTtcclxuIFx0XHRcdFx0XHR9XHJcbiBcdFx0XHRcdFx0aWYoaG90Q2h1bmtzTG9hZGluZyA9PT0gMCAmJiBob3RXYWl0aW5nRmlsZXMgPT09IDApIHtcclxuIFx0XHRcdFx0XHRcdGhvdFVwZGF0ZURvd25sb2FkZWQoKTtcclxuIFx0XHRcdFx0XHR9XHJcbiBcdFx0XHRcdH1cclxuIFx0XHRcdH1cclxuIFx0XHR9O1xyXG4gXHRcdHJldHVybiBmbjtcclxuIFx0fVxyXG4gXHRcclxuIFx0ZnVuY3Rpb24gaG90Q3JlYXRlTW9kdWxlKG1vZHVsZUlkKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcclxuIFx0XHR2YXIgaG90ID0ge1xyXG4gXHRcdFx0Ly8gcHJpdmF0ZSBzdHVmZlxyXG4gXHRcdFx0X2FjY2VwdGVkRGVwZW5kZW5jaWVzOiB7fSxcclxuIFx0XHRcdF9kZWNsaW5lZERlcGVuZGVuY2llczoge30sXHJcbiBcdFx0XHRfc2VsZkFjY2VwdGVkOiBmYWxzZSxcclxuIFx0XHRcdF9zZWxmRGVjbGluZWQ6IGZhbHNlLFxyXG4gXHRcdFx0X2Rpc3Bvc2VIYW5kbGVyczogW10sXHJcbiBcdFx0XHRfbWFpbjogaG90Q3VycmVudENoaWxkTW9kdWxlICE9PSBtb2R1bGVJZCxcclxuIFx0XHJcbiBcdFx0XHQvLyBNb2R1bGUgQVBJXHJcbiBcdFx0XHRhY3RpdmU6IHRydWUsXHJcbiBcdFx0XHRhY2NlcHQ6IGZ1bmN0aW9uKGRlcCwgY2FsbGJhY2spIHtcclxuIFx0XHRcdFx0aWYodHlwZW9mIGRlcCA9PT0gXCJ1bmRlZmluZWRcIilcclxuIFx0XHRcdFx0XHRob3QuX3NlbGZBY2NlcHRlZCA9IHRydWU7XHJcbiBcdFx0XHRcdGVsc2UgaWYodHlwZW9mIGRlcCA9PT0gXCJmdW5jdGlvblwiKVxyXG4gXHRcdFx0XHRcdGhvdC5fc2VsZkFjY2VwdGVkID0gZGVwO1xyXG4gXHRcdFx0XHRlbHNlIGlmKHR5cGVvZiBkZXAgPT09IFwib2JqZWN0XCIpXHJcbiBcdFx0XHRcdFx0Zm9yKHZhciBpID0gMDsgaSA8IGRlcC5sZW5ndGg7IGkrKylcclxuIFx0XHRcdFx0XHRcdGhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbZGVwW2ldXSA9IGNhbGxiYWNrIHx8IGZ1bmN0aW9uKCkge307XHJcbiBcdFx0XHRcdGVsc2VcclxuIFx0XHRcdFx0XHRob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW2RlcF0gPSBjYWxsYmFjayB8fCBmdW5jdGlvbigpIHt9O1xyXG4gXHRcdFx0fSxcclxuIFx0XHRcdGRlY2xpbmU6IGZ1bmN0aW9uKGRlcCkge1xyXG4gXHRcdFx0XHRpZih0eXBlb2YgZGVwID09PSBcInVuZGVmaW5lZFwiKVxyXG4gXHRcdFx0XHRcdGhvdC5fc2VsZkRlY2xpbmVkID0gdHJ1ZTtcclxuIFx0XHRcdFx0ZWxzZSBpZih0eXBlb2YgZGVwID09PSBcIm9iamVjdFwiKVxyXG4gXHRcdFx0XHRcdGZvcih2YXIgaSA9IDA7IGkgPCBkZXAubGVuZ3RoOyBpKyspXHJcbiBcdFx0XHRcdFx0XHRob3QuX2RlY2xpbmVkRGVwZW5kZW5jaWVzW2RlcFtpXV0gPSB0cnVlO1xyXG4gXHRcdFx0XHRlbHNlXHJcbiBcdFx0XHRcdFx0aG90Ll9kZWNsaW5lZERlcGVuZGVuY2llc1tkZXBdID0gdHJ1ZTtcclxuIFx0XHRcdH0sXHJcbiBcdFx0XHRkaXNwb3NlOiBmdW5jdGlvbihjYWxsYmFjaykge1xyXG4gXHRcdFx0XHRob3QuX2Rpc3Bvc2VIYW5kbGVycy5wdXNoKGNhbGxiYWNrKTtcclxuIFx0XHRcdH0sXHJcbiBcdFx0XHRhZGREaXNwb3NlSGFuZGxlcjogZnVuY3Rpb24oY2FsbGJhY2spIHtcclxuIFx0XHRcdFx0aG90Ll9kaXNwb3NlSGFuZGxlcnMucHVzaChjYWxsYmFjayk7XHJcbiBcdFx0XHR9LFxyXG4gXHRcdFx0cmVtb3ZlRGlzcG9zZUhhbmRsZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XHJcbiBcdFx0XHRcdHZhciBpZHggPSBob3QuX2Rpc3Bvc2VIYW5kbGVycy5pbmRleE9mKGNhbGxiYWNrKTtcclxuIFx0XHRcdFx0aWYoaWR4ID49IDApIGhvdC5fZGlzcG9zZUhhbmRsZXJzLnNwbGljZShpZHgsIDEpO1xyXG4gXHRcdFx0fSxcclxuIFx0XHJcbiBcdFx0XHQvLyBNYW5hZ2VtZW50IEFQSVxyXG4gXHRcdFx0Y2hlY2s6IGhvdENoZWNrLFxyXG4gXHRcdFx0YXBwbHk6IGhvdEFwcGx5LFxyXG4gXHRcdFx0c3RhdHVzOiBmdW5jdGlvbihsKSB7XHJcbiBcdFx0XHRcdGlmKCFsKSByZXR1cm4gaG90U3RhdHVzO1xyXG4gXHRcdFx0XHRob3RTdGF0dXNIYW5kbGVycy5wdXNoKGwpO1xyXG4gXHRcdFx0fSxcclxuIFx0XHRcdGFkZFN0YXR1c0hhbmRsZXI6IGZ1bmN0aW9uKGwpIHtcclxuIFx0XHRcdFx0aG90U3RhdHVzSGFuZGxlcnMucHVzaChsKTtcclxuIFx0XHRcdH0sXHJcbiBcdFx0XHRyZW1vdmVTdGF0dXNIYW5kbGVyOiBmdW5jdGlvbihsKSB7XHJcbiBcdFx0XHRcdHZhciBpZHggPSBob3RTdGF0dXNIYW5kbGVycy5pbmRleE9mKGwpO1xyXG4gXHRcdFx0XHRpZihpZHggPj0gMCkgaG90U3RhdHVzSGFuZGxlcnMuc3BsaWNlKGlkeCwgMSk7XHJcbiBcdFx0XHR9LFxyXG4gXHRcclxuIFx0XHRcdC8vaW5oZXJpdCBmcm9tIHByZXZpb3VzIGRpc3Bvc2UgY2FsbFxyXG4gXHRcdFx0ZGF0YTogaG90Q3VycmVudE1vZHVsZURhdGFbbW9kdWxlSWRdXHJcbiBcdFx0fTtcclxuIFx0XHRob3RDdXJyZW50Q2hpbGRNb2R1bGUgPSB1bmRlZmluZWQ7XHJcbiBcdFx0cmV0dXJuIGhvdDtcclxuIFx0fVxyXG4gXHRcclxuIFx0dmFyIGhvdFN0YXR1c0hhbmRsZXJzID0gW107XHJcbiBcdHZhciBob3RTdGF0dXMgPSBcImlkbGVcIjtcclxuIFx0XHJcbiBcdGZ1bmN0aW9uIGhvdFNldFN0YXR1cyhuZXdTdGF0dXMpIHtcclxuIFx0XHRob3RTdGF0dXMgPSBuZXdTdGF0dXM7XHJcbiBcdFx0Zm9yKHZhciBpID0gMDsgaSA8IGhvdFN0YXR1c0hhbmRsZXJzLmxlbmd0aDsgaSsrKVxyXG4gXHRcdFx0aG90U3RhdHVzSGFuZGxlcnNbaV0uY2FsbChudWxsLCBuZXdTdGF0dXMpO1xyXG4gXHR9XHJcbiBcdFxyXG4gXHQvLyB3aGlsZSBkb3dubG9hZGluZ1xyXG4gXHR2YXIgaG90V2FpdGluZ0ZpbGVzID0gMDtcclxuIFx0dmFyIGhvdENodW5rc0xvYWRpbmcgPSAwO1xyXG4gXHR2YXIgaG90V2FpdGluZ0ZpbGVzTWFwID0ge307XHJcbiBcdHZhciBob3RSZXF1ZXN0ZWRGaWxlc01hcCA9IHt9O1xyXG4gXHR2YXIgaG90QXZhaWxhYmxlRmlsZXNNYXAgPSB7fTtcclxuIFx0dmFyIGhvdERlZmVycmVkO1xyXG4gXHRcclxuIFx0Ly8gVGhlIHVwZGF0ZSBpbmZvXHJcbiBcdHZhciBob3RVcGRhdGUsIGhvdFVwZGF0ZU5ld0hhc2g7XHJcbiBcdFxyXG4gXHRmdW5jdGlvbiB0b01vZHVsZUlkKGlkKSB7XHJcbiBcdFx0dmFyIGlzTnVtYmVyID0gKCtpZCkgKyBcIlwiID09PSBpZDtcclxuIFx0XHRyZXR1cm4gaXNOdW1iZXIgPyAraWQgOiBpZDtcclxuIFx0fVxyXG4gXHRcclxuIFx0ZnVuY3Rpb24gaG90Q2hlY2soYXBwbHkpIHtcclxuIFx0XHRpZihob3RTdGF0dXMgIT09IFwiaWRsZVwiKSB0aHJvdyBuZXcgRXJyb3IoXCJjaGVjaygpIGlzIG9ubHkgYWxsb3dlZCBpbiBpZGxlIHN0YXR1c1wiKTtcclxuIFx0XHRob3RBcHBseU9uVXBkYXRlID0gYXBwbHk7XHJcbiBcdFx0aG90U2V0U3RhdHVzKFwiY2hlY2tcIik7XHJcbiBcdFx0cmV0dXJuIGhvdERvd25sb2FkTWFuaWZlc3QoaG90UmVxdWVzdFRpbWVvdXQpLnRoZW4oZnVuY3Rpb24odXBkYXRlKSB7XHJcbiBcdFx0XHRpZighdXBkYXRlKSB7XHJcbiBcdFx0XHRcdGhvdFNldFN0YXR1cyhcImlkbGVcIik7XHJcbiBcdFx0XHRcdHJldHVybiBudWxsO1xyXG4gXHRcdFx0fVxyXG4gXHRcdFx0aG90UmVxdWVzdGVkRmlsZXNNYXAgPSB7fTtcclxuIFx0XHRcdGhvdFdhaXRpbmdGaWxlc01hcCA9IHt9O1xyXG4gXHRcdFx0aG90QXZhaWxhYmxlRmlsZXNNYXAgPSB1cGRhdGUuYztcclxuIFx0XHRcdGhvdFVwZGF0ZU5ld0hhc2ggPSB1cGRhdGUuaDtcclxuIFx0XHJcbiBcdFx0XHRob3RTZXRTdGF0dXMoXCJwcmVwYXJlXCIpO1xyXG4gXHRcdFx0dmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcclxuIFx0XHRcdFx0aG90RGVmZXJyZWQgPSB7XHJcbiBcdFx0XHRcdFx0cmVzb2x2ZTogcmVzb2x2ZSxcclxuIFx0XHRcdFx0XHRyZWplY3Q6IHJlamVjdFxyXG4gXHRcdFx0XHR9O1xyXG4gXHRcdFx0fSk7XHJcbiBcdFx0XHRob3RVcGRhdGUgPSB7fTtcclxuIFx0XHRcdHZhciBjaHVua0lkID0gMDtcclxuIFx0XHRcdHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1sb25lLWJsb2Nrc1xyXG4gXHRcdFx0XHQvKmdsb2JhbHMgY2h1bmtJZCAqL1xyXG4gXHRcdFx0XHRob3RFbnN1cmVVcGRhdGVDaHVuayhjaHVua0lkKTtcclxuIFx0XHRcdH1cclxuIFx0XHRcdGlmKGhvdFN0YXR1cyA9PT0gXCJwcmVwYXJlXCIgJiYgaG90Q2h1bmtzTG9hZGluZyA9PT0gMCAmJiBob3RXYWl0aW5nRmlsZXMgPT09IDApIHtcclxuIFx0XHRcdFx0aG90VXBkYXRlRG93bmxvYWRlZCgpO1xyXG4gXHRcdFx0fVxyXG4gXHRcdFx0cmV0dXJuIHByb21pc2U7XHJcbiBcdFx0fSk7XHJcbiBcdH1cclxuIFx0XHJcbiBcdGZ1bmN0aW9uIGhvdEFkZFVwZGF0ZUNodW5rKGNodW5rSWQsIG1vcmVNb2R1bGVzKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcclxuIFx0XHRpZighaG90QXZhaWxhYmxlRmlsZXNNYXBbY2h1bmtJZF0gfHwgIWhvdFJlcXVlc3RlZEZpbGVzTWFwW2NodW5rSWRdKVxyXG4gXHRcdFx0cmV0dXJuO1xyXG4gXHRcdGhvdFJlcXVlc3RlZEZpbGVzTWFwW2NodW5rSWRdID0gZmFsc2U7XHJcbiBcdFx0Zm9yKHZhciBtb2R1bGVJZCBpbiBtb3JlTW9kdWxlcykge1xyXG4gXHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vcmVNb2R1bGVzLCBtb2R1bGVJZCkpIHtcclxuIFx0XHRcdFx0aG90VXBkYXRlW21vZHVsZUlkXSA9IG1vcmVNb2R1bGVzW21vZHVsZUlkXTtcclxuIFx0XHRcdH1cclxuIFx0XHR9XHJcbiBcdFx0aWYoLS1ob3RXYWl0aW5nRmlsZXMgPT09IDAgJiYgaG90Q2h1bmtzTG9hZGluZyA9PT0gMCkge1xyXG4gXHRcdFx0aG90VXBkYXRlRG93bmxvYWRlZCgpO1xyXG4gXHRcdH1cclxuIFx0fVxyXG4gXHRcclxuIFx0ZnVuY3Rpb24gaG90RW5zdXJlVXBkYXRlQ2h1bmsoY2h1bmtJZCkge1xyXG4gXHRcdGlmKCFob3RBdmFpbGFibGVGaWxlc01hcFtjaHVua0lkXSkge1xyXG4gXHRcdFx0aG90V2FpdGluZ0ZpbGVzTWFwW2NodW5rSWRdID0gdHJ1ZTtcclxuIFx0XHR9IGVsc2Uge1xyXG4gXHRcdFx0aG90UmVxdWVzdGVkRmlsZXNNYXBbY2h1bmtJZF0gPSB0cnVlO1xyXG4gXHRcdFx0aG90V2FpdGluZ0ZpbGVzKys7XHJcbiBcdFx0XHRob3REb3dubG9hZFVwZGF0ZUNodW5rKGNodW5rSWQpO1xyXG4gXHRcdH1cclxuIFx0fVxyXG4gXHRcclxuIFx0ZnVuY3Rpb24gaG90VXBkYXRlRG93bmxvYWRlZCgpIHtcclxuIFx0XHRob3RTZXRTdGF0dXMoXCJyZWFkeVwiKTtcclxuIFx0XHR2YXIgZGVmZXJyZWQgPSBob3REZWZlcnJlZDtcclxuIFx0XHRob3REZWZlcnJlZCA9IG51bGw7XHJcbiBcdFx0aWYoIWRlZmVycmVkKSByZXR1cm47XHJcbiBcdFx0aWYoaG90QXBwbHlPblVwZGF0ZSkge1xyXG4gXHRcdFx0Ly8gV3JhcCBkZWZlcnJlZCBvYmplY3QgaW4gUHJvbWlzZSB0byBtYXJrIGl0IGFzIGEgd2VsbC1oYW5kbGVkIFByb21pc2UgdG9cclxuIFx0XHRcdC8vIGF2b2lkIHRyaWdnZXJpbmcgdW5jYXVnaHQgZXhjZXB0aW9uIHdhcm5pbmcgaW4gQ2hyb21lLlxyXG4gXHRcdFx0Ly8gU2VlIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ2NTY2NlxyXG4gXHRcdFx0UHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbigpIHtcclxuIFx0XHRcdFx0cmV0dXJuIGhvdEFwcGx5KGhvdEFwcGx5T25VcGRhdGUpO1xyXG4gXHRcdFx0fSkudGhlbihcclxuIFx0XHRcdFx0ZnVuY3Rpb24ocmVzdWx0KSB7XHJcbiBcdFx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZShyZXN1bHQpO1xyXG4gXHRcdFx0XHR9LFxyXG4gXHRcdFx0XHRmdW5jdGlvbihlcnIpIHtcclxuIFx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3QoZXJyKTtcclxuIFx0XHRcdFx0fVxyXG4gXHRcdFx0KTtcclxuIFx0XHR9IGVsc2Uge1xyXG4gXHRcdFx0dmFyIG91dGRhdGVkTW9kdWxlcyA9IFtdO1xyXG4gXHRcdFx0Zm9yKHZhciBpZCBpbiBob3RVcGRhdGUpIHtcclxuIFx0XHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGhvdFVwZGF0ZSwgaWQpKSB7XHJcbiBcdFx0XHRcdFx0b3V0ZGF0ZWRNb2R1bGVzLnB1c2godG9Nb2R1bGVJZChpZCkpO1xyXG4gXHRcdFx0XHR9XHJcbiBcdFx0XHR9XHJcbiBcdFx0XHRkZWZlcnJlZC5yZXNvbHZlKG91dGRhdGVkTW9kdWxlcyk7XHJcbiBcdFx0fVxyXG4gXHR9XHJcbiBcdFxyXG4gXHRmdW5jdGlvbiBob3RBcHBseShvcHRpb25zKSB7XHJcbiBcdFx0aWYoaG90U3RhdHVzICE9PSBcInJlYWR5XCIpIHRocm93IG5ldyBFcnJvcihcImFwcGx5KCkgaXMgb25seSBhbGxvd2VkIGluIHJlYWR5IHN0YXR1c1wiKTtcclxuIFx0XHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcclxuIFx0XHJcbiBcdFx0dmFyIGNiO1xyXG4gXHRcdHZhciBpO1xyXG4gXHRcdHZhciBqO1xyXG4gXHRcdHZhciBtb2R1bGU7XHJcbiBcdFx0dmFyIG1vZHVsZUlkO1xyXG4gXHRcclxuIFx0XHRmdW5jdGlvbiBnZXRBZmZlY3RlZFN0dWZmKHVwZGF0ZU1vZHVsZUlkKSB7XHJcbiBcdFx0XHR2YXIgb3V0ZGF0ZWRNb2R1bGVzID0gW3VwZGF0ZU1vZHVsZUlkXTtcclxuIFx0XHRcdHZhciBvdXRkYXRlZERlcGVuZGVuY2llcyA9IHt9O1xyXG4gXHRcclxuIFx0XHRcdHZhciBxdWV1ZSA9IG91dGRhdGVkTW9kdWxlcy5zbGljZSgpLm1hcChmdW5jdGlvbihpZCkge1xyXG4gXHRcdFx0XHRyZXR1cm4ge1xyXG4gXHRcdFx0XHRcdGNoYWluOiBbaWRdLFxyXG4gXHRcdFx0XHRcdGlkOiBpZFxyXG4gXHRcdFx0XHR9O1xyXG4gXHRcdFx0fSk7XHJcbiBcdFx0XHR3aGlsZShxdWV1ZS5sZW5ndGggPiAwKSB7XHJcbiBcdFx0XHRcdHZhciBxdWV1ZUl0ZW0gPSBxdWV1ZS5wb3AoKTtcclxuIFx0XHRcdFx0dmFyIG1vZHVsZUlkID0gcXVldWVJdGVtLmlkO1xyXG4gXHRcdFx0XHR2YXIgY2hhaW4gPSBxdWV1ZUl0ZW0uY2hhaW47XHJcbiBcdFx0XHRcdG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdO1xyXG4gXHRcdFx0XHRpZighbW9kdWxlIHx8IG1vZHVsZS5ob3QuX3NlbGZBY2NlcHRlZClcclxuIFx0XHRcdFx0XHRjb250aW51ZTtcclxuIFx0XHRcdFx0aWYobW9kdWxlLmhvdC5fc2VsZkRlY2xpbmVkKSB7XHJcbiBcdFx0XHRcdFx0cmV0dXJuIHtcclxuIFx0XHRcdFx0XHRcdHR5cGU6IFwic2VsZi1kZWNsaW5lZFwiLFxyXG4gXHRcdFx0XHRcdFx0Y2hhaW46IGNoYWluLFxyXG4gXHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkXHJcbiBcdFx0XHRcdFx0fTtcclxuIFx0XHRcdFx0fVxyXG4gXHRcdFx0XHRpZihtb2R1bGUuaG90Ll9tYWluKSB7XHJcbiBcdFx0XHRcdFx0cmV0dXJuIHtcclxuIFx0XHRcdFx0XHRcdHR5cGU6IFwidW5hY2NlcHRlZFwiLFxyXG4gXHRcdFx0XHRcdFx0Y2hhaW46IGNoYWluLFxyXG4gXHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkXHJcbiBcdFx0XHRcdFx0fTtcclxuIFx0XHRcdFx0fVxyXG4gXHRcdFx0XHRmb3IodmFyIGkgPSAwOyBpIDwgbW9kdWxlLnBhcmVudHMubGVuZ3RoOyBpKyspIHtcclxuIFx0XHRcdFx0XHR2YXIgcGFyZW50SWQgPSBtb2R1bGUucGFyZW50c1tpXTtcclxuIFx0XHRcdFx0XHR2YXIgcGFyZW50ID0gaW5zdGFsbGVkTW9kdWxlc1twYXJlbnRJZF07XHJcbiBcdFx0XHRcdFx0aWYoIXBhcmVudCkgY29udGludWU7XHJcbiBcdFx0XHRcdFx0aWYocGFyZW50LmhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdKSB7XHJcbiBcdFx0XHRcdFx0XHRyZXR1cm4ge1xyXG4gXHRcdFx0XHRcdFx0XHR0eXBlOiBcImRlY2xpbmVkXCIsXHJcbiBcdFx0XHRcdFx0XHRcdGNoYWluOiBjaGFpbi5jb25jYXQoW3BhcmVudElkXSksXHJcbiBcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcclxuIFx0XHRcdFx0XHRcdFx0cGFyZW50SWQ6IHBhcmVudElkXHJcbiBcdFx0XHRcdFx0XHR9O1xyXG4gXHRcdFx0XHRcdH1cclxuIFx0XHRcdFx0XHRpZihvdXRkYXRlZE1vZHVsZXMuaW5kZXhPZihwYXJlbnRJZCkgPj0gMCkgY29udGludWU7XHJcbiBcdFx0XHRcdFx0aWYocGFyZW50LmhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdKSB7XHJcbiBcdFx0XHRcdFx0XHRpZighb3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdKVxyXG4gXHRcdFx0XHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF0gPSBbXTtcclxuIFx0XHRcdFx0XHRcdGFkZEFsbFRvU2V0KG91dGRhdGVkRGVwZW5kZW5jaWVzW3BhcmVudElkXSwgW21vZHVsZUlkXSk7XHJcbiBcdFx0XHRcdFx0XHRjb250aW51ZTtcclxuIFx0XHRcdFx0XHR9XHJcbiBcdFx0XHRcdFx0ZGVsZXRlIG91dGRhdGVkRGVwZW5kZW5jaWVzW3BhcmVudElkXTtcclxuIFx0XHRcdFx0XHRvdXRkYXRlZE1vZHVsZXMucHVzaChwYXJlbnRJZCk7XHJcbiBcdFx0XHRcdFx0cXVldWUucHVzaCh7XHJcbiBcdFx0XHRcdFx0XHRjaGFpbjogY2hhaW4uY29uY2F0KFtwYXJlbnRJZF0pLFxyXG4gXHRcdFx0XHRcdFx0aWQ6IHBhcmVudElkXHJcbiBcdFx0XHRcdFx0fSk7XHJcbiBcdFx0XHRcdH1cclxuIFx0XHRcdH1cclxuIFx0XHJcbiBcdFx0XHRyZXR1cm4ge1xyXG4gXHRcdFx0XHR0eXBlOiBcImFjY2VwdGVkXCIsXHJcbiBcdFx0XHRcdG1vZHVsZUlkOiB1cGRhdGVNb2R1bGVJZCxcclxuIFx0XHRcdFx0b3V0ZGF0ZWRNb2R1bGVzOiBvdXRkYXRlZE1vZHVsZXMsXHJcbiBcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzOiBvdXRkYXRlZERlcGVuZGVuY2llc1xyXG4gXHRcdFx0fTtcclxuIFx0XHR9XHJcbiBcdFxyXG4gXHRcdGZ1bmN0aW9uIGFkZEFsbFRvU2V0KGEsIGIpIHtcclxuIFx0XHRcdGZvcih2YXIgaSA9IDA7IGkgPCBiLmxlbmd0aDsgaSsrKSB7XHJcbiBcdFx0XHRcdHZhciBpdGVtID0gYltpXTtcclxuIFx0XHRcdFx0aWYoYS5pbmRleE9mKGl0ZW0pIDwgMClcclxuIFx0XHRcdFx0XHRhLnB1c2goaXRlbSk7XHJcbiBcdFx0XHR9XHJcbiBcdFx0fVxyXG4gXHRcclxuIFx0XHQvLyBhdCBiZWdpbiBhbGwgdXBkYXRlcyBtb2R1bGVzIGFyZSBvdXRkYXRlZFxyXG4gXHRcdC8vIHRoZSBcIm91dGRhdGVkXCIgc3RhdHVzIGNhbiBwcm9wYWdhdGUgdG8gcGFyZW50cyBpZiB0aGV5IGRvbid0IGFjY2VwdCB0aGUgY2hpbGRyZW5cclxuIFx0XHR2YXIgb3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSB7fTtcclxuIFx0XHR2YXIgb3V0ZGF0ZWRNb2R1bGVzID0gW107XHJcbiBcdFx0dmFyIGFwcGxpZWRVcGRhdGUgPSB7fTtcclxuIFx0XHJcbiBcdFx0dmFyIHdhcm5VbmV4cGVjdGVkUmVxdWlyZSA9IGZ1bmN0aW9uIHdhcm5VbmV4cGVjdGVkUmVxdWlyZSgpIHtcclxuIFx0XHRcdGNvbnNvbGUud2FybihcIltITVJdIHVuZXhwZWN0ZWQgcmVxdWlyZShcIiArIHJlc3VsdC5tb2R1bGVJZCArIFwiKSB0byBkaXNwb3NlZCBtb2R1bGVcIik7XHJcbiBcdFx0fTtcclxuIFx0XHJcbiBcdFx0Zm9yKHZhciBpZCBpbiBob3RVcGRhdGUpIHtcclxuIFx0XHRcdGlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChob3RVcGRhdGUsIGlkKSkge1xyXG4gXHRcdFx0XHRtb2R1bGVJZCA9IHRvTW9kdWxlSWQoaWQpO1xyXG4gXHRcdFx0XHR2YXIgcmVzdWx0O1xyXG4gXHRcdFx0XHRpZihob3RVcGRhdGVbaWRdKSB7XHJcbiBcdFx0XHRcdFx0cmVzdWx0ID0gZ2V0QWZmZWN0ZWRTdHVmZihtb2R1bGVJZCk7XHJcbiBcdFx0XHRcdH0gZWxzZSB7XHJcbiBcdFx0XHRcdFx0cmVzdWx0ID0ge1xyXG4gXHRcdFx0XHRcdFx0dHlwZTogXCJkaXNwb3NlZFwiLFxyXG4gXHRcdFx0XHRcdFx0bW9kdWxlSWQ6IGlkXHJcbiBcdFx0XHRcdFx0fTtcclxuIFx0XHRcdFx0fVxyXG4gXHRcdFx0XHR2YXIgYWJvcnRFcnJvciA9IGZhbHNlO1xyXG4gXHRcdFx0XHR2YXIgZG9BcHBseSA9IGZhbHNlO1xyXG4gXHRcdFx0XHR2YXIgZG9EaXNwb3NlID0gZmFsc2U7XHJcbiBcdFx0XHRcdHZhciBjaGFpbkluZm8gPSBcIlwiO1xyXG4gXHRcdFx0XHRpZihyZXN1bHQuY2hhaW4pIHtcclxuIFx0XHRcdFx0XHRjaGFpbkluZm8gPSBcIlxcblVwZGF0ZSBwcm9wYWdhdGlvbjogXCIgKyByZXN1bHQuY2hhaW4uam9pbihcIiAtPiBcIik7XHJcbiBcdFx0XHRcdH1cclxuIFx0XHRcdFx0c3dpdGNoKHJlc3VsdC50eXBlKSB7XHJcbiBcdFx0XHRcdFx0Y2FzZSBcInNlbGYtZGVjbGluZWRcIjpcclxuIFx0XHRcdFx0XHRcdGlmKG9wdGlvbnMub25EZWNsaW5lZClcclxuIFx0XHRcdFx0XHRcdFx0b3B0aW9ucy5vbkRlY2xpbmVkKHJlc3VsdCk7XHJcbiBcdFx0XHRcdFx0XHRpZighb3B0aW9ucy5pZ25vcmVEZWNsaW5lZClcclxuIFx0XHRcdFx0XHRcdFx0YWJvcnRFcnJvciA9IG5ldyBFcnJvcihcIkFib3J0ZWQgYmVjYXVzZSBvZiBzZWxmIGRlY2xpbmU6IFwiICsgcmVzdWx0Lm1vZHVsZUlkICsgY2hhaW5JbmZvKTtcclxuIFx0XHRcdFx0XHRcdGJyZWFrO1xyXG4gXHRcdFx0XHRcdGNhc2UgXCJkZWNsaW5lZFwiOlxyXG4gXHRcdFx0XHRcdFx0aWYob3B0aW9ucy5vbkRlY2xpbmVkKVxyXG4gXHRcdFx0XHRcdFx0XHRvcHRpb25zLm9uRGVjbGluZWQocmVzdWx0KTtcclxuIFx0XHRcdFx0XHRcdGlmKCFvcHRpb25zLmlnbm9yZURlY2xpbmVkKVxyXG4gXHRcdFx0XHRcdFx0XHRhYm9ydEVycm9yID0gbmV3IEVycm9yKFwiQWJvcnRlZCBiZWNhdXNlIG9mIGRlY2xpbmVkIGRlcGVuZGVuY3k6IFwiICsgcmVzdWx0Lm1vZHVsZUlkICsgXCIgaW4gXCIgKyByZXN1bHQucGFyZW50SWQgKyBjaGFpbkluZm8pO1xyXG4gXHRcdFx0XHRcdFx0YnJlYWs7XHJcbiBcdFx0XHRcdFx0Y2FzZSBcInVuYWNjZXB0ZWRcIjpcclxuIFx0XHRcdFx0XHRcdGlmKG9wdGlvbnMub25VbmFjY2VwdGVkKVxyXG4gXHRcdFx0XHRcdFx0XHRvcHRpb25zLm9uVW5hY2NlcHRlZChyZXN1bHQpO1xyXG4gXHRcdFx0XHRcdFx0aWYoIW9wdGlvbnMuaWdub3JlVW5hY2NlcHRlZClcclxuIFx0XHRcdFx0XHRcdFx0YWJvcnRFcnJvciA9IG5ldyBFcnJvcihcIkFib3J0ZWQgYmVjYXVzZSBcIiArIG1vZHVsZUlkICsgXCIgaXMgbm90IGFjY2VwdGVkXCIgKyBjaGFpbkluZm8pO1xyXG4gXHRcdFx0XHRcdFx0YnJlYWs7XHJcbiBcdFx0XHRcdFx0Y2FzZSBcImFjY2VwdGVkXCI6XHJcbiBcdFx0XHRcdFx0XHRpZihvcHRpb25zLm9uQWNjZXB0ZWQpXHJcbiBcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25BY2NlcHRlZChyZXN1bHQpO1xyXG4gXHRcdFx0XHRcdFx0ZG9BcHBseSA9IHRydWU7XHJcbiBcdFx0XHRcdFx0XHRicmVhaztcclxuIFx0XHRcdFx0XHRjYXNlIFwiZGlzcG9zZWRcIjpcclxuIFx0XHRcdFx0XHRcdGlmKG9wdGlvbnMub25EaXNwb3NlZClcclxuIFx0XHRcdFx0XHRcdFx0b3B0aW9ucy5vbkRpc3Bvc2VkKHJlc3VsdCk7XHJcbiBcdFx0XHRcdFx0XHRkb0Rpc3Bvc2UgPSB0cnVlO1xyXG4gXHRcdFx0XHRcdFx0YnJlYWs7XHJcbiBcdFx0XHRcdFx0ZGVmYXVsdDpcclxuIFx0XHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcihcIlVuZXhjZXB0aW9uIHR5cGUgXCIgKyByZXN1bHQudHlwZSk7XHJcbiBcdFx0XHRcdH1cclxuIFx0XHRcdFx0aWYoYWJvcnRFcnJvcikge1xyXG4gXHRcdFx0XHRcdGhvdFNldFN0YXR1cyhcImFib3J0XCIpO1xyXG4gXHRcdFx0XHRcdHJldHVybiBQcm9taXNlLnJlamVjdChhYm9ydEVycm9yKTtcclxuIFx0XHRcdFx0fVxyXG4gXHRcdFx0XHRpZihkb0FwcGx5KSB7XHJcbiBcdFx0XHRcdFx0YXBwbGllZFVwZGF0ZVttb2R1bGVJZF0gPSBob3RVcGRhdGVbbW9kdWxlSWRdO1xyXG4gXHRcdFx0XHRcdGFkZEFsbFRvU2V0KG91dGRhdGVkTW9kdWxlcywgcmVzdWx0Lm91dGRhdGVkTW9kdWxlcyk7XHJcbiBcdFx0XHRcdFx0Zm9yKG1vZHVsZUlkIGluIHJlc3VsdC5vdXRkYXRlZERlcGVuZGVuY2llcykge1xyXG4gXHRcdFx0XHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHJlc3VsdC5vdXRkYXRlZERlcGVuZGVuY2llcywgbW9kdWxlSWQpKSB7XHJcbiBcdFx0XHRcdFx0XHRcdGlmKCFvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0pXHJcbiBcdFx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdID0gW107XHJcbiBcdFx0XHRcdFx0XHRcdGFkZEFsbFRvU2V0KG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSwgcmVzdWx0Lm91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSk7XHJcbiBcdFx0XHRcdFx0XHR9XHJcbiBcdFx0XHRcdFx0fVxyXG4gXHRcdFx0XHR9XHJcbiBcdFx0XHRcdGlmKGRvRGlzcG9zZSkge1xyXG4gXHRcdFx0XHRcdGFkZEFsbFRvU2V0KG91dGRhdGVkTW9kdWxlcywgW3Jlc3VsdC5tb2R1bGVJZF0pO1xyXG4gXHRcdFx0XHRcdGFwcGxpZWRVcGRhdGVbbW9kdWxlSWRdID0gd2FyblVuZXhwZWN0ZWRSZXF1aXJlO1xyXG4gXHRcdFx0XHR9XHJcbiBcdFx0XHR9XHJcbiBcdFx0fVxyXG4gXHRcclxuIFx0XHQvLyBTdG9yZSBzZWxmIGFjY2VwdGVkIG91dGRhdGVkIG1vZHVsZXMgdG8gcmVxdWlyZSB0aGVtIGxhdGVyIGJ5IHRoZSBtb2R1bGUgc3lzdGVtXHJcbiBcdFx0dmFyIG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcyA9IFtdO1xyXG4gXHRcdGZvcihpID0gMDsgaSA8IG91dGRhdGVkTW9kdWxlcy5sZW5ndGg7IGkrKykge1xyXG4gXHRcdFx0bW9kdWxlSWQgPSBvdXRkYXRlZE1vZHVsZXNbaV07XHJcbiBcdFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSAmJiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5ob3QuX3NlbGZBY2NlcHRlZClcclxuIFx0XHRcdFx0b3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzLnB1c2goe1xyXG4gXHRcdFx0XHRcdG1vZHVsZTogbW9kdWxlSWQsXHJcbiBcdFx0XHRcdFx0ZXJyb3JIYW5kbGVyOiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5ob3QuX3NlbGZBY2NlcHRlZFxyXG4gXHRcdFx0XHR9KTtcclxuIFx0XHR9XHJcbiBcdFxyXG4gXHRcdC8vIE5vdyBpbiBcImRpc3Bvc2VcIiBwaGFzZVxyXG4gXHRcdGhvdFNldFN0YXR1cyhcImRpc3Bvc2VcIik7XHJcbiBcdFx0T2JqZWN0LmtleXMoaG90QXZhaWxhYmxlRmlsZXNNYXApLmZvckVhY2goZnVuY3Rpb24oY2h1bmtJZCkge1xyXG4gXHRcdFx0aWYoaG90QXZhaWxhYmxlRmlsZXNNYXBbY2h1bmtJZF0gPT09IGZhbHNlKSB7XHJcbiBcdFx0XHRcdGhvdERpc3Bvc2VDaHVuayhjaHVua0lkKTtcclxuIFx0XHRcdH1cclxuIFx0XHR9KTtcclxuIFx0XHJcbiBcdFx0dmFyIGlkeDtcclxuIFx0XHR2YXIgcXVldWUgPSBvdXRkYXRlZE1vZHVsZXMuc2xpY2UoKTtcclxuIFx0XHR3aGlsZShxdWV1ZS5sZW5ndGggPiAwKSB7XHJcbiBcdFx0XHRtb2R1bGVJZCA9IHF1ZXVlLnBvcCgpO1xyXG4gXHRcdFx0bW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF07XHJcbiBcdFx0XHRpZighbW9kdWxlKSBjb250aW51ZTtcclxuIFx0XHJcbiBcdFx0XHR2YXIgZGF0YSA9IHt9O1xyXG4gXHRcclxuIFx0XHRcdC8vIENhbGwgZGlzcG9zZSBoYW5kbGVyc1xyXG4gXHRcdFx0dmFyIGRpc3Bvc2VIYW5kbGVycyA9IG1vZHVsZS5ob3QuX2Rpc3Bvc2VIYW5kbGVycztcclxuIFx0XHRcdGZvcihqID0gMDsgaiA8IGRpc3Bvc2VIYW5kbGVycy5sZW5ndGg7IGorKykge1xyXG4gXHRcdFx0XHRjYiA9IGRpc3Bvc2VIYW5kbGVyc1tqXTtcclxuIFx0XHRcdFx0Y2IoZGF0YSk7XHJcbiBcdFx0XHR9XHJcbiBcdFx0XHRob3RDdXJyZW50TW9kdWxlRGF0YVttb2R1bGVJZF0gPSBkYXRhO1xyXG4gXHRcclxuIFx0XHRcdC8vIGRpc2FibGUgbW9kdWxlICh0aGlzIGRpc2FibGVzIHJlcXVpcmVzIGZyb20gdGhpcyBtb2R1bGUpXHJcbiBcdFx0XHRtb2R1bGUuaG90LmFjdGl2ZSA9IGZhbHNlO1xyXG4gXHRcclxuIFx0XHRcdC8vIHJlbW92ZSBtb2R1bGUgZnJvbSBjYWNoZVxyXG4gXHRcdFx0ZGVsZXRlIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdO1xyXG4gXHRcclxuIFx0XHRcdC8vIHdoZW4gZGlzcG9zaW5nIHRoZXJlIGlzIG5vIG5lZWQgdG8gY2FsbCBkaXNwb3NlIGhhbmRsZXJcclxuIFx0XHRcdGRlbGV0ZSBvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF07XHJcbiBcdFxyXG4gXHRcdFx0Ly8gcmVtb3ZlIFwicGFyZW50c1wiIHJlZmVyZW5jZXMgZnJvbSBhbGwgY2hpbGRyZW5cclxuIFx0XHRcdGZvcihqID0gMDsgaiA8IG1vZHVsZS5jaGlsZHJlbi5sZW5ndGg7IGorKykge1xyXG4gXHRcdFx0XHR2YXIgY2hpbGQgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZS5jaGlsZHJlbltqXV07XHJcbiBcdFx0XHRcdGlmKCFjaGlsZCkgY29udGludWU7XHJcbiBcdFx0XHRcdGlkeCA9IGNoaWxkLnBhcmVudHMuaW5kZXhPZihtb2R1bGVJZCk7XHJcbiBcdFx0XHRcdGlmKGlkeCA+PSAwKSB7XHJcbiBcdFx0XHRcdFx0Y2hpbGQucGFyZW50cy5zcGxpY2UoaWR4LCAxKTtcclxuIFx0XHRcdFx0fVxyXG4gXHRcdFx0fVxyXG4gXHRcdH1cclxuIFx0XHJcbiBcdFx0Ly8gcmVtb3ZlIG91dGRhdGVkIGRlcGVuZGVuY3kgZnJvbSBtb2R1bGUgY2hpbGRyZW5cclxuIFx0XHR2YXIgZGVwZW5kZW5jeTtcclxuIFx0XHR2YXIgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXM7XHJcbiBcdFx0Zm9yKG1vZHVsZUlkIGluIG91dGRhdGVkRGVwZW5kZW5jaWVzKSB7XHJcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob3V0ZGF0ZWREZXBlbmRlbmNpZXMsIG1vZHVsZUlkKSkge1xyXG4gXHRcdFx0XHRtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcclxuIFx0XHRcdFx0aWYobW9kdWxlKSB7XHJcbiBcdFx0XHRcdFx0bW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSBvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF07XHJcbiBcdFx0XHRcdFx0Zm9yKGogPSAwOyBqIDwgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMubGVuZ3RoOyBqKyspIHtcclxuIFx0XHRcdFx0XHRcdGRlcGVuZGVuY3kgPSBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llc1tqXTtcclxuIFx0XHRcdFx0XHRcdGlkeCA9IG1vZHVsZS5jaGlsZHJlbi5pbmRleE9mKGRlcGVuZGVuY3kpO1xyXG4gXHRcdFx0XHRcdFx0aWYoaWR4ID49IDApIG1vZHVsZS5jaGlsZHJlbi5zcGxpY2UoaWR4LCAxKTtcclxuIFx0XHRcdFx0XHR9XHJcbiBcdFx0XHRcdH1cclxuIFx0XHRcdH1cclxuIFx0XHR9XHJcbiBcdFxyXG4gXHRcdC8vIE5vdCBpbiBcImFwcGx5XCIgcGhhc2VcclxuIFx0XHRob3RTZXRTdGF0dXMoXCJhcHBseVwiKTtcclxuIFx0XHJcbiBcdFx0aG90Q3VycmVudEhhc2ggPSBob3RVcGRhdGVOZXdIYXNoO1xyXG4gXHRcclxuIFx0XHQvLyBpbnNlcnQgbmV3IGNvZGVcclxuIFx0XHRmb3IobW9kdWxlSWQgaW4gYXBwbGllZFVwZGF0ZSkge1xyXG4gXHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGFwcGxpZWRVcGRhdGUsIG1vZHVsZUlkKSkge1xyXG4gXHRcdFx0XHRtb2R1bGVzW21vZHVsZUlkXSA9IGFwcGxpZWRVcGRhdGVbbW9kdWxlSWRdO1xyXG4gXHRcdFx0fVxyXG4gXHRcdH1cclxuIFx0XHJcbiBcdFx0Ly8gY2FsbCBhY2NlcHQgaGFuZGxlcnNcclxuIFx0XHR2YXIgZXJyb3IgPSBudWxsO1xyXG4gXHRcdGZvcihtb2R1bGVJZCBpbiBvdXRkYXRlZERlcGVuZGVuY2llcykge1xyXG4gXHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG91dGRhdGVkRGVwZW5kZW5jaWVzLCBtb2R1bGVJZCkpIHtcclxuIFx0XHRcdFx0bW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF07XHJcbiBcdFx0XHRcdGlmKG1vZHVsZSkge1xyXG4gXHRcdFx0XHRcdG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzID0gb3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdO1xyXG4gXHRcdFx0XHRcdHZhciBjYWxsYmFja3MgPSBbXTtcclxuIFx0XHRcdFx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcy5sZW5ndGg7IGkrKykge1xyXG4gXHRcdFx0XHRcdFx0ZGVwZW5kZW5jeSA9IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzW2ldO1xyXG4gXHRcdFx0XHRcdFx0Y2IgPSBtb2R1bGUuaG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1tkZXBlbmRlbmN5XTtcclxuIFx0XHRcdFx0XHRcdGlmKGNiKSB7XHJcbiBcdFx0XHRcdFx0XHRcdGlmKGNhbGxiYWNrcy5pbmRleE9mKGNiKSA+PSAwKSBjb250aW51ZTtcclxuIFx0XHRcdFx0XHRcdFx0Y2FsbGJhY2tzLnB1c2goY2IpO1xyXG4gXHRcdFx0XHRcdFx0fVxyXG4gXHRcdFx0XHRcdH1cclxuIFx0XHRcdFx0XHRmb3IoaSA9IDA7IGkgPCBjYWxsYmFja3MubGVuZ3RoOyBpKyspIHtcclxuIFx0XHRcdFx0XHRcdGNiID0gY2FsbGJhY2tzW2ldO1xyXG4gXHRcdFx0XHRcdFx0dHJ5IHtcclxuIFx0XHRcdFx0XHRcdFx0Y2IobW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMpO1xyXG4gXHRcdFx0XHRcdFx0fSBjYXRjaChlcnIpIHtcclxuIFx0XHRcdFx0XHRcdFx0aWYob3B0aW9ucy5vbkVycm9yZWQpIHtcclxuIFx0XHRcdFx0XHRcdFx0XHRvcHRpb25zLm9uRXJyb3JlZCh7XHJcbiBcdFx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcImFjY2VwdC1lcnJvcmVkXCIsXHJcbiBcdFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXHJcbiBcdFx0XHRcdFx0XHRcdFx0XHRkZXBlbmRlbmN5SWQ6IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzW2ldLFxyXG4gXHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVyclxyXG4gXHRcdFx0XHRcdFx0XHRcdH0pO1xyXG4gXHRcdFx0XHRcdFx0XHR9XHJcbiBcdFx0XHRcdFx0XHRcdGlmKCFvcHRpb25zLmlnbm9yZUVycm9yZWQpIHtcclxuIFx0XHRcdFx0XHRcdFx0XHRpZighZXJyb3IpXHJcbiBcdFx0XHRcdFx0XHRcdFx0XHRlcnJvciA9IGVycjtcclxuIFx0XHRcdFx0XHRcdFx0fVxyXG4gXHRcdFx0XHRcdFx0fVxyXG4gXHRcdFx0XHRcdH1cclxuIFx0XHRcdFx0fVxyXG4gXHRcdFx0fVxyXG4gXHRcdH1cclxuIFx0XHJcbiBcdFx0Ly8gTG9hZCBzZWxmIGFjY2VwdGVkIG1vZHVsZXNcclxuIFx0XHRmb3IoaSA9IDA7IGkgPCBvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcclxuIFx0XHRcdHZhciBpdGVtID0gb3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzW2ldO1xyXG4gXHRcdFx0bW9kdWxlSWQgPSBpdGVtLm1vZHVsZTtcclxuIFx0XHRcdGhvdEN1cnJlbnRQYXJlbnRzID0gW21vZHVsZUlkXTtcclxuIFx0XHRcdHRyeSB7XHJcbiBcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpO1xyXG4gXHRcdFx0fSBjYXRjaChlcnIpIHtcclxuIFx0XHRcdFx0aWYodHlwZW9mIGl0ZW0uZXJyb3JIYW5kbGVyID09PSBcImZ1bmN0aW9uXCIpIHtcclxuIFx0XHRcdFx0XHR0cnkge1xyXG4gXHRcdFx0XHRcdFx0aXRlbS5lcnJvckhhbmRsZXIoZXJyKTtcclxuIFx0XHRcdFx0XHR9IGNhdGNoKGVycjIpIHtcclxuIFx0XHRcdFx0XHRcdGlmKG9wdGlvbnMub25FcnJvcmVkKSB7XHJcbiBcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcclxuIFx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcInNlbGYtYWNjZXB0LWVycm9yLWhhbmRsZXItZXJyb3JlZFwiLFxyXG4gXHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcclxuIFx0XHRcdFx0XHRcdFx0XHRlcnJvcjogZXJyMixcclxuIFx0XHRcdFx0XHRcdFx0XHRvcmdpbmFsRXJyb3I6IGVyciwgLy8gVE9ETyByZW1vdmUgaW4gd2VicGFjayA0XHJcbiBcdFx0XHRcdFx0XHRcdFx0b3JpZ2luYWxFcnJvcjogZXJyXHJcbiBcdFx0XHRcdFx0XHRcdH0pO1xyXG4gXHRcdFx0XHRcdFx0fVxyXG4gXHRcdFx0XHRcdFx0aWYoIW9wdGlvbnMuaWdub3JlRXJyb3JlZCkge1xyXG4gXHRcdFx0XHRcdFx0XHRpZighZXJyb3IpXHJcbiBcdFx0XHRcdFx0XHRcdFx0ZXJyb3IgPSBlcnIyO1xyXG4gXHRcdFx0XHRcdFx0fVxyXG4gXHRcdFx0XHRcdFx0aWYoIWVycm9yKVxyXG4gXHRcdFx0XHRcdFx0XHRlcnJvciA9IGVycjtcclxuIFx0XHRcdFx0XHR9XHJcbiBcdFx0XHRcdH0gZWxzZSB7XHJcbiBcdFx0XHRcdFx0aWYob3B0aW9ucy5vbkVycm9yZWQpIHtcclxuIFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcclxuIFx0XHRcdFx0XHRcdFx0dHlwZTogXCJzZWxmLWFjY2VwdC1lcnJvcmVkXCIsXHJcbiBcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcclxuIFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVyclxyXG4gXHRcdFx0XHRcdFx0fSk7XHJcbiBcdFx0XHRcdFx0fVxyXG4gXHRcdFx0XHRcdGlmKCFvcHRpb25zLmlnbm9yZUVycm9yZWQpIHtcclxuIFx0XHRcdFx0XHRcdGlmKCFlcnJvcilcclxuIFx0XHRcdFx0XHRcdFx0ZXJyb3IgPSBlcnI7XHJcbiBcdFx0XHRcdFx0fVxyXG4gXHRcdFx0XHR9XHJcbiBcdFx0XHR9XHJcbiBcdFx0fVxyXG4gXHRcclxuIFx0XHQvLyBoYW5kbGUgZXJyb3JzIGluIGFjY2VwdCBoYW5kbGVycyBhbmQgc2VsZiBhY2NlcHRlZCBtb2R1bGUgbG9hZFxyXG4gXHRcdGlmKGVycm9yKSB7XHJcbiBcdFx0XHRob3RTZXRTdGF0dXMoXCJmYWlsXCIpO1xyXG4gXHRcdFx0cmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcclxuIFx0XHR9XHJcbiBcdFxyXG4gXHRcdGhvdFNldFN0YXR1cyhcImlkbGVcIik7XHJcbiBcdFx0cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUpIHtcclxuIFx0XHRcdHJlc29sdmUob3V0ZGF0ZWRNb2R1bGVzKTtcclxuIFx0XHR9KTtcclxuIFx0fVxyXG5cbiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9LFxuIFx0XHRcdGhvdDogaG90Q3JlYXRlTW9kdWxlKG1vZHVsZUlkKSxcbiBcdFx0XHRwYXJlbnRzOiAoaG90Q3VycmVudFBhcmVudHNUZW1wID0gaG90Q3VycmVudFBhcmVudHMsIGhvdEN1cnJlbnRQYXJlbnRzID0gW10sIGhvdEN1cnJlbnRQYXJlbnRzVGVtcCksXG4gXHRcdFx0Y2hpbGRyZW46IFtdXG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIGhvdENyZWF0ZVJlcXVpcmUobW9kdWxlSWQpKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gX193ZWJwYWNrX2hhc2hfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5oID0gZnVuY3Rpb24oKSB7IHJldHVybiBob3RDdXJyZW50SGFzaDsgfTtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gaG90Q3JlYXRlUmVxdWlyZSgzKShfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAzKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL2Jvb3RzdHJhcCA0YjhjNTM3YzMwZTE2MGIyMWRkMyIsIiFmdW5jdGlvbihyb290LGZhY3Rvcnkpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWZhY3RvcnkoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFwiYWxmcmlkXCIsW10sZmFjdG9yeSk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5hbGZyaWQ9ZmFjdG9yeSgpOnJvb3QuYWxmcmlkPWZhY3RvcnkoKX0odGhpcyxmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihtb2R1bGVzKXtmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKXtpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSlyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0czt2YXIgbW9kdWxlPWluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdPXtpOm1vZHVsZUlkLGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsbW9kdWxlLG1vZHVsZS5leHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pLG1vZHVsZS5sPSEwLG1vZHVsZS5leHBvcnRzfXZhciBpbnN0YWxsZWRNb2R1bGVzPXt9O3JldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fLm09bW9kdWxlcyxfX3dlYnBhY2tfcmVxdWlyZV9fLmM9aW5zdGFsbGVkTW9kdWxlcyxfX3dlYnBhY2tfcmVxdWlyZV9fLmQ9ZnVuY3Rpb24oZXhwb3J0cyxuYW1lLGdldHRlcil7X193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsbmFtZSl8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLG5hbWUse2NvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiEwLGdldDpnZXR0ZXJ9KX0sX193ZWJwYWNrX3JlcXVpcmVfXy5uPWZ1bmN0aW9uKG1vZHVsZSl7dmFyIGdldHRlcj1tb2R1bGUmJm1vZHVsZS5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIG1vZHVsZS5kZWZhdWx0fTpmdW5jdGlvbigpe3JldHVybiBtb2R1bGV9O3JldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLFwiYVwiLGdldHRlciksZ2V0dGVyfSxfX3dlYnBhY2tfcmVxdWlyZV9fLm89ZnVuY3Rpb24ob2JqZWN0LHByb3BlcnR5KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCxwcm9wZXJ0eSl9LF9fd2VicGFja19yZXF1aXJlX18ucD1cIlwiLF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zPTQxKX0oW2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX1mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsQ29uc3RydWN0b3Ipe2lmKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX2NyZWF0ZUNsYXNzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQscHJvcHMpe2Zvcih2YXIgaT0wO2k8cHJvcHMubGVuZ3RoO2krKyl7dmFyIGRlc2NyaXB0b3I9cHJvcHNbaV07ZGVzY3JpcHRvci5lbnVtZXJhYmxlPWRlc2NyaXB0b3IuZW51bWVyYWJsZXx8ITEsZGVzY3JpcHRvci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gZGVzY3JpcHRvciYmKGRlc2NyaXB0b3Iud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsZGVzY3JpcHRvci5rZXksZGVzY3JpcHRvcil9fXJldHVybiBmdW5jdGlvbihDb25zdHJ1Y3Rvcixwcm90b1Byb3BzLHN0YXRpY1Byb3BzKXtyZXR1cm4gcHJvdG9Qcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyksc3RhdGljUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3Isc3RhdGljUHJvcHMpLENvbnN0cnVjdG9yfX0oKSxfZ2xNYXRyaXg9X193ZWJwYWNrX3JlcXVpcmVfXygxKSxfZ2V0QW5kQXBwbHlFeHRlbnNpb249X193ZWJwYWNrX3JlcXVpcmVfXyg0NyksX2dldEFuZEFwcGx5RXh0ZW5zaW9uMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9nZXRBbmRBcHBseUV4dGVuc2lvbiksX2V4cG9zZUF0dHJpYnV0ZXM9X193ZWJwYWNrX3JlcXVpcmVfXyg0OCksX2V4cG9zZUF0dHJpYnV0ZXMyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4cG9zZUF0dHJpYnV0ZXMpLF9nZXRGbG9hdD1fX3dlYnBhY2tfcmVxdWlyZV9fKDQ5KSxfZ2V0RmxvYXQyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldEZsb2F0KSxfZ2V0SGFsZkZsb2F0PV9fd2VicGFja19yZXF1aXJlX18oNTApLF9nZXRIYWxmRmxvYXQyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldEhhbGZGbG9hdCksX2dldEF0dHJpYkxvYz1fX3dlYnBhY2tfcmVxdWlyZV9fKDI0KSxfRXh0ZW5zaW9uc0xpc3Q9KF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldEF0dHJpYkxvYyksX193ZWJwYWNrX3JlcXVpcmVfXyg1MSkpLF9FeHRlbnNpb25zTGlzdDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfRXh0ZW5zaW9uc0xpc3QpLGdsPXZvaWQgMCxHTFRvb2w9ZnVuY3Rpb24oKXtmdW5jdGlvbiBHTFRvb2woKXtfY2xhc3NDYWxsQ2hlY2sodGhpcyxHTFRvb2wpLHRoaXMuY2FudmFzLHRoaXMuX3ZpZXdwb3J0PVswLDAsMCwwXSx0aGlzLl9lbmFibGVkVmVydGV4QXR0cmlidXRlPVtdLHRoaXMuaWRlbnRpdHlNYXRyaXg9X2dsTWF0cml4Lm1hdDQuY3JlYXRlKCksdGhpcy5fbm9ybWFsTWF0cml4PV9nbE1hdHJpeC5tYXQzLmNyZWF0ZSgpLHRoaXMuX2ludmVyc2VNb2RlbFZpZXdNYXRyaXg9X2dsTWF0cml4Lm1hdDMuY3JlYXRlKCksdGhpcy5fbW9kZWxNYXRyaXg9X2dsTWF0cml4Lm1hdDQuY3JlYXRlKCksdGhpcy5fbWF0cml4PV9nbE1hdHJpeC5tYXQ0LmNyZWF0ZSgpLHRoaXMuX21hdHJpeFN0YWNrcz1bXSx0aGlzLl9sYXN0TWVzaD1udWxsLHRoaXMuX3VzZVdlYkdMMj0hMSx0aGlzLl9oYXNBcnJheUluc3RhbmNlLHRoaXMuX2V4dEFycmF5SW5zdGFuY2UsdGhpcy5faGFzQ2hlY2tlZEV4dD0hMSxfZ2xNYXRyaXgubWF0NC5pZGVudGl0eSh0aGlzLmlkZW50aXR5TWF0cml4LHRoaXMuaWRlbnRpdHlNYXRyaXgpLHRoaXMuaXNNb2JpbGU9ITEsL0FuZHJvaWR8d2ViT1N8aVBob25lfGlQYWR8aVBvZHxCbGFja0JlcnJ5fElFTW9iaWxlfE9wZXJhIE1pbmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpJiYodGhpcy5pc01vYmlsZT0hMCl9cmV0dXJuIF9jcmVhdGVDbGFzcyhHTFRvb2wsW3trZXk6XCJpbml0XCIsdmFsdWU6ZnVuY3Rpb24obUNhbnZhcyl7dmFyIG1QYXJhbWV0ZXJzPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fTtpZihudWxsPT09bUNhbnZhc3x8dm9pZCAwPT09bUNhbnZhcylyZXR1cm4gdm9pZCBjb25zb2xlLmVycm9yKFwiQ2FudmFzIG5vdCBleGlzdFwiKTt2b2lkIDAhPT10aGlzLmNhbnZhcyYmbnVsbCE9PXRoaXMuY2FudmFzJiZ0aGlzLmRlc3Ryb3koKSx0aGlzLmNhbnZhcz1tQ2FudmFzLHRoaXMuc2V0U2l6ZSh3aW5kb3cuaW5uZXJXaWR0aCx3aW5kb3cuaW5uZXJIZWlnaHQpLG1QYXJhbWV0ZXJzLnVzZVdlYmdsMj1tUGFyYW1ldGVycy51c2VXZWJnbDJ8fCExO3ZhciBjdHg9dm9pZCAwO21QYXJhbWV0ZXJzLnVzZVdlYmdsMj8oY3R4PXRoaXMuY2FudmFzLmdldENvbnRleHQoXCJleHBlcmltZW50YWwtd2ViZ2wyXCIsbVBhcmFtZXRlcnMpfHx0aGlzLmNhbnZhcy5nZXRDb250ZXh0KFwid2ViZ2wyXCIsbVBhcmFtZXRlcnMpLGN0eD90aGlzLl91c2VXZWJHTDI9ITA6KGN0eD10aGlzLmNhbnZhcy5nZXRDb250ZXh0KFwid2ViZ2xcIixtUGFyYW1ldGVycyl8fHRoaXMuY2FudmFzLmdldENvbnRleHQoXCJleHBlcmltZW50YWwtd2ViZ2xcIixtUGFyYW1ldGVycyksdGhpcy5fdXNlV2ViR0wyPSExKSk6KGN0eD10aGlzLmNhbnZhcy5nZXRDb250ZXh0KFwid2ViZ2xcIixtUGFyYW1ldGVycyl8fHRoaXMuY2FudmFzLmdldENvbnRleHQoXCJleHBlcmltZW50YWwtd2ViZ2xcIixtUGFyYW1ldGVycyksdGhpcy5fdXNlV2ViR0wyPSExKSxjb25zb2xlLmxvZyhcIlVzaW5nIFdlYkdMIDIgP1wiLHRoaXMud2ViZ2wyKSx0aGlzLmluaXRXaXRoR0woY3R4KX19LHtrZXk6XCJpbml0V2l0aEdMXCIsdmFsdWU6ZnVuY3Rpb24oY3R4KXt0aGlzLmNhbnZhc3x8KHRoaXMuY2FudmFzPWN0eC5jYW52YXMpLGdsPXRoaXMuZ2w9Y3R4LHRoaXMuZXh0ZW5zaW9ucz17fTtmb3IodmFyIGk9MDtpPF9FeHRlbnNpb25zTGlzdDIuZGVmYXVsdC5sZW5ndGg7aSsrKXRoaXMuZXh0ZW5zaW9uc1tfRXh0ZW5zaW9uc0xpc3QyLmRlZmF1bHRbaV1dPWdsLmdldEV4dGVuc2lvbihfRXh0ZW5zaW9uc0xpc3QyLmRlZmF1bHRbaV0pOygwLF9leHBvc2VBdHRyaWJ1dGVzMi5kZWZhdWx0KSgpLCgwLF9nZXRBbmRBcHBseUV4dGVuc2lvbjIuZGVmYXVsdCkoZ2wsXCJPRVNfdmVydGV4X2FycmF5X29iamVjdFwiKSwoMCxfZ2V0QW5kQXBwbHlFeHRlbnNpb24yLmRlZmF1bHQpKGdsLFwiQU5HTEVfaW5zdGFuY2VkX2FycmF5c1wiKSwoMCxfZ2V0QW5kQXBwbHlFeHRlbnNpb24yLmRlZmF1bHQpKGdsLFwiV0VCR0xfZHJhd19idWZmZXJzXCIpLHRoaXMuZW5hYmxlKHRoaXMuREVQVEhfVEVTVCksdGhpcy5lbmFibGUodGhpcy5DVUxMX0ZBQ0UpLHRoaXMuZW5hYmxlKHRoaXMuQkxFTkQpLHRoaXMuZW5hYmxlQWxwaGFCbGVuZGluZygpfX0se2tleTpcInNldFZpZXdwb3J0XCIsdmFsdWU6ZnVuY3Rpb24oeCx5LHcsaCl7dmFyIGhhc0NoYW5nZWQ9ITE7eCE9PXRoaXMuX3ZpZXdwb3J0WzBdJiYoaGFzQ2hhbmdlZD0hMCkseSE9PXRoaXMuX3ZpZXdwb3J0WzFdJiYoaGFzQ2hhbmdlZD0hMCksdyE9PXRoaXMuX3ZpZXdwb3J0WzJdJiYoaGFzQ2hhbmdlZD0hMCksaCE9PXRoaXMuX3ZpZXdwb3J0WzNdJiYoaGFzQ2hhbmdlZD0hMCksaGFzQ2hhbmdlZCYmKGdsLnZpZXdwb3J0KHgseSx3LGgpLHRoaXMuX3ZpZXdwb3J0PVt4LHksdyxoXSl9fSx7a2V5Olwic2Npc3NvclwiLHZhbHVlOmZ1bmN0aW9uKHgseSx3LGgpe2dsLnNjaXNzb3IoeCx5LHcsaCl9fSx7a2V5OlwiY2xlYXJcIix2YWx1ZTpmdW5jdGlvbihyLGcsYixhKXtnbC5jbGVhckNvbG9yKHIsZyxiLGEpLGdsLmNsZWFyKGdsLkNPTE9SX0JVRkZFUl9CSVR8Z2wuREVQVEhfQlVGRkVSX0JJVCl9fSx7a2V5OlwiY3VsbEZhY2VcIix2YWx1ZTpmdW5jdGlvbihtVmFsdWUpe2dsLmN1bGxGYWNlKG1WYWx1ZSl9fSx7a2V5Olwic2V0TWF0cmljZXNcIix2YWx1ZTpmdW5jdGlvbihtQ2FtZXJhKXt0aGlzLmNhbWVyYT1tQ2FtZXJhLHRoaXMucm90YXRlKHRoaXMuaWRlbnRpdHlNYXRyaXgpfX0se2tleTpcInVzZVNoYWRlclwiLHZhbHVlOmZ1bmN0aW9uKG1TaGFkZXIpe3RoaXMuc2hhZGVyPW1TaGFkZXIsdGhpcy5zaGFkZXJQcm9ncmFtPXRoaXMuc2hhZGVyLnNoYWRlclByb2dyYW19fSx7a2V5Olwicm90YXRlXCIsdmFsdWU6ZnVuY3Rpb24obVJvdGF0aW9uKXtfZ2xNYXRyaXgubWF0NC5jb3B5KHRoaXMuX21vZGVsTWF0cml4LG1Sb3RhdGlvbiksX2dsTWF0cml4Lm1hdDQubXVsdGlwbHkodGhpcy5fbWF0cml4LHRoaXMuY2FtZXJhLm1hdHJpeCx0aGlzLl9tb2RlbE1hdHJpeCksX2dsTWF0cml4Lm1hdDMuZnJvbU1hdDQodGhpcy5fbm9ybWFsTWF0cml4LHRoaXMuX21hdHJpeCksX2dsTWF0cml4Lm1hdDMuaW52ZXJ0KHRoaXMuX25vcm1hbE1hdHJpeCx0aGlzLl9ub3JtYWxNYXRyaXgpLF9nbE1hdHJpeC5tYXQzLnRyYW5zcG9zZSh0aGlzLl9ub3JtYWxNYXRyaXgsdGhpcy5fbm9ybWFsTWF0cml4KSxfZ2xNYXRyaXgubWF0My5mcm9tTWF0NCh0aGlzLl9pbnZlcnNlTW9kZWxWaWV3TWF0cml4LHRoaXMuX21hdHJpeCksX2dsTWF0cml4Lm1hdDMuaW52ZXJ0KHRoaXMuX2ludmVyc2VNb2RlbFZpZXdNYXRyaXgsdGhpcy5faW52ZXJzZU1vZGVsVmlld01hdHJpeCl9fSx7a2V5OlwiZHJhd1wiLHZhbHVlOmZ1bmN0aW9uKG1NZXNoLG1EcmF3aW5nVHlwZSl7aWYobU1lc2gubGVuZ3RoKWZvcih2YXIgaT0wO2k8bU1lc2gubGVuZ3RoO2krKyl0aGlzLmRyYXcobU1lc2hbaV0pO2Vsc2V7bU1lc2guYmluZCh0aGlzLnNoYWRlclByb2dyYW0pLHZvaWQgMCE9PXRoaXMuY2FtZXJhJiYodGhpcy5zaGFkZXIudW5pZm9ybShcInVQcm9qZWN0aW9uTWF0cml4XCIsXCJtYXQ0XCIsdGhpcy5jYW1lcmEucHJvamVjdGlvbiksdGhpcy5zaGFkZXIudW5pZm9ybShcInVWaWV3TWF0cml4XCIsXCJtYXQ0XCIsdGhpcy5jYW1lcmEubWF0cml4KSksdGhpcy5zaGFkZXIudW5pZm9ybShcInVNb2RlbE1hdHJpeFwiLFwibWF0NFwiLHRoaXMuX21vZGVsTWF0cml4KSx0aGlzLnNoYWRlci51bmlmb3JtKFwidU5vcm1hbE1hdHJpeFwiLFwibWF0M1wiLHRoaXMuX25vcm1hbE1hdHJpeCksdGhpcy5zaGFkZXIudW5pZm9ybShcInVNb2RlbFZpZXdNYXRyaXhJbnZlcnNlXCIsXCJtYXQzXCIsdGhpcy5faW52ZXJzZU1vZGVsVmlld01hdHJpeCk7dmFyIGRyYXdUeXBlPW1NZXNoLmRyYXdUeXBlO3ZvaWQgMCE9PW1EcmF3aW5nVHlwZSYmKGRyYXdUeXBlPW1EcmF3aW5nVHlwZSksbU1lc2guaXNJbnN0YW5jZWQ/Z2wuZHJhd0VsZW1lbnRzSW5zdGFuY2VkKG1NZXNoLmRyYXdUeXBlLG1NZXNoLmlCdWZmZXIubnVtSXRlbXMsZ2wuVU5TSUdORURfU0hPUlQsMCxtTWVzaC5udW1JbnN0YW5jZSk6ZHJhd1R5cGU9PT1nbC5QT0lOVFM/Z2wuZHJhd0FycmF5cyhkcmF3VHlwZSwwLG1NZXNoLnZlcnRleFNpemUpOmdsLmRyYXdFbGVtZW50cyhkcmF3VHlwZSxtTWVzaC5pQnVmZmVyLm51bUl0ZW1zLGdsLlVOU0lHTkVEX1NIT1JULDApLG1NZXNoLnVuYmluZCgpfX19LHtrZXk6XCJkcmF3VHJhbnNmb3JtRmVlZGJhY2tcIix2YWx1ZTpmdW5jdGlvbihtVHJhbnNmb3JtT2JqZWN0KXt2YXIgbWVzaFNvdXJjZT1tVHJhbnNmb3JtT2JqZWN0Lm1lc2hTb3VyY2UsbWVzaERlc3RpbmF0aW9uPW1UcmFuc2Zvcm1PYmplY3QubWVzaERlc3RpbmF0aW9uLG51bVBvaW50cz1tVHJhbnNmb3JtT2JqZWN0Lm51bVBvaW50cyx0cmFuc2Zvcm1GZWVkYmFjaz1tVHJhbnNmb3JtT2JqZWN0LnRyYW5zZm9ybUZlZWRiYWNrO21lc2hTb3VyY2UuYmluZCh0aGlzLnNoYWRlclByb2dyYW0pLG1lc2hEZXN0aW5hdGlvbi5nZW5lcmF0ZUJ1ZmZlcnModGhpcy5zaGFkZXJQcm9ncmFtKSxnbC5iaW5kVHJhbnNmb3JtRmVlZGJhY2soZ2wuVFJBTlNGT1JNX0ZFRURCQUNLLHRyYW5zZm9ybUZlZWRiYWNrKSxtZXNoRGVzdGluYXRpb24uYXR0cmlidXRlcy5mb3JFYWNoKGZ1bmN0aW9uKGF0dHIsaSl7Z2wuYmluZEJ1ZmZlckJhc2UoZ2wuVFJBTlNGT1JNX0ZFRURCQUNLX0JVRkZFUixpLGF0dHIuYnVmZmVyKX0pLGdsLmVuYWJsZShnbC5SQVNURVJJWkVSX0RJU0NBUkQpLGdsLmJlZ2luVHJhbnNmb3JtRmVlZGJhY2soZ2wuUE9JTlRTKSxnbC5kcmF3QXJyYXlzKGdsLlBPSU5UUywwLG51bVBvaW50cyksZ2wuZW5kVHJhbnNmb3JtRmVlZGJhY2soKSxnbC5kaXNhYmxlKGdsLlJBU1RFUklaRVJfRElTQ0FSRCksZ2wudXNlUHJvZ3JhbShudWxsKSxnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUixudWxsKSxtZXNoRGVzdGluYXRpb24uYXR0cmlidXRlcy5mb3JFYWNoKGZ1bmN0aW9uKGF0dHIsaSl7Z2wuYmluZEJ1ZmZlckJhc2UoZ2wuVFJBTlNGT1JNX0ZFRURCQUNLX0JVRkZFUixpLG51bGwpfSksZ2wuYmluZFRyYW5zZm9ybUZlZWRiYWNrKGdsLlRSQU5TRk9STV9GRUVEQkFDSyxudWxsKSxtZXNoU291cmNlLnVuYmluZCgpfX0se2tleTpcInNldFNpemVcIix2YWx1ZTpmdW5jdGlvbihtV2lkdGgsbUhlaWdodCl7dGhpcy5fd2lkdGg9bVdpZHRoLHRoaXMuX2hlaWdodD1tSGVpZ2h0LHRoaXMuY2FudmFzLndpZHRoPXRoaXMuX3dpZHRoLHRoaXMuY2FudmFzLmhlaWdodD10aGlzLl9oZWlnaHQsdGhpcy5fYXNwZWN0UmF0aW89dGhpcy5fd2lkdGgvdGhpcy5faGVpZ2h0LGdsJiZ0aGlzLnZpZXdwb3J0KDAsMCx0aGlzLl93aWR0aCx0aGlzLl9oZWlnaHQpfX0se2tleTpcInNob3dFeHRlbnNpb25zXCIsdmFsdWU6ZnVuY3Rpb24oKXtjb25zb2xlLmxvZyhcIkV4dGVuc2lvbnMgOiBcIix0aGlzLmV4dGVuc2lvbnMpO2Zvcih2YXIgZXh0IGluIHRoaXMuZXh0ZW5zaW9ucyl0aGlzLmV4dGVuc2lvbnNbZXh0XSYmY29uc29sZS5sb2coZXh0LFwiOlwiLHRoaXMuZXh0ZW5zaW9uc1tleHRdKX19LHtrZXk6XCJjaGVja0V4dGVuc2lvblwiLHZhbHVlOmZ1bmN0aW9uKG1FeHRlbnNpb24pe3JldHVybiEhdGhpcy5leHRlbnNpb25zW21FeHRlbnNpb25dfX0se2tleTpcImdldEV4dGVuc2lvblwiLHZhbHVlOmZ1bmN0aW9uKG1FeHRlbnNpb24pe3JldHVybiB0aGlzLmV4dGVuc2lvbnNbbUV4dGVuc2lvbl19fSx7a2V5OlwiZW5hYmxlQWxwaGFCbGVuZGluZ1wiLHZhbHVlOmZ1bmN0aW9uKCl7Z2wuYmxlbmRGdW5jKGdsLlNSQ19BTFBIQSxnbC5PTkVfTUlOVVNfU1JDX0FMUEhBKX19LHtrZXk6XCJlbmFibGVBZGRpdGl2ZUJsZW5kaW5nXCIsdmFsdWU6ZnVuY3Rpb24oKXtnbC5ibGVuZEZ1bmMoZ2wuT05FLGdsLk9ORSl9fSx7a2V5OlwicHVzaE1hdHJpeFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIG10eD1fZ2xNYXRyaXgubWF0NC5jbG9uZSh0aGlzLl9tb2RlbE1hdHJpeCk7dGhpcy5fbWF0cml4U3RhY2tzLnB1c2gobXR4KX19LHtrZXk6XCJwb3BNYXRyaXhcIix2YWx1ZTpmdW5jdGlvbigpe2lmKDA9PXRoaXMuX21hdHJpeFN0YWNrcy5sZW5ndGgpcmV0dXJuIG51bGw7dmFyIG10eD10aGlzLl9tYXRyaXhTdGFja3MucG9wKCk7dGhpcy5yb3RhdGUobXR4KX19LHtrZXk6XCJlbmFibGVcIix2YWx1ZTpmdW5jdGlvbihtUGFyYW1ldGVyKXtnbC5lbmFibGUobVBhcmFtZXRlcil9fSx7a2V5OlwiZGlzYWJsZVwiLHZhbHVlOmZ1bmN0aW9uKG1QYXJhbWV0ZXIpe2dsLmRpc2FibGUobVBhcmFtZXRlcil9fSx7a2V5Olwidmlld3BvcnRcIix2YWx1ZTpmdW5jdGlvbih4LHksdyxoKXt0aGlzLnNldFZpZXdwb3J0KHgseSx3LGgpfX0se2tleTpcImRlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe2lmKHRoaXMuY2FudmFzLnBhcmVudE5vZGUpdHJ5e3RoaXMuY2FudmFzLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5jYW52YXMpfWNhdGNoKGUpe2NvbnNvbGUubG9nKFwiRXJyb3IgOiBcIixlKX10aGlzLmNhbnZhcz1udWxsfX0se2tleTpcIkZMT0FUXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuKDAsX2dldEZsb2F0Mi5kZWZhdWx0KSgpfX0se2tleTpcIkhBTEZfRkxPQVRcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4oMCxfZ2V0SGFsZkZsb2F0Mi5kZWZhdWx0KSgpfX0se2tleTpcIndpZHRoXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dpZHRofX0se2tleTpcImhlaWdodFwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9oZWlnaHR9fSx7a2V5OlwiYXNwZWN0UmF0aW9cIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYXNwZWN0UmF0aW99fSx7a2V5Olwid2ViZ2wyXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3VzZVdlYkdMMn19XSksR0xUb29sfSgpLEdMPW5ldyBHTFRvb2w7ZXhwb3J0cy5kZWZhdWx0PUdMfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmope2lmKG9iaiYmb2JqLl9fZXNNb2R1bGUpcmV0dXJuIG9iajt2YXIgbmV3T2JqPXt9O2lmKG51bGwhPW9iailmb3IodmFyIGtleSBpbiBvYmopT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaixrZXkpJiYobmV3T2JqW2tleV09b2JqW2tleV0pO3JldHVybiBuZXdPYmouZGVmYXVsdD1vYmosbmV3T2JqfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGV4cG9ydHMudmVjND1leHBvcnRzLnZlYzM9ZXhwb3J0cy52ZWMyPWV4cG9ydHMucXVhdD1leHBvcnRzLm1hdDQ9ZXhwb3J0cy5tYXQzPWV4cG9ydHMubWF0MmQ9ZXhwb3J0cy5tYXQyPWV4cG9ydHMuZ2xNYXRyaXg9dm9pZCAwO3ZhciBfY29tbW9uPV9fd2VicGFja19yZXF1aXJlX18oMyksZ2xNYXRyaXg9X2ludGVyb3BSZXF1aXJlV2lsZGNhcmQoX2NvbW1vbiksX21hdD1fX3dlYnBhY2tfcmVxdWlyZV9fKDQyKSxtYXQyPV9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKF9tYXQpLF9tYXQyZD1fX3dlYnBhY2tfcmVxdWlyZV9fKDQzKSxtYXQyZD1faW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfbWF0MmQpLF9tYXQyPV9fd2VicGFja19yZXF1aXJlX18oMjApLG1hdDM9X2ludGVyb3BSZXF1aXJlV2lsZGNhcmQoX21hdDIpLF9tYXQzPV9fd2VicGFja19yZXF1aXJlX18oNDQpLG1hdDQ9X2ludGVyb3BSZXF1aXJlV2lsZGNhcmQoX21hdDMpLF9xdWF0PV9fd2VicGFja19yZXF1aXJlX18oNDUpLHF1YXQ9X2ludGVyb3BSZXF1aXJlV2lsZGNhcmQoX3F1YXQpLF92ZWM9X193ZWJwYWNrX3JlcXVpcmVfXyg0NiksdmVjMj1faW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfdmVjKSxfdmVjMj1fX3dlYnBhY2tfcmVxdWlyZV9fKDIxKSx2ZWMzPV9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKF92ZWMyKSxfdmVjMz1fX3dlYnBhY2tfcmVxdWlyZV9fKDIyKSx2ZWM0PV9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKF92ZWMzKTtleHBvcnRzLmdsTWF0cml4PWdsTWF0cml4LGV4cG9ydHMubWF0Mj1tYXQyLGV4cG9ydHMubWF0MmQ9bWF0MmQsZXhwb3J0cy5tYXQzPW1hdDMsZXhwb3J0cy5tYXQ0PW1hdDQsZXhwb3J0cy5xdWF0PXF1YXQsZXhwb3J0cy52ZWMyPXZlYzIsZXhwb3J0cy52ZWMzPXZlYzMsZXhwb3J0cy52ZWM0PXZlYzR9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfdHlwZW9mPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihvYmope3JldHVybiB0eXBlb2Ygb2JqfTpmdW5jdGlvbihvYmope3JldHVybiBvYmomJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmb2JqLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZvYmohPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIG9ian0sX2NyZWF0ZUNsYXNzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQscHJvcHMpe2Zvcih2YXIgaT0wO2k8cHJvcHMubGVuZ3RoO2krKyl7dmFyIGRlc2NyaXB0b3I9cHJvcHNbaV07ZGVzY3JpcHRvci5lbnVtZXJhYmxlPWRlc2NyaXB0b3IuZW51bWVyYWJsZXx8ITEsZGVzY3JpcHRvci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gZGVzY3JpcHRvciYmKGRlc2NyaXB0b3Iud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsZGVzY3JpcHRvci5rZXksZGVzY3JpcHRvcil9fXJldHVybiBmdW5jdGlvbihDb25zdHJ1Y3Rvcixwcm90b1Byb3BzLHN0YXRpY1Byb3BzKXtyZXR1cm4gcHJvdG9Qcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyksc3RhdGljUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3Isc3RhdGljUHJvcHMpLENvbnN0cnVjdG9yfX0oKSxfR0xUb29sPV9fd2VicGFja19yZXF1aXJlX18oMCksX0dMVG9vbDI9ZnVuY3Rpb24ob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX0oX0dMVG9vbCksaXNTYW1lPShfX3dlYnBhY2tfcmVxdWlyZV9fKDUyKSxmdW5jdGlvbihhcnJheTEsYXJyYXkyKXtpZihhcnJheTEubGVuZ3RoIT09YXJyYXkyLmxlbmd0aClyZXR1cm4hMTtmb3IodmFyIGk9MDtpPGFycmF5MS5sZW5ndGg7aSsrKWlmKGFycmF5MVtpXSE9PWFycmF5MltpXSlyZXR1cm4hMTtyZXR1cm4hMH0pLGFkZExpbmVOdW1iZXJzPWZ1bmN0aW9uKHN0cmluZyl7Zm9yKHZhciBsaW5lcz1zdHJpbmcuc3BsaXQoXCJcXG5cIiksaT0wO2k8bGluZXMubGVuZ3RoO2krKylsaW5lc1tpXT1pKzErXCI6IFwiK2xpbmVzW2ldO3JldHVybiBsaW5lcy5qb2luKFwiXFxuXCIpfSxjbG9uZUFycmF5PWZ1bmN0aW9uKG1BcnJheSl7cmV0dXJuIG1BcnJheS5zbGljZT9tQXJyYXkuc2xpY2UoMCk6bmV3IEZsb2F0MzJBcnJheShtQXJyYXkpfSxnbD12b2lkIDAsZGVmYXVsdFZlcnRleFNoYWRlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDExKSxkZWZhdWx0RnJhZ21lbnRTaGFkZXI9X193ZWJwYWNrX3JlcXVpcmVfXyg1MyksdW5pZm9ybU1hcHBpbmc9e2Zsb2F0OlwidW5pZm9ybTFmXCIsdmVjMjpcInVuaWZvcm0yZnZcIix2ZWMzOlwidW5pZm9ybTNmdlwiLHZlYzQ6XCJ1bmlmb3JtNGZ2XCIsaW50OlwidW5pZm9ybTFpXCIsbWF0MzpcInVuaWZvcm1NYXRyaXgzZnZcIixtYXQ0OlwidW5pZm9ybU1hdHJpeDRmdlwifSxHTFNoYWRlcj1mdW5jdGlvbigpe2Z1bmN0aW9uIEdMU2hhZGVyKCl7dmFyIHN0clZlcnRleFNoYWRlcj1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06ZGVmYXVsdFZlcnRleFNoYWRlcixzdHJGcmFnbWVudFNoYWRlcj1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06ZGVmYXVsdEZyYWdtZW50U2hhZGVyLG1WYXJ5aW5ncz1hcmd1bWVudHNbMl07X2NsYXNzQ2FsbENoZWNrKHRoaXMsR0xTaGFkZXIpLGdsPV9HTFRvb2wyLmRlZmF1bHQuZ2wsdGhpcy5wYXJhbWV0ZXJzPVtdLHRoaXMudW5pZm9ybVRleHR1cmVzPVtdLHRoaXMuX3ZhcnlpbmdzPW1WYXJ5aW5ncyxzdHJWZXJ0ZXhTaGFkZXJ8fChzdHJWZXJ0ZXhTaGFkZXI9ZGVmYXVsdFZlcnRleFNoYWRlciksc3RyRnJhZ21lbnRTaGFkZXJ8fChzdHJGcmFnbWVudFNoYWRlcj1kZWZhdWx0VmVydGV4U2hhZGVyKTt2YXIgdnNTaGFkZXI9dGhpcy5fY3JlYXRlU2hhZGVyUHJvZ3JhbShzdHJWZXJ0ZXhTaGFkZXIsITApLGZzU2hhZGVyPXRoaXMuX2NyZWF0ZVNoYWRlclByb2dyYW0oc3RyRnJhZ21lbnRTaGFkZXIsITEpO3RoaXMuX2F0dGFjaFNoYWRlclByb2dyYW0odnNTaGFkZXIsZnNTaGFkZXIpfXJldHVybiBfY3JlYXRlQ2xhc3MoR0xTaGFkZXIsW3trZXk6XCJiaW5kXCIsdmFsdWU6ZnVuY3Rpb24oKXtfR0xUb29sMi5kZWZhdWx0LnNoYWRlciE9PXRoaXMmJihnbC51c2VQcm9ncmFtKHRoaXMuc2hhZGVyUHJvZ3JhbSksX0dMVG9vbDIuZGVmYXVsdC51c2VTaGFkZXIodGhpcyksdGhpcy51bmlmb3JtVGV4dHVyZXM9W10pfX0se2tleTpcInVuaWZvcm1cIix2YWx1ZTpmdW5jdGlvbihtTmFtZSxtVHlwZSxtVmFsdWUpe2lmKFwib2JqZWN0XCI9PT0odm9pZCAwPT09bU5hbWU/XCJ1bmRlZmluZWRcIjpfdHlwZW9mKG1OYW1lKSkpcmV0dXJuIHZvaWQgdGhpcy51bmlmb3JtT2JqZWN0KG1OYW1lKTtmb3IodmFyIHVuaWZvcm1UeXBlPXVuaWZvcm1NYXBwaW5nW21UeXBlXXx8bVR5cGUsaGFzVW5pZm9ybT0hMSxvVW5pZm9ybT12b2lkIDAscGFyYW1ldGVySW5kZXg9LTEsaT0wO2k8dGhpcy5wYXJhbWV0ZXJzLmxlbmd0aDtpKyspaWYob1VuaWZvcm09dGhpcy5wYXJhbWV0ZXJzW2ldLG9Vbmlmb3JtLm5hbWU9PT1tTmFtZSl7aGFzVW5pZm9ybT0hMCxwYXJhbWV0ZXJJbmRleD1pO2JyZWFrfXZhciBpc051bWJlcj0hMTtpZihoYXNVbmlmb3JtPyh0aGlzLnNoYWRlclByb2dyYW1bbU5hbWVdPW9Vbmlmb3JtLnVuaWZvcm1Mb2MsaXNOdW1iZXI9b1VuaWZvcm0uaXNOdW1iZXIpOihpc051bWJlcj1cInVuaWZvcm0xaVwiPT09dW5pZm9ybVR5cGV8fFwidW5pZm9ybTFmXCI9PT11bmlmb3JtVHlwZSx0aGlzLnNoYWRlclByb2dyYW1bbU5hbWVdPWdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLnNoYWRlclByb2dyYW0sbU5hbWUpLGlzTnVtYmVyP3RoaXMucGFyYW1ldGVycy5wdXNoKHtuYW1lOm1OYW1lLHR5cGU6dW5pZm9ybVR5cGUsdmFsdWU6bVZhbHVlLHVuaWZvcm1Mb2M6dGhpcy5zaGFkZXJQcm9ncmFtW21OYW1lXSxpc051bWJlcjppc051bWJlcn0pOnRoaXMucGFyYW1ldGVycy5wdXNoKHtuYW1lOm1OYW1lLHR5cGU6dW5pZm9ybVR5cGUsdmFsdWU6Y2xvbmVBcnJheShtVmFsdWUpLHVuaWZvcm1Mb2M6dGhpcy5zaGFkZXJQcm9ncmFtW21OYW1lXSxpc051bWJlcjppc051bWJlcn0pLHBhcmFtZXRlckluZGV4PXRoaXMucGFyYW1ldGVycy5sZW5ndGgtMSksdGhpcy5wYXJhbWV0ZXJzW3BhcmFtZXRlckluZGV4XS51bmlmb3JtTG9jKWlmKC0xPT09dW5pZm9ybVR5cGUuaW5kZXhPZihcIk1hdHJpeFwiKSlpZihpc051bWJlcil7dmFyIG5lZWRVcGRhdGU9dGhpcy5wYXJhbWV0ZXJzW3BhcmFtZXRlckluZGV4XS52YWx1ZSE9PW1WYWx1ZXx8IWhhc1VuaWZvcm07bmVlZFVwZGF0ZSYmKGdsW3VuaWZvcm1UeXBlXSh0aGlzLnNoYWRlclByb2dyYW1bbU5hbWVdLG1WYWx1ZSksdGhpcy5wYXJhbWV0ZXJzW3BhcmFtZXRlckluZGV4XS52YWx1ZT1tVmFsdWUpfWVsc2UgaXNTYW1lKHRoaXMucGFyYW1ldGVyc1twYXJhbWV0ZXJJbmRleF0udmFsdWUsbVZhbHVlKSYmaGFzVW5pZm9ybXx8KGdsW3VuaWZvcm1UeXBlXSh0aGlzLnNoYWRlclByb2dyYW1bbU5hbWVdLG1WYWx1ZSksdGhpcy5wYXJhbWV0ZXJzW3BhcmFtZXRlckluZGV4XS52YWx1ZT1jbG9uZUFycmF5KG1WYWx1ZSkpO2Vsc2UgaXNTYW1lKHRoaXMucGFyYW1ldGVyc1twYXJhbWV0ZXJJbmRleF0udmFsdWUsbVZhbHVlKSYmaGFzVW5pZm9ybXx8KGdsW3VuaWZvcm1UeXBlXSh0aGlzLnNoYWRlclByb2dyYW1bbU5hbWVdLCExLG1WYWx1ZSksdGhpcy5wYXJhbWV0ZXJzW3BhcmFtZXRlckluZGV4XS52YWx1ZT1jbG9uZUFycmF5KG1WYWx1ZSkpfX0se2tleTpcInVuaWZvcm1PYmplY3RcIix2YWx1ZTpmdW5jdGlvbihtVW5pZm9ybU9iail7Zm9yKHZhciB1bmlmb3JtTmFtZSBpbiBtVW5pZm9ybU9iail7dmFyIHVuaWZvcm1WYWx1ZT1tVW5pZm9ybU9ialt1bmlmb3JtTmFtZV0sdW5pZm9ybVR5cGU9R0xTaGFkZXIuZ2V0VW5pZm9ybVR5cGUodW5pZm9ybVZhbHVlKTtpZih1bmlmb3JtVmFsdWUuY29uY2F0JiZ1bmlmb3JtVmFsdWVbMF0uY29uY2F0KXtmb3IodmFyIHRtcD1bXSxpPTA7aTx1bmlmb3JtVmFsdWUubGVuZ3RoO2krKyl0bXA9dG1wLmNvbmNhdCh1bmlmb3JtVmFsdWVbaV0pO3VuaWZvcm1WYWx1ZT10bXB9dGhpcy51bmlmb3JtKHVuaWZvcm1OYW1lLHVuaWZvcm1UeXBlLHVuaWZvcm1WYWx1ZSl9fX0se2tleTpcIl9jcmVhdGVTaGFkZXJQcm9ncmFtXCIsdmFsdWU6ZnVuY3Rpb24obVNoYWRlclN0cixpc1ZlcnRleFNoYWRlcil7dmFyIHNoYWRlclR5cGU9aXNWZXJ0ZXhTaGFkZXI/X0dMVG9vbDIuZGVmYXVsdC5WRVJURVhfU0hBREVSOl9HTFRvb2wyLmRlZmF1bHQuRlJBR01FTlRfU0hBREVSLHNoYWRlcj1nbC5jcmVhdGVTaGFkZXIoc2hhZGVyVHlwZSk7cmV0dXJuIGdsLnNoYWRlclNvdXJjZShzaGFkZXIsbVNoYWRlclN0ciksZ2wuY29tcGlsZVNoYWRlcihzaGFkZXIpLGdsLmdldFNoYWRlclBhcmFtZXRlcihzaGFkZXIsZ2wuQ09NUElMRV9TVEFUVVMpP3NoYWRlcjooY29uc29sZS53YXJuKFwiRXJyb3IgaW4gU2hhZGVyIDogXCIsZ2wuZ2V0U2hhZGVySW5mb0xvZyhzaGFkZXIpKSxjb25zb2xlLmxvZyhhZGRMaW5lTnVtYmVycyhtU2hhZGVyU3RyKSksbnVsbCl9fSx7a2V5OlwiX2F0dGFjaFNoYWRlclByb2dyYW1cIix2YWx1ZTpmdW5jdGlvbihtVmVydGV4U2hhZGVyLG1GcmFnbWVudFNoYWRlcil7dGhpcy5zaGFkZXJQcm9ncmFtPWdsLmNyZWF0ZVByb2dyYW0oKSxnbC5hdHRhY2hTaGFkZXIodGhpcy5zaGFkZXJQcm9ncmFtLG1WZXJ0ZXhTaGFkZXIpLGdsLmF0dGFjaFNoYWRlcih0aGlzLnNoYWRlclByb2dyYW0sbUZyYWdtZW50U2hhZGVyKSxnbC5kZWxldGVTaGFkZXIobVZlcnRleFNoYWRlciksZ2wuZGVsZXRlU2hhZGVyKG1GcmFnbWVudFNoYWRlciksdGhpcy5fdmFyeWluZ3MmJihjb25zb2xlLmxvZyhcIlRyYW5zZm9ybSBmZWVkYmFjayBzZXR1cCA6IFwiLHRoaXMuX3ZhcnlpbmdzKSxnbC50cmFuc2Zvcm1GZWVkYmFja1ZhcnlpbmdzKHRoaXMuc2hhZGVyUHJvZ3JhbSx0aGlzLl92YXJ5aW5ncyxnbC5TRVBBUkFURV9BVFRSSUJTKSksZ2wubGlua1Byb2dyYW0odGhpcy5zaGFkZXJQcm9ncmFtKX19XSksR0xTaGFkZXJ9KCk7R0xTaGFkZXIuZ2V0VW5pZm9ybVR5cGU9ZnVuY3Rpb24obVZhbHVlKXt2YXIgaXNBcnJheT0hIW1WYWx1ZS5jb25jYXQsZ2V0QXJyYXlVbmlmb3JtVHlwZT1mdW5jdGlvbihtVmFsdWUpe3JldHVybiA5PT09bVZhbHVlLmxlbmd0aD9cInVuaWZvcm1NYXRyaXgzZnZcIjoxNj09PW1WYWx1ZS5sZW5ndGg/XCJ1bmlmb3JtTWF0cml4NGZ2XCI6XCJ2ZWNcIittVmFsdWUubGVuZ3RofTtyZXR1cm4gaXNBcnJheT9nZXRBcnJheVVuaWZvcm1UeXBlKG1WYWx1ZVswXS5jb25jYXQ/bVZhbHVlWzBdOm1WYWx1ZSk6XCJmbG9hdFwifSxleHBvcnRzLmRlZmF1bHQ9R0xTaGFkZXJ9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHNldE1hdHJpeEFycmF5VHlwZSh0eXBlKXtleHBvcnRzLkFSUkFZX1RZUEU9QVJSQVlfVFlQRT10eXBlfWZ1bmN0aW9uIHRvUmFkaWFuKGEpe3JldHVybiBhKmRlZ3JlZX1mdW5jdGlvbiBlcXVhbHMoYSxiKXtyZXR1cm4gTWF0aC5hYnMoYS1iKTw9RVBTSUxPTipNYXRoLm1heCgxLE1hdGguYWJzKGEpLE1hdGguYWJzKGIpKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxleHBvcnRzLnNldE1hdHJpeEFycmF5VHlwZT1zZXRNYXRyaXhBcnJheVR5cGUsZXhwb3J0cy50b1JhZGlhbj10b1JhZGlhbixleHBvcnRzLmVxdWFscz1lcXVhbHM7dmFyIEVQU0lMT049ZXhwb3J0cy5FUFNJTE9OPTFlLTYsQVJSQVlfVFlQRT1leHBvcnRzLkFSUkFZX1RZUEU9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIEZsb2F0MzJBcnJheT9GbG9hdDMyQXJyYXk6QXJyYXksZGVncmVlPShleHBvcnRzLlJBTkRPTT1NYXRoLnJhbmRvbSxNYXRoLlBJLzE4MCl9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHwhMSxkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBkZXNjcmlwdG9yJiYoZGVzY3JpcHRvci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxkZXNjcmlwdG9yLmtleSxkZXNjcmlwdG9yKX19cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe3JldHVybiBwcm90b1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSxwcm90b1Byb3BzKSxzdGF0aWNQcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyksQ29uc3RydWN0b3J9fSgpLF9HTFRvb2w9X193ZWJwYWNrX3JlcXVpcmVfXygwKSxfR0xUb29sMj1mdW5jdGlvbihvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fShfR0xUb29sKSxCYXRjaD1mdW5jdGlvbigpe2Z1bmN0aW9uIEJhdGNoKG1NZXNoLG1TaGFkZXIpe19jbGFzc0NhbGxDaGVjayh0aGlzLEJhdGNoKSx0aGlzLl9tZXNoPW1NZXNoLHRoaXMuX3NoYWRlcj1tU2hhZGVyfXJldHVybiBfY3JlYXRlQ2xhc3MoQmF0Y2gsW3trZXk6XCJkcmF3XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9zaGFkZXIuYmluZCgpLF9HTFRvb2wyLmRlZmF1bHQuZHJhdyh0aGlzLm1lc2gpfX0se2tleTpcIm1lc2hcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWVzaH19LHtrZXk6XCJzaGFkZXJcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2hhZGVyfX1dKSxCYXRjaH0oKTtleHBvcnRzLmRlZmF1bHQ9QmF0Y2h9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX1mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsQ29uc3RydWN0b3Ipe2lmKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX2NyZWF0ZUNsYXNzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQscHJvcHMpe2Zvcih2YXIgaT0wO2k8cHJvcHMubGVuZ3RoO2krKyl7dmFyIGRlc2NyaXB0b3I9cHJvcHNbaV07ZGVzY3JpcHRvci5lbnVtZXJhYmxlPWRlc2NyaXB0b3IuZW51bWVyYWJsZXx8ITEsZGVzY3JpcHRvci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gZGVzY3JpcHRvciYmKGRlc2NyaXB0b3Iud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsZGVzY3JpcHRvci5rZXksZGVzY3JpcHRvcil9fXJldHVybiBmdW5jdGlvbihDb25zdHJ1Y3Rvcixwcm90b1Byb3BzLHN0YXRpY1Byb3BzKXtyZXR1cm4gcHJvdG9Qcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyksc3RhdGljUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3Isc3RhdGljUHJvcHMpLENvbnN0cnVjdG9yfX0oKSxfR0xUb29sPV9fd2VicGFja19yZXF1aXJlX18oMCksX0dMVG9vbDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfR0xUb29sKSxfZ2xNYXRyaXg9X193ZWJwYWNrX3JlcXVpcmVfXygxKSxfZ2V0QXR0cmliTG9jPV9fd2VicGFja19yZXF1aXJlX18oMjQpLF9nZXRBdHRyaWJMb2MyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldEF0dHJpYkxvYyksZ2w9dm9pZCAwLGdldEJ1ZmZlcj1mdW5jdGlvbihhdHRyKXt2YXIgYnVmZmVyPXZvaWQgMDtyZXR1cm4gdm9pZCAwIT09YXR0ci5idWZmZXI/YnVmZmVyPWF0dHIuYnVmZmVyOihidWZmZXI9Z2wuY3JlYXRlQnVmZmVyKCksYXR0ci5idWZmZXI9YnVmZmVyKSxidWZmZXJ9LGZvcm1CdWZmZXI9ZnVuY3Rpb24obURhdGEsbU51bSl7Zm9yKHZhciBhcnk9W10saT0wO2k8bURhdGEubGVuZ3RoO2krPW1OdW0pe2Zvcih2YXIgbz1bXSxqPTA7ajxtTnVtO2orKylvLnB1c2gobURhdGFbaStqXSk7YXJ5LnB1c2gobyl9cmV0dXJuIGFyeX0sTWVzaD1mdW5jdGlvbigpe2Z1bmN0aW9uIE1lc2goKXt2YXIgbURyYXdpbmdUeXBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTo0LG1Vc2VWYW89IShhcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXSl8fGFyZ3VtZW50c1sxXTtfY2xhc3NDYWxsQ2hlY2sodGhpcyxNZXNoKSxnbD1fR0xUb29sMi5kZWZhdWx0LmdsLHRoaXMuZHJhd1R5cGU9bURyYXdpbmdUeXBlLHRoaXMuX2F0dHJpYnV0ZXM9W10sdGhpcy5fbnVtSW5zdGFuY2U9LTEsdGhpcy5fZW5hYmxlZFZlcnRleEF0dHJpYnV0ZT1bXSx0aGlzLl9pbmRpY2VzPVtdLHRoaXMuX2ZhY2VzPVtdLHRoaXMuX2J1ZmZlckNoYW5nZWQ9W10sdGhpcy5faGFzSW5kZXhCdWZmZXJDaGFuZ2VkPSExLHRoaXMuX2hhc1ZBTz0hMSx0aGlzLl9pc0luc3RhbmNlZD0hMSx0aGlzLl9leHRWQU89ISFfR0xUb29sMi5kZWZhdWx0LmdsLmNyZWF0ZVZlcnRleEFycmF5LHRoaXMuX3VzZVZBTz0hIXRoaXMuX2V4dFZBTyYmbVVzZVZhb31yZXR1cm4gX2NyZWF0ZUNsYXNzKE1lc2gsW3trZXk6XCJidWZmZXJWZXJ0ZXhcIix2YWx1ZTpmdW5jdGlvbihtQXJyYXlWZXJ0aWNlcyl7dmFyIG1EcmF3VHlwZT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06MzUwNDQ7cmV0dXJuIHRoaXMuYnVmZmVyRGF0YShtQXJyYXlWZXJ0aWNlcyxcImFWZXJ0ZXhQb3NpdGlvblwiLDMsbURyYXdUeXBlKSx0aGlzLm5vcm1hbHMubGVuZ3RoPHRoaXMudmVydGljZXMubGVuZ3RoJiZ0aGlzLmJ1ZmZlck5vcm1hbChtQXJyYXlWZXJ0aWNlcyxtRHJhd1R5cGUpLHRoaXN9fSx7a2V5OlwiYnVmZmVyVGV4Q29vcmRcIix2YWx1ZTpmdW5jdGlvbihtQXJyYXlUZXhDb29yZHMpe3ZhciBtRHJhd1R5cGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOjM1MDQ0O3JldHVybiB0aGlzLmJ1ZmZlckRhdGEobUFycmF5VGV4Q29vcmRzLFwiYVRleHR1cmVDb29yZFwiLDIsbURyYXdUeXBlKSx0aGlzfX0se2tleTpcImJ1ZmZlck5vcm1hbFwiLHZhbHVlOmZ1bmN0aW9uKG1Ob3JtYWxzKXt2YXIgbURyYXdUeXBlPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTozNTA0NDtyZXR1cm4gdGhpcy5idWZmZXJEYXRhKG1Ob3JtYWxzLFwiYU5vcm1hbFwiLDMsbURyYXdUeXBlKSx0aGlzfX0se2tleTpcImJ1ZmZlckluZGV4XCIsdmFsdWU6ZnVuY3Rpb24obUFycmF5SW5kaWNlcyl7dmFyIGlzRHluYW1pYz1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXSYmYXJndW1lbnRzWzFdO3JldHVybiB0aGlzLl9kcmF3VHlwZT1pc0R5bmFtaWM/Z2wuRFlOQU1JQ19EUkFXOmdsLlNUQVRJQ19EUkFXLHRoaXMuX2luZGljZXM9bmV3IFVpbnQxNkFycmF5KG1BcnJheUluZGljZXMpLHRoaXMuX251bUl0ZW1zPXRoaXMuX2luZGljZXMubGVuZ3RoLHRoaXN9fSx7a2V5OlwiYnVmZmVyRmxhdHRlbkRhdGFcIix2YWx1ZTpmdW5jdGlvbihtRGF0YSxtTmFtZSxtSXRlbVNpemUpe3ZhciBkYXRhPShhcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXSYmYXJndW1lbnRzWzNdLGFyZ3VtZW50cy5sZW5ndGg+NCYmdm9pZCAwIT09YXJndW1lbnRzWzRdJiZhcmd1bWVudHNbNF0sZm9ybUJ1ZmZlcihtRGF0YSxtSXRlbVNpemUpKTtyZXR1cm4gdGhpcy5idWZmZXJEYXRhKGRhdGEsbU5hbWUsbUl0ZW1TaXplLDM1MDQ0LCExKSx0aGlzfX0se2tleTpcImJ1ZmZlckRhdGFcIix2YWx1ZTpmdW5jdGlvbihtRGF0YSxtTmFtZSxtSXRlbVNpemUpe3ZhciBtRHJhd1R5cGU9YXJndW1lbnRzLmxlbmd0aD4zJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOjM1MDQ0LGlzSW5zdGFuY2VkPWFyZ3VtZW50cy5sZW5ndGg+NCYmdm9pZCAwIT09YXJndW1lbnRzWzRdJiZhcmd1bWVudHNbNF0saT0wLGRyYXdUeXBlPW1EcmF3VHlwZSxidWZmZXJEYXRhPVtdO2ZvcihtSXRlbVNpemV8fChtSXRlbVNpemU9bURhdGFbMF0ubGVuZ3RoKSx0aGlzLl9pc0luc3RhbmNlZD1pc0luc3RhbmNlZHx8dGhpcy5faXNJbnN0YW5jZWQsaT0wO2k8bURhdGEubGVuZ3RoO2krKylmb3IodmFyIGo9MDtqPG1EYXRhW2ldLmxlbmd0aDtqKyspYnVmZmVyRGF0YS5wdXNoKG1EYXRhW2ldW2pdKTt2YXIgZGF0YUFycmF5PW5ldyBGbG9hdDMyQXJyYXkoYnVmZmVyRGF0YSksYXR0cmlidXRlPXRoaXMuZ2V0QXR0cmlidXRlKG1OYW1lKTtyZXR1cm4gYXR0cmlidXRlPyhhdHRyaWJ1dGUuaXRlbVNpemU9bUl0ZW1TaXplLGF0dHJpYnV0ZS5kYXRhQXJyYXk9ZGF0YUFycmF5LGF0dHJpYnV0ZS5zb3VyY2U9bURhdGEpOnRoaXMuX2F0dHJpYnV0ZXMucHVzaCh7bmFtZTptTmFtZSxzb3VyY2U6bURhdGEsaXRlbVNpemU6bUl0ZW1TaXplLGRyYXdUeXBlOmRyYXdUeXBlLGRhdGFBcnJheTpkYXRhQXJyYXksaXNJbnN0YW5jZWQ6aXNJbnN0YW5jZWR9KSx0aGlzLl9idWZmZXJDaGFuZ2VkLnB1c2gobU5hbWUpLHRoaXN9fSx7a2V5OlwiYnVmZmVySW5zdGFuY2VcIix2YWx1ZTpmdW5jdGlvbihtRGF0YSxtTmFtZSl7aWYoIV9HTFRvb2wyLmRlZmF1bHQuZ2wudmVydGV4QXR0cmliRGl2aXNvcilyZXR1cm4gdm9pZCBjb25zb2xlLmVycm9yKFwiRXh0ZW5zaW9uIDogQU5HTEVfaW5zdGFuY2VkX2FycmF5cyBpcyBub3Qgc3VwcG9ydGVkIHdpdGggdGhpcyBkZXZpY2UgIVwiKTt2YXIgaXRlbVNpemU9bURhdGFbMF0ubGVuZ3RoO3RoaXMuX251bUluc3RhbmNlPW1EYXRhLmxlbmd0aCx0aGlzLmJ1ZmZlckRhdGEobURhdGEsbU5hbWUsaXRlbVNpemUsMzUwNDQsITApfX0se2tleTpcImJpbmRcIix2YWx1ZTpmdW5jdGlvbihtU2hhZGVyUHJvZ3JhbSl7dGhpcy5nZW5lcmF0ZUJ1ZmZlcnMobVNoYWRlclByb2dyYW0pLHRoaXMuaGFzVkFPP2dsLmJpbmRWZXJ0ZXhBcnJheSh0aGlzLnZhbyk6KHRoaXMuYXR0cmlidXRlcy5mb3JFYWNoKGZ1bmN0aW9uKGF0dHJpYnV0ZSl7Z2wuYmluZEJ1ZmZlcihnbC5BUlJBWV9CVUZGRVIsYXR0cmlidXRlLmJ1ZmZlcik7dmFyIGF0dHJQb3NpdGlvbj1hdHRyaWJ1dGUuYXR0clBvc2l0aW9uO2dsLnZlcnRleEF0dHJpYlBvaW50ZXIoYXR0clBvc2l0aW9uLGF0dHJpYnV0ZS5pdGVtU2l6ZSxnbC5GTE9BVCwhMSwwLDApLGF0dHJpYnV0ZS5pc0luc3RhbmNlZCYmZ2wudmVydGV4QXR0cmliRGl2aXNvcihhdHRyUG9zaXRpb24sMSl9KSxnbC5iaW5kQnVmZmVyKGdsLkVMRU1FTlRfQVJSQVlfQlVGRkVSLHRoaXMuaUJ1ZmZlcikpfX0se2tleTpcImdlbmVyYXRlQnVmZmVyc1wiLHZhbHVlOmZ1bmN0aW9uKG1TaGFkZXJQcm9ncmFtKXt2YXIgX3RoaXM9dGhpczswIT10aGlzLl9idWZmZXJDaGFuZ2VkLmxlbmd0aCYmKHRoaXMuX3VzZVZBTz8odGhpcy5fdmFvfHwodGhpcy5fdmFvPWdsLmNyZWF0ZVZlcnRleEFycmF5KCkpLGdsLmJpbmRWZXJ0ZXhBcnJheSh0aGlzLl92YW8pLHRoaXMuX2F0dHJpYnV0ZXMuZm9yRWFjaChmdW5jdGlvbihhdHRyT2JqKXtpZigtMSE9PV90aGlzLl9idWZmZXJDaGFuZ2VkLmluZGV4T2YoYXR0ck9iai5uYW1lKSl7dmFyIGJ1ZmZlcj1nZXRCdWZmZXIoYXR0ck9iaik7Z2wuYmluZEJ1ZmZlcihnbC5BUlJBWV9CVUZGRVIsYnVmZmVyKSxnbC5idWZmZXJEYXRhKGdsLkFSUkFZX0JVRkZFUixhdHRyT2JqLmRhdGFBcnJheSxhdHRyT2JqLmRyYXdUeXBlKTt2YXIgYXR0clBvc2l0aW9uPSgwLF9nZXRBdHRyaWJMb2MyLmRlZmF1bHQpKGdsLG1TaGFkZXJQcm9ncmFtLGF0dHJPYmoubmFtZSk7Z2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkoYXR0clBvc2l0aW9uKSxnbC52ZXJ0ZXhBdHRyaWJQb2ludGVyKGF0dHJQb3NpdGlvbixhdHRyT2JqLml0ZW1TaXplLGdsLkZMT0FULCExLDAsMCksYXR0ck9iai5hdHRyUG9zaXRpb249YXR0clBvc2l0aW9uLGF0dHJPYmouaXNJbnN0YW5jZWQmJmdsLnZlcnRleEF0dHJpYkRpdmlzb3IoYXR0clBvc2l0aW9uLDEpfX0pLHRoaXMuX3VwZGF0ZUluZGV4QnVmZmVyKCksZ2wuYmluZFZlcnRleEFycmF5KG51bGwpLHRoaXMuX2hhc1ZBTz0hMCk6KHRoaXMuX2F0dHJpYnV0ZXMuZm9yRWFjaChmdW5jdGlvbihhdHRyT2JqKXtpZigtMSE9PV90aGlzLl9idWZmZXJDaGFuZ2VkLmluZGV4T2YoYXR0ck9iai5uYW1lKSl7dmFyIGJ1ZmZlcj1nZXRCdWZmZXIoYXR0ck9iaik7Z2wuYmluZEJ1ZmZlcihnbC5BUlJBWV9CVUZGRVIsYnVmZmVyKSxnbC5idWZmZXJEYXRhKGdsLkFSUkFZX0JVRkZFUixhdHRyT2JqLmRhdGFBcnJheSxhdHRyT2JqLmRyYXdUeXBlKTt2YXIgYXR0clBvc2l0aW9uPSgwLF9nZXRBdHRyaWJMb2MyLmRlZmF1bHQpKGdsLG1TaGFkZXJQcm9ncmFtLGF0dHJPYmoubmFtZSk7Z2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkoYXR0clBvc2l0aW9uKSxnbC52ZXJ0ZXhBdHRyaWJQb2ludGVyKGF0dHJQb3NpdGlvbixhdHRyT2JqLml0ZW1TaXplLGdsLkZMT0FULCExLDAsMCksYXR0ck9iai5hdHRyUG9zaXRpb249YXR0clBvc2l0aW9uLGF0dHJPYmouaXNJbnN0YW5jZWQmJmdsLnZlcnRleEF0dHJpYkRpdmlzb3IoYXR0clBvc2l0aW9uLDEpfX0pLHRoaXMuX3VwZGF0ZUluZGV4QnVmZmVyKCkpLHRoaXMuX2hhc0luZGV4QnVmZmVyQ2hhbmdlZD0hMSx0aGlzLl9idWZmZXJDaGFuZ2VkPVtdKX19LHtrZXk6XCJ1bmJpbmRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX3VzZVZBTyYmZ2wuYmluZFZlcnRleEFycmF5KG51bGwpLHRoaXMuX2F0dHJpYnV0ZXMuZm9yRWFjaChmdW5jdGlvbihhdHRyaWJ1dGUpe2F0dHJpYnV0ZS5pc0luc3RhbmNlZCYmZ2wudmVydGV4QXR0cmliRGl2aXNvcihhdHRyaWJ1dGUuYXR0clBvc2l0aW9uLDApfSl9fSx7a2V5OlwiX3VwZGF0ZUluZGV4QnVmZmVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9oYXNJbmRleEJ1ZmZlckNoYW5nZWR8fCh0aGlzLmlCdWZmZXJ8fCh0aGlzLmlCdWZmZXI9Z2wuY3JlYXRlQnVmZmVyKCkpLGdsLmJpbmRCdWZmZXIoZ2wuRUxFTUVOVF9BUlJBWV9CVUZGRVIsdGhpcy5pQnVmZmVyKSxnbC5idWZmZXJEYXRhKGdsLkVMRU1FTlRfQVJSQVlfQlVGRkVSLHRoaXMuX2luZGljZXMsdGhpcy5fZHJhd1R5cGUpLHRoaXMuaUJ1ZmZlci5pdGVtU2l6ZT0xLHRoaXMuaUJ1ZmZlci5udW1JdGVtcz10aGlzLl9udW1JdGVtcyl9fSx7a2V5OlwiY29tcHV0ZU5vcm1hbHNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB1c2luZ0ZhY2VOb3JtYWxzPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdJiZhcmd1bWVudHNbMF07dGhpcy5nZW5lcmF0ZUZhY2VzKCksdXNpbmdGYWNlTm9ybWFscz90aGlzLl9jb21wdXRlRmFjZU5vcm1hbHMoKTp0aGlzLl9jb21wdXRlVmVydGV4Tm9ybWFscygpfX0se2tleTpcIl9jb21wdXRlRmFjZU5vcm1hbHNcIix2YWx1ZTpmdW5jdGlvbigpe2Zvcih2YXIgZmFjZUluZGV4PXZvaWQgMCxmYWNlPXZvaWQgMCxub3JtYWxzPVtdLGk9MDtpPHRoaXMuX2luZGljZXMubGVuZ3RoO2krPTMpe2ZhY2VJbmRleD1pLzMsZmFjZT10aGlzLl9mYWNlc1tmYWNlSW5kZXhdO3ZhciBOPWZhY2Uubm9ybWFsO25vcm1hbHNbZmFjZS5pbmRpY2VzWzBdXT1OLG5vcm1hbHNbZmFjZS5pbmRpY2VzWzFdXT1OLG5vcm1hbHNbZmFjZS5pbmRpY2VzWzJdXT1OfXRoaXMuYnVmZmVyTm9ybWFsKG5vcm1hbHMpfX0se2tleTpcIl9jb21wdXRlVmVydGV4Tm9ybWFsc1wiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciBmYWNlPXZvaWQgMCxzdW1Ob3JtYWw9X2dsTWF0cml4LnZlYzMuY3JlYXRlKCksbm9ybWFscz1bXSx2ZXJ0aWNlcz10aGlzLnZlcnRpY2VzLGk9MDtpPHZlcnRpY2VzLmxlbmd0aDtpKyspe19nbE1hdHJpeC52ZWMzLnNldChzdW1Ob3JtYWwsMCwwLDApO2Zvcih2YXIgaj0wO2o8dGhpcy5fZmFjZXMubGVuZ3RoO2orKylmYWNlPXRoaXMuX2ZhY2VzW2pdLGZhY2UuaW5kaWNlcy5pbmRleE9mKGkpPj0wJiYoc3VtTm9ybWFsWzBdKz1mYWNlLm5vcm1hbFswXSxzdW1Ob3JtYWxbMV0rPWZhY2Uubm9ybWFsWzFdLHN1bU5vcm1hbFsyXSs9ZmFjZS5ub3JtYWxbMl0pO19nbE1hdHJpeC52ZWMzLm5vcm1hbGl6ZShzdW1Ob3JtYWwsc3VtTm9ybWFsKSxub3JtYWxzLnB1c2goW3N1bU5vcm1hbFswXSxzdW1Ob3JtYWxbMV0sc3VtTm9ybWFsWzJdXSl9dGhpcy5idWZmZXJOb3JtYWwobm9ybWFscyl9fSx7a2V5OlwiZ2VuZXJhdGVGYWNlc1wiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciBpYT12b2lkIDAsaWI9dm9pZCAwLGljPXZvaWQgMCxhPXZvaWQgMCxiPXZvaWQgMCxjPXZvaWQgMCx2ZXJ0aWNlcz0oX2dsTWF0cml4LnZlYzMuY3JlYXRlKCksX2dsTWF0cml4LnZlYzMuY3JlYXRlKCksX2dsTWF0cml4LnZlYzMuY3JlYXRlKCksdGhpcy52ZXJ0aWNlcyksaT0wO2k8dGhpcy5faW5kaWNlcy5sZW5ndGg7aSs9Myl7aWE9dGhpcy5faW5kaWNlc1tpXSxpYj10aGlzLl9pbmRpY2VzW2krMV0saWM9dGhpcy5faW5kaWNlc1tpKzJdLGE9dmVydGljZXNbaWFdLGI9dmVydGljZXNbaWJdLGM9dmVydGljZXNbaWNdO3ZhciBmYWNlPXtpbmRpY2VzOltpYSxpYixpY10sdmVydGljZXM6W2EsYixjXX07dGhpcy5fZmFjZXMucHVzaChmYWNlKX19fSx7a2V5OlwiZ2V0QXR0cmlidXRlXCIsdmFsdWU6ZnVuY3Rpb24obU5hbWUpe3JldHVybiB0aGlzLl9hdHRyaWJ1dGVzLmZpbmQoZnVuY3Rpb24oYSl7cmV0dXJuIGEubmFtZT09PW1OYW1lfSl9fSx7a2V5OlwiZ2V0U291cmNlXCIsdmFsdWU6ZnVuY3Rpb24obU5hbWUpe3ZhciBhdHRyPXRoaXMuZ2V0QXR0cmlidXRlKG1OYW1lKTtyZXR1cm4gYXR0cj9hdHRyLnNvdXJjZTpbXX19LHtrZXk6XCJ2ZXJ0aWNlc1wiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldFNvdXJjZShcImFWZXJ0ZXhQb3NpdGlvblwiKX19LHtrZXk6XCJub3JtYWxzXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0U291cmNlKFwiYU5vcm1hbFwiKX19LHtrZXk6XCJjb29yZHNcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRTb3VyY2UoXCJhVGV4dHVyZUNvb3JkXCIpfX0se2tleTpcImluZGljZXNcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faW5kaWNlc319LHtrZXk6XCJ2ZXJ0ZXhTaXplXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmVydGljZXMubGVuZ3RofX0se2tleTpcImZhY2VzXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZhY2VzfX0se2tleTpcImF0dHJpYnV0ZXNcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYXR0cmlidXRlc319LHtrZXk6XCJoYXNWQU9cIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faGFzVkFPfX0se2tleTpcInZhb1wiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92YW99fSx7a2V5OlwibnVtSW5zdGFuY2VcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbnVtSW5zdGFuY2V9fSx7a2V5OlwiaXNJbnN0YW5jZWRcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNJbnN0YW5jZWR9fV0pLE1lc2h9KCk7ZXhwb3J0cy5kZWZhdWx0PU1lc2h9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHwhMSxkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBkZXNjcmlwdG9yJiYoZGVzY3JpcHRvci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxkZXNjcmlwdG9yLmtleSxkZXNjcmlwdG9yKX19cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe3JldHVybiBwcm90b1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSxwcm90b1Byb3BzKSxzdGF0aWNQcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyksQ29uc3RydWN0b3J9fSgpLFNjaGVkdWxlcj1mdW5jdGlvbigpe2Z1bmN0aW9uIFNjaGVkdWxlcigpe19jbGFzc0NhbGxDaGVjayh0aGlzLFNjaGVkdWxlciksdGhpcy5fZGVsYXlUYXNrcz1bXSx0aGlzLl9uZXh0VGFza3M9W10sdGhpcy5fZGVmZXJUYXNrcz1bXSx0aGlzLl9oaWdoVGFza3M9W10sdGhpcy5fdXN1cnBUYXNrPVtdLHRoaXMuX2VudGVyZnJhbWVUYXNrcz1bXSx0aGlzLl9pZFRhYmxlPTAsdGhpcy5fc3RhcnRUaW1lPShuZXcgRGF0ZSkuZ2V0VGltZSgpLHRoaXMuX2RlbHRhVGltZT0wLHRoaXMuX2xvb3AoKX1yZXR1cm4gX2NyZWF0ZUNsYXNzKFNjaGVkdWxlcixbe2tleTpcImFkZEVGXCIsdmFsdWU6ZnVuY3Rpb24oZnVuYyxwYXJhbXMpe3BhcmFtcz1wYXJhbXN8fFtdO3ZhciBpZD10aGlzLl9pZFRhYmxlO3JldHVybiB0aGlzLl9lbnRlcmZyYW1lVGFza3NbaWRdPXtmdW5jOmZ1bmMscGFyYW1zOnBhcmFtc30sdGhpcy5faWRUYWJsZSsrLGlkfX0se2tleTpcInJlbW92ZUVGXCIsdmFsdWU6ZnVuY3Rpb24oaWQpe3JldHVybiB2b2lkIDAhPT10aGlzLl9lbnRlcmZyYW1lVGFza3NbaWRdJiYodGhpcy5fZW50ZXJmcmFtZVRhc2tzW2lkXT1udWxsKSwtMX19LHtrZXk6XCJkZWxheVwiLHZhbHVlOmZ1bmN0aW9uKGZ1bmMscGFyYW1zLF9kZWxheSl7dmFyIHRpbWU9KG5ldyBEYXRlKS5nZXRUaW1lKCksdD17ZnVuYzpmdW5jLHBhcmFtczpwYXJhbXMsZGVsYXk6X2RlbGF5LHRpbWU6dGltZX07dGhpcy5fZGVsYXlUYXNrcy5wdXNoKHQpfX0se2tleTpcImRlZmVyXCIsdmFsdWU6ZnVuY3Rpb24oZnVuYyxwYXJhbXMpe3ZhciB0PXtmdW5jOmZ1bmMscGFyYW1zOnBhcmFtc307dGhpcy5fZGVmZXJUYXNrcy5wdXNoKHQpfX0se2tleTpcIm5leHRcIix2YWx1ZTpmdW5jdGlvbihmdW5jLHBhcmFtcyl7dmFyIHQ9e2Z1bmM6ZnVuYyxwYXJhbXM6cGFyYW1zfTt0aGlzLl9uZXh0VGFza3MucHVzaCh0KX19LHtrZXk6XCJ1c3VycFwiLHZhbHVlOmZ1bmN0aW9uKGZ1bmMscGFyYW1zKXt2YXIgdD17ZnVuYzpmdW5jLHBhcmFtczpwYXJhbXN9O3RoaXMuX3VzdXJwVGFzay5wdXNoKHQpfX0se2tleTpcIl9wcm9jZXNzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgaT0wLHRhc2s9dm9pZCAwLGludGVydmFsPXZvaWQgMDtmb3IoaT0wO2k8dGhpcy5fZW50ZXJmcmFtZVRhc2tzLmxlbmd0aDtpKyspbnVsbCE9PSh0YXNrPXRoaXMuX2VudGVyZnJhbWVUYXNrc1tpXSkmJnZvaWQgMCE9PXRhc2smJnRhc2suZnVuYyh0YXNrLnBhcmFtcyk7Zm9yKDt0aGlzLl9oaWdoVGFza3MubGVuZ3RoPjA7KXRhc2s9dGhpcy5faGlnaFRhc2tzLnBvcCgpLHRhc2suZnVuYyh0YXNrLnBhcmFtcyk7dmFyIHN0YXJ0VGltZT0obmV3IERhdGUpLmdldFRpbWUoKTtmb3IodGhpcy5fZGVsdGFUaW1lPShzdGFydFRpbWUtdGhpcy5fc3RhcnRUaW1lKS8xZTMsaT0wO2k8dGhpcy5fZGVsYXlUYXNrcy5sZW5ndGg7aSsrKXRhc2s9dGhpcy5fZGVsYXlUYXNrc1tpXSxzdGFydFRpbWUtdGFzay50aW1lPnRhc2suZGVsYXkmJih0YXNrLmZ1bmModGFzay5wYXJhbXMpLHRoaXMuX2RlbGF5VGFza3Muc3BsaWNlKGksMSkpO2ZvcihzdGFydFRpbWU9KG5ldyBEYXRlKS5nZXRUaW1lKCksdGhpcy5fZGVsdGFUaW1lPShzdGFydFRpbWUtdGhpcy5fc3RhcnRUaW1lKS8xZTMsaW50ZXJ2YWw9MWUzLzYwO3RoaXMuX2RlZmVyVGFza3MubGVuZ3RoPjA7KXtpZih0YXNrPXRoaXMuX2RlZmVyVGFza3Muc2hpZnQoKSwhKChuZXcgRGF0ZSkuZ2V0VGltZSgpLXN0YXJ0VGltZTxpbnRlcnZhbCkpe3RoaXMuX2RlZmVyVGFza3MudW5zaGlmdCh0YXNrKTticmVha310YXNrLmZ1bmModGFzay5wYXJhbXMpfWZvcihzdGFydFRpbWU9KG5ldyBEYXRlKS5nZXRUaW1lKCksdGhpcy5fZGVsdGFUaW1lPShzdGFydFRpbWUtdGhpcy5fc3RhcnRUaW1lKS8xZTMsaW50ZXJ2YWw9MWUzLzYwO3RoaXMuX3VzdXJwVGFzay5sZW5ndGg+MDspdGFzaz10aGlzLl91c3VycFRhc2suc2hpZnQoKSwobmV3IERhdGUpLmdldFRpbWUoKS1zdGFydFRpbWU8aW50ZXJ2YWwmJnRhc2suZnVuYyh0YXNrLnBhcmFtcyk7dGhpcy5faGlnaFRhc2tzPXRoaXMuX2hpZ2hUYXNrcy5jb25jYXQodGhpcy5fbmV4dFRhc2tzKSx0aGlzLl9uZXh0VGFza3M9W10sdGhpcy5fdXN1cnBUYXNrPVtdfX0se2tleTpcIl9sb29wXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgX3RoaXM9dGhpczt0aGlzLl9wcm9jZXNzKCksd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbigpe3JldHVybiBfdGhpcy5fbG9vcCgpfSl9fSx7a2V5OlwiZGVsdGFUaW1lXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlbHRhVGltZX19XSksU2NoZWR1bGVyfSgpLHNjaGVkdWxlcj1uZXcgU2NoZWR1bGVyO2V4cG9ydHMuZGVmYXVsdD1zY2hlZHVsZXJ9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfTWVzaD1fX3dlYnBhY2tfcmVxdWlyZV9fKDUpLF9NZXNoMj1mdW5jdGlvbihvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fShfTWVzaCksR2VvbT17fSxtZXNoVHJpPXZvaWQgMDtHZW9tLnBsYW5lPWZ1bmN0aW9uKHdpZHRoLGhlaWdodCxudW1TZWdtZW50cyl7Zm9yKHZhciBheGlzPWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpcInh5XCIsZHJhd1R5cGU9YXJndW1lbnRzLmxlbmd0aD40JiZ2b2lkIDAhPT1hcmd1bWVudHNbNF0/YXJndW1lbnRzWzRdOjQscG9zaXRpb25zPVtdLGNvb3Jkcz1bXSxpbmRpY2VzPVtdLG5vcm1hbHM9W10sZ2FwWD13aWR0aC9udW1TZWdtZW50cyxnYXBZPWhlaWdodC9udW1TZWdtZW50cyxnYXBVVj0xL251bVNlZ21lbnRzLHN4PS41Ki13aWR0aCxzeT0uNSotaGVpZ2h0LGluZGV4PTAsaT0wO2k8bnVtU2VnbWVudHM7aSsrKWZvcih2YXIgaj0wO2o8bnVtU2VnbWVudHM7aisrKXt2YXIgdHg9Z2FwWCppK3N4LHR5PWdhcFkqaitzeSx1PWkvbnVtU2VnbWVudHMsdj1qL251bVNlZ21lbnRzO1wieHpcIj09PWF4aXM/KHBvc2l0aW9ucy5wdXNoKFt0eCwwLHR5K2dhcFldKSxwb3NpdGlvbnMucHVzaChbdHgrZ2FwWCwwLHR5K2dhcFldKSxwb3NpdGlvbnMucHVzaChbdHgrZ2FwWCwwLHR5XSkscG9zaXRpb25zLnB1c2goW3R4LDAsdHldKSxjb29yZHMucHVzaChbdSwxLSh2K2dhcFVWKV0pLGNvb3Jkcy5wdXNoKFt1K2dhcFVWLDEtKHYrZ2FwVVYpXSksY29vcmRzLnB1c2goW3UrZ2FwVVYsMS12XSksY29vcmRzLnB1c2goW3UsMS12XSksbm9ybWFscy5wdXNoKFswLDEsMF0pLG5vcm1hbHMucHVzaChbMCwxLDBdKSxub3JtYWxzLnB1c2goWzAsMSwwXSksbm9ybWFscy5wdXNoKFswLDEsMF0pKTpcInl6XCI9PT1heGlzPyhwb3NpdGlvbnMucHVzaChbMCx0eSx0eF0pLHBvc2l0aW9ucy5wdXNoKFswLHR5LHR4K2dhcFhdKSxwb3NpdGlvbnMucHVzaChbMCx0eStnYXBZLHR4K2dhcFhdKSxwb3NpdGlvbnMucHVzaChbMCx0eStnYXBZLHR4XSksY29vcmRzLnB1c2goW3Usdl0pLGNvb3Jkcy5wdXNoKFt1K2dhcFVWLHZdKSxjb29yZHMucHVzaChbdStnYXBVVix2K2dhcFVWXSksY29vcmRzLnB1c2goW3UsditnYXBVVl0pLG5vcm1hbHMucHVzaChbMSwwLDBdKSxub3JtYWxzLnB1c2goWzEsMCwwXSksbm9ybWFscy5wdXNoKFsxLDAsMF0pLG5vcm1hbHMucHVzaChbMSwwLDBdKSk6KHBvc2l0aW9ucy5wdXNoKFt0eCx0eSwwXSkscG9zaXRpb25zLnB1c2goW3R4K2dhcFgsdHksMF0pLHBvc2l0aW9ucy5wdXNoKFt0eCtnYXBYLHR5K2dhcFksMF0pLHBvc2l0aW9ucy5wdXNoKFt0eCx0eStnYXBZLDBdKSxjb29yZHMucHVzaChbdSx2XSksY29vcmRzLnB1c2goW3UrZ2FwVVYsdl0pLGNvb3Jkcy5wdXNoKFt1K2dhcFVWLHYrZ2FwVVZdKSxjb29yZHMucHVzaChbdSx2K2dhcFVWXSksbm9ybWFscy5wdXNoKFswLDAsMV0pLG5vcm1hbHMucHVzaChbMCwwLDFdKSxub3JtYWxzLnB1c2goWzAsMCwxXSksbm9ybWFscy5wdXNoKFswLDAsMV0pKSxpbmRpY2VzLnB1c2goNCppbmRleCswKSxpbmRpY2VzLnB1c2goNCppbmRleCsxKSxpbmRpY2VzLnB1c2goNCppbmRleCsyKSxpbmRpY2VzLnB1c2goNCppbmRleCswKSxpbmRpY2VzLnB1c2goNCppbmRleCsyKSxpbmRpY2VzLnB1c2goNCppbmRleCszKSxpbmRleCsrfXZhciBtZXNoPW5ldyBfTWVzaDIuZGVmYXVsdChkcmF3VHlwZSk7cmV0dXJuIG1lc2guYnVmZmVyVmVydGV4KHBvc2l0aW9ucyksbWVzaC5idWZmZXJUZXhDb29yZChjb29yZHMpLG1lc2guYnVmZmVySW5kZXgoaW5kaWNlcyksbWVzaC5idWZmZXJOb3JtYWwobm9ybWFscyksbWVzaH0sR2VvbS5zcGhlcmU9ZnVuY3Rpb24oc2l6ZSxudW1TZWdtZW50cyl7ZnVuY3Rpb24gZ2V0UG9zaXRpb24oaSxqKXt2YXIgaXNOb3JtYWw9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0mJmFyZ3VtZW50c1syXSxyeD1pL251bVNlZ21lbnRzKk1hdGguUEktLjUqTWF0aC5QSSxyeT1qL251bVNlZ21lbnRzKk1hdGguUEkqMixyPWlzTm9ybWFsPzE6c2l6ZSxwb3M9W107cG9zWzFdPU1hdGguc2luKHJ4KSpyO3ZhciB0PU1hdGguY29zKHJ4KSpyO3Bvc1swXT1NYXRoLmNvcyhyeSkqdCxwb3NbMl09TWF0aC5zaW4ocnkpKnQ7cmV0dXJuIHBvc1swXT1NYXRoLmZsb29yKDFlNCpwb3NbMF0pLzFlNCxwb3NbMV09TWF0aC5mbG9vcigxZTQqcG9zWzFdKS8xZTQscG9zWzJdPU1hdGguZmxvb3IoMWU0KnBvc1syXSkvMWU0LHBvc31mb3IodmFyIGlzSW52ZXJ0PWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdJiZhcmd1bWVudHNbMl0sZHJhd1R5cGU9YXJndW1lbnRzLmxlbmd0aD4zJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOjQscG9zaXRpb25zPVtdLGNvb3Jkcz1bXSxpbmRpY2VzPVtdLG5vcm1hbHM9W10sZ2FwVVY9MS9udW1TZWdtZW50cyxpbmRleD0wLGk9MDtpPG51bVNlZ21lbnRzO2krKylmb3IodmFyIGo9MDtqPG51bVNlZ21lbnRzO2orKyl7cG9zaXRpb25zLnB1c2goZ2V0UG9zaXRpb24oaSxqKSkscG9zaXRpb25zLnB1c2goZ2V0UG9zaXRpb24oaSsxLGopKSxwb3NpdGlvbnMucHVzaChnZXRQb3NpdGlvbihpKzEsaisxKSkscG9zaXRpb25zLnB1c2goZ2V0UG9zaXRpb24oaSxqKzEpKSxub3JtYWxzLnB1c2goZ2V0UG9zaXRpb24oaSxqLCEwKSksbm9ybWFscy5wdXNoKGdldFBvc2l0aW9uKGkrMSxqLCEwKSksbm9ybWFscy5wdXNoKGdldFBvc2l0aW9uKGkrMSxqKzEsITApKSxub3JtYWxzLnB1c2goZ2V0UG9zaXRpb24oaSxqKzEsITApKTt2YXIgdT1qL251bVNlZ21lbnRzLHY9aS9udW1TZWdtZW50cztjb29yZHMucHVzaChbMS11LHZdKSxjb29yZHMucHVzaChbMS11LHYrZ2FwVVZdKSxjb29yZHMucHVzaChbMS11LWdhcFVWLHYrZ2FwVVZdKSxjb29yZHMucHVzaChbMS11LWdhcFVWLHZdKSxpbmRpY2VzLnB1c2goNCppbmRleCswKSxpbmRpY2VzLnB1c2goNCppbmRleCsxKSxpbmRpY2VzLnB1c2goNCppbmRleCsyKSxpbmRpY2VzLnB1c2goNCppbmRleCswKSxpbmRpY2VzLnB1c2goNCppbmRleCsyKSxpbmRpY2VzLnB1c2goNCppbmRleCszKSxpbmRleCsrfWlzSW52ZXJ0JiZpbmRpY2VzLnJldmVyc2UoKTt2YXIgbWVzaD1uZXcgX01lc2gyLmRlZmF1bHQoZHJhd1R5cGUpO3JldHVybiBtZXNoLmJ1ZmZlclZlcnRleChwb3NpdGlvbnMpLG1lc2guYnVmZmVyVGV4Q29vcmQoY29vcmRzKSxtZXNoLmJ1ZmZlckluZGV4KGluZGljZXMpLG1lc2guYnVmZmVyTm9ybWFsKG5vcm1hbHMpLG1lc2h9LEdlb20uY3ViZT1mdW5jdGlvbih3LGgsZCl7dmFyIGRyYXdUeXBlPWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTo0O2g9aHx8dyxkPWR8fHc7dmFyIHg9dy8yLHk9aC8yLHo9ZC8yLHBvc2l0aW9ucz1bXSxjb29yZHM9W10saW5kaWNlcz1bXSxub3JtYWxzPVtdLGNvdW50PTA7cG9zaXRpb25zLnB1c2goWy14LHksLXpdKSxwb3NpdGlvbnMucHVzaChbeCx5LC16XSkscG9zaXRpb25zLnB1c2goW3gsLXksLXpdKSxwb3NpdGlvbnMucHVzaChbLXgsLXksLXpdKSxub3JtYWxzLnB1c2goWzAsMCwtMV0pLG5vcm1hbHMucHVzaChbMCwwLC0xXSksbm9ybWFscy5wdXNoKFswLDAsLTFdKSxub3JtYWxzLnB1c2goWzAsMCwtMV0pLGNvb3Jkcy5wdXNoKFswLDBdKSxjb29yZHMucHVzaChbMSwwXSksY29vcmRzLnB1c2goWzEsMV0pLGNvb3Jkcy5wdXNoKFswLDFdKSxpbmRpY2VzLnB1c2goNCpjb3VudCswKSxpbmRpY2VzLnB1c2goNCpjb3VudCsxKSxpbmRpY2VzLnB1c2goNCpjb3VudCsyKSxpbmRpY2VzLnB1c2goNCpjb3VudCswKSxpbmRpY2VzLnB1c2goNCpjb3VudCsyKSxpbmRpY2VzLnB1c2goNCpjb3VudCszKSxjb3VudCsrLHBvc2l0aW9ucy5wdXNoKFt4LHksLXpdKSxwb3NpdGlvbnMucHVzaChbeCx5LHpdKSxwb3NpdGlvbnMucHVzaChbeCwteSx6XSkscG9zaXRpb25zLnB1c2goW3gsLXksLXpdKSxub3JtYWxzLnB1c2goWzEsMCwwXSksbm9ybWFscy5wdXNoKFsxLDAsMF0pLG5vcm1hbHMucHVzaChbMSwwLDBdKSxub3JtYWxzLnB1c2goWzEsMCwwXSksY29vcmRzLnB1c2goWzAsMF0pLGNvb3Jkcy5wdXNoKFsxLDBdKSxjb29yZHMucHVzaChbMSwxXSksY29vcmRzLnB1c2goWzAsMV0pLGluZGljZXMucHVzaCg0KmNvdW50KzApLGluZGljZXMucHVzaCg0KmNvdW50KzEpLGluZGljZXMucHVzaCg0KmNvdW50KzIpLGluZGljZXMucHVzaCg0KmNvdW50KzApLGluZGljZXMucHVzaCg0KmNvdW50KzIpLGluZGljZXMucHVzaCg0KmNvdW50KzMpLGNvdW50KysscG9zaXRpb25zLnB1c2goW3gseSx6XSkscG9zaXRpb25zLnB1c2goWy14LHksel0pLHBvc2l0aW9ucy5wdXNoKFsteCwteSx6XSkscG9zaXRpb25zLnB1c2goW3gsLXksel0pLG5vcm1hbHMucHVzaChbMCwwLDFdKSxub3JtYWxzLnB1c2goWzAsMCwxXSksbm9ybWFscy5wdXNoKFswLDAsMV0pLG5vcm1hbHMucHVzaChbMCwwLDFdKSxjb29yZHMucHVzaChbMCwwXSksY29vcmRzLnB1c2goWzEsMF0pLGNvb3Jkcy5wdXNoKFsxLDFdKSxjb29yZHMucHVzaChbMCwxXSksaW5kaWNlcy5wdXNoKDQqY291bnQrMCksaW5kaWNlcy5wdXNoKDQqY291bnQrMSksaW5kaWNlcy5wdXNoKDQqY291bnQrMiksaW5kaWNlcy5wdXNoKDQqY291bnQrMCksaW5kaWNlcy5wdXNoKDQqY291bnQrMiksaW5kaWNlcy5wdXNoKDQqY291bnQrMyksY291bnQrKyxwb3NpdGlvbnMucHVzaChbLXgseSx6XSkscG9zaXRpb25zLnB1c2goWy14LHksLXpdKSxwb3NpdGlvbnMucHVzaChbLXgsLXksLXpdKSxwb3NpdGlvbnMucHVzaChbLXgsLXksel0pLG5vcm1hbHMucHVzaChbLTEsMCwwXSksbm9ybWFscy5wdXNoKFstMSwwLDBdKSxub3JtYWxzLnB1c2goWy0xLDAsMF0pLG5vcm1hbHMucHVzaChbLTEsMCwwXSksY29vcmRzLnB1c2goWzAsMF0pLGNvb3Jkcy5wdXNoKFsxLDBdKSxjb29yZHMucHVzaChbMSwxXSksY29vcmRzLnB1c2goWzAsMV0pLGluZGljZXMucHVzaCg0KmNvdW50KzApLGluZGljZXMucHVzaCg0KmNvdW50KzEpLGluZGljZXMucHVzaCg0KmNvdW50KzIpLGluZGljZXMucHVzaCg0KmNvdW50KzApLGluZGljZXMucHVzaCg0KmNvdW50KzIpLGluZGljZXMucHVzaCg0KmNvdW50KzMpLGNvdW50KysscG9zaXRpb25zLnB1c2goW3gseSwtel0pLHBvc2l0aW9ucy5wdXNoKFsteCx5LC16XSkscG9zaXRpb25zLnB1c2goWy14LHksel0pLHBvc2l0aW9ucy5wdXNoKFt4LHksel0pLG5vcm1hbHMucHVzaChbMCwxLDBdKSxub3JtYWxzLnB1c2goWzAsMSwwXSksbm9ybWFscy5wdXNoKFswLDEsMF0pLG5vcm1hbHMucHVzaChbMCwxLDBdKSxjb29yZHMucHVzaChbMCwwXSksY29vcmRzLnB1c2goWzEsMF0pLGNvb3Jkcy5wdXNoKFsxLDFdKSxjb29yZHMucHVzaChbMCwxXSksaW5kaWNlcy5wdXNoKDQqY291bnQrMCksaW5kaWNlcy5wdXNoKDQqY291bnQrMSksaW5kaWNlcy5wdXNoKDQqY291bnQrMiksaW5kaWNlcy5wdXNoKDQqY291bnQrMCksaW5kaWNlcy5wdXNoKDQqY291bnQrMiksaW5kaWNlcy5wdXNoKDQqY291bnQrMyksY291bnQrKyxwb3NpdGlvbnMucHVzaChbeCwteSx6XSkscG9zaXRpb25zLnB1c2goWy14LC15LHpdKSxwb3NpdGlvbnMucHVzaChbLXgsLXksLXpdKSxwb3NpdGlvbnMucHVzaChbeCwteSwtel0pLG5vcm1hbHMucHVzaChbMCwtMSwwXSksbm9ybWFscy5wdXNoKFswLC0xLDBdKSxub3JtYWxzLnB1c2goWzAsLTEsMF0pLG5vcm1hbHMucHVzaChbMCwtMSwwXSksY29vcmRzLnB1c2goWzAsMF0pLGNvb3Jkcy5wdXNoKFsxLDBdKSxjb29yZHMucHVzaChbMSwxXSksY29vcmRzLnB1c2goWzAsMV0pLGluZGljZXMucHVzaCg0KmNvdW50KzApLGluZGljZXMucHVzaCg0KmNvdW50KzEpLGluZGljZXMucHVzaCg0KmNvdW50KzIpLGluZGljZXMucHVzaCg0KmNvdW50KzApLGluZGljZXMucHVzaCg0KmNvdW50KzIpLGluZGljZXMucHVzaCg0KmNvdW50KzMpLGNvdW50Kys7dmFyIG1lc2g9bmV3IF9NZXNoMi5kZWZhdWx0KGRyYXdUeXBlKTtyZXR1cm4gbWVzaC5idWZmZXJWZXJ0ZXgocG9zaXRpb25zKSxtZXNoLmJ1ZmZlclRleENvb3JkKGNvb3JkcyksbWVzaC5idWZmZXJJbmRleChpbmRpY2VzKSxtZXNoLmJ1ZmZlck5vcm1hbChub3JtYWxzKSxtZXNofSxHZW9tLnNreWJveD1mdW5jdGlvbihzaXplKXt2YXIgZHJhd1R5cGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOjQscG9zaXRpb25zPVtdLGNvb3Jkcz1bXSxpbmRpY2VzPVtdLG5vcm1hbHM9W10sY291bnQ9MDtwb3NpdGlvbnMucHVzaChbc2l6ZSxzaXplLC1zaXplXSkscG9zaXRpb25zLnB1c2goWy1zaXplLHNpemUsLXNpemVdKSxwb3NpdGlvbnMucHVzaChbLXNpemUsLXNpemUsLXNpemVdKSxwb3NpdGlvbnMucHVzaChbc2l6ZSwtc2l6ZSwtc2l6ZV0pLG5vcm1hbHMucHVzaChbMCwwLC0xXSksbm9ybWFscy5wdXNoKFswLDAsLTFdKSxub3JtYWxzLnB1c2goWzAsMCwtMV0pLG5vcm1hbHMucHVzaChbMCwwLC0xXSksY29vcmRzLnB1c2goWzAsMF0pLGNvb3Jkcy5wdXNoKFsxLDBdKSxjb29yZHMucHVzaChbMSwxXSksY29vcmRzLnB1c2goWzAsMV0pLGluZGljZXMucHVzaCg0KmNvdW50KzApLGluZGljZXMucHVzaCg0KmNvdW50KzEpLGluZGljZXMucHVzaCg0KmNvdW50KzIpLGluZGljZXMucHVzaCg0KmNvdW50KzApLGluZGljZXMucHVzaCg0KmNvdW50KzIpLGluZGljZXMucHVzaCg0KmNvdW50KzMpLGNvdW50KysscG9zaXRpb25zLnB1c2goW3NpemUsLXNpemUsLXNpemVdKSxwb3NpdGlvbnMucHVzaChbc2l6ZSwtc2l6ZSxzaXplXSkscG9zaXRpb25zLnB1c2goW3NpemUsc2l6ZSxzaXplXSkscG9zaXRpb25zLnB1c2goW3NpemUsc2l6ZSwtc2l6ZV0pLG5vcm1hbHMucHVzaChbMSwwLDBdKSxub3JtYWxzLnB1c2goWzEsMCwwXSksbm9ybWFscy5wdXNoKFsxLDAsMF0pLG5vcm1hbHMucHVzaChbMSwwLDBdKSxjb29yZHMucHVzaChbMCwwXSksY29vcmRzLnB1c2goWzEsMF0pLGNvb3Jkcy5wdXNoKFsxLDFdKSxjb29yZHMucHVzaChbMCwxXSksaW5kaWNlcy5wdXNoKDQqY291bnQrMCksaW5kaWNlcy5wdXNoKDQqY291bnQrMSksaW5kaWNlcy5wdXNoKDQqY291bnQrMiksaW5kaWNlcy5wdXNoKDQqY291bnQrMCksaW5kaWNlcy5wdXNoKDQqY291bnQrMiksaW5kaWNlcy5wdXNoKDQqY291bnQrMyksY291bnQrKyxwb3NpdGlvbnMucHVzaChbLXNpemUsc2l6ZSxzaXplXSkscG9zaXRpb25zLnB1c2goW3NpemUsc2l6ZSxzaXplXSkscG9zaXRpb25zLnB1c2goW3NpemUsLXNpemUsc2l6ZV0pLHBvc2l0aW9ucy5wdXNoKFstc2l6ZSwtc2l6ZSxzaXplXSksbm9ybWFscy5wdXNoKFswLDAsMV0pLG5vcm1hbHMucHVzaChbMCwwLDFdKSxub3JtYWxzLnB1c2goWzAsMCwxXSksbm9ybWFscy5wdXNoKFswLDAsMV0pLGNvb3Jkcy5wdXNoKFswLDBdKSxjb29yZHMucHVzaChbMSwwXSksY29vcmRzLnB1c2goWzEsMV0pLGNvb3Jkcy5wdXNoKFswLDFdKSxpbmRpY2VzLnB1c2goNCpjb3VudCswKSxpbmRpY2VzLnB1c2goNCpjb3VudCsxKSxpbmRpY2VzLnB1c2goNCpjb3VudCsyKSxpbmRpY2VzLnB1c2goNCpjb3VudCswKSxpbmRpY2VzLnB1c2goNCpjb3VudCsyKSxpbmRpY2VzLnB1c2goNCpjb3VudCszKSxjb3VudCsrLHBvc2l0aW9ucy5wdXNoKFstc2l6ZSwtc2l6ZSxzaXplXSkscG9zaXRpb25zLnB1c2goWy1zaXplLC1zaXplLC1zaXplXSkscG9zaXRpb25zLnB1c2goWy1zaXplLHNpemUsLXNpemVdKSxwb3NpdGlvbnMucHVzaChbLXNpemUsc2l6ZSxzaXplXSksbm9ybWFscy5wdXNoKFstMSwwLDBdKSxub3JtYWxzLnB1c2goWy0xLDAsMF0pLG5vcm1hbHMucHVzaChbLTEsMCwwXSksbm9ybWFscy5wdXNoKFstMSwwLDBdKSxjb29yZHMucHVzaChbMCwwXSksY29vcmRzLnB1c2goWzEsMF0pLGNvb3Jkcy5wdXNoKFsxLDFdKSxjb29yZHMucHVzaChbMCwxXSksaW5kaWNlcy5wdXNoKDQqY291bnQrMCksaW5kaWNlcy5wdXNoKDQqY291bnQrMSksaW5kaWNlcy5wdXNoKDQqY291bnQrMiksaW5kaWNlcy5wdXNoKDQqY291bnQrMCksaW5kaWNlcy5wdXNoKDQqY291bnQrMiksaW5kaWNlcy5wdXNoKDQqY291bnQrMyksY291bnQrKyxwb3NpdGlvbnMucHVzaChbc2l6ZSxzaXplLHNpemVdKSxwb3NpdGlvbnMucHVzaChbLXNpemUsc2l6ZSxzaXplXSkscG9zaXRpb25zLnB1c2goWy1zaXplLHNpemUsLXNpemVdKSxwb3NpdGlvbnMucHVzaChbc2l6ZSxzaXplLC1zaXplXSksbm9ybWFscy5wdXNoKFswLDEsMF0pLG5vcm1hbHMucHVzaChbMCwxLDBdKSxub3JtYWxzLnB1c2goWzAsMSwwXSksbm9ybWFscy5wdXNoKFswLDEsMF0pLGNvb3Jkcy5wdXNoKFswLDBdKSxjb29yZHMucHVzaChbMSwwXSksY29vcmRzLnB1c2goWzEsMV0pLGNvb3Jkcy5wdXNoKFswLDFdKSxpbmRpY2VzLnB1c2goNCpjb3VudCswKSxpbmRpY2VzLnB1c2goNCpjb3VudCsxKSxpbmRpY2VzLnB1c2goNCpjb3VudCsyKSxpbmRpY2VzLnB1c2goNCpjb3VudCswKSxpbmRpY2VzLnB1c2goNCpjb3VudCsyKSxpbmRpY2VzLnB1c2goNCpjb3VudCszKSxjb3VudCsrLHBvc2l0aW9ucy5wdXNoKFtzaXplLC1zaXplLC1zaXplXSkscG9zaXRpb25zLnB1c2goWy1zaXplLC1zaXplLC1zaXplXSkscG9zaXRpb25zLnB1c2goWy1zaXplLC1zaXplLHNpemVdKSxwb3NpdGlvbnMucHVzaChbc2l6ZSwtc2l6ZSxzaXplXSksbm9ybWFscy5wdXNoKFswLC0xLDBdKSxub3JtYWxzLnB1c2goWzAsLTEsMF0pLG5vcm1hbHMucHVzaChbMCwtMSwwXSksbm9ybWFscy5wdXNoKFswLC0xLDBdKSxjb29yZHMucHVzaChbMCwwXSksY29vcmRzLnB1c2goWzEsMF0pLGNvb3Jkcy5wdXNoKFsxLDFdKSxjb29yZHMucHVzaChbMCwxXSksaW5kaWNlcy5wdXNoKDQqY291bnQrMCksaW5kaWNlcy5wdXNoKDQqY291bnQrMSksaW5kaWNlcy5wdXNoKDQqY291bnQrMiksaW5kaWNlcy5wdXNoKDQqY291bnQrMCksaW5kaWNlcy5wdXNoKDQqY291bnQrMiksaW5kaWNlcy5wdXNoKDQqY291bnQrMyk7dmFyIG1lc2g9bmV3IF9NZXNoMi5kZWZhdWx0KGRyYXdUeXBlKTtyZXR1cm4gbWVzaC5idWZmZXJWZXJ0ZXgocG9zaXRpb25zKSxtZXNoLmJ1ZmZlclRleENvb3JkKGNvb3JkcyksbWVzaC5idWZmZXJJbmRleChpbmRpY2VzKSxtZXNoLmJ1ZmZlck5vcm1hbChub3JtYWxzKSxtZXNofSxHZW9tLmJpZ1RyaWFuZ2xlPWZ1bmN0aW9uKCl7aWYoIW1lc2hUcmkpe3ZhciBpbmRpY2VzPVsyLDEsMF0scG9zaXRpb25zPVtbLTEsLTFdLFstMSw0XSxbNCwtMV1dO21lc2hUcmk9bmV3IF9NZXNoMi5kZWZhdWx0LG1lc2hUcmkuYnVmZmVyRGF0YShwb3NpdGlvbnMsXCJhUG9zaXRpb25cIiwyKSxtZXNoVHJpLmJ1ZmZlckluZGV4KGluZGljZXMpfXJldHVybiBtZXNoVHJpfSxleHBvcnRzLmRlZmF1bHQ9R2VvbX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7bW9kdWxlLmV4cG9ydHM9ezA6XCJOT05FXCIsMTpcIk9ORVwiLDI6XCJMSU5FX0xPT1BcIiwzOlwiTElORV9TVFJJUFwiLDQ6XCJUUklBTkdMRVNcIiw1OlwiVFJJQU5HTEVfU1RSSVBcIiw2OlwiVFJJQU5HTEVfRkFOXCIsMjU2OlwiREVQVEhfQlVGRkVSX0JJVFwiLDUxMjpcIk5FVkVSXCIsNTEzOlwiTEVTU1wiLDUxNDpcIkVRVUFMXCIsNTE1OlwiTEVRVUFMXCIsNTE2OlwiR1JFQVRFUlwiLDUxNzpcIk5PVEVRVUFMXCIsNTE4OlwiR0VRVUFMXCIsNTE5OlwiQUxXQVlTXCIsNzY4OlwiU1JDX0NPTE9SXCIsNzY5OlwiT05FX01JTlVTX1NSQ19DT0xPUlwiLDc3MDpcIlNSQ19BTFBIQVwiLDc3MTpcIk9ORV9NSU5VU19TUkNfQUxQSEFcIiw3NzI6XCJEU1RfQUxQSEFcIiw3NzM6XCJPTkVfTUlOVVNfRFNUX0FMUEhBXCIsNzc0OlwiRFNUX0NPTE9SXCIsNzc1OlwiT05FX01JTlVTX0RTVF9DT0xPUlwiLDc3NjpcIlNSQ19BTFBIQV9TQVRVUkFURVwiLDEwMjQ6XCJTVEVOQ0lMX0JVRkZFUl9CSVRcIiwxMDI4OlwiRlJPTlRcIiwxMDI5OlwiQkFDS1wiLDEwMzI6XCJGUk9OVF9BTkRfQkFDS1wiLDEyODA6XCJJTlZBTElEX0VOVU1cIiwxMjgxOlwiSU5WQUxJRF9WQUxVRVwiLDEyODI6XCJJTlZBTElEX09QRVJBVElPTlwiLDEyODU6XCJPVVRfT0ZfTUVNT1JZXCIsMTI4NjpcIklOVkFMSURfRlJBTUVCVUZGRVJfT1BFUkFUSU9OXCIsMjMwNDpcIkNXXCIsMjMwNTpcIkNDV1wiLDI4NDk6XCJMSU5FX1dJRFRIXCIsMjg4NDpcIkNVTExfRkFDRVwiLDI4ODU6XCJDVUxMX0ZBQ0VfTU9ERVwiLDI4ODY6XCJGUk9OVF9GQUNFXCIsMjkyODpcIkRFUFRIX1JBTkdFXCIsMjkyOTpcIkRFUFRIX1RFU1RcIiwyOTMwOlwiREVQVEhfV1JJVEVNQVNLXCIsMjkzMTpcIkRFUFRIX0NMRUFSX1ZBTFVFXCIsMjkzMjpcIkRFUFRIX0ZVTkNcIiwyOTYwOlwiU1RFTkNJTF9URVNUXCIsMjk2MTpcIlNURU5DSUxfQ0xFQVJfVkFMVUVcIiwyOTYyOlwiU1RFTkNJTF9GVU5DXCIsMjk2MzpcIlNURU5DSUxfVkFMVUVfTUFTS1wiLDI5NjQ6XCJTVEVOQ0lMX0ZBSUxcIiwyOTY1OlwiU1RFTkNJTF9QQVNTX0RFUFRIX0ZBSUxcIiwyOTY2OlwiU1RFTkNJTF9QQVNTX0RFUFRIX1BBU1NcIiwyOTY3OlwiU1RFTkNJTF9SRUZcIiwyOTY4OlwiU1RFTkNJTF9XUklURU1BU0tcIiwyOTc4OlwiVklFV1BPUlRcIiwzMDI0OlwiRElUSEVSXCIsMzA0MjpcIkJMRU5EXCIsMzA4ODpcIlNDSVNTT1JfQk9YXCIsMzA4OTpcIlNDSVNTT1JfVEVTVFwiLDMxMDY6XCJDT0xPUl9DTEVBUl9WQUxVRVwiLDMxMDc6XCJDT0xPUl9XUklURU1BU0tcIiwzMzE3OlwiVU5QQUNLX0FMSUdOTUVOVFwiLDMzMzM6XCJQQUNLX0FMSUdOTUVOVFwiLDMzNzk6XCJNQVhfVEVYVFVSRV9TSVpFXCIsMzM4NjpcIk1BWF9WSUVXUE9SVF9ESU1TXCIsMzQwODpcIlNVQlBJWEVMX0JJVFNcIiwzNDEwOlwiUkVEX0JJVFNcIiwzNDExOlwiR1JFRU5fQklUU1wiLDM0MTI6XCJCTFVFX0JJVFNcIiwzNDEzOlwiQUxQSEFfQklUU1wiLDM0MTQ6XCJERVBUSF9CSVRTXCIsMzQxNTpcIlNURU5DSUxfQklUU1wiLDM1NTM6XCJURVhUVVJFXzJEXCIsNDM1MjpcIkRPTlRfQ0FSRVwiLDQzNTM6XCJGQVNURVNUXCIsNDM1NDpcIk5JQ0VTVFwiLDUxMjA6XCJCWVRFXCIsNTEyMTpcIlVOU0lHTkVEX0JZVEVcIiw1MTIyOlwiU0hPUlRcIiw1MTIzOlwiVU5TSUdORURfU0hPUlRcIiw1MTI0OlwiSU5UXCIsNTEyNTpcIlVOU0lHTkVEX0lOVFwiLDUxMjY6XCJGTE9BVFwiLDUzODY6XCJJTlZFUlRcIiw1ODkwOlwiVEVYVFVSRVwiLDY0MDE6XCJTVEVOQ0lMX0lOREVYXCIsNjQwMjpcIkRFUFRIX0NPTVBPTkVOVFwiLDY0MDM6XCJSRURcIiw2NDA2OlwiQUxQSEFcIiw2NDA3OlwiUkdCXCIsNjQwODpcIlJHQkFcIiw2NDA5OlwiTFVNSU5BTkNFXCIsNjQxMDpcIkxVTUlOQU5DRV9BTFBIQVwiLDc2ODA6XCJLRUVQXCIsNzY4MTpcIlJFUExBQ0VcIiw3NjgyOlwiSU5DUlwiLDc2ODM6XCJERUNSXCIsNzkzNjpcIlZFTkRPUlwiLDc5Mzc6XCJSRU5ERVJFUlwiLDc5Mzg6XCJWRVJTSU9OXCIsOTcyODpcIk5FQVJFU1RcIiw5NzI5OlwiTElORUFSXCIsOTk4NDpcIk5FQVJFU1RfTUlQTUFQX05FQVJFU1RcIiw5OTg1OlwiTElORUFSX01JUE1BUF9ORUFSRVNUXCIsOTk4NjpcIk5FQVJFU1RfTUlQTUFQX0xJTkVBUlwiLDk5ODc6XCJMSU5FQVJfTUlQTUFQX0xJTkVBUlwiLDEwMjQwOlwiVEVYVFVSRV9NQUdfRklMVEVSXCIsMTAyNDE6XCJURVhUVVJFX01JTl9GSUxURVJcIiwxMDI0MjpcIlRFWFRVUkVfV1JBUF9TXCIsMTAyNDM6XCJURVhUVVJFX1dSQVBfVFwiLDEwNDk3OlwiUkVQRUFUXCIsMTA3NTI6XCJQT0xZR09OX09GRlNFVF9VTklUU1wiLDE2Mzg0OlwiQ09MT1JfQlVGRkVSX0JJVFwiLDMyNzY5OlwiQ09OU1RBTlRfQ09MT1JcIiwzMjc3MDpcIk9ORV9NSU5VU19DT05TVEFOVF9DT0xPUlwiLDMyNzcxOlwiQ09OU1RBTlRfQUxQSEFcIiwzMjc3MjpcIk9ORV9NSU5VU19DT05TVEFOVF9BTFBIQVwiLDMyNzczOlwiQkxFTkRfQ09MT1JcIiwzMjc3NDpcIkZVTkNfQUREXCIsMzI3Nzc6XCJCTEVORF9FUVVBVElPTl9SR0JcIiwzMjc3ODpcIkZVTkNfU1VCVFJBQ1RcIiwzMjc3OTpcIkZVTkNfUkVWRVJTRV9TVUJUUkFDVFwiLDMyODE5OlwiVU5TSUdORURfU0hPUlRfNF80XzRfNFwiLDMyODIwOlwiVU5TSUdORURfU0hPUlRfNV81XzVfMVwiLDMyODIzOlwiUE9MWUdPTl9PRkZTRVRfRklMTFwiLDMyODI0OlwiUE9MWUdPTl9PRkZTRVRfRkFDVE9SXCIsMzI4NTQ6XCJSR0JBNFwiLDMyODU1OlwiUkdCNV9BMVwiLDMyODczOlwiVEVYVFVSRV9CSU5ESU5HXzJEXCIsMzI5MjY6XCJTQU1QTEVfQUxQSEFfVE9fQ09WRVJBR0VcIiwzMjkyODpcIlNBTVBMRV9DT1ZFUkFHRVwiLDMyOTM2OlwiU0FNUExFX0JVRkZFUlNcIiwzMjkzNzpcIlNBTVBMRVNcIiwzMjkzODpcIlNBTVBMRV9DT1ZFUkFHRV9WQUxVRVwiLDMyOTM5OlwiU0FNUExFX0NPVkVSQUdFX0lOVkVSVFwiLDMyOTY4OlwiQkxFTkRfRFNUX1JHQlwiLDMyOTY5OlwiQkxFTkRfU1JDX1JHQlwiLDMyOTcwOlwiQkxFTkRfRFNUX0FMUEhBXCIsMzI5NzE6XCJCTEVORF9TUkNfQUxQSEFcIiwzMzA3MTpcIkNMQU1QX1RPX0VER0VcIiwzMzE3MDpcIkdFTkVSQVRFX01JUE1BUF9ISU5UXCIsMzMxODk6XCJERVBUSF9DT01QT05FTlQxNlwiLDMzMzA2OlwiREVQVEhfU1RFTkNJTF9BVFRBQ0hNRU5UXCIsMzMzMjE6XCJSOFwiLDMzNjM1OlwiVU5TSUdORURfU0hPUlRfNV82XzVcIiwzMzY0ODpcIk1JUlJPUkVEX1JFUEVBVFwiLDMzOTAxOlwiQUxJQVNFRF9QT0lOVF9TSVpFX1JBTkdFXCIsMzM5MDI6XCJBTElBU0VEX0xJTkVfV0lEVEhfUkFOR0VcIiwzMzk4NDpcIlRFWFRVUkUwXCIsMzM5ODU6XCJURVhUVVJFMVwiLDMzOTg2OlwiVEVYVFVSRTJcIiwzMzk4NzpcIlRFWFRVUkUzXCIsMzM5ODg6XCJURVhUVVJFNFwiLDMzOTg5OlwiVEVYVFVSRTVcIiwzMzk5MDpcIlRFWFRVUkU2XCIsMzM5OTE6XCJURVhUVVJFN1wiLDMzOTkyOlwiVEVYVFVSRThcIiwzMzk5MzpcIlRFWFRVUkU5XCIsMzM5OTQ6XCJURVhUVVJFMTBcIiwzMzk5NTpcIlRFWFRVUkUxMVwiLDMzOTk2OlwiVEVYVFVSRTEyXCIsMzM5OTc6XCJURVhUVVJFMTNcIiwzMzk5ODpcIlRFWFRVUkUxNFwiLDMzOTk5OlwiVEVYVFVSRTE1XCIsMzRlMzpcIlRFWFRVUkUxNlwiLDM0MDAxOlwiVEVYVFVSRTE3XCIsMzQwMDI6XCJURVhUVVJFMThcIiwzNDAwMzpcIlRFWFRVUkUxOVwiLDM0MDA0OlwiVEVYVFVSRTIwXCIsMzQwMDU6XCJURVhUVVJFMjFcIiwzNDAwNjpcIlRFWFRVUkUyMlwiLDM0MDA3OlwiVEVYVFVSRTIzXCIsMzQwMDg6XCJURVhUVVJFMjRcIiwzNDAwOTpcIlRFWFRVUkUyNVwiLDM0MDEwOlwiVEVYVFVSRTI2XCIsMzQwMTE6XCJURVhUVVJFMjdcIiwzNDAxMjpcIlRFWFRVUkUyOFwiLDM0MDEzOlwiVEVYVFVSRTI5XCIsMzQwMTQ6XCJURVhUVVJFMzBcIiwzNDAxNTpcIlRFWFRVUkUzMVwiLDM0MDE2OlwiQUNUSVZFX1RFWFRVUkVcIiwzNDAyNDpcIk1BWF9SRU5ERVJCVUZGRVJfU0laRVwiLDM0MDQxOlwiREVQVEhfU1RFTkNJTFwiLDM0MDU1OlwiSU5DUl9XUkFQXCIsMzQwNTY6XCJERUNSX1dSQVBcIiwzNDA2NzpcIlRFWFRVUkVfQ1VCRV9NQVBcIiwzNDA2ODpcIlRFWFRVUkVfQklORElOR19DVUJFX01BUFwiLDM0MDY5OlwiVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9YXCIsMzQwNzA6XCJURVhUVVJFX0NVQkVfTUFQX05FR0FUSVZFX1hcIiwzNDA3MTpcIlRFWFRVUkVfQ1VCRV9NQVBfUE9TSVRJVkVfWVwiLDM0MDcyOlwiVEVYVFVSRV9DVUJFX01BUF9ORUdBVElWRV9ZXCIsMzQwNzM6XCJURVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1pcIiwzNDA3NDpcIlRFWFRVUkVfQ1VCRV9NQVBfTkVHQVRJVkVfWlwiLDM0MDc2OlwiTUFYX0NVQkVfTUFQX1RFWFRVUkVfU0laRVwiLDM0MzM4OlwiVkVSVEVYX0FUVFJJQl9BUlJBWV9FTkFCTEVEXCIsMzQzMzk6XCJWRVJURVhfQVRUUklCX0FSUkFZX1NJWkVcIiwzNDM0MDpcIlZFUlRFWF9BVFRSSUJfQVJSQVlfU1RSSURFXCIsMzQzNDE6XCJWRVJURVhfQVRUUklCX0FSUkFZX1RZUEVcIiwzNDM0MjpcIkNVUlJFTlRfVkVSVEVYX0FUVFJJQlwiLDM0MzczOlwiVkVSVEVYX0FUVFJJQl9BUlJBWV9QT0lOVEVSXCIsMzQ0NjY6XCJOVU1fQ09NUFJFU1NFRF9URVhUVVJFX0ZPUk1BVFNcIiwzNDQ2NzpcIkNPTVBSRVNTRURfVEVYVFVSRV9GT1JNQVRTXCIsMzQ2NjA6XCJCVUZGRVJfU0laRVwiLDM0NjYxOlwiQlVGRkVSX1VTQUdFXCIsMzQ4MTY6XCJTVEVOQ0lMX0JBQ0tfRlVOQ1wiLDM0ODE3OlwiU1RFTkNJTF9CQUNLX0ZBSUxcIiwzNDgxODpcIlNURU5DSUxfQkFDS19QQVNTX0RFUFRIX0ZBSUxcIiwzNDgxOTpcIlNURU5DSUxfQkFDS19QQVNTX0RFUFRIX1BBU1NcIiwzNDg3NzpcIkJMRU5EX0VRVUFUSU9OX0FMUEhBXCIsMzQ5MjE6XCJNQVhfVkVSVEVYX0FUVFJJQlNcIiwzNDkyMjpcIlZFUlRFWF9BVFRSSUJfQVJSQVlfTk9STUFMSVpFRFwiLDM0OTMwOlwiTUFYX1RFWFRVUkVfSU1BR0VfVU5JVFNcIiwzNDk2MjpcIkFSUkFZX0JVRkZFUlwiLDM0OTYzOlwiRUxFTUVOVF9BUlJBWV9CVUZGRVJcIiwzNDk2NDpcIkFSUkFZX0JVRkZFUl9CSU5ESU5HXCIsMzQ5NjU6XCJFTEVNRU5UX0FSUkFZX0JVRkZFUl9CSU5ESU5HXCIsMzQ5NzU6XCJWRVJURVhfQVRUUklCX0FSUkFZX0JVRkZFUl9CSU5ESU5HXCIsMzUwNDA6XCJTVFJFQU1fRFJBV1wiLDM1MDQ0OlwiU1RBVElDX0RSQVdcIiwzNTA0ODpcIkRZTkFNSUNfRFJBV1wiLDM1NjMyOlwiRlJBR01FTlRfU0hBREVSXCIsMzU2MzM6XCJWRVJURVhfU0hBREVSXCIsMzU2NjA6XCJNQVhfVkVSVEVYX1RFWFRVUkVfSU1BR0VfVU5JVFNcIiwzNTY2MTpcIk1BWF9DT01CSU5FRF9URVhUVVJFX0lNQUdFX1VOSVRTXCIsMzU2NjM6XCJTSEFERVJfVFlQRVwiLDM1NjY0OlwiRkxPQVRfVkVDMlwiLDM1NjY1OlwiRkxPQVRfVkVDM1wiLDM1NjY2OlwiRkxPQVRfVkVDNFwiLDM1NjY3OlwiSU5UX1ZFQzJcIiwzNTY2ODpcIklOVF9WRUMzXCIsMzU2Njk6XCJJTlRfVkVDNFwiLDM1NjcwOlwiQk9PTFwiLDM1NjcxOlwiQk9PTF9WRUMyXCIsMzU2NzI6XCJCT09MX1ZFQzNcIiwzNTY3MzpcIkJPT0xfVkVDNFwiLDM1Njc0OlwiRkxPQVRfTUFUMlwiLDM1Njc1OlwiRkxPQVRfTUFUM1wiLDM1Njc2OlwiRkxPQVRfTUFUNFwiLDM1Njc4OlwiU0FNUExFUl8yRFwiLDM1NjgwOlwiU0FNUExFUl9DVUJFXCIsMzU3MTI6XCJERUxFVEVfU1RBVFVTXCIsMzU3MTM6XCJDT01QSUxFX1NUQVRVU1wiLDM1NzE0OlwiTElOS19TVEFUVVNcIiwzNTcxNTpcIlZBTElEQVRFX1NUQVRVU1wiLDM1NzE2OlwiSU5GT19MT0dfTEVOR1RIXCIsMzU3MTc6XCJBVFRBQ0hFRF9TSEFERVJTXCIsMzU3MTg6XCJBQ1RJVkVfVU5JRk9STVNcIiwzNTcxOTpcIkFDVElWRV9VTklGT1JNX01BWF9MRU5HVEhcIiwzNTcyMDpcIlNIQURFUl9TT1VSQ0VfTEVOR1RIXCIsMzU3MjE6XCJBQ1RJVkVfQVRUUklCVVRFU1wiLDM1NzIyOlwiQUNUSVZFX0FUVFJJQlVURV9NQVhfTEVOR1RIXCIsMzU3MjQ6XCJTSEFESU5HX0xBTkdVQUdFX1ZFUlNJT05cIiwzNTcyNTpcIkNVUlJFTlRfUFJPR1JBTVwiLDM2MDAzOlwiU1RFTkNJTF9CQUNLX1JFRlwiLDM2MDA0OlwiU1RFTkNJTF9CQUNLX1ZBTFVFX01BU0tcIiwzNjAwNTpcIlNURU5DSUxfQkFDS19XUklURU1BU0tcIiwzNjAwNjpcIkZSQU1FQlVGRkVSX0JJTkRJTkdcIiwzNjAwNzpcIlJFTkRFUkJVRkZFUl9CSU5ESU5HXCIsMzYwNDg6XCJGUkFNRUJVRkZFUl9BVFRBQ0hNRU5UX09CSkVDVF9UWVBFXCIsMzYwNDk6XCJGUkFNRUJVRkZFUl9BVFRBQ0hNRU5UX09CSkVDVF9OQU1FXCIsMzYwNTA6XCJGUkFNRUJVRkZFUl9BVFRBQ0hNRU5UX1RFWFRVUkVfTEVWRUxcIiwzNjA1MTpcIkZSQU1FQlVGRkVSX0FUVEFDSE1FTlRfVEVYVFVSRV9DVUJFX01BUF9GQUNFXCIsMzYwNTM6XCJGUkFNRUJVRkZFUl9DT01QTEVURVwiLDM2MDU0OlwiRlJBTUVCVUZGRVJfSU5DT01QTEVURV9BVFRBQ0hNRU5UXCIsMzYwNTU6XCJGUkFNRUJVRkZFUl9JTkNPTVBMRVRFX01JU1NJTkdfQVRUQUNITUVOVFwiLDM2MDU3OlwiRlJBTUVCVUZGRVJfSU5DT01QTEVURV9ESU1FTlNJT05TXCIsMzYwNjE6XCJGUkFNRUJVRkZFUl9VTlNVUFBPUlRFRFwiLDM2MDY0OlwiQ09MT1JfQVRUQUNITUVOVDBcIiwzNjA5NjpcIkRFUFRIX0FUVEFDSE1FTlRcIiwzNjEyODpcIlNURU5DSUxfQVRUQUNITUVOVFwiLDM2MTYwOlwiRlJBTUVCVUZGRVJcIiwzNjE2MTpcIlJFTkRFUkJVRkZFUlwiLDM2MTYyOlwiUkVOREVSQlVGRkVSX1dJRFRIXCIsMzYxNjM6XCJSRU5ERVJCVUZGRVJfSEVJR0hUXCIsMzYxNjQ6XCJSRU5ERVJCVUZGRVJfSU5URVJOQUxfRk9STUFUXCIsMzYxNjg6XCJTVEVOQ0lMX0lOREVYOFwiLDM2MTc2OlwiUkVOREVSQlVGRkVSX1JFRF9TSVpFXCIsMzYxNzc6XCJSRU5ERVJCVUZGRVJfR1JFRU5fU0laRVwiLDM2MTc4OlwiUkVOREVSQlVGRkVSX0JMVUVfU0laRVwiLDM2MTc5OlwiUkVOREVSQlVGRkVSX0FMUEhBX1NJWkVcIiwzNjE4MDpcIlJFTkRFUkJVRkZFUl9ERVBUSF9TSVpFXCIsMzYxODE6XCJSRU5ERVJCVUZGRVJfU1RFTkNJTF9TSVpFXCIsMzYxOTQ6XCJSR0I1NjVcIiwzNjMzNjpcIkxPV19GTE9BVFwiLDM2MzM3OlwiTUVESVVNX0ZMT0FUXCIsMzYzMzg6XCJISUdIX0ZMT0FUXCIsMzYzMzk6XCJMT1dfSU5UXCIsMzYzNDA6XCJNRURJVU1fSU5UXCIsMzYzNDE6XCJISUdIX0lOVFwiLDM2MzQ2OlwiU0hBREVSX0NPTVBJTEVSXCIsMzYzNDc6XCJNQVhfVkVSVEVYX1VOSUZPUk1fVkVDVE9SU1wiLDM2MzQ4OlwiTUFYX1ZBUllJTkdfVkVDVE9SU1wiLDM2MzQ5OlwiTUFYX0ZSQUdNRU5UX1VOSUZPUk1fVkVDVE9SU1wiLDM3NDQwOlwiVU5QQUNLX0ZMSVBfWV9XRUJHTFwiLDM3NDQxOlwiVU5QQUNLX1BSRU1VTFRJUExZX0FMUEhBX1dFQkdMXCIsMzc0NDI6XCJDT05URVhUX0xPU1RfV0VCR0xcIiwzNzQ0MzpcIlVOUEFDS19DT0xPUlNQQUNFX0NPTlZFUlNJT05fV0VCR0xcIiwzNzQ0NDpcIkJST1dTRVJfREVGQVVMVF9XRUJHTFwifX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fWZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHwhMSxkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBkZXNjcmlwdG9yJiYoZGVzY3JpcHRvci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxkZXNjcmlwdG9yLmtleSxkZXNjcmlwdG9yKX19cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe3JldHVybiBwcm90b1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSxwcm90b1Byb3BzKSxzdGF0aWNQcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyksQ29uc3RydWN0b3J9fSgpLF9HTFNoYWRlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDIpLF9HTFNoYWRlcjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfR0xTaGFkZXIpLF9GcmFtZUJ1ZmZlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDEyKSxfRnJhbWVCdWZmZXIyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0ZyYW1lQnVmZmVyKSxfU2hhZGVyTGlicz1fX3dlYnBhY2tfcmVxdWlyZV9fKDMyKSxfU2hhZGVyTGliczI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfU2hhZGVyTGlicyksUGFzcz1mdW5jdGlvbigpe2Z1bmN0aW9uIFBhc3MobVNvdXJjZSl7dmFyIG1XaWR0aD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06MCxtSGVpZ2h0PWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTowO2FyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdJiZhcmd1bWVudHNbM107X2NsYXNzQ2FsbENoZWNrKHRoaXMsUGFzcyksdGhpcy5zaGFkZXI9bmV3IF9HTFNoYWRlcjIuZGVmYXVsdChfU2hhZGVyTGliczIuZGVmYXVsdC5iaWdUcmlhbmdsZVZlcnQsbVNvdXJjZSksdGhpcy5fd2lkdGg9bVdpZHRoLHRoaXMuX2hlaWdodD1tSGVpZ2h0LHRoaXMuX3VuaWZvcm1zPXt9LHRoaXMuX2hhc093bkZibz10aGlzLl93aWR0aD4wJiZ0aGlzLl93aWR0aD4wLHRoaXMuX3VuaWZvcm1zPXt9LHRoaXMuX2hhc093bkZibyYmKHRoaXMuX2Zibz1uZXcgX0ZyYW1lQnVmZmVyMi5kZWZhdWx0KHRoaXMuX3dpZHRoLHRoaXMuaGVpZ2h0LG1QYXJtYXMpKX1yZXR1cm4gX2NyZWF0ZUNsYXNzKFBhc3MsW3trZXk6XCJ1bmlmb3JtXCIsdmFsdWU6ZnVuY3Rpb24obU5hbWUsbVZhbHVlKXt0aGlzLl91bmlmb3Jtc1ttTmFtZV09bVZhbHVlfX0se2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKHRleHR1cmUpe3RoaXMuc2hhZGVyLmJpbmQoKSx0aGlzLnNoYWRlci51bmlmb3JtKFwidGV4dHVyZVwiLFwidW5pZm9ybTFpXCIsMCksdGV4dHVyZS5iaW5kKDApLHRoaXMuc2hhZGVyLnVuaWZvcm0odGhpcy5fdW5pZm9ybXMpfX0se2tleTpcIndpZHRoXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dpZHRofX0se2tleTpcImhlaWdodFwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9oZWlnaHR9fSx7a2V5OlwiZmJvXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Zib319LHtrZXk6XCJoYXNGYm9cIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faGFzT3duRmJvfX1dKSxQYXNzfSgpO2V4cG9ydHMuZGVmYXVsdD1QYXNzfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9XCIvLyBzaW1wbGVDb2xvci5mcmFnXFxuXFxuI2RlZmluZSBTSEFERVJfTkFNRSBTSU1QTEVfQ09MT1JcXG5cXG5wcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcXG4jZGVmaW5lIEdMU0xJRlkgMVxcblxcbnVuaWZvcm0gdmVjMyBjb2xvcjtcXG51bmlmb3JtIGZsb2F0IG9wYWNpdHk7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gICAgZ2xfRnJhZ0NvbG9yID0gdmVjNChjb2xvciwgb3BhY2l0eSk7XFxufVwifSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9XCIvLyBiYXNpYy52ZXJ0XFxuXFxuI2RlZmluZSBTSEFERVJfTkFNRSBCQVNJQ19WRVJURVhcXG5cXG5wcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuI2RlZmluZSBHTFNMSUZZIDFcXG5hdHRyaWJ1dGUgdmVjMyBhVmVydGV4UG9zaXRpb247XFxuYXR0cmlidXRlIHZlYzIgYVRleHR1cmVDb29yZDtcXG5hdHRyaWJ1dGUgdmVjMyBhTm9ybWFsO1xcblxcbnVuaWZvcm0gbWF0NCB1TW9kZWxNYXRyaXg7XFxudW5pZm9ybSBtYXQ0IHVWaWV3TWF0cml4O1xcbnVuaWZvcm0gbWF0NCB1UHJvamVjdGlvbk1hdHJpeDtcXG5cXG52YXJ5aW5nIHZlYzIgdlRleHR1cmVDb29yZDtcXG52YXJ5aW5nIHZlYzMgdk5vcm1hbDtcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgICBnbF9Qb3NpdGlvbiA9IHVQcm9qZWN0aW9uTWF0cml4ICogdVZpZXdNYXRyaXggKiB1TW9kZWxNYXRyaXggKiB2ZWM0KGFWZXJ0ZXhQb3NpdGlvbiwgMS4wKTtcXG4gICAgdlRleHR1cmVDb29yZCA9IGFUZXh0dXJlQ29vcmQ7XFxuICAgIHZOb3JtYWwgPSBhTm9ybWFsO1xcbn1cIn0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fWZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHwhMSxkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBkZXNjcmlwdG9yJiYoZGVzY3JpcHRvci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxkZXNjcmlwdG9yLmtleSxkZXNjcmlwdG9yKX19cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe3JldHVybiBwcm90b1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSxwcm90b1Byb3BzKSxzdGF0aWNQcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyksQ29uc3RydWN0b3J9fSgpLF9HTFRvb2w9X193ZWJwYWNrX3JlcXVpcmVfXygwKSxfR0xUb29sMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HTFRvb2wpLF9HTFRleHR1cmU9X193ZWJwYWNrX3JlcXVpcmVfXygyNiksX0dMVGV4dHVyZTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfR0xUZXh0dXJlKSxfV2ViZ2xOdW1iZXI9X193ZWJwYWNrX3JlcXVpcmVfXyg4KSxfV2ViZ2xOdW1iZXIyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1dlYmdsTnVtYmVyKSxnbD12b2lkIDAsd2ViZ2xEZXB0aFRleHR1cmU9dm9pZCAwLGhhc0NoZWNrZWRNdWx0aVJlbmRlclN1cHBvcnQ9ITEsZXh0RHJhd0J1ZmZlcj12b2lkIDAsY2hlY2tNdWx0aVJlbmRlcj1mdW5jdGlvbigpe3JldHVybiEhX0dMVG9vbDIuZGVmYXVsdC53ZWJnbDJ8fCEhKGV4dERyYXdCdWZmZXI9X0dMVG9vbDIuZGVmYXVsdC5nZXRFeHRlbnNpb24oXCJXRUJHTF9kcmF3X2J1ZmZlcnNcIikpfSxGcmFtZUJ1ZmZlcj1mdW5jdGlvbigpe2Z1bmN0aW9uIEZyYW1lQnVmZmVyKG1XaWR0aCxtSGVpZ2h0KXt2YXIgbVBhcmFtZXRlcnM9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOnt9LG1OdW1UYXJnZXRzPWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXToxO19jbGFzc0NhbGxDaGVjayh0aGlzLEZyYW1lQnVmZmVyKSxnbD1fR0xUb29sMi5kZWZhdWx0LmdsLHdlYmdsRGVwdGhUZXh0dXJlPV9HTFRvb2wyLmRlZmF1bHQuY2hlY2tFeHRlbnNpb24oXCJXRUJHTF9kZXB0aF90ZXh0dXJlXCIpLHRoaXMud2lkdGg9bVdpZHRoLHRoaXMuaGVpZ2h0PW1IZWlnaHQsdGhpcy5fbnVtVGFyZ2V0cz1tTnVtVGFyZ2V0cyx0aGlzLl9tdWx0aXBsZVRhcmdldHM9bU51bVRhcmdldHM+MSx0aGlzLl9wYXJhbWV0ZXJzPW1QYXJhbWV0ZXJzLGhhc0NoZWNrZWRNdWx0aVJlbmRlclN1cHBvcnR8fGNoZWNrTXVsdGlSZW5kZXIoKSx0aGlzLl9tdWx0aXBsZVRhcmdldHMmJnRoaXMuX2NoZWNrTWF4TnVtUmVuZGVyVGFyZ2V0KCksdGhpcy5faW5pdCgpfXJldHVybiBfY3JlYXRlQ2xhc3MoRnJhbWVCdWZmZXIsW3trZXk6XCJfaW5pdFwiLHZhbHVlOmZ1bmN0aW9uKCl7aWYodGhpcy5faW5pdFRleHR1cmVzKCksdGhpcy5mcmFtZUJ1ZmZlcj1nbC5jcmVhdGVGcmFtZWJ1ZmZlcigpLGdsLmJpbmRGcmFtZWJ1ZmZlcihnbC5GUkFNRUJVRkZFUix0aGlzLmZyYW1lQnVmZmVyKSxfR0xUb29sMi5kZWZhdWx0LndlYmdsMil7Zm9yKHZhciBidWZmZXJzPVtdLGk9MDtpPHRoaXMuX251bVRhcmdldHM7aSsrKWdsLmZyYW1lYnVmZmVyVGV4dHVyZTJEKGdsLkRSQVdfRlJBTUVCVUZGRVIsZ2wuQ09MT1JfQVRUQUNITUVOVDAraSxnbC5URVhUVVJFXzJELHRoaXMuX3RleHR1cmVzW2ldLnRleHR1cmUsMCksYnVmZmVycy5wdXNoKGdsW1wiQ09MT1JfQVRUQUNITUVOVFwiK2ldKTtnbC5kcmF3QnVmZmVycyhidWZmZXJzKSxnbC5mcmFtZWJ1ZmZlclRleHR1cmUyRChnbC5EUkFXX0ZSQU1FQlVGRkVSLGdsLkRFUFRIX0FUVEFDSE1FTlQsZ2wuVEVYVFVSRV8yRCx0aGlzLmdsRGVwdGhUZXh0dXJlLnRleHR1cmUsMCl9ZWxzZXtmb3IodmFyIF9pPTA7X2k8dGhpcy5fbnVtVGFyZ2V0cztfaSsrKWdsLmZyYW1lYnVmZmVyVGV4dHVyZTJEKGdsLkZSQU1FQlVGRkVSLGdsLkNPTE9SX0FUVEFDSE1FTlQwK19pLGdsLlRFWFRVUkVfMkQsdGhpcy5fdGV4dHVyZXNbX2ldLnRleHR1cmUsMCk7aWYodGhpcy5fbXVsdGlwbGVUYXJnZXRzKXtmb3IodmFyIGRyYXdCdWZmZXJzPVtdLF9pMj0wO19pMjx0aGlzLl9udW1UYXJnZXRzO19pMisrKWRyYXdCdWZmZXJzLnB1c2goZXh0RHJhd0J1ZmZlcltcIkNPTE9SX0FUVEFDSE1FTlRcIitfaTIrXCJfV0VCR0xcIl0pO2V4dERyYXdCdWZmZXIuZHJhd0J1ZmZlcnNXRUJHTChkcmF3QnVmZmVycyl9d2ViZ2xEZXB0aFRleHR1cmUmJmdsLmZyYW1lYnVmZmVyVGV4dHVyZTJEKGdsLkZSQU1FQlVGRkVSLGdsLkRFUFRIX0FUVEFDSE1FTlQsZ2wuVEVYVFVSRV8yRCx0aGlzLmdsRGVwdGhUZXh0dXJlLnRleHR1cmUsMCl9dmFyIEZCT3N0YXR1cz1nbC5jaGVja0ZyYW1lYnVmZmVyU3RhdHVzKGdsLkZSQU1FQlVGRkVSKTtGQk9zdGF0dXMhPWdsLkZSQU1FQlVGRkVSX0NPTVBMRVRFJiZjb25zb2xlLmVycm9yKFwiR0xfRlJBTUVCVUZGRVJfQ09NUExFVEUgZmFpbGVkLCBDQU5OT1QgdXNlIEZyYW1lYnVmZmVyXCIsX1dlYmdsTnVtYmVyMi5kZWZhdWx0W0ZCT3N0YXR1c10pLGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsbnVsbCksZ2wuYmluZFJlbmRlcmJ1ZmZlcihnbC5SRU5ERVJCVUZGRVIsbnVsbCksZ2wuYmluZEZyYW1lYnVmZmVyKGdsLkZSQU1FQlVGRkVSLG51bGwpLHRoaXMuY2xlYXIoKX19LHtrZXk6XCJfY2hlY2tNYXhOdW1SZW5kZXJUYXJnZXRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBtYXhOdW1EcmF3QnVmZmVycz1fR0xUb29sMi5kZWZhdWx0LmdsLmdldFBhcmFtZXRlcihleHREcmF3QnVmZmVyLk1BWF9EUkFXX0JVRkZFUlNfV0VCR0wpO3RoaXMuX251bVRhcmdldHM+bWF4TnVtRHJhd0J1ZmZlcnMmJihjb25zb2xlLmVycm9yKFwiT3ZlciBtYXggbnVtYmVyIG9mIGRyYXcgYnVmZmVycyBzdXBwb3J0ZWQgOiBcIixtYXhOdW1EcmF3QnVmZmVycyksdGhpcy5fbnVtVGFyZ2V0cz1tYXhOdW1EcmF3QnVmZmVycyl9fSx7a2V5OlwiX2luaXRUZXh0dXJlc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fdGV4dHVyZXM9W107Zm9yKHZhciBpPTA7aTx0aGlzLl9udW1UYXJnZXRzO2krKyl7dmFyIGdsdD10aGlzLl9jcmVhdGVUZXh0dXJlKCk7dGhpcy5fdGV4dHVyZXMucHVzaChnbHQpfV9HTFRvb2wyLmRlZmF1bHQud2ViZ2wyP3RoaXMuZ2xEZXB0aFRleHR1cmU9dGhpcy5fY3JlYXRlVGV4dHVyZShnbC5ERVBUSF9DT01QT05FTlQxNixnbC5VTlNJR05FRF9TSE9SVCxnbC5ERVBUSF9DT01QT05FTlQsITApOnRoaXMuZ2xEZXB0aFRleHR1cmU9dGhpcy5fY3JlYXRlVGV4dHVyZShnbC5ERVBUSF9DT01QT05FTlQsZ2wuVU5TSUdORURfU0hPUlQsZ2wuREVQVEhfQ09NUE9ORU5ULHttaW5GaWx0ZXI6X0dMVG9vbDIuZGVmYXVsdC5MSU5FQVJ9KX19LHtrZXk6XCJfY3JlYXRlVGV4dHVyZVwiLHZhbHVlOmZ1bmN0aW9uKG1JbnRlcm5hbGZvcm1hdCxtVGV4ZWxUeXBlLG1Gb3JtYXQpe3ZhciBtUGFyYW1ldGVycz1hcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106e30scGFyYW1ldGVycz1PYmplY3QuYXNzaWduKHt9LHRoaXMuX3BhcmFtZXRlcnMpO21Gb3JtYXR8fChtRm9ybWF0PW1JbnRlcm5hbGZvcm1hdCkscGFyYW1ldGVycy5pbnRlcm5hbEZvcm1hdD1tSW50ZXJuYWxmb3JtYXR8fGdsLlJHQkEscGFyYW1ldGVycy5mb3JtYXQ9bUZvcm1hdCxwYXJhbWV0ZXJzLnR5cGU9bVRleGVsVHlwZXx8cGFyYW1ldGVycy50eXBlfHxfR0xUb29sMi5kZWZhdWx0LlVOU0lHTkVEX0JZVEU7Zm9yKHZhciBzIGluIG1QYXJhbWV0ZXJzKXBhcmFtZXRlcnNbc109bVBhcmFtZXRlcnNbc107cmV0dXJuIG5ldyBfR0xUZXh0dXJlMi5kZWZhdWx0KG51bGwscGFyYW1ldGVycyx0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KX19LHtrZXk6XCJiaW5kXCIsdmFsdWU6ZnVuY3Rpb24oKXsoIShhcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXSl8fGFyZ3VtZW50c1swXSkmJl9HTFRvb2wyLmRlZmF1bHQudmlld3BvcnQoMCwwLHRoaXMud2lkdGgsdGhpcy5oZWlnaHQpLGdsLmJpbmRGcmFtZWJ1ZmZlcihnbC5GUkFNRUJVRkZFUix0aGlzLmZyYW1lQnVmZmVyKX19LHtrZXk6XCJ1bmJpbmRcIix2YWx1ZTpmdW5jdGlvbigpeyghKGFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdKXx8YXJndW1lbnRzWzBdKSYmX0dMVG9vbDIuZGVmYXVsdC52aWV3cG9ydCgwLDAsX0dMVG9vbDIuZGVmYXVsdC53aWR0aCxfR0xUb29sMi5kZWZhdWx0LmhlaWdodCksZ2wuYmluZEZyYW1lYnVmZmVyKGdsLkZSQU1FQlVGRkVSLG51bGwpLHRoaXMuX3RleHR1cmVzLmZvckVhY2goZnVuY3Rpb24odGV4dHVyZSl7dGV4dHVyZS5nZW5lcmF0ZU1pcG1hcCgpfSl9fSx7a2V5OlwiY2xlYXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciByPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTowLGc9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOjAsYj1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06MCxhPWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTowO3RoaXMuYmluZCgpLF9HTFRvb2wyLmRlZmF1bHQuY2xlYXIocixnLGIsYSksdGhpcy51bmJpbmQoKX19LHtrZXk6XCJnZXRUZXh0dXJlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgbUluZGV4PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTowO3JldHVybiB0aGlzLl90ZXh0dXJlc1ttSW5kZXhdfX0se2tleTpcImdldERlcHRoVGV4dHVyZVwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2xEZXB0aFRleHR1cmV9fSx7a2V5Olwic2hvd1BhcmFtZXRlcnNcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX3RleHR1cmVzWzBdLnNob3dQYXJhbWV0ZXJzKCl9fSx7a2V5OlwibWluRmlsdGVyXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RleHR1cmVzWzBdLm1pbkZpbHRlcn0sc2V0OmZ1bmN0aW9uKG1WYWx1ZSl7dGhpcy5fdGV4dHVyZXMuZm9yRWFjaChmdW5jdGlvbih0ZXh0dXJlKXt0ZXh0dXJlLm1pbkZpbHRlcj1tVmFsdWV9KX19LHtrZXk6XCJtYWdGaWx0ZXJcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGV4dHVyZXNbMF0ubWFnRmlsdGVyfSxzZXQ6ZnVuY3Rpb24obVZhbHVlKXt0aGlzLl90ZXh0dXJlcy5mb3JFYWNoKGZ1bmN0aW9uKHRleHR1cmUpe3RleHR1cmUubWFnRmlsdGVyPW1WYWx1ZX0pfX0se2tleTpcIndyYXBTXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RleHR1cmVzWzBdLndyYXBTfSxzZXQ6ZnVuY3Rpb24obVZhbHVlKXt0aGlzLl90ZXh0dXJlcy5mb3JFYWNoKGZ1bmN0aW9uKHRleHR1cmUpe3RleHR1cmUud3JhcFM9bVZhbHVlfSl9fSx7a2V5Olwid3JhcFRcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGV4dHVyZXNbMF0ud3JhcFR9LHNldDpmdW5jdGlvbihtVmFsdWUpe3RoaXMuX3RleHR1cmVzLmZvckVhY2goZnVuY3Rpb24odGV4dHVyZSl7dGV4dHVyZS53cmFwVD1tVmFsdWV9KX19LHtrZXk6XCJudW1UYXJnZXRzXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX251bVRhcmdldHN9fV0pLEZyYW1lQnVmZmVyfSgpO2V4cG9ydHMuZGVmYXVsdD1GcmFtZUJ1ZmZlcn0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIF9jcmVhdGVDbGFzcz1mdW5jdGlvbigpe2Z1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LHByb3BzKXtmb3IodmFyIGk9MDtpPHByb3BzLmxlbmd0aDtpKyspe3ZhciBkZXNjcmlwdG9yPXByb3BzW2ldO2Rlc2NyaXB0b3IuZW51bWVyYWJsZT1kZXNjcmlwdG9yLmVudW1lcmFibGV8fCExLGRlc2NyaXB0b3IuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGRlc2NyaXB0b3ImJihkZXNjcmlwdG9yLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LGRlc2NyaXB0b3Iua2V5LGRlc2NyaXB0b3IpfX1yZXR1cm4gZnVuY3Rpb24oQ29uc3RydWN0b3IscHJvdG9Qcm9wcyxzdGF0aWNQcm9wcyl7cmV0dXJuIHByb3RvUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLHByb3RvUHJvcHMpLHN0YXRpY1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLHN0YXRpY1Byb3BzKSxDb25zdHJ1Y3Rvcn19KCksX3NjaGVkdWxpbmc9X193ZWJwYWNrX3JlcXVpcmVfXyg2KSxfc2NoZWR1bGluZzI9ZnVuY3Rpb24ob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX0oX3NjaGVkdWxpbmcpLEVhc2VOdW1iZXI9ZnVuY3Rpb24oKXtmdW5jdGlvbiBFYXNlTnVtYmVyKG1WYWx1ZSl7dmFyIF90aGlzPXRoaXMsbUVhc2luZz1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06LjE7X2NsYXNzQ2FsbENoZWNrKHRoaXMsRWFzZU51bWJlciksdGhpcy5lYXNpbmc9bUVhc2luZyx0aGlzLl92YWx1ZT1tVmFsdWUsdGhpcy5fdGFyZ2V0VmFsdWU9bVZhbHVlLHRoaXMuX2VmSW5kZXg9X3NjaGVkdWxpbmcyLmRlZmF1bHQuYWRkRUYoZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuX3VwZGF0ZSgpfSl9cmV0dXJuIF9jcmVhdGVDbGFzcyhFYXNlTnVtYmVyLFt7a2V5OlwiX3VwZGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fY2hlY2tMaW1pdCgpLHRoaXMuX3ZhbHVlKz0odGhpcy5fdGFyZ2V0VmFsdWUtdGhpcy5fdmFsdWUpKnRoaXMuZWFzaW5nLE1hdGguYWJzKHRoaXMuX3RhcmdldFZhbHVlLXRoaXMuX3ZhbHVlKTwxZS00JiYodGhpcy5fdmFsdWU9dGhpcy5fdGFyZ2V0VmFsdWUpfX0se2tleTpcInNldFRvXCIsdmFsdWU6ZnVuY3Rpb24obVZhbHVlKXt0aGlzLl90YXJnZXRWYWx1ZT10aGlzLl92YWx1ZT1tVmFsdWV9fSx7a2V5OlwiYWRkXCIsdmFsdWU6ZnVuY3Rpb24obUFkZCl7dGhpcy5fdGFyZ2V0VmFsdWUrPW1BZGR9fSx7a2V5OlwibGltaXRcIix2YWx1ZTpmdW5jdGlvbihtTWluLG1NYXgpe2lmKG1NaW4+bU1heClyZXR1cm4gdm9pZCB0aGlzLmxpbWl0KG1NYXgsbU1pbik7dGhpcy5fbWluPW1NaW4sdGhpcy5fbWF4PW1NYXgsdGhpcy5fY2hlY2tMaW1pdCgpfX0se2tleTpcIl9jaGVja0xpbWl0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2b2lkIDAhPT10aGlzLl9taW4mJnRoaXMuX3RhcmdldFZhbHVlPHRoaXMuX21pbiYmKHRoaXMuX3RhcmdldFZhbHVlPXRoaXMuX21pbiksdm9pZCAwIT09dGhpcy5fbWF4JiZ0aGlzLl90YXJnZXRWYWx1ZT50aGlzLl9tYXgmJih0aGlzLl90YXJnZXRWYWx1ZT10aGlzLl9tYXgpfX0se2tleTpcImRlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe19zY2hlZHVsaW5nMi5kZWZhdWx0LnJlbW92ZUVGKHRoaXMuX2VmSW5kZXgpfX0se2tleTpcInZhbHVlXCIsc2V0OmZ1bmN0aW9uKG1WYWx1ZSl7dGhpcy5fdGFyZ2V0VmFsdWU9bVZhbHVlfSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmFsdWV9fSx7a2V5OlwidGFyZ2V0VmFsdWVcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGFyZ2V0VmFsdWV9fV0pLEVhc2VOdW1iZXJ9KCk7ZXhwb3J0cy5kZWZhdWx0PUVhc2VOdW1iZXJ9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHwhMSxkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBkZXNjcmlwdG9yJiYoZGVzY3JpcHRvci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxkZXNjcmlwdG9yLmtleSxkZXNjcmlwdG9yKX19cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe3JldHVybiBwcm90b1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSxwcm90b1Byb3BzKSxzdGF0aWNQcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyksQ29uc3RydWN0b3J9fSgpLF9nbE1hdHJpeD1fX3dlYnBhY2tfcmVxdWlyZV9fKDEpLGE9X2dsTWF0cml4LnZlYzMuY3JlYXRlKCksYj1fZ2xNYXRyaXgudmVjMy5jcmVhdGUoKSxjPV9nbE1hdHJpeC52ZWMzLmNyZWF0ZSgpLHRhcmdldD1fZ2xNYXRyaXgudmVjMy5jcmVhdGUoKSxlZGdlMT1fZ2xNYXRyaXgudmVjMy5jcmVhdGUoKSxlZGdlMj1fZ2xNYXRyaXgudmVjMy5jcmVhdGUoKSxub3JtYWw9X2dsTWF0cml4LnZlYzMuY3JlYXRlKCksZGlmZj1fZ2xNYXRyaXgudmVjMy5jcmVhdGUoKSxSYXk9ZnVuY3Rpb24oKXtmdW5jdGlvbiBSYXkobU9yaWdpbixtRGlyZWN0aW9uKXtfY2xhc3NDYWxsQ2hlY2sodGhpcyxSYXkpLHRoaXMub3JpZ2luPV9nbE1hdHJpeC52ZWMzLmNsb25lKG1PcmlnaW4pLHRoaXMuZGlyZWN0aW9uPV9nbE1hdHJpeC52ZWMzLmNsb25lKG1EaXJlY3Rpb24pfXJldHVybiBfY3JlYXRlQ2xhc3MoUmF5LFt7a2V5OlwiYXRcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gX2dsTWF0cml4LnZlYzMuY29weSh0YXJnZXQsdGhpcy5kaXJlY3Rpb24pLF9nbE1hdHJpeC52ZWMzLnNjYWxlKHRhcmdldCx0YXJnZXQsdCksX2dsTWF0cml4LnZlYzMuYWRkKHRhcmdldCx0YXJnZXQsdGhpcy5vcmlnaW4pLHRhcmdldH19LHtrZXk6XCJsb29rQXRcIix2YWx1ZTpmdW5jdGlvbihtVGFyZ2V0KXtfZ2xNYXRyaXgudmVjMy5zdWIodGhpcy5kaXJlY3Rpb24sbVRhcmdldCx0aGlzLm9yaWdpbiksX2dsTWF0cml4LnZlYzMubm9ybWFsaXplKHRoaXMub3JpZ2luLHRoaXMub3JpZ2luKX19LHtrZXk6XCJjbG9zZXN0UG9pbnRUb1BvaW50XCIsdmFsdWU6ZnVuY3Rpb24obVBvaW50KXt2YXIgcmVzdWx0PV9nbE1hdHJpeC52ZWMzLmNyZWF0ZSgpO19nbE1hdHJpeC52ZWMzLnN1YihtUG9pbnQsdGhpcy5vcmlnaW4pO3ZhciBkaXJlY3Rpb25EaXN0YW5jZT1fZ2xNYXRyaXgudmVjMy5kb3QocmVzdWx0LHRoaXMuZGlyZWN0aW9uKTtyZXR1cm4gZGlyZWN0aW9uRGlzdGFuY2U8MD9fZ2xNYXRyaXgudmVjMy5jbG9uZSh0aGlzLm9yaWdpbik6KF9nbE1hdHJpeC52ZWMzLmNvcHkocmVzdWx0LHRoaXMuZGlyZWN0aW9uKSxfZ2xNYXRyaXgudmVjMy5zY2FsZShyZXN1bHQscmVzdWx0LGRpcmVjdGlvbkRpc3RhbmNlKSxfZ2xNYXRyaXgudmVjMy5hZGQocmVzdWx0LHJlc3VsdCx0aGlzLm9yaWdpbikscmVzdWx0KX19LHtrZXk6XCJkaXN0YW5jZVRvUG9pbnRcIix2YWx1ZTpmdW5jdGlvbihtUG9pbnQpe3JldHVybiBNYXRoLnNxcnQodGhpcy5kaXN0YW5jZVNxVG9Qb2ludChtUG9pbnQpKX19LHtrZXk6XCJkaXN0YW5jZVNxVG9Qb2ludFwiLHZhbHVlOmZ1bmN0aW9uKG1Qb2ludCl7dmFyIHYxPV9nbE1hdHJpeC52ZWMzLmNyZWF0ZSgpO19nbE1hdHJpeC52ZWMzLnN1Yih2MSxtUG9pbnQsdGhpcy5vcmlnaW4pO3ZhciBkaXJlY3Rpb25EaXN0YW5jZT1fZ2xNYXRyaXgudmVjMy5kb3QodjEsdGhpcy5kaXJlY3Rpb24pO3JldHVybiBkaXJlY3Rpb25EaXN0YW5jZTwwP19nbE1hdHJpeC52ZWMzLnNxdWFyZWREaXN0YW5jZSh0aGlzLm9yaWdpbixtUG9pbnQpOihfZ2xNYXRyaXgudmVjMy5jb3B5KHYxLHRoaXMuZGlyZWN0aW9uKSxfZ2xNYXRyaXgudmVjMy5zY2FsZSh2MSx2MSxkaXJlY3Rpb25EaXN0YW5jZSksX2dsTWF0cml4LnZlYzMuYWRkKHYxLHYxLHRoaXMub3JpZ2luKSxfZ2xNYXRyaXgudmVjMy5zcXVhcmVkRGlzdGFuY2UodjEsbVBvaW50KSl9fSx7a2V5OlwiaW50ZXJzZWN0c1NwaGVyZVwiLHZhbHVlOmZ1bmN0aW9uKG1DZW50ZXIsbVJhZGl1cyl7cmV0dXJuIHRoaXMuZGlzdGFuY2VUb1BvaW50KG1DZW50ZXIpPD1tUmFkaXVzfX0se2tleTpcImludGVyc2VjdFNwaGVyZVwiLHZhbHVlOmZ1bmN0aW9uKG1DZW50ZXIsbVJhZGl1cyl7dmFyIHYxPV9nbE1hdHJpeC52ZWMzLmNyZWF0ZSgpO19nbE1hdHJpeC52ZWMzLnN1Yih2MSxtQ2VudGVyLHRoaXMub3JpZ2luKTt2YXIgdGNhPV9nbE1hdHJpeC52ZWMzLmRvdCh2MSx0aGlzLmRpcmVjdGlvbiksZDI9X2dsTWF0cml4LnZlYzMuZG90KHYxLHYxKS10Y2EqdGNhLHJhZGl1czI9bVJhZGl1cyptUmFkaXVzO2lmKGQyPnJhZGl1czIpcmV0dXJuIG51bGw7dmFyIHRoYz1NYXRoLnNxcnQocmFkaXVzMi1kMiksdDA9dGNhLXRoYyx0MT10Y2ErdGhjO3JldHVybiB0MDwwJiZ0MTwwP251bGw6dDA8MD90aGlzLmF0KHQxKTp0aGlzLmF0KHQwKX19LHtrZXk6XCJkaXN0YW5jZVRvUGxhbmVcIix2YWx1ZTpmdW5jdGlvbihtUGxhbmVDZW50ZXIsbU5vcm1hbCl7X2dsTWF0cml4LnZlYzMuZG90KG1Ob3JtYWwsdGhpcy5kaXJlY3Rpb24pfX0se2tleTpcImludGVyc2VjdFRyaWFuZ2xlXCIsdmFsdWU6ZnVuY3Rpb24obVBBLG1QQixtUEMpe3ZhciBiYWNrZmFjZUN1bGxpbmc9IShhcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXSl8fGFyZ3VtZW50c1szXTtfZ2xNYXRyaXgudmVjMy5jb3B5KGEsbVBBKSxfZ2xNYXRyaXgudmVjMy5jb3B5KGIsbVBCKSxfZ2xNYXRyaXgudmVjMy5jb3B5KGMsbVBDKSxfZ2xNYXRyaXgudmVjMy5zdWIoZWRnZTEsYixhKSxfZ2xNYXRyaXgudmVjMy5zdWIoZWRnZTIsYyxhKSxfZ2xNYXRyaXgudmVjMy5jcm9zcyhub3JtYWwsZWRnZTEsZWRnZTIpO3ZhciBEZE49X2dsTWF0cml4LnZlYzMuZG90KHRoaXMuZGlyZWN0aW9uLG5vcm1hbCksc2lnbj12b2lkIDA7aWYoRGROPjApe2lmKGJhY2tmYWNlQ3VsbGluZylyZXR1cm4gbnVsbDtzaWduPTF9ZWxzZXtpZighKERkTjwwKSlyZXR1cm4gbnVsbDtzaWduPS0xLERkTj0tRGROfV9nbE1hdHJpeC52ZWMzLnN1YihkaWZmLHRoaXMub3JpZ2luLGEpLF9nbE1hdHJpeC52ZWMzLmNyb3NzKGVkZ2UyLGRpZmYsZWRnZTIpO3ZhciBEZFF4RTI9c2lnbipfZ2xNYXRyaXgudmVjMy5kb3QodGhpcy5kaXJlY3Rpb24sZWRnZTIpO2lmKERkUXhFMjwwKXJldHVybiBudWxsO19nbE1hdHJpeC52ZWMzLmNyb3NzKGVkZ2UxLGVkZ2UxLGRpZmYpO3ZhciBEZEUxeFE9c2lnbipfZ2xNYXRyaXgudmVjMy5kb3QodGhpcy5kaXJlY3Rpb24sZWRnZTEpO2lmKERkRTF4UTwwKXJldHVybiBudWxsO2lmKERkUXhFMitEZEUxeFE+RGROKXJldHVybiBudWxsO3ZhciBRZG49LXNpZ24qX2dsTWF0cml4LnZlYzMuZG90KGRpZmYsbm9ybWFsKTtyZXR1cm4gUWRuPDA/bnVsbDp0aGlzLmF0KFFkbi9EZE4pfX1dKSxSYXl9KCk7ZXhwb3J0cy5kZWZhdWx0PVJheX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIF9jcmVhdGVDbGFzcz1mdW5jdGlvbigpe2Z1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LHByb3BzKXtmb3IodmFyIGk9MDtpPHByb3BzLmxlbmd0aDtpKyspe3ZhciBkZXNjcmlwdG9yPXByb3BzW2ldO2Rlc2NyaXB0b3IuZW51bWVyYWJsZT1kZXNjcmlwdG9yLmVudW1lcmFibGV8fCExLGRlc2NyaXB0b3IuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGRlc2NyaXB0b3ImJihkZXNjcmlwdG9yLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LGRlc2NyaXB0b3Iua2V5LGRlc2NyaXB0b3IpfX1yZXR1cm4gZnVuY3Rpb24oQ29uc3RydWN0b3IscHJvdG9Qcm9wcyxzdGF0aWNQcm9wcyl7cmV0dXJuIHByb3RvUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLHByb3RvUHJvcHMpLHN0YXRpY1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLHN0YXRpY1Byb3BzKSxDb25zdHJ1Y3Rvcn19KCksX2dsTWF0cml4PV9fd2VicGFja19yZXF1aXJlX18oMSksQ2FtZXJhPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gQ2FtZXJhKCl7X2NsYXNzQ2FsbENoZWNrKHRoaXMsQ2FtZXJhKSx0aGlzLl9tYXRyaXg9X2dsTWF0cml4Lm1hdDQuY3JlYXRlKCksdGhpcy5fcXVhdD1fZ2xNYXRyaXgucXVhdC5jcmVhdGUoKSx0aGlzLl9vcmllbnRhdGlvbj1fZ2xNYXRyaXgubWF0NC5jcmVhdGUoKSx0aGlzLl9wcm9qZWN0aW9uPV9nbE1hdHJpeC5tYXQ0LmNyZWF0ZSgpLHRoaXMucG9zaXRpb249dmVjMy5jcmVhdGUoKX1yZXR1cm4gX2NyZWF0ZUNsYXNzKENhbWVyYSxbe2tleTpcImxvb2tBdFwiLHZhbHVlOmZ1bmN0aW9uKGFFeWUsYUNlbnRlcil7dmFyIGFVcD1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06WzAsMSwwXTt0aGlzLl9leWU9dmVjMy5jbG9uZShhRXllKSx0aGlzLl9jZW50ZXI9dmVjMy5jbG9uZShhQ2VudGVyKSx2ZWMzLmNvcHkodGhpcy5wb3NpdGlvbixhRXllKSxfZ2xNYXRyaXgubWF0NC5pZGVudGl0eSh0aGlzLl9tYXRyaXgpLF9nbE1hdHJpeC5tYXQ0Lmxvb2tBdCh0aGlzLl9tYXRyaXgsYUV5ZSxhQ2VudGVyLGFVcCl9fSx7a2V5Olwic2V0RnJvbU9yaWVudGF0aW9uXCIsdmFsdWU6ZnVuY3Rpb24oeCx5LHosdyl7X2dsTWF0cml4LnF1YXQuc2V0KHRoaXMuX3F1YXQseCx5LHosdyksX2dsTWF0cml4Lm1hdDQuZnJvbVF1YXQodGhpcy5fb3JpZW50YXRpb24sdGhpcy5fcXVhdCksX2dsTWF0cml4Lm1hdDQudHJhbnNsYXRlKHRoaXMuX21hdHJpeCx0aGlzLl9vcmllbnRhdGlvbix0aGlzLnBvc2l0aW9uT2Zmc2V0KX19LHtrZXk6XCJzZXRQcm9qZWN0aW9uXCIsdmFsdWU6ZnVuY3Rpb24obVByb2ope3RoaXMuX3Byb2plY3Rpb249X2dsTWF0cml4Lm1hdDQuY2xvbmUobVByb2opfX0se2tleTpcInNldFZpZXdcIix2YWx1ZTpmdW5jdGlvbihtVmlldyl7dGhpcy5fbWF0cml4PV9nbE1hdHJpeC5tYXQ0LmNsb25lKG1WaWV3KX19LHtrZXk6XCJzZXRGcm9tVmlld1Byb2pcIix2YWx1ZTpmdW5jdGlvbihtVmlldyxtUHJvail7dGhpcy5zZXRWaWV3KG1WaWV3KSx0aGlzLnNldFByb2plY3Rpb24obVByb2opfX0se2tleTpcIm1hdHJpeFwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tYXRyaXh9fSx7a2V5Olwidmlld01hdHJpeFwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tYXRyaXh9fSx7a2V5OlwicHJvamVjdGlvblwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcm9qZWN0aW9ufX0se2tleTpcInByb2plY3Rpb25NYXRyaXhcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcHJvamVjdGlvbn19LHtrZXk6XCJleWVcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZXllfX0se2tleTpcImNlbnRlclwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jZW50ZXJ9fV0pLENhbWVyYX0oKTtleHBvcnRzLmRlZmF1bHQ9Q2FtZXJhfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZixjYWxsKXtpZighc2VsZil0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIWNhbGx8fFwib2JqZWN0XCIhPXR5cGVvZiBjYWxsJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBjYWxsP3NlbGY6Y2FsbH1mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3Msc3VwZXJDbGFzcyl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2Ygc3VwZXJDbGFzcyYmbnVsbCE9PXN1cGVyQ2xhc3MpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHN1cGVyQ2xhc3MpO3N1YkNsYXNzLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MmJnN1cGVyQ2xhc3MucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6c3ViQ2xhc3MsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksc3VwZXJDbGFzcyYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3Msc3VwZXJDbGFzcyk6c3ViQ2xhc3MuX19wcm90b19fPXN1cGVyQ2xhc3MpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHwhMSxkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBkZXNjcmlwdG9yJiYoZGVzY3JpcHRvci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxkZXNjcmlwdG9yLmtleSxkZXNjcmlwdG9yKX19cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe3JldHVybiBwcm90b1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSxwcm90b1Byb3BzKSxzdGF0aWNQcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyksQ29uc3RydWN0b3J9fSgpLF9DYW1lcmEyPV9fd2VicGFja19yZXF1aXJlX18oMTUpLF9DYW1lcmEzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0NhbWVyYTIpLF9SYXk9X193ZWJwYWNrX3JlcXVpcmVfXygxNCksX1JheTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfUmF5KSxfZ2xNYXRyaXg9X193ZWJwYWNrX3JlcXVpcmVfXygxKSxtSW52ZXJzZVZpZXdQcm9qPV9nbE1hdHJpeC5tYXQ0LmNyZWF0ZSgpLGNhbWVyYURpcj1fZ2xNYXRyaXgudmVjMy5jcmVhdGUoKSxDYW1lcmFQZXJzcGVjdGl2ZT1mdW5jdGlvbihfQ2FtZXJhKXtmdW5jdGlvbiBDYW1lcmFQZXJzcGVjdGl2ZSgpe3JldHVybiBfY2xhc3NDYWxsQ2hlY2sodGhpcyxDYW1lcmFQZXJzcGVjdGl2ZSksX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywoQ2FtZXJhUGVyc3BlY3RpdmUuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YoQ2FtZXJhUGVyc3BlY3RpdmUpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBfaW5oZXJpdHMoQ2FtZXJhUGVyc3BlY3RpdmUsX0NhbWVyYSksX2NyZWF0ZUNsYXNzKENhbWVyYVBlcnNwZWN0aXZlLFt7a2V5Olwic2V0UGVyc3BlY3RpdmVcIix2YWx1ZTpmdW5jdGlvbihtRm92LG1Bc3BlY3RSYXRpbyxtTmVhcixtRmFyKXt0aGlzLl9mb3Y9bUZvdix0aGlzLl9uZWFyPW1OZWFyLHRoaXMuX2Zhcj1tRmFyLHRoaXMuX2FzcGVjdFJhdGlvPW1Bc3BlY3RSYXRpbyxfZ2xNYXRyaXgubWF0NC5wZXJzcGVjdGl2ZSh0aGlzLl9wcm9qZWN0aW9uLG1Gb3YsbUFzcGVjdFJhdGlvLG1OZWFyLG1GYXIpfX0se2tleTpcInNldEFzcGVjdFJhdGlvXCIsdmFsdWU6ZnVuY3Rpb24obUFzcGVjdFJhdGlvKXt0aGlzLl9hc3BlY3RSYXRpbz1tQXNwZWN0UmF0aW8sX2dsTWF0cml4Lm1hdDQucGVyc3BlY3RpdmUodGhpcy5wcm9qZWN0aW9uLHRoaXMuX2ZvdixtQXNwZWN0UmF0aW8sdGhpcy5fbmVhcix0aGlzLl9mYXIpfX0se2tleTpcImdlbmVyYXRlUmF5XCIsdmFsdWU6ZnVuY3Rpb24obVNjcmVlblBvc2l0aW9uLG1SYXkpe3ZhciBwcm9qPXRoaXMucHJvamVjdGlvbk1hdHJpeCx2aWV3PXRoaXMudmlld01hdHJpeDtyZXR1cm4gX2dsTWF0cml4Lm1hdDQubXVsdGlwbHkobUludmVyc2VWaWV3UHJvaixwcm9qLHZpZXcpLF9nbE1hdHJpeC5tYXQ0LmludmVydChtSW52ZXJzZVZpZXdQcm9qLG1JbnZlcnNlVmlld1Byb2opLF9nbE1hdHJpeC52ZWMzLnRyYW5zZm9ybU1hdDQoY2FtZXJhRGlyLG1TY3JlZW5Qb3NpdGlvbixtSW52ZXJzZVZpZXdQcm9qKSxfZ2xNYXRyaXgudmVjMy5zdWIoY2FtZXJhRGlyLGNhbWVyYURpcix0aGlzLnBvc2l0aW9uKSxfZ2xNYXRyaXgudmVjMy5ub3JtYWxpemUoY2FtZXJhRGlyLGNhbWVyYURpciksbVJheT8obVJheS5vcmlnaW49dGhpcy5wb3NpdGlvbixtUmF5LmRpcmVjdGlvbj1jYW1lcmFEaXIpOm1SYXk9bmV3IF9SYXkyLmRlZmF1bHQodGhpcy5wb3NpdGlvbixjYW1lcmFEaXIpLG1SYXl9fV0pLENhbWVyYVBlcnNwZWN0aXZlfShfQ2FtZXJhMy5kZWZhdWx0KTtleHBvcnRzLmRlZmF1bHQ9Q2FtZXJhUGVyc3BlY3RpdmV9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHwhMSxkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBkZXNjcmlwdG9yJiYoZGVzY3JpcHRvci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxkZXNjcmlwdG9yLmtleSxkZXNjcmlwdG9yKX19cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe3JldHVybiBwcm90b1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSxwcm90b1Byb3BzKSxzdGF0aWNQcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyksQ29uc3RydWN0b3J9fSgpLEJpbmFyeUxvYWRlcj1mdW5jdGlvbigpe2Z1bmN0aW9uIEJpbmFyeUxvYWRlcigpe3ZhciBfdGhpcz10aGlzLGlzQXJyYXlCdWZmZXI9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0mJmFyZ3VtZW50c1swXTtfY2xhc3NDYWxsQ2hlY2sodGhpcyxCaW5hcnlMb2FkZXIpLHRoaXMuX3JlcT1uZXcgWE1MSHR0cFJlcXVlc3QsdGhpcy5fcmVxLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsZnVuY3Rpb24oZSl7cmV0dXJuIF90aGlzLl9vbkxvYWRlZChlKX0pLHRoaXMuX3JlcS5hZGRFdmVudExpc3RlbmVyKFwicHJvZ3Jlc3NcIixmdW5jdGlvbihlKXtyZXR1cm4gX3RoaXMuX29uUHJvZ3Jlc3MoZSl9KSxpc0FycmF5QnVmZmVyJiYodGhpcy5fcmVxLnJlc3BvbnNlVHlwZT1cImFycmF5YnVmZmVyXCIpfXJldHVybiBfY3JlYXRlQ2xhc3MoQmluYXJ5TG9hZGVyLFt7a2V5OlwibG9hZFwiLHZhbHVlOmZ1bmN0aW9uKHVybCxjYWxsYmFjayl7Y29uc29sZS5sb2coXCJMb2FkaW5nIDogXCIsdXJsKSx0aGlzLl9jYWxsYmFjaz1jYWxsYmFjayx0aGlzLl9yZXEub3BlbihcIkdFVFwiLHVybCksdGhpcy5fcmVxLnNlbmQoKX19LHtrZXk6XCJfb25Mb2FkZWRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX2NhbGxiYWNrKHRoaXMuX3JlcS5yZXNwb25zZSl9fSx7a2V5OlwiX29uUHJvZ3Jlc3NcIix2YWx1ZTpmdW5jdGlvbigpe319XSksQmluYXJ5TG9hZGVyfSgpO2V4cG9ydHMuZGVmYXVsdD1CaW5hcnlMb2FkZXJ9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1cIi8vIGJpZ1RyaWFuZ2xlLnZlcnRcXG5cXG4jZGVmaW5lIFNIQURFUl9OQU1FIEJJR19UUklBTkdMRV9WRVJURVhcXG5cXG5wcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcXG4jZGVmaW5lIEdMU0xJRlkgMVxcbmF0dHJpYnV0ZSB2ZWMyIGFQb3NpdGlvbjtcXG52YXJ5aW5nIHZlYzIgdlRleHR1cmVDb29yZDtcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgICBnbF9Qb3NpdGlvbiA9IHZlYzQoYVBvc2l0aW9uLCAwLjAsIDEuMCk7XFxuICAgIHZUZXh0dXJlQ29vcmQgPSBhUG9zaXRpb24gKiAuNSArIC41O1xcbn1cIn0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPVwiLy8gY29weS5mcmFnXFxuXFxuI2RlZmluZSBTSEFERVJfTkFNRSBDT1BZX0ZSQUdNRU5UXFxuXFxucHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7XFxuI2RlZmluZSBHTFNMSUZZIDFcXG5cXG52YXJ5aW5nIHZlYzIgdlRleHR1cmVDb29yZDtcXG51bmlmb3JtIHNhbXBsZXIyRCB0ZXh0dXJlO1xcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuICAgIGdsX0ZyYWdDb2xvciA9IHRleHR1cmUyRCh0ZXh0dXJlLCB2VGV4dHVyZUNvb3JkKTtcXG59XCJ9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGNyZWF0ZSgpe3ZhciBvdXQ9bmV3IGdsTWF0cml4LkFSUkFZX1RZUEUoOSk7cmV0dXJuIG91dFswXT0xLG91dFsxXT0wLG91dFsyXT0wLG91dFszXT0wLG91dFs0XT0xLG91dFs1XT0wLG91dFs2XT0wLG91dFs3XT0wLG91dFs4XT0xLG91dH1mdW5jdGlvbiBmcm9tTWF0NChvdXQsYSl7cmV0dXJuIG91dFswXT1hWzBdLG91dFsxXT1hWzFdLG91dFsyXT1hWzJdLG91dFszXT1hWzRdLG91dFs0XT1hWzVdLG91dFs1XT1hWzZdLG91dFs2XT1hWzhdLG91dFs3XT1hWzldLG91dFs4XT1hWzEwXSxvdXR9ZnVuY3Rpb24gY2xvbmUoYSl7dmFyIG91dD1uZXcgZ2xNYXRyaXguQVJSQVlfVFlQRSg5KTtyZXR1cm4gb3V0WzBdPWFbMF0sb3V0WzFdPWFbMV0sb3V0WzJdPWFbMl0sb3V0WzNdPWFbM10sb3V0WzRdPWFbNF0sb3V0WzVdPWFbNV0sb3V0WzZdPWFbNl0sb3V0WzddPWFbN10sb3V0WzhdPWFbOF0sb3V0fWZ1bmN0aW9uIGNvcHkob3V0LGEpe3JldHVybiBvdXRbMF09YVswXSxvdXRbMV09YVsxXSxvdXRbMl09YVsyXSxvdXRbM109YVszXSxvdXRbNF09YVs0XSxvdXRbNV09YVs1XSxvdXRbNl09YVs2XSxvdXRbN109YVs3XSxvdXRbOF09YVs4XSxvdXR9ZnVuY3Rpb24gZnJvbVZhbHVlcyhtMDAsbTAxLG0wMixtMTAsbTExLG0xMixtMjAsbTIxLG0yMil7dmFyIG91dD1uZXcgZ2xNYXRyaXguQVJSQVlfVFlQRSg5KTtyZXR1cm4gb3V0WzBdPW0wMCxvdXRbMV09bTAxLG91dFsyXT1tMDIsb3V0WzNdPW0xMCxvdXRbNF09bTExLG91dFs1XT1tMTIsb3V0WzZdPW0yMCxvdXRbN109bTIxLG91dFs4XT1tMjIsb3V0fWZ1bmN0aW9uIHNldChvdXQsbTAwLG0wMSxtMDIsbTEwLG0xMSxtMTIsbTIwLG0yMSxtMjIpe3JldHVybiBvdXRbMF09bTAwLG91dFsxXT1tMDEsb3V0WzJdPW0wMixvdXRbM109bTEwLG91dFs0XT1tMTEsb3V0WzVdPW0xMixvdXRbNl09bTIwLG91dFs3XT1tMjEsb3V0WzhdPW0yMixvdXR9ZnVuY3Rpb24gaWRlbnRpdHkob3V0KXtyZXR1cm4gb3V0WzBdPTEsb3V0WzFdPTAsb3V0WzJdPTAsb3V0WzNdPTAsb3V0WzRdPTEsb3V0WzVdPTAsb3V0WzZdPTAsb3V0WzddPTAsb3V0WzhdPTEsb3V0fWZ1bmN0aW9uIHRyYW5zcG9zZShvdXQsYSl7aWYob3V0PT09YSl7dmFyIGEwMT1hWzFdLGEwMj1hWzJdLGExMj1hWzVdO291dFsxXT1hWzNdLG91dFsyXT1hWzZdLG91dFszXT1hMDEsb3V0WzVdPWFbN10sb3V0WzZdPWEwMixvdXRbN109YTEyfWVsc2Ugb3V0WzBdPWFbMF0sb3V0WzFdPWFbM10sb3V0WzJdPWFbNl0sb3V0WzNdPWFbMV0sb3V0WzRdPWFbNF0sb3V0WzVdPWFbN10sb3V0WzZdPWFbMl0sb3V0WzddPWFbNV0sb3V0WzhdPWFbOF07cmV0dXJuIG91dH1mdW5jdGlvbiBpbnZlcnQob3V0LGEpe3ZhciBhMDA9YVswXSxhMDE9YVsxXSxhMDI9YVsyXSxhMTA9YVszXSxhMTE9YVs0XSxhMTI9YVs1XSxhMjA9YVs2XSxhMjE9YVs3XSxhMjI9YVs4XSxiMDE9YTIyKmExMS1hMTIqYTIxLGIxMT0tYTIyKmExMCthMTIqYTIwLGIyMT1hMjEqYTEwLWExMSphMjAsZGV0PWEwMCpiMDErYTAxKmIxMSthMDIqYjIxO3JldHVybiBkZXQ/KGRldD0xL2RldCxvdXRbMF09YjAxKmRldCxvdXRbMV09KC1hMjIqYTAxK2EwMiphMjEpKmRldCxvdXRbMl09KGExMiphMDEtYTAyKmExMSkqZGV0LG91dFszXT1iMTEqZGV0LG91dFs0XT0oYTIyKmEwMC1hMDIqYTIwKSpkZXQsb3V0WzVdPSgtYTEyKmEwMCthMDIqYTEwKSpkZXQsb3V0WzZdPWIyMSpkZXQsb3V0WzddPSgtYTIxKmEwMCthMDEqYTIwKSpkZXQsb3V0WzhdPShhMTEqYTAwLWEwMSphMTApKmRldCxvdXQpOm51bGx9ZnVuY3Rpb24gYWRqb2ludChvdXQsYSl7dmFyIGEwMD1hWzBdLGEwMT1hWzFdLGEwMj1hWzJdLGExMD1hWzNdLGExMT1hWzRdLGExMj1hWzVdLGEyMD1hWzZdLGEyMT1hWzddLGEyMj1hWzhdO3JldHVybiBvdXRbMF09YTExKmEyMi1hMTIqYTIxLG91dFsxXT1hMDIqYTIxLWEwMSphMjIsb3V0WzJdPWEwMSphMTItYTAyKmExMSxvdXRbM109YTEyKmEyMC1hMTAqYTIyLG91dFs0XT1hMDAqYTIyLWEwMiphMjAsb3V0WzVdPWEwMiphMTAtYTAwKmExMixvdXRbNl09YTEwKmEyMS1hMTEqYTIwLG91dFs3XT1hMDEqYTIwLWEwMCphMjEsb3V0WzhdPWEwMCphMTEtYTAxKmExMCxvdXR9ZnVuY3Rpb24gZGV0ZXJtaW5hbnQoYSl7dmFyIGEwMD1hWzBdLGEwMT1hWzFdLGEwMj1hWzJdLGExMD1hWzNdLGExMT1hWzRdLGExMj1hWzVdLGEyMD1hWzZdLGEyMT1hWzddLGEyMj1hWzhdO3JldHVybiBhMDAqKGEyMiphMTEtYTEyKmEyMSkrYTAxKigtYTIyKmExMCthMTIqYTIwKSthMDIqKGEyMSphMTAtYTExKmEyMCl9ZnVuY3Rpb24gbXVsdGlwbHkob3V0LGEsYil7dmFyIGEwMD1hWzBdLGEwMT1hWzFdLGEwMj1hWzJdLGExMD1hWzNdLGExMT1hWzRdLGExMj1hWzVdLGEyMD1hWzZdLGEyMT1hWzddLGEyMj1hWzhdLGIwMD1iWzBdLGIwMT1iWzFdLGIwMj1iWzJdLGIxMD1iWzNdLGIxMT1iWzRdLGIxMj1iWzVdLGIyMD1iWzZdLGIyMT1iWzddLGIyMj1iWzhdO3JldHVybiBvdXRbMF09YjAwKmEwMCtiMDEqYTEwK2IwMiphMjAsb3V0WzFdPWIwMCphMDErYjAxKmExMStiMDIqYTIxLG91dFsyXT1iMDAqYTAyK2IwMSphMTIrYjAyKmEyMixvdXRbM109YjEwKmEwMCtiMTEqYTEwK2IxMiphMjAsb3V0WzRdPWIxMCphMDErYjExKmExMStiMTIqYTIxLG91dFs1XT1iMTAqYTAyK2IxMSphMTIrYjEyKmEyMixvdXRbNl09YjIwKmEwMCtiMjEqYTEwK2IyMiphMjAsb3V0WzddPWIyMCphMDErYjIxKmExMStiMjIqYTIxLG91dFs4XT1iMjAqYTAyK2IyMSphMTIrYjIyKmEyMixvdXR9ZnVuY3Rpb24gdHJhbnNsYXRlKG91dCxhLHYpe3ZhciBhMDA9YVswXSxhMDE9YVsxXSxhMDI9YVsyXSxhMTA9YVszXSxhMTE9YVs0XSxhMTI9YVs1XSxhMjA9YVs2XSxhMjE9YVs3XSxhMjI9YVs4XSx4PXZbMF0seT12WzFdO3JldHVybiBvdXRbMF09YTAwLG91dFsxXT1hMDEsb3V0WzJdPWEwMixvdXRbM109YTEwLG91dFs0XT1hMTEsb3V0WzVdPWExMixvdXRbNl09eCphMDAreSphMTArYTIwLG91dFs3XT14KmEwMSt5KmExMSthMjEsb3V0WzhdPXgqYTAyK3kqYTEyK2EyMixvdXR9ZnVuY3Rpb24gcm90YXRlKG91dCxhLHJhZCl7dmFyIGEwMD1hWzBdLGEwMT1hWzFdLGEwMj1hWzJdLGExMD1hWzNdLGExMT1hWzRdLGExMj1hWzVdLGEyMD1hWzZdLGEyMT1hWzddLGEyMj1hWzhdLHM9TWF0aC5zaW4ocmFkKSxjPU1hdGguY29zKHJhZCk7cmV0dXJuIG91dFswXT1jKmEwMCtzKmExMCxvdXRbMV09YyphMDErcyphMTEsb3V0WzJdPWMqYTAyK3MqYTEyLG91dFszXT1jKmExMC1zKmEwMCxvdXRbNF09YyphMTEtcyphMDEsb3V0WzVdPWMqYTEyLXMqYTAyLG91dFs2XT1hMjAsb3V0WzddPWEyMSxvdXRbOF09YTIyLG91dH1mdW5jdGlvbiBzY2FsZShvdXQsYSx2KXt2YXIgeD12WzBdLHk9dlsxXTtyZXR1cm4gb3V0WzBdPXgqYVswXSxvdXRbMV09eCphWzFdLG91dFsyXT14KmFbMl0sb3V0WzNdPXkqYVszXSxvdXRbNF09eSphWzRdLG91dFs1XT15KmFbNV0sb3V0WzZdPWFbNl0sb3V0WzddPWFbN10sb3V0WzhdPWFbOF0sb3V0fWZ1bmN0aW9uIGZyb21UcmFuc2xhdGlvbihvdXQsdil7cmV0dXJuIG91dFswXT0xLG91dFsxXT0wLG91dFsyXT0wLG91dFszXT0wLG91dFs0XT0xLG91dFs1XT0wLG91dFs2XT12WzBdLG91dFs3XT12WzFdLG91dFs4XT0xLG91dH1mdW5jdGlvbiBmcm9tUm90YXRpb24ob3V0LHJhZCl7dmFyIHM9TWF0aC5zaW4ocmFkKSxjPU1hdGguY29zKHJhZCk7cmV0dXJuIG91dFswXT1jLG91dFsxXT1zLG91dFsyXT0wLG91dFszXT0tcyxvdXRbNF09YyxvdXRbNV09MCxvdXRbNl09MCxvdXRbN109MCxvdXRbOF09MSxvdXR9ZnVuY3Rpb24gZnJvbVNjYWxpbmcob3V0LHYpe3JldHVybiBvdXRbMF09dlswXSxvdXRbMV09MCxvdXRbMl09MCxvdXRbM109MCxvdXRbNF09dlsxXSxvdXRbNV09MCxvdXRbNl09MCxvdXRbN109MCxvdXRbOF09MSxvdXR9ZnVuY3Rpb24gZnJvbU1hdDJkKG91dCxhKXtyZXR1cm4gb3V0WzBdPWFbMF0sb3V0WzFdPWFbMV0sb3V0WzJdPTAsb3V0WzNdPWFbMl0sb3V0WzRdPWFbM10sb3V0WzVdPTAsb3V0WzZdPWFbNF0sb3V0WzddPWFbNV0sb3V0WzhdPTEsb3V0fWZ1bmN0aW9uIGZyb21RdWF0KG91dCxxKXt2YXIgeD1xWzBdLHk9cVsxXSx6PXFbMl0sdz1xWzNdLHgyPXgreCx5Mj15K3ksejI9eit6LHh4PXgqeDIseXg9eSp4Mix5eT15KnkyLHp4PXoqeDIsenk9eip5Mix6ej16KnoyLHd4PXcqeDIsd3k9dyp5Mix3ej13KnoyO3JldHVybiBvdXRbMF09MS15eS16eixvdXRbM109eXgtd3osb3V0WzZdPXp4K3d5LG91dFsxXT15eCt3eixvdXRbNF09MS14eC16eixvdXRbN109enktd3gsb3V0WzJdPXp4LXd5LG91dFs1XT16eSt3eCxvdXRbOF09MS14eC15eSxvdXR9ZnVuY3Rpb24gbm9ybWFsRnJvbU1hdDQob3V0LGEpe3ZhciBhMDA9YVswXSxhMDE9YVsxXSxhMDI9YVsyXSxhMDM9YVszXSxhMTA9YVs0XSxhMTE9YVs1XSxhMTI9YVs2XSxhMTM9YVs3XSxhMjA9YVs4XSxhMjE9YVs5XSxhMjI9YVsxMF0sYTIzPWFbMTFdLGEzMD1hWzEyXSxhMzE9YVsxM10sYTMyPWFbMTRdLGEzMz1hWzE1XSxiMDA9YTAwKmExMS1hMDEqYTEwLGIwMT1hMDAqYTEyLWEwMiphMTAsYjAyPWEwMCphMTMtYTAzKmExMCxiMDM9YTAxKmExMi1hMDIqYTExLGIwND1hMDEqYTEzLWEwMyphMTEsYjA1PWEwMiphMTMtYTAzKmExMixiMDY9YTIwKmEzMS1hMjEqYTMwLGIwNz1hMjAqYTMyLWEyMiphMzAsYjA4PWEyMCphMzMtYTIzKmEzMCxiMDk9YTIxKmEzMi1hMjIqYTMxLGIxMD1hMjEqYTMzLWEyMyphMzEsYjExPWEyMiphMzMtYTIzKmEzMixkZXQ9YjAwKmIxMS1iMDEqYjEwK2IwMipiMDkrYjAzKmIwOC1iMDQqYjA3K2IwNSpiMDY7cmV0dXJuIGRldD8oZGV0PTEvZGV0LG91dFswXT0oYTExKmIxMS1hMTIqYjEwK2ExMypiMDkpKmRldCxvdXRbMV09KGExMipiMDgtYTEwKmIxMS1hMTMqYjA3KSpkZXQsb3V0WzJdPShhMTAqYjEwLWExMSpiMDgrYTEzKmIwNikqZGV0LG91dFszXT0oYTAyKmIxMC1hMDEqYjExLWEwMypiMDkpKmRldCxvdXRbNF09KGEwMCpiMTEtYTAyKmIwOCthMDMqYjA3KSpkZXQsb3V0WzVdPShhMDEqYjA4LWEwMCpiMTAtYTAzKmIwNikqZGV0LG91dFs2XT0oYTMxKmIwNS1hMzIqYjA0K2EzMypiMDMpKmRldCxvdXRbN109KGEzMipiMDItYTMwKmIwNS1hMzMqYjAxKSpkZXQsb3V0WzhdPShhMzAqYjA0LWEzMSpiMDIrYTMzKmIwMCkqZGV0LG91dCk6bnVsbH1mdW5jdGlvbiBwcm9qZWN0aW9uKG91dCx3aWR0aCxoZWlnaHQpe3JldHVybiBvdXRbMF09Mi93aWR0aCxvdXRbMV09MCxvdXRbMl09MCxvdXRbM109MCxvdXRbNF09LTIvaGVpZ2h0LG91dFs1XT0wLG91dFs2XT0tMSxvdXRbN109MSxvdXRbOF09MSxvdXR9ZnVuY3Rpb24gc3RyKGEpe3JldHVyblwibWF0MyhcIithWzBdK1wiLCBcIithWzFdK1wiLCBcIithWzJdK1wiLCBcIithWzNdK1wiLCBcIithWzRdK1wiLCBcIithWzVdK1wiLCBcIithWzZdK1wiLCBcIithWzddK1wiLCBcIithWzhdK1wiKVwifWZ1bmN0aW9uIGZyb2IoYSl7cmV0dXJuIE1hdGguc3FydChNYXRoLnBvdyhhWzBdLDIpK01hdGgucG93KGFbMV0sMikrTWF0aC5wb3coYVsyXSwyKStNYXRoLnBvdyhhWzNdLDIpK01hdGgucG93KGFbNF0sMikrTWF0aC5wb3coYVs1XSwyKStNYXRoLnBvdyhhWzZdLDIpK01hdGgucG93KGFbN10sMikrTWF0aC5wb3coYVs4XSwyKSl9ZnVuY3Rpb24gYWRkKG91dCxhLGIpe3JldHVybiBvdXRbMF09YVswXStiWzBdLG91dFsxXT1hWzFdK2JbMV0sb3V0WzJdPWFbMl0rYlsyXSxvdXRbM109YVszXStiWzNdLG91dFs0XT1hWzRdK2JbNF0sb3V0WzVdPWFbNV0rYls1XSxvdXRbNl09YVs2XStiWzZdLG91dFs3XT1hWzddK2JbN10sb3V0WzhdPWFbOF0rYls4XSxvdXR9ZnVuY3Rpb24gc3VidHJhY3Qob3V0LGEsYil7cmV0dXJuIG91dFswXT1hWzBdLWJbMF0sb3V0WzFdPWFbMV0tYlsxXSxvdXRbMl09YVsyXS1iWzJdLG91dFszXT1hWzNdLWJbM10sb3V0WzRdPWFbNF0tYls0XSxvdXRbNV09YVs1XS1iWzVdLG91dFs2XT1hWzZdLWJbNl0sb3V0WzddPWFbN10tYls3XSxvdXRbOF09YVs4XS1iWzhdLG91dH1mdW5jdGlvbiBtdWx0aXBseVNjYWxhcihvdXQsYSxiKXtyZXR1cm4gb3V0WzBdPWFbMF0qYixvdXRbMV09YVsxXSpiLG91dFsyXT1hWzJdKmIsb3V0WzNdPWFbM10qYixvdXRbNF09YVs0XSpiLG91dFs1XT1hWzVdKmIsb3V0WzZdPWFbNl0qYixvdXRbN109YVs3XSpiLG91dFs4XT1hWzhdKmIsb3V0fWZ1bmN0aW9uIG11bHRpcGx5U2NhbGFyQW5kQWRkKG91dCxhLGIsc2NhbGUpe3JldHVybiBvdXRbMF09YVswXStiWzBdKnNjYWxlLG91dFsxXT1hWzFdK2JbMV0qc2NhbGUsb3V0WzJdPWFbMl0rYlsyXSpzY2FsZSxvdXRbM109YVszXStiWzNdKnNjYWxlLG91dFs0XT1hWzRdK2JbNF0qc2NhbGUsb3V0WzVdPWFbNV0rYls1XSpzY2FsZSxvdXRbNl09YVs2XStiWzZdKnNjYWxlLG91dFs3XT1hWzddK2JbN10qc2NhbGUsb3V0WzhdPWFbOF0rYls4XSpzY2FsZSxvdXR9ZnVuY3Rpb24gZXhhY3RFcXVhbHMoYSxiKXtyZXR1cm4gYVswXT09PWJbMF0mJmFbMV09PT1iWzFdJiZhWzJdPT09YlsyXSYmYVszXT09PWJbM10mJmFbNF09PT1iWzRdJiZhWzVdPT09Yls1XSYmYVs2XT09PWJbNl0mJmFbN109PT1iWzddJiZhWzhdPT09Yls4XX1mdW5jdGlvbiBlcXVhbHMoYSxiKXt2YXIgYTA9YVswXSxhMT1hWzFdLGEyPWFbMl0sYTM9YVszXSxhND1hWzRdLGE1PWFbNV0sYTY9YVs2XSxhNz1hWzddLGE4PWFbOF0sYjA9YlswXSxiMT1iWzFdLGIyPWJbMl0sYjM9YlszXSxiND1iWzRdLGI1PWJbNV0sYjY9Yls2XSxiNz1iWzddLGI4PWJbOF07cmV0dXJuIE1hdGguYWJzKGEwLWIwKTw9Z2xNYXRyaXguRVBTSUxPTipNYXRoLm1heCgxLE1hdGguYWJzKGEwKSxNYXRoLmFicyhiMCkpJiZNYXRoLmFicyhhMS1iMSk8PWdsTWF0cml4LkVQU0lMT04qTWF0aC5tYXgoMSxNYXRoLmFicyhhMSksTWF0aC5hYnMoYjEpKSYmTWF0aC5hYnMoYTItYjIpPD1nbE1hdHJpeC5FUFNJTE9OKk1hdGgubWF4KDEsTWF0aC5hYnMoYTIpLE1hdGguYWJzKGIyKSkmJk1hdGguYWJzKGEzLWIzKTw9Z2xNYXRyaXguRVBTSUxPTipNYXRoLm1heCgxLE1hdGguYWJzKGEzKSxNYXRoLmFicyhiMykpJiZNYXRoLmFicyhhNC1iNCk8PWdsTWF0cml4LkVQU0lMT04qTWF0aC5tYXgoMSxNYXRoLmFicyhhNCksTWF0aC5hYnMoYjQpKSYmTWF0aC5hYnMoYTUtYjUpPD1nbE1hdHJpeC5FUFNJTE9OKk1hdGgubWF4KDEsTWF0aC5hYnMoYTUpLE1hdGguYWJzKGI1KSkmJk1hdGguYWJzKGE2LWI2KTw9Z2xNYXRyaXguRVBTSUxPTipNYXRoLm1heCgxLE1hdGguYWJzKGE2KSxNYXRoLmFicyhiNikpJiZNYXRoLmFicyhhNy1iNyk8PWdsTWF0cml4LkVQU0lMT04qTWF0aC5tYXgoMSxNYXRoLmFicyhhNyksTWF0aC5hYnMoYjcpKSYmTWF0aC5hYnMoYTgtYjgpPD1nbE1hdHJpeC5FUFNJTE9OKk1hdGgubWF4KDEsTWF0aC5hYnMoYTgpLE1hdGguYWJzKGI4KSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZXhwb3J0cy5zdWI9ZXhwb3J0cy5tdWw9dm9pZCAwLGV4cG9ydHMuY3JlYXRlPWNyZWF0ZSxleHBvcnRzLmZyb21NYXQ0PWZyb21NYXQ0LGV4cG9ydHMuY2xvbmU9Y2xvbmUsZXhwb3J0cy5jb3B5PWNvcHksZXhwb3J0cy5mcm9tVmFsdWVzPWZyb21WYWx1ZXMsZXhwb3J0cy5zZXQ9c2V0LGV4cG9ydHMuaWRlbnRpdHk9aWRlbnRpdHksZXhwb3J0cy50cmFuc3Bvc2U9dHJhbnNwb3NlLGV4cG9ydHMuaW52ZXJ0PWludmVydCxleHBvcnRzLmFkam9pbnQ9YWRqb2ludCxleHBvcnRzLmRldGVybWluYW50PWRldGVybWluYW50LGV4cG9ydHMubXVsdGlwbHk9bXVsdGlwbHksZXhwb3J0cy50cmFuc2xhdGU9dHJhbnNsYXRlLGV4cG9ydHMucm90YXRlPXJvdGF0ZSxleHBvcnRzLnNjYWxlPXNjYWxlLGV4cG9ydHMuZnJvbVRyYW5zbGF0aW9uPWZyb21UcmFuc2xhdGlvbixleHBvcnRzLmZyb21Sb3RhdGlvbj1mcm9tUm90YXRpb24sZXhwb3J0cy5mcm9tU2NhbGluZz1mcm9tU2NhbGluZyxleHBvcnRzLmZyb21NYXQyZD1mcm9tTWF0MmQsZXhwb3J0cy5mcm9tUXVhdD1mcm9tUXVhdCxleHBvcnRzLm5vcm1hbEZyb21NYXQ0PW5vcm1hbEZyb21NYXQ0LGV4cG9ydHMucHJvamVjdGlvbj1wcm9qZWN0aW9uLGV4cG9ydHMuc3RyPXN0cixleHBvcnRzLmZyb2I9ZnJvYixleHBvcnRzLmFkZD1hZGQsZXhwb3J0cy5zdWJ0cmFjdD1zdWJ0cmFjdCxleHBvcnRzLm11bHRpcGx5U2NhbGFyPW11bHRpcGx5U2NhbGFyLGV4cG9ydHMubXVsdGlwbHlTY2FsYXJBbmRBZGQ9bXVsdGlwbHlTY2FsYXJBbmRBZGQsZXhwb3J0cy5leGFjdEVxdWFscz1leGFjdEVxdWFscyxleHBvcnRzLmVxdWFscz1lcXVhbHM7dmFyIF9jb21tb249X193ZWJwYWNrX3JlcXVpcmVfXygzKSxnbE1hdHJpeD1mdW5jdGlvbihvYmope2lmKG9iaiYmb2JqLl9fZXNNb2R1bGUpcmV0dXJuIG9iajt2YXIgbmV3T2JqPXt9O2lmKG51bGwhPW9iailmb3IodmFyIGtleSBpbiBvYmopT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaixrZXkpJiYobmV3T2JqW2tleV09b2JqW2tleV0pO3JldHVybiBuZXdPYmouZGVmYXVsdD1vYmosbmV3T2JqfShfY29tbW9uKTtleHBvcnRzLm11bD1tdWx0aXBseSxleHBvcnRzLnN1Yj1zdWJ0cmFjdH0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gY3JlYXRlKCl7dmFyIG91dD1uZXcgZ2xNYXRyaXguQVJSQVlfVFlQRSgzKTtyZXR1cm4gb3V0WzBdPTAsb3V0WzFdPTAsb3V0WzJdPTAsb3V0fWZ1bmN0aW9uIGNsb25lKGEpe3ZhciBvdXQ9bmV3IGdsTWF0cml4LkFSUkFZX1RZUEUoMyk7cmV0dXJuIG91dFswXT1hWzBdLG91dFsxXT1hWzFdLG91dFsyXT1hWzJdLG91dH1mdW5jdGlvbiBsZW5ndGgoYSl7dmFyIHg9YVswXSx5PWFbMV0sej1hWzJdO3JldHVybiBNYXRoLnNxcnQoeCp4K3kqeSt6KnopfWZ1bmN0aW9uIGZyb21WYWx1ZXMoeCx5LHope3ZhciBvdXQ9bmV3IGdsTWF0cml4LkFSUkFZX1RZUEUoMyk7cmV0dXJuIG91dFswXT14LG91dFsxXT15LG91dFsyXT16LG91dH1mdW5jdGlvbiBjb3B5KG91dCxhKXtyZXR1cm4gb3V0WzBdPWFbMF0sb3V0WzFdPWFbMV0sb3V0WzJdPWFbMl0sb3V0fWZ1bmN0aW9uIHNldChvdXQseCx5LHope3JldHVybiBvdXRbMF09eCxvdXRbMV09eSxvdXRbMl09eixvdXR9ZnVuY3Rpb24gYWRkKG91dCxhLGIpe3JldHVybiBvdXRbMF09YVswXStiWzBdLG91dFsxXT1hWzFdK2JbMV0sb3V0WzJdPWFbMl0rYlsyXSxvdXR9ZnVuY3Rpb24gc3VidHJhY3Qob3V0LGEsYil7cmV0dXJuIG91dFswXT1hWzBdLWJbMF0sb3V0WzFdPWFbMV0tYlsxXSxvdXRbMl09YVsyXS1iWzJdLG91dH1mdW5jdGlvbiBtdWx0aXBseShvdXQsYSxiKXtyZXR1cm4gb3V0WzBdPWFbMF0qYlswXSxvdXRbMV09YVsxXSpiWzFdLG91dFsyXT1hWzJdKmJbMl0sb3V0fWZ1bmN0aW9uIGRpdmlkZShvdXQsYSxiKXtyZXR1cm4gb3V0WzBdPWFbMF0vYlswXSxvdXRbMV09YVsxXS9iWzFdLG91dFsyXT1hWzJdL2JbMl0sb3V0fWZ1bmN0aW9uIGNlaWwob3V0LGEpe3JldHVybiBvdXRbMF09TWF0aC5jZWlsKGFbMF0pLG91dFsxXT1NYXRoLmNlaWwoYVsxXSksb3V0WzJdPU1hdGguY2VpbChhWzJdKSxvdXR9ZnVuY3Rpb24gZmxvb3Iob3V0LGEpe3JldHVybiBvdXRbMF09TWF0aC5mbG9vcihhWzBdKSxvdXRbMV09TWF0aC5mbG9vcihhWzFdKSxvdXRbMl09TWF0aC5mbG9vcihhWzJdKSxvdXR9ZnVuY3Rpb24gbWluKG91dCxhLGIpe3JldHVybiBvdXRbMF09TWF0aC5taW4oYVswXSxiWzBdKSxvdXRbMV09TWF0aC5taW4oYVsxXSxiWzFdKSxvdXRbMl09TWF0aC5taW4oYVsyXSxiWzJdKSxvdXR9ZnVuY3Rpb24gbWF4KG91dCxhLGIpe3JldHVybiBvdXRbMF09TWF0aC5tYXgoYVswXSxiWzBdKSxvdXRbMV09TWF0aC5tYXgoYVsxXSxiWzFdKSxvdXRbMl09TWF0aC5tYXgoYVsyXSxiWzJdKSxvdXR9ZnVuY3Rpb24gcm91bmQob3V0LGEpe3JldHVybiBvdXRbMF09TWF0aC5yb3VuZChhWzBdKSxvdXRbMV09TWF0aC5yb3VuZChhWzFdKSxvdXRbMl09TWF0aC5yb3VuZChhWzJdKSxvdXR9ZnVuY3Rpb24gc2NhbGUob3V0LGEsYil7cmV0dXJuIG91dFswXT1hWzBdKmIsb3V0WzFdPWFbMV0qYixvdXRbMl09YVsyXSpiLG91dH1mdW5jdGlvbiBzY2FsZUFuZEFkZChvdXQsYSxiLHNjYWxlKXtyZXR1cm4gb3V0WzBdPWFbMF0rYlswXSpzY2FsZSxvdXRbMV09YVsxXStiWzFdKnNjYWxlLG91dFsyXT1hWzJdK2JbMl0qc2NhbGUsb3V0fWZ1bmN0aW9uIGRpc3RhbmNlKGEsYil7dmFyIHg9YlswXS1hWzBdLHk9YlsxXS1hWzFdLHo9YlsyXS1hWzJdO3JldHVybiBNYXRoLnNxcnQoeCp4K3kqeSt6KnopfWZ1bmN0aW9uIHNxdWFyZWREaXN0YW5jZShhLGIpe3ZhciB4PWJbMF0tYVswXSx5PWJbMV0tYVsxXSx6PWJbMl0tYVsyXTtyZXR1cm4geCp4K3kqeSt6Knp9ZnVuY3Rpb24gc3F1YXJlZExlbmd0aChhKXt2YXIgeD1hWzBdLHk9YVsxXSx6PWFbMl07cmV0dXJuIHgqeCt5Knkreip6fWZ1bmN0aW9uIG5lZ2F0ZShvdXQsYSl7cmV0dXJuIG91dFswXT0tYVswXSxvdXRbMV09LWFbMV0sb3V0WzJdPS1hWzJdLG91dH1mdW5jdGlvbiBpbnZlcnNlKG91dCxhKXtyZXR1cm4gb3V0WzBdPTEvYVswXSxvdXRbMV09MS9hWzFdLG91dFsyXT0xL2FbMl0sb3V0fWZ1bmN0aW9uIG5vcm1hbGl6ZShvdXQsYSl7dmFyIHg9YVswXSx5PWFbMV0sej1hWzJdLGxlbj14KngreSp5K3oqejtyZXR1cm4gbGVuPjAmJihsZW49MS9NYXRoLnNxcnQobGVuKSxvdXRbMF09YVswXSpsZW4sb3V0WzFdPWFbMV0qbGVuLG91dFsyXT1hWzJdKmxlbiksb3V0fWZ1bmN0aW9uIGRvdChhLGIpe3JldHVybiBhWzBdKmJbMF0rYVsxXSpiWzFdK2FbMl0qYlsyXX1mdW5jdGlvbiBjcm9zcyhvdXQsYSxiKXt2YXIgYXg9YVswXSxheT1hWzFdLGF6PWFbMl0sYng9YlswXSxieT1iWzFdLGJ6PWJbMl07cmV0dXJuIG91dFswXT1heSpiei1heipieSxvdXRbMV09YXoqYngtYXgqYnosb3V0WzJdPWF4KmJ5LWF5KmJ4LG91dH1mdW5jdGlvbiBsZXJwKG91dCxhLGIsdCl7dmFyIGF4PWFbMF0sYXk9YVsxXSxhej1hWzJdO3JldHVybiBvdXRbMF09YXgrdCooYlswXS1heCksb3V0WzFdPWF5K3QqKGJbMV0tYXkpLG91dFsyXT1heit0KihiWzJdLWF6KSxvdXR9ZnVuY3Rpb24gaGVybWl0ZShvdXQsYSxiLGMsZCx0KXt2YXIgZmFjdG9yVGltZXMyPXQqdCxmYWN0b3IxPWZhY3RvclRpbWVzMiooMip0LTMpKzEsZmFjdG9yMj1mYWN0b3JUaW1lczIqKHQtMikrdCxmYWN0b3IzPWZhY3RvclRpbWVzMioodC0xKSxmYWN0b3I0PWZhY3RvclRpbWVzMiooMy0yKnQpO3JldHVybiBvdXRbMF09YVswXSpmYWN0b3IxK2JbMF0qZmFjdG9yMitjWzBdKmZhY3RvcjMrZFswXSpmYWN0b3I0LG91dFsxXT1hWzFdKmZhY3RvcjErYlsxXSpmYWN0b3IyK2NbMV0qZmFjdG9yMytkWzFdKmZhY3RvcjQsb3V0WzJdPWFbMl0qZmFjdG9yMStiWzJdKmZhY3RvcjIrY1syXSpmYWN0b3IzK2RbMl0qZmFjdG9yNCxvdXR9ZnVuY3Rpb24gYmV6aWVyKG91dCxhLGIsYyxkLHQpe3ZhciBpbnZlcnNlRmFjdG9yPTEtdCxpbnZlcnNlRmFjdG9yVGltZXNUd289aW52ZXJzZUZhY3RvcippbnZlcnNlRmFjdG9yLGZhY3RvclRpbWVzMj10KnQsZmFjdG9yMT1pbnZlcnNlRmFjdG9yVGltZXNUd28qaW52ZXJzZUZhY3RvcixmYWN0b3IyPTMqdCppbnZlcnNlRmFjdG9yVGltZXNUd28sZmFjdG9yMz0zKmZhY3RvclRpbWVzMippbnZlcnNlRmFjdG9yLGZhY3RvcjQ9ZmFjdG9yVGltZXMyKnQ7cmV0dXJuIG91dFswXT1hWzBdKmZhY3RvcjErYlswXSpmYWN0b3IyK2NbMF0qZmFjdG9yMytkWzBdKmZhY3RvcjQsb3V0WzFdPWFbMV0qZmFjdG9yMStiWzFdKmZhY3RvcjIrY1sxXSpmYWN0b3IzK2RbMV0qZmFjdG9yNCxvdXRbMl09YVsyXSpmYWN0b3IxK2JbMl0qZmFjdG9yMitjWzJdKmZhY3RvcjMrZFsyXSpmYWN0b3I0LG91dH1mdW5jdGlvbiByYW5kb20ob3V0LHNjYWxlKXtzY2FsZT1zY2FsZXx8MTt2YXIgcj0yKmdsTWF0cml4LlJBTkRPTSgpKk1hdGguUEksej0yKmdsTWF0cml4LlJBTkRPTSgpLTEselNjYWxlPU1hdGguc3FydCgxLXoqeikqc2NhbGU7cmV0dXJuIG91dFswXT1NYXRoLmNvcyhyKSp6U2NhbGUsb3V0WzFdPU1hdGguc2luKHIpKnpTY2FsZSxvdXRbMl09eipzY2FsZSxvdXR9ZnVuY3Rpb24gdHJhbnNmb3JtTWF0NChvdXQsYSxtKXt2YXIgeD1hWzBdLHk9YVsxXSx6PWFbMl0sdz1tWzNdKngrbVs3XSp5K21bMTFdKnorbVsxNV07cmV0dXJuIHc9d3x8MSxvdXRbMF09KG1bMF0qeCttWzRdKnkrbVs4XSp6K21bMTJdKS93LG91dFsxXT0obVsxXSp4K21bNV0qeSttWzldKnorbVsxM10pL3csb3V0WzJdPShtWzJdKngrbVs2XSp5K21bMTBdKnorbVsxNF0pL3csb3V0fWZ1bmN0aW9uIHRyYW5zZm9ybU1hdDMob3V0LGEsbSl7dmFyIHg9YVswXSx5PWFbMV0sej1hWzJdO3JldHVybiBvdXRbMF09eCptWzBdK3kqbVszXSt6Km1bNl0sb3V0WzFdPXgqbVsxXSt5Km1bNF0reiptWzddLG91dFsyXT14Km1bMl0reSptWzVdK3oqbVs4XSxvdXR9ZnVuY3Rpb24gdHJhbnNmb3JtUXVhdChvdXQsYSxxKXt2YXIgeD1hWzBdLHk9YVsxXSx6PWFbMl0scXg9cVswXSxxeT1xWzFdLHF6PXFbMl0scXc9cVszXSxpeD1xdyp4K3F5KnotcXoqeSxpeT1xdyp5K3F6KngtcXgqeixpej1xdyp6K3F4KnktcXkqeCxpdz0tcXgqeC1xeSp5LXF6Kno7cmV0dXJuIG91dFswXT1peCpxdytpdyotcXgraXkqLXF6LWl6Ki1xeSxvdXRbMV09aXkqcXcraXcqLXF5K2l6Ki1xeC1peCotcXosb3V0WzJdPWl6KnF3K2l3Ki1xeitpeCotcXktaXkqLXF4LG91dH1mdW5jdGlvbiByb3RhdGVYKG91dCxhLGIsYyl7dmFyIHA9W10scj1bXTtyZXR1cm4gcFswXT1hWzBdLWJbMF0scFsxXT1hWzFdLWJbMV0scFsyXT1hWzJdLWJbMl0sclswXT1wWzBdLHJbMV09cFsxXSpNYXRoLmNvcyhjKS1wWzJdKk1hdGguc2luKGMpLHJbMl09cFsxXSpNYXRoLnNpbihjKStwWzJdKk1hdGguY29zKGMpLG91dFswXT1yWzBdK2JbMF0sb3V0WzFdPXJbMV0rYlsxXSxvdXRbMl09clsyXStiWzJdLG91dH1mdW5jdGlvbiByb3RhdGVZKG91dCxhLGIsYyl7dmFyIHA9W10scj1bXTtyZXR1cm4gcFswXT1hWzBdLWJbMF0scFsxXT1hWzFdLWJbMV0scFsyXT1hWzJdLWJbMl0sclswXT1wWzJdKk1hdGguc2luKGMpK3BbMF0qTWF0aC5jb3MoYyksclsxXT1wWzFdLHJbMl09cFsyXSpNYXRoLmNvcyhjKS1wWzBdKk1hdGguc2luKGMpLG91dFswXT1yWzBdK2JbMF0sb3V0WzFdPXJbMV0rYlsxXSxvdXRbMl09clsyXStiWzJdLG91dH1mdW5jdGlvbiByb3RhdGVaKG91dCxhLGIsYyl7dmFyIHA9W10scj1bXTtyZXR1cm4gcFswXT1hWzBdLWJbMF0scFsxXT1hWzFdLWJbMV0scFsyXT1hWzJdLWJbMl0sclswXT1wWzBdKk1hdGguY29zKGMpLXBbMV0qTWF0aC5zaW4oYyksclsxXT1wWzBdKk1hdGguc2luKGMpK3BbMV0qTWF0aC5jb3MoYyksclsyXT1wWzJdLG91dFswXT1yWzBdK2JbMF0sb3V0WzFdPXJbMV0rYlsxXSxvdXRbMl09clsyXStiWzJdLG91dH1mdW5jdGlvbiBhbmdsZShhLGIpe3ZhciB0ZW1wQT1mcm9tVmFsdWVzKGFbMF0sYVsxXSxhWzJdKSx0ZW1wQj1mcm9tVmFsdWVzKGJbMF0sYlsxXSxiWzJdKTtub3JtYWxpemUodGVtcEEsdGVtcEEpLG5vcm1hbGl6ZSh0ZW1wQix0ZW1wQik7dmFyIGNvc2luZT1kb3QodGVtcEEsdGVtcEIpO3JldHVybiBjb3NpbmU+MT8wOmNvc2luZTwtMT9NYXRoLlBJOk1hdGguYWNvcyhjb3NpbmUpfWZ1bmN0aW9uIHN0cihhKXtyZXR1cm5cInZlYzMoXCIrYVswXStcIiwgXCIrYVsxXStcIiwgXCIrYVsyXStcIilcIn1mdW5jdGlvbiBleGFjdEVxdWFscyhhLGIpe3JldHVybiBhWzBdPT09YlswXSYmYVsxXT09PWJbMV0mJmFbMl09PT1iWzJdfWZ1bmN0aW9uIGVxdWFscyhhLGIpe3ZhciBhMD1hWzBdLGExPWFbMV0sYTI9YVsyXSxiMD1iWzBdLGIxPWJbMV0sYjI9YlsyXTtyZXR1cm4gTWF0aC5hYnMoYTAtYjApPD1nbE1hdHJpeC5FUFNJTE9OKk1hdGgubWF4KDEsTWF0aC5hYnMoYTApLE1hdGguYWJzKGIwKSkmJk1hdGguYWJzKGExLWIxKTw9Z2xNYXRyaXguRVBTSUxPTipNYXRoLm1heCgxLE1hdGguYWJzKGExKSxNYXRoLmFicyhiMSkpJiZNYXRoLmFicyhhMi1iMik8PWdsTWF0cml4LkVQU0lMT04qTWF0aC5tYXgoMSxNYXRoLmFicyhhMiksTWF0aC5hYnMoYjIpKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxleHBvcnRzLmZvckVhY2g9ZXhwb3J0cy5zcXJMZW49ZXhwb3J0cy5sZW49ZXhwb3J0cy5zcXJEaXN0PWV4cG9ydHMuZGlzdD1leHBvcnRzLmRpdj1leHBvcnRzLm11bD1leHBvcnRzLnN1Yj12b2lkIDAsZXhwb3J0cy5jcmVhdGU9Y3JlYXRlLGV4cG9ydHMuY2xvbmU9Y2xvbmUsZXhwb3J0cy5sZW5ndGg9bGVuZ3RoLGV4cG9ydHMuZnJvbVZhbHVlcz1mcm9tVmFsdWVzLGV4cG9ydHMuY29weT1jb3B5LGV4cG9ydHMuc2V0PXNldCxleHBvcnRzLmFkZD1hZGQsZXhwb3J0cy5zdWJ0cmFjdD1zdWJ0cmFjdCxleHBvcnRzLm11bHRpcGx5PW11bHRpcGx5LGV4cG9ydHMuZGl2aWRlPWRpdmlkZSxleHBvcnRzLmNlaWw9Y2VpbCxleHBvcnRzLmZsb29yPWZsb29yLGV4cG9ydHMubWluPW1pbixleHBvcnRzLm1heD1tYXgsZXhwb3J0cy5yb3VuZD1yb3VuZCxleHBvcnRzLnNjYWxlPXNjYWxlLGV4cG9ydHMuc2NhbGVBbmRBZGQ9c2NhbGVBbmRBZGQsZXhwb3J0cy5kaXN0YW5jZT1kaXN0YW5jZSxleHBvcnRzLnNxdWFyZWREaXN0YW5jZT1zcXVhcmVkRGlzdGFuY2UsZXhwb3J0cy5zcXVhcmVkTGVuZ3RoPXNxdWFyZWRMZW5ndGgsZXhwb3J0cy5uZWdhdGU9bmVnYXRlLGV4cG9ydHMuaW52ZXJzZT1pbnZlcnNlLGV4cG9ydHMubm9ybWFsaXplPW5vcm1hbGl6ZSxleHBvcnRzLmRvdD1kb3QsZXhwb3J0cy5jcm9zcz1jcm9zcyxleHBvcnRzLmxlcnA9bGVycCxleHBvcnRzLmhlcm1pdGU9aGVybWl0ZSxleHBvcnRzLmJlemllcj1iZXppZXIsZXhwb3J0cy5yYW5kb209cmFuZG9tLGV4cG9ydHMudHJhbnNmb3JtTWF0ND10cmFuc2Zvcm1NYXQ0LGV4cG9ydHMudHJhbnNmb3JtTWF0Mz10cmFuc2Zvcm1NYXQzLGV4cG9ydHMudHJhbnNmb3JtUXVhdD10cmFuc2Zvcm1RdWF0LGV4cG9ydHMucm90YXRlWD1yb3RhdGVYLGV4cG9ydHMucm90YXRlWT1yb3RhdGVZLGV4cG9ydHMucm90YXRlWj1yb3RhdGVaLGV4cG9ydHMuYW5nbGU9YW5nbGUsZXhwb3J0cy5zdHI9c3RyLGV4cG9ydHMuZXhhY3RFcXVhbHM9ZXhhY3RFcXVhbHMsZXhwb3J0cy5lcXVhbHM9ZXF1YWxzO3ZhciBfY29tbW9uPV9fd2VicGFja19yZXF1aXJlX18oMyksZ2xNYXRyaXg9ZnVuY3Rpb24ob2JqKXtpZihvYmomJm9iai5fX2VzTW9kdWxlKXJldHVybiBvYmo7dmFyIG5ld09iaj17fTtpZihudWxsIT1vYmopZm9yKHZhciBrZXkgaW4gb2JqKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosa2V5KSYmKG5ld09ialtrZXldPW9ialtrZXldKTtyZXR1cm4gbmV3T2JqLmRlZmF1bHQ9b2JqLG5ld09ian0oX2NvbW1vbik7ZXhwb3J0cy5zdWI9c3VidHJhY3QsZXhwb3J0cy5tdWw9bXVsdGlwbHksZXhwb3J0cy5kaXY9ZGl2aWRlLGV4cG9ydHMuZGlzdD1kaXN0YW5jZSxleHBvcnRzLnNxckRpc3Q9c3F1YXJlZERpc3RhbmNlLGV4cG9ydHMubGVuPWxlbmd0aCxleHBvcnRzLnNxckxlbj1zcXVhcmVkTGVuZ3RoLGV4cG9ydHMuZm9yRWFjaD1mdW5jdGlvbigpe3ZhciB2ZWM9Y3JlYXRlKCk7cmV0dXJuIGZ1bmN0aW9uKGEsc3RyaWRlLG9mZnNldCxjb3VudCxmbixhcmcpe3ZhciBpPXZvaWQgMCxsPXZvaWQgMDtmb3Ioc3RyaWRlfHwoc3RyaWRlPTMpLG9mZnNldHx8KG9mZnNldD0wKSxsPWNvdW50P01hdGgubWluKGNvdW50KnN0cmlkZStvZmZzZXQsYS5sZW5ndGgpOmEubGVuZ3RoLGk9b2Zmc2V0O2k8bDtpKz1zdHJpZGUpdmVjWzBdPWFbaV0sdmVjWzFdPWFbaSsxXSx2ZWNbMl09YVtpKzJdLGZuKHZlYyx2ZWMsYXJnKSxhW2ldPXZlY1swXSxhW2krMV09dmVjWzFdLGFbaSsyXT12ZWNbMl07cmV0dXJuIGF9fSgpfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBjcmVhdGUoKXt2YXIgb3V0PW5ldyBnbE1hdHJpeC5BUlJBWV9UWVBFKDQpO3JldHVybiBvdXRbMF09MCxvdXRbMV09MCxvdXRbMl09MCxvdXRbM109MCxvdXR9ZnVuY3Rpb24gY2xvbmUoYSl7dmFyIG91dD1uZXcgZ2xNYXRyaXguQVJSQVlfVFlQRSg0KTtyZXR1cm4gb3V0WzBdPWFbMF0sb3V0WzFdPWFbMV0sb3V0WzJdPWFbMl0sb3V0WzNdPWFbM10sb3V0fWZ1bmN0aW9uIGZyb21WYWx1ZXMoeCx5LHosdyl7dmFyIG91dD1uZXcgZ2xNYXRyaXguQVJSQVlfVFlQRSg0KTtyZXR1cm4gb3V0WzBdPXgsb3V0WzFdPXksb3V0WzJdPXosb3V0WzNdPXcsb3V0fWZ1bmN0aW9uIGNvcHkob3V0LGEpe3JldHVybiBvdXRbMF09YVswXSxvdXRbMV09YVsxXSxvdXRbMl09YVsyXSxvdXRbM109YVszXSxvdXR9ZnVuY3Rpb24gc2V0KG91dCx4LHkseix3KXtyZXR1cm4gb3V0WzBdPXgsb3V0WzFdPXksb3V0WzJdPXosb3V0WzNdPXcsb3V0fWZ1bmN0aW9uIGFkZChvdXQsYSxiKXtyZXR1cm4gb3V0WzBdPWFbMF0rYlswXSxvdXRbMV09YVsxXStiWzFdLG91dFsyXT1hWzJdK2JbMl0sb3V0WzNdPWFbM10rYlszXSxvdXR9ZnVuY3Rpb24gc3VidHJhY3Qob3V0LGEsYil7cmV0dXJuIG91dFswXT1hWzBdLWJbMF0sb3V0WzFdPWFbMV0tYlsxXSxvdXRbMl09YVsyXS1iWzJdLG91dFszXT1hWzNdLWJbM10sb3V0fWZ1bmN0aW9uIG11bHRpcGx5KG91dCxhLGIpe3JldHVybiBvdXRbMF09YVswXSpiWzBdLG91dFsxXT1hWzFdKmJbMV0sb3V0WzJdPWFbMl0qYlsyXSxvdXRbM109YVszXSpiWzNdLG91dH1mdW5jdGlvbiBkaXZpZGUob3V0LGEsYil7cmV0dXJuIG91dFswXT1hWzBdL2JbMF0sb3V0WzFdPWFbMV0vYlsxXSxvdXRbMl09YVsyXS9iWzJdLG91dFszXT1hWzNdL2JbM10sb3V0fWZ1bmN0aW9uIGNlaWwob3V0LGEpe3JldHVybiBvdXRbMF09TWF0aC5jZWlsKGFbMF0pLG91dFsxXT1NYXRoLmNlaWwoYVsxXSksb3V0WzJdPU1hdGguY2VpbChhWzJdKSxvdXRbM109TWF0aC5jZWlsKGFbM10pLG91dH1mdW5jdGlvbiBmbG9vcihvdXQsYSl7cmV0dXJuIG91dFswXT1NYXRoLmZsb29yKGFbMF0pLG91dFsxXT1NYXRoLmZsb29yKGFbMV0pLG91dFsyXT1NYXRoLmZsb29yKGFbMl0pLG91dFszXT1NYXRoLmZsb29yKGFbM10pLG91dH1mdW5jdGlvbiBtaW4ob3V0LGEsYil7cmV0dXJuIG91dFswXT1NYXRoLm1pbihhWzBdLGJbMF0pLG91dFsxXT1NYXRoLm1pbihhWzFdLGJbMV0pLG91dFsyXT1NYXRoLm1pbihhWzJdLGJbMl0pLG91dFszXT1NYXRoLm1pbihhWzNdLGJbM10pLG91dH1mdW5jdGlvbiBtYXgob3V0LGEsYil7cmV0dXJuIG91dFswXT1NYXRoLm1heChhWzBdLGJbMF0pLG91dFsxXT1NYXRoLm1heChhWzFdLGJbMV0pLG91dFsyXT1NYXRoLm1heChhWzJdLGJbMl0pLG91dFszXT1NYXRoLm1heChhWzNdLGJbM10pLG91dH1mdW5jdGlvbiByb3VuZChvdXQsYSl7cmV0dXJuIG91dFswXT1NYXRoLnJvdW5kKGFbMF0pLG91dFsxXT1NYXRoLnJvdW5kKGFbMV0pLG91dFsyXT1NYXRoLnJvdW5kKGFbMl0pLG91dFszXT1NYXRoLnJvdW5kKGFbM10pLG91dH1mdW5jdGlvbiBzY2FsZShvdXQsYSxiKXtyZXR1cm4gb3V0WzBdPWFbMF0qYixvdXRbMV09YVsxXSpiLG91dFsyXT1hWzJdKmIsb3V0WzNdPWFbM10qYixvdXR9ZnVuY3Rpb24gc2NhbGVBbmRBZGQob3V0LGEsYixzY2FsZSl7cmV0dXJuIG91dFswXT1hWzBdK2JbMF0qc2NhbGUsb3V0WzFdPWFbMV0rYlsxXSpzY2FsZSxvdXRbMl09YVsyXStiWzJdKnNjYWxlLG91dFszXT1hWzNdK2JbM10qc2NhbGUsb3V0fWZ1bmN0aW9uIGRpc3RhbmNlKGEsYil7dmFyIHg9YlswXS1hWzBdLHk9YlsxXS1hWzFdLHo9YlsyXS1hWzJdLHc9YlszXS1hWzNdO3JldHVybiBNYXRoLnNxcnQoeCp4K3kqeSt6Knordyp3KX1mdW5jdGlvbiBzcXVhcmVkRGlzdGFuY2UoYSxiKXt2YXIgeD1iWzBdLWFbMF0seT1iWzFdLWFbMV0sej1iWzJdLWFbMl0sdz1iWzNdLWFbM107cmV0dXJuIHgqeCt5Knkreip6K3cqd31mdW5jdGlvbiBsZW5ndGgoYSl7dmFyIHg9YVswXSx5PWFbMV0sej1hWzJdLHc9YVszXTtyZXR1cm4gTWF0aC5zcXJ0KHgqeCt5Knkreip6K3cqdyl9ZnVuY3Rpb24gc3F1YXJlZExlbmd0aChhKXt2YXIgeD1hWzBdLHk9YVsxXSx6PWFbMl0sdz1hWzNdO3JldHVybiB4KngreSp5K3oqeit3Knd9ZnVuY3Rpb24gbmVnYXRlKG91dCxhKXtyZXR1cm4gb3V0WzBdPS1hWzBdLG91dFsxXT0tYVsxXSxvdXRbMl09LWFbMl0sb3V0WzNdPS1hWzNdLG91dH1mdW5jdGlvbiBpbnZlcnNlKG91dCxhKXtyZXR1cm4gb3V0WzBdPTEvYVswXSxvdXRbMV09MS9hWzFdLG91dFsyXT0xL2FbMl0sb3V0WzNdPTEvYVszXSxvdXR9ZnVuY3Rpb24gbm9ybWFsaXplKG91dCxhKXt2YXIgeD1hWzBdLHk9YVsxXSx6PWFbMl0sdz1hWzNdLGxlbj14KngreSp5K3oqeit3Knc7cmV0dXJuIGxlbj4wJiYobGVuPTEvTWF0aC5zcXJ0KGxlbiksb3V0WzBdPXgqbGVuLG91dFsxXT15KmxlbixvdXRbMl09eipsZW4sb3V0WzNdPXcqbGVuKSxvdXR9ZnVuY3Rpb24gZG90KGEsYil7cmV0dXJuIGFbMF0qYlswXSthWzFdKmJbMV0rYVsyXSpiWzJdK2FbM10qYlszXX1mdW5jdGlvbiBsZXJwKG91dCxhLGIsdCl7dmFyIGF4PWFbMF0sYXk9YVsxXSxhej1hWzJdLGF3PWFbM107cmV0dXJuIG91dFswXT1heCt0KihiWzBdLWF4KSxvdXRbMV09YXkrdCooYlsxXS1heSksb3V0WzJdPWF6K3QqKGJbMl0tYXopLG91dFszXT1hdyt0KihiWzNdLWF3KSxvdXR9ZnVuY3Rpb24gcmFuZG9tKG91dCx2ZWN0b3JTY2FsZSl7cmV0dXJuIHZlY3RvclNjYWxlPXZlY3RvclNjYWxlfHwxLG91dFswXT1nbE1hdHJpeC5SQU5ET00oKSxvdXRbMV09Z2xNYXRyaXguUkFORE9NKCksb3V0WzJdPWdsTWF0cml4LlJBTkRPTSgpLG91dFszXT1nbE1hdHJpeC5SQU5ET00oKSxub3JtYWxpemUob3V0LG91dCksc2NhbGUob3V0LG91dCx2ZWN0b3JTY2FsZSksb3V0fWZ1bmN0aW9uIHRyYW5zZm9ybU1hdDQob3V0LGEsbSl7dmFyIHg9YVswXSx5PWFbMV0sej1hWzJdLHc9YVszXTtyZXR1cm4gb3V0WzBdPW1bMF0qeCttWzRdKnkrbVs4XSp6K21bMTJdKncsb3V0WzFdPW1bMV0qeCttWzVdKnkrbVs5XSp6K21bMTNdKncsb3V0WzJdPW1bMl0qeCttWzZdKnkrbVsxMF0qeittWzE0XSp3LG91dFszXT1tWzNdKngrbVs3XSp5K21bMTFdKnorbVsxNV0qdyxvdXR9ZnVuY3Rpb24gdHJhbnNmb3JtUXVhdChvdXQsYSxxKXt2YXIgeD1hWzBdLHk9YVsxXSx6PWFbMl0scXg9cVswXSxxeT1xWzFdLHF6PXFbMl0scXc9cVszXSxpeD1xdyp4K3F5KnotcXoqeSxpeT1xdyp5K3F6KngtcXgqeixpej1xdyp6K3F4KnktcXkqeCxpdz0tcXgqeC1xeSp5LXF6Kno7cmV0dXJuIG91dFswXT1peCpxdytpdyotcXgraXkqLXF6LWl6Ki1xeSxvdXRbMV09aXkqcXcraXcqLXF5K2l6Ki1xeC1peCotcXosb3V0WzJdPWl6KnF3K2l3Ki1xeitpeCotcXktaXkqLXF4LG91dFszXT1hWzNdLG91dH1mdW5jdGlvbiBzdHIoYSl7cmV0dXJuXCJ2ZWM0KFwiK2FbMF0rXCIsIFwiK2FbMV0rXCIsIFwiK2FbMl0rXCIsIFwiK2FbM10rXCIpXCJ9ZnVuY3Rpb24gZXhhY3RFcXVhbHMoYSxiKXtyZXR1cm4gYVswXT09PWJbMF0mJmFbMV09PT1iWzFdJiZhWzJdPT09YlsyXSYmYVszXT09PWJbM119ZnVuY3Rpb24gZXF1YWxzKGEsYil7dmFyIGEwPWFbMF0sYTE9YVsxXSxhMj1hWzJdLGEzPWFbM10sYjA9YlswXSxiMT1iWzFdLGIyPWJbMl0sYjM9YlszXTtyZXR1cm4gTWF0aC5hYnMoYTAtYjApPD1nbE1hdHJpeC5FUFNJTE9OKk1hdGgubWF4KDEsTWF0aC5hYnMoYTApLE1hdGguYWJzKGIwKSkmJk1hdGguYWJzKGExLWIxKTw9Z2xNYXRyaXguRVBTSUxPTipNYXRoLm1heCgxLE1hdGguYWJzKGExKSxNYXRoLmFicyhiMSkpJiZNYXRoLmFicyhhMi1iMik8PWdsTWF0cml4LkVQU0lMT04qTWF0aC5tYXgoMSxNYXRoLmFicyhhMiksTWF0aC5hYnMoYjIpKSYmTWF0aC5hYnMoYTMtYjMpPD1nbE1hdHJpeC5FUFNJTE9OKk1hdGgubWF4KDEsTWF0aC5hYnMoYTMpLE1hdGguYWJzKGIzKSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZXhwb3J0cy5mb3JFYWNoPWV4cG9ydHMuc3FyTGVuPWV4cG9ydHMubGVuPWV4cG9ydHMuc3FyRGlzdD1leHBvcnRzLmRpc3Q9ZXhwb3J0cy5kaXY9ZXhwb3J0cy5tdWw9ZXhwb3J0cy5zdWI9dm9pZCAwLGV4cG9ydHMuY3JlYXRlPWNyZWF0ZSxleHBvcnRzLmNsb25lPWNsb25lLGV4cG9ydHMuZnJvbVZhbHVlcz1mcm9tVmFsdWVzLGV4cG9ydHMuY29weT1jb3B5LGV4cG9ydHMuc2V0PXNldCxleHBvcnRzLmFkZD1hZGQsZXhwb3J0cy5zdWJ0cmFjdD1zdWJ0cmFjdCxleHBvcnRzLm11bHRpcGx5PW11bHRpcGx5LGV4cG9ydHMuZGl2aWRlPWRpdmlkZSxleHBvcnRzLmNlaWw9Y2VpbCxleHBvcnRzLmZsb29yPWZsb29yLGV4cG9ydHMubWluPW1pbixleHBvcnRzLm1heD1tYXgsZXhwb3J0cy5yb3VuZD1yb3VuZCxleHBvcnRzLnNjYWxlPXNjYWxlLGV4cG9ydHMuc2NhbGVBbmRBZGQ9c2NhbGVBbmRBZGQsZXhwb3J0cy5kaXN0YW5jZT1kaXN0YW5jZSxleHBvcnRzLnNxdWFyZWREaXN0YW5jZT1zcXVhcmVkRGlzdGFuY2UsZXhwb3J0cy5sZW5ndGg9bGVuZ3RoLGV4cG9ydHMuc3F1YXJlZExlbmd0aD1zcXVhcmVkTGVuZ3RoLGV4cG9ydHMubmVnYXRlPW5lZ2F0ZSxleHBvcnRzLmludmVyc2U9aW52ZXJzZSxleHBvcnRzLm5vcm1hbGl6ZT1ub3JtYWxpemUsZXhwb3J0cy5kb3Q9ZG90LGV4cG9ydHMubGVycD1sZXJwLGV4cG9ydHMucmFuZG9tPXJhbmRvbSxleHBvcnRzLnRyYW5zZm9ybU1hdDQ9dHJhbnNmb3JtTWF0NCxleHBvcnRzLnRyYW5zZm9ybVF1YXQ9dHJhbnNmb3JtUXVhdCxleHBvcnRzLnN0cj1zdHIsZXhwb3J0cy5leGFjdEVxdWFscz1leGFjdEVxdWFscyxleHBvcnRzLmVxdWFscz1lcXVhbHM7dmFyIF9jb21tb249X193ZWJwYWNrX3JlcXVpcmVfXygzKSxnbE1hdHJpeD1mdW5jdGlvbihvYmope2lmKG9iaiYmb2JqLl9fZXNNb2R1bGUpcmV0dXJuIG9iajt2YXIgbmV3T2JqPXt9O2lmKG51bGwhPW9iailmb3IodmFyIGtleSBpbiBvYmopT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaixrZXkpJiYobmV3T2JqW2tleV09b2JqW2tleV0pO3JldHVybiBuZXdPYmouZGVmYXVsdD1vYmosbmV3T2JqfShfY29tbW9uKTtleHBvcnRzLnN1Yj1zdWJ0cmFjdCxleHBvcnRzLm11bD1tdWx0aXBseSxleHBvcnRzLmRpdj1kaXZpZGUsZXhwb3J0cy5kaXN0PWRpc3RhbmNlLGV4cG9ydHMuc3FyRGlzdD1zcXVhcmVkRGlzdGFuY2UsZXhwb3J0cy5sZW49bGVuZ3RoLGV4cG9ydHMuc3FyTGVuPXNxdWFyZWRMZW5ndGgsZXhwb3J0cy5mb3JFYWNoPWZ1bmN0aW9uKCl7dmFyIHZlYz1jcmVhdGUoKTtyZXR1cm4gZnVuY3Rpb24oYSxzdHJpZGUsb2Zmc2V0LGNvdW50LGZuLGFyZyl7dmFyIGk9dm9pZCAwLGw9dm9pZCAwO2ZvcihzdHJpZGV8fChzdHJpZGU9NCksb2Zmc2V0fHwob2Zmc2V0PTApLGw9Y291bnQ/TWF0aC5taW4oY291bnQqc3RyaWRlK29mZnNldCxhLmxlbmd0aCk6YS5sZW5ndGgsaT1vZmZzZXQ7aTxsO2krPXN0cmlkZSl2ZWNbMF09YVtpXSx2ZWNbMV09YVtpKzFdLHZlY1syXT1hW2krMl0sdmVjWzNdPWFbaSszXSxmbih2ZWMsdmVjLGFyZyksYVtpXT12ZWNbMF0sYVtpKzFdPXZlY1sxXSxhW2krMl09dmVjWzJdLGFbaSszXT12ZWNbM107cmV0dXJuIGF9fSgpfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjttb2R1bGUuZXhwb3J0cz17QUNUSVZFX0FUVFJJQlVURVM6MzU3MjEsQUNUSVZFX0FUVFJJQlVURV9NQVhfTEVOR1RIOjM1NzIyLEFDVElWRV9URVhUVVJFOjM0MDE2LEFDVElWRV9VTklGT1JNUzozNTcxOCxBQ1RJVkVfVU5JRk9STV9NQVhfTEVOR1RIOjM1NzE5LEFMSUFTRURfTElORV9XSURUSF9SQU5HRTozMzkwMixBTElBU0VEX1BPSU5UX1NJWkVfUkFOR0U6MzM5MDEsQUxQSEE6NjQwNixBTFBIQV9CSVRTOjM0MTMsQUxXQVlTOjUxOSxBUlJBWV9CVUZGRVI6MzQ5NjIsQVJSQVlfQlVGRkVSX0JJTkRJTkc6MzQ5NjQsQVRUQUNIRURfU0hBREVSUzozNTcxNyxCQUNLOjEwMjksQkxFTkQ6MzA0MixCTEVORF9DT0xPUjozMjc3MyxCTEVORF9EU1RfQUxQSEE6MzI5NzAsQkxFTkRfRFNUX1JHQjozMjk2OCxCTEVORF9FUVVBVElPTjozMjc3NyxCTEVORF9FUVVBVElPTl9BTFBIQTozNDg3NyxCTEVORF9FUVVBVElPTl9SR0I6MzI3NzcsQkxFTkRfU1JDX0FMUEhBOjMyOTcxLEJMRU5EX1NSQ19SR0I6MzI5NjksQkxVRV9CSVRTOjM0MTIsQk9PTDozNTY3MCxCT09MX1ZFQzI6MzU2NzEsQk9PTF9WRUMzOjM1NjcyLEJPT0xfVkVDNDozNTY3MyxCUk9XU0VSX0RFRkFVTFRfV0VCR0w6Mzc0NDQsQlVGRkVSX1NJWkU6MzQ2NjAsQlVGRkVSX1VTQUdFOjM0NjYxLEJZVEU6NTEyMCxDQ1c6MjMwNSxDTEFNUF9UT19FREdFOjMzMDcxLENPTE9SX0FUVEFDSE1FTlQwOjM2MDY0LENPTE9SX0JVRkZFUl9CSVQ6MTYzODQsQ09MT1JfQ0xFQVJfVkFMVUU6MzEwNixDT0xPUl9XUklURU1BU0s6MzEwNyxDT01QSUxFX1NUQVRVUzozNTcxMyxDT01QUkVTU0VEX1RFWFRVUkVfRk9STUFUUzozNDQ2NyxDT05TVEFOVF9BTFBIQTozMjc3MSxDT05TVEFOVF9DT0xPUjozMjc2OSxDT05URVhUX0xPU1RfV0VCR0w6Mzc0NDIsQ1VMTF9GQUNFOjI4ODQsQ1VMTF9GQUNFX01PREU6Mjg4NSxDVVJSRU5UX1BST0dSQU06MzU3MjUsQ1VSUkVOVF9WRVJURVhfQVRUUklCOjM0MzQyLENXOjIzMDQsREVDUjo3NjgzLERFQ1JfV1JBUDozNDA1NixERUxFVEVfU1RBVFVTOjM1NzEyLERFUFRIX0FUVEFDSE1FTlQ6MzYwOTYsREVQVEhfQklUUzozNDE0LERFUFRIX0JVRkZFUl9CSVQ6MjU2LERFUFRIX0NMRUFSX1ZBTFVFOjI5MzEsREVQVEhfQ09NUE9ORU5UOjY0MDIsUkVEOjY0MDMsREVQVEhfQ09NUE9ORU5UMTY6MzMxODksREVQVEhfRlVOQzoyOTMyLERFUFRIX1JBTkdFOjI5MjgsREVQVEhfU1RFTkNJTDozNDA0MSxERVBUSF9TVEVOQ0lMX0FUVEFDSE1FTlQ6MzMzMDYsREVQVEhfVEVTVDoyOTI5LERFUFRIX1dSSVRFTUFTSzoyOTMwLERJVEhFUjozMDI0LERPTlRfQ0FSRTo0MzUyLERTVF9BTFBIQTo3NzIsRFNUX0NPTE9SOjc3NCxEWU5BTUlDX0RSQVc6MzUwNDgsRUxFTUVOVF9BUlJBWV9CVUZGRVI6MzQ5NjMsRUxFTUVOVF9BUlJBWV9CVUZGRVJfQklORElORzozNDk2NSxFUVVBTDo1MTQsRkFTVEVTVDo0MzUzLEZMT0FUOjUxMjYsRkxPQVRfTUFUMjozNTY3NCxGTE9BVF9NQVQzOjM1Njc1LEZMT0FUX01BVDQ6MzU2NzYsRkxPQVRfVkVDMjozNTY2NCxGTE9BVF9WRUMzOjM1NjY1LEZMT0FUX1ZFQzQ6MzU2NjYsRlJBR01FTlRfU0hBREVSOjM1NjMyLEZSQU1FQlVGRkVSOjM2MTYwLEZSQU1FQlVGRkVSX0FUVEFDSE1FTlRfT0JKRUNUX05BTUU6MzYwNDksRlJBTUVCVUZGRVJfQVRUQUNITUVOVF9PQkpFQ1RfVFlQRTozNjA0OCxGUkFNRUJVRkZFUl9BVFRBQ0hNRU5UX1RFWFRVUkVfQ1VCRV9NQVBfRkFDRTozNjA1MSxGUkFNRUJVRkZFUl9BVFRBQ0hNRU5UX1RFWFRVUkVfTEVWRUw6MzYwNTAsRlJBTUVCVUZGRVJfQklORElORzozNjAwNixGUkFNRUJVRkZFUl9DT01QTEVURTozNjA1MyxGUkFNRUJVRkZFUl9JTkNPTVBMRVRFX0FUVEFDSE1FTlQ6MzYwNTQsRlJBTUVCVUZGRVJfSU5DT01QTEVURV9ESU1FTlNJT05TOjM2MDU3LEZSQU1FQlVGRkVSX0lOQ09NUExFVEVfTUlTU0lOR19BVFRBQ0hNRU5UOjM2MDU1LEZSQU1FQlVGRkVSX1VOU1VQUE9SVEVEOjM2MDYxLEZST05UOjEwMjgsRlJPTlRfQU5EX0JBQ0s6MTAzMixGUk9OVF9GQUNFOjI4ODYsRlVOQ19BREQ6MzI3NzQsRlVOQ19SRVZFUlNFX1NVQlRSQUNUOjMyNzc5LEZVTkNfU1VCVFJBQ1Q6MzI3NzgsR0VORVJBVEVfTUlQTUFQX0hJTlQ6MzMxNzAsR0VRVUFMOjUxOCxHUkVBVEVSOjUxNixHUkVFTl9CSVRTOjM0MTEsSElHSF9GTE9BVDozNjMzOCxISUdIX0lOVDozNjM0MSxJTkNSOjc2ODIsSU5DUl9XUkFQOjM0MDU1LElORk9fTE9HX0xFTkdUSDozNTcxNixJTlQ6NTEyNCxJTlRfVkVDMjozNTY2NyxJTlRfVkVDMzozNTY2OCxJTlRfVkVDNDozNTY2OSxJTlZBTElEX0VOVU06MTI4MCxJTlZBTElEX0ZSQU1FQlVGRkVSX09QRVJBVElPTjoxMjg2LElOVkFMSURfT1BFUkFUSU9OOjEyODIsSU5WQUxJRF9WQUxVRToxMjgxLElOVkVSVDo1Mzg2LEtFRVA6NzY4MCxMRVFVQUw6NTE1LExFU1M6NTEzLExJTkVBUjo5NzI5LExJTkVBUl9NSVBNQVBfTElORUFSOjk5ODcsTElORUFSX01JUE1BUF9ORUFSRVNUOjk5ODUsTElORVM6MSxMSU5FX0xPT1A6MixMSU5FX1NUUklQOjMsTElORV9XSURUSDoyODQ5LExJTktfU1RBVFVTOjM1NzE0LExPV19GTE9BVDozNjMzNixMT1dfSU5UOjM2MzM5LExVTUlOQU5DRTo2NDA5LExVTUlOQU5DRV9BTFBIQTo2NDEwLE1BWF9DT01CSU5FRF9URVhUVVJFX0lNQUdFX1VOSVRTOjM1NjYxLE1BWF9DVUJFX01BUF9URVhUVVJFX1NJWkU6MzQwNzYsTUFYX0ZSQUdNRU5UX1VOSUZPUk1fVkVDVE9SUzozNjM0OSxNQVhfUkVOREVSQlVGRkVSX1NJWkU6MzQwMjQsTUFYX1RFWFRVUkVfSU1BR0VfVU5JVFM6MzQ5MzAsTUFYX1RFWFRVUkVfU0laRTozMzc5LE1BWF9WQVJZSU5HX1ZFQ1RPUlM6MzYzNDgsTUFYX1ZFUlRFWF9BVFRSSUJTOjM0OTIxLE1BWF9WRVJURVhfVEVYVFVSRV9JTUFHRV9VTklUUzozNTY2MCxNQVhfVkVSVEVYX1VOSUZPUk1fVkVDVE9SUzozNjM0NyxNQVhfVklFV1BPUlRfRElNUzozMzg2LE1FRElVTV9GTE9BVDozNjMzNyxNRURJVU1fSU5UOjM2MzQwLE1JUlJPUkVEX1JFUEVBVDozMzY0OCxORUFSRVNUOjk3MjgsTkVBUkVTVF9NSVBNQVBfTElORUFSOjk5ODYsTkVBUkVTVF9NSVBNQVBfTkVBUkVTVDo5OTg0LE5FVkVSOjUxMixOSUNFU1Q6NDM1NCxOT05FOjAsTk9URVFVQUw6NTE3LE5PX0VSUk9SOjAsTlVNX0NPTVBSRVNTRURfVEVYVFVSRV9GT1JNQVRTOjM0NDY2LE9ORToxLE9ORV9NSU5VU19DT05TVEFOVF9BTFBIQTozMjc3MixPTkVfTUlOVVNfQ09OU1RBTlRfQ09MT1I6MzI3NzAsT05FX01JTlVTX0RTVF9BTFBIQTo3NzMsT05FX01JTlVTX0RTVF9DT0xPUjo3NzUsT05FX01JTlVTX1NSQ19BTFBIQTo3NzEsT05FX01JTlVTX1NSQ19DT0xPUjo3NjksT1VUX09GX01FTU9SWToxMjg1LFBBQ0tfQUxJR05NRU5UOjMzMzMsUE9JTlRTOjAsUE9MWUdPTl9PRkZTRVRfRkFDVE9SOjMyODI0LFBPTFlHT05fT0ZGU0VUX0ZJTEw6MzI4MjMsUE9MWUdPTl9PRkZTRVRfVU5JVFM6MTA3NTIsUkVEX0JJVFM6MzQxMCxSRU5ERVJCVUZGRVI6MzYxNjEsUkVOREVSQlVGRkVSX0FMUEhBX1NJWkU6MzYxNzksUkVOREVSQlVGRkVSX0JJTkRJTkc6MzYwMDcsUkVOREVSQlVGRkVSX0JMVUVfU0laRTozNjE3OCxSRU5ERVJCVUZGRVJfREVQVEhfU0laRTozNjE4MCxSRU5ERVJCVUZGRVJfR1JFRU5fU0laRTozNjE3NyxSRU5ERVJCVUZGRVJfSEVJR0hUOjM2MTYzLFJFTkRFUkJVRkZFUl9JTlRFUk5BTF9GT1JNQVQ6MzYxNjQsUkVOREVSQlVGRkVSX1JFRF9TSVpFOjM2MTc2LFJFTkRFUkJVRkZFUl9TVEVOQ0lMX1NJWkU6MzYxODEsUkVOREVSQlVGRkVSX1dJRFRIOjM2MTYyLFJFTkRFUkVSOjc5MzcsUkVQRUFUOjEwNDk3LFJFUExBQ0U6NzY4MSxSR0I6NjQwNyxSR0I1X0ExOjMyODU1LFJHQjU2NTozNjE5NCxSR0JBOjY0MDgsUkdCQTQ6MzI4NTQsU0FNUExFUl8yRDozNTY3OCxTQU1QTEVSX0NVQkU6MzU2ODAsU0FNUExFUzozMjkzNyxTQU1QTEVfQUxQSEFfVE9fQ09WRVJBR0U6MzI5MjYsU0FNUExFX0JVRkZFUlM6MzI5MzYsU0FNUExFX0NPVkVSQUdFOjMyOTI4LFNBTVBMRV9DT1ZFUkFHRV9JTlZFUlQ6MzI5MzksU0FNUExFX0NPVkVSQUdFX1ZBTFVFOjMyOTM4LFNDSVNTT1JfQk9YOjMwODgsU0NJU1NPUl9URVNUOjMwODksU0hBREVSX0NPTVBJTEVSOjM2MzQ2LFNIQURFUl9TT1VSQ0VfTEVOR1RIOjM1NzIwLFNIQURFUl9UWVBFOjM1NjYzLFNIQURJTkdfTEFOR1VBR0VfVkVSU0lPTjozNTcyNCxTSE9SVDo1MTIyLFNSQ19BTFBIQTo3NzAsU1JDX0FMUEhBX1NBVFVSQVRFOjc3NixTUkNfQ09MT1I6NzY4LFNUQVRJQ19EUkFXOjM1MDQ0LFNURU5DSUxfQVRUQUNITUVOVDozNjEyOCxTVEVOQ0lMX0JBQ0tfRkFJTDozNDgxNyxTVEVOQ0lMX0JBQ0tfRlVOQzozNDgxNixTVEVOQ0lMX0JBQ0tfUEFTU19ERVBUSF9GQUlMOjM0ODE4LFNURU5DSUxfQkFDS19QQVNTX0RFUFRIX1BBU1M6MzQ4MTksU1RFTkNJTF9CQUNLX1JFRjozNjAwMyxTVEVOQ0lMX0JBQ0tfVkFMVUVfTUFTSzozNjAwNCxTVEVOQ0lMX0JBQ0tfV1JJVEVNQVNLOjM2MDA1LFNURU5DSUxfQklUUzozNDE1LFNURU5DSUxfQlVGRkVSX0JJVDoxMDI0LFNURU5DSUxfQ0xFQVJfVkFMVUU6Mjk2MSxTVEVOQ0lMX0ZBSUw6Mjk2NCxTVEVOQ0lMX0ZVTkM6Mjk2MixTVEVOQ0lMX0lOREVYOjY0MDEsU1RFTkNJTF9JTkRFWDg6MzYxNjgsU1RFTkNJTF9QQVNTX0RFUFRIX0ZBSUw6Mjk2NSxTVEVOQ0lMX1BBU1NfREVQVEhfUEFTUzoyOTY2LFNURU5DSUxfUkVGOjI5NjcsU1RFTkNJTF9URVNUOjI5NjAsU1RFTkNJTF9WQUxVRV9NQVNLOjI5NjMsU1RFTkNJTF9XUklURU1BU0s6Mjk2OCxTVFJFQU1fRFJBVzozNTA0MCxTVUJQSVhFTF9CSVRTOjM0MDgsVEVYVFVSRTo1ODkwLFRFWFRVUkUwOjMzOTg0LFRFWFRVUkUxOjMzOTg1LFRFWFRVUkUyOjMzOTg2LFRFWFRVUkUzOjMzOTg3LFRFWFRVUkU0OjMzOTg4LFRFWFRVUkU1OjMzOTg5LFRFWFRVUkU2OjMzOTkwLFRFWFRVUkU3OjMzOTkxLFRFWFRVUkU4OjMzOTkyLFRFWFRVUkU5OjMzOTkzLFRFWFRVUkUxMDozMzk5NCxURVhUVVJFMTE6MzM5OTUsVEVYVFVSRTEyOjMzOTk2LFRFWFRVUkUxMzozMzk5NyxURVhUVVJFMTQ6MzM5OTgsVEVYVFVSRTE1OjMzOTk5LFRFWFRVUkUxNjozNGUzLFRFWFRVUkUxNzozNDAwMSxURVhUVVJFMTg6MzQwMDIsVEVYVFVSRTE5OjM0MDAzLFRFWFRVUkUyMDozNDAwNCxURVhUVVJFMjE6MzQwMDUsVEVYVFVSRTIyOjM0MDA2LFRFWFRVUkUyMzozNDAwNyxURVhUVVJFMjQ6MzQwMDgsVEVYVFVSRTI1OjM0MDA5LFRFWFRVUkUyNjozNDAxMCxURVhUVVJFMjc6MzQwMTEsVEVYVFVSRTI4OjM0MDEyLFRFWFRVUkUyOTozNDAxMyxURVhUVVJFMzA6MzQwMTQsVEVYVFVSRTMxOjM0MDE1LFRFWFRVUkVfMkQ6MzU1MyxURVhUVVJFX0JJTkRJTkdfMkQ6MzI4NzMsVEVYVFVSRV9CSU5ESU5HX0NVQkVfTUFQOjM0MDY4LFRFWFRVUkVfQ1VCRV9NQVA6MzQwNjcsVEVYVFVSRV9DVUJFX01BUF9ORUdBVElWRV9YOjM0MDcwLFRFWFRVUkVfQ1VCRV9NQVBfTkVHQVRJVkVfWTozNDA3MixURVhUVVJFX0NVQkVfTUFQX05FR0FUSVZFX1o6MzQwNzQsVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9YOjM0MDY5LFRFWFRVUkVfQ1VCRV9NQVBfUE9TSVRJVkVfWTozNDA3MSxURVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1o6MzQwNzMsVEVYVFVSRV9NQUdfRklMVEVSOjEwMjQwLFRFWFRVUkVfTUlOX0ZJTFRFUjoxMDI0MSxURVhUVVJFX1dSQVBfUzoxMDI0MixURVhUVVJFX1dSQVBfVDoxMDI0MyxUUklBTkdMRVM6NCxUUklBTkdMRV9GQU46NixUUklBTkdMRV9TVFJJUDo1LFVOUEFDS19BTElHTk1FTlQ6MzMxNyxVTlBBQ0tfQ09MT1JTUEFDRV9DT05WRVJTSU9OX1dFQkdMOjM3NDQzLFVOUEFDS19GTElQX1lfV0VCR0w6Mzc0NDAsVU5QQUNLX1BSRU1VTFRJUExZX0FMUEhBX1dFQkdMOjM3NDQxLFVOU0lHTkVEX0JZVEU6NTEyMSxVTlNJR05FRF9JTlQ6NTEyNSxVTlNJR05FRF9TSE9SVDo1MTIzLFVOU0lHTkVEX1NIT1JUXzRfNF80XzQ6MzI4MTksVU5TSUdORURfU0hPUlRfNV81XzVfMTozMjgyMCxVTlNJR05FRF9TSE9SVF81XzZfNTozMzYzNSxWQUxJREFURV9TVEFUVVM6MzU3MTUsVkVORE9SOjc5MzYsVkVSU0lPTjo3OTM4LFZFUlRFWF9BVFRSSUJfQVJSQVlfQlVGRkVSX0JJTkRJTkc6MzQ5NzUsVkVSVEVYX0FUVFJJQl9BUlJBWV9FTkFCTEVEOjM0MzM4LFZFUlRFWF9BVFRSSUJfQVJSQVlfTk9STUFMSVpFRDozNDkyMixWRVJURVhfQVRUUklCX0FSUkFZX1BPSU5URVI6MzQzNzMsVkVSVEVYX0FUVFJJQl9BUlJBWV9TSVpFOjM0MzM5LFZFUlRFWF9BVFRSSUJfQVJSQVlfU1RSSURFOjM0MzQwLFZFUlRFWF9BVFRSSUJfQVJSQVlfVFlQRTozNDM0MSxWRVJURVhfU0hBREVSOjM1NjMzLFZJRVdQT1JUOjI5NzgsWkVSTzowLFI4OjMzMzIxfX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZXhwb3J0cy5kZWZhdWx0PWZ1bmN0aW9uKGdsLHNoYWRlclByb2dyYW0sbmFtZSl7cmV0dXJuIHZvaWQgMD09PXNoYWRlclByb2dyYW0uY2FjaGVBdHRyaWJMb2MmJihzaGFkZXJQcm9ncmFtLmNhY2hlQXR0cmliTG9jPXt9KSx2b2lkIDA9PT1zaGFkZXJQcm9ncmFtLmNhY2hlQXR0cmliTG9jW25hbWVdJiYoc2hhZGVyUHJvZ3JhbS5jYWNoZUF0dHJpYkxvY1tuYW1lXT1nbC5nZXRBdHRyaWJMb2NhdGlvbihzaGFkZXJQcm9ncmFtLG5hbWUpKSxzaGFkZXJQcm9ncmFtLmNhY2hlQXR0cmliTG9jW25hbWVdfX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fWZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIGlzUG93ZXJPZlR3byh4KXtyZXR1cm4gMCE9PXgmJiEoeCZ4LTEpfWZ1bmN0aW9uIGlzU291cmNlUG93ZXJPZlR3byhvYmope3ZhciB3PW9iai53aWR0aHx8b2JqLnZpZGVvV2lkdGgsaD1vYmouaGVpZ2h0fHxvYmoudmlkZW9IZWlnaHQ7cmV0dXJuISghd3x8IWgpJiYoaXNQb3dlck9mVHdvKHcpJiZpc1Bvd2VyT2ZUd28oaCkpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHwhMSxkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBkZXNjcmlwdG9yJiYoZGVzY3JpcHRvci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxkZXNjcmlwdG9yLmtleSxkZXNjcmlwdG9yKX19cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe3JldHVybiBwcm90b1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSxwcm90b1Byb3BzKSxzdGF0aWNQcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyksQ29uc3RydWN0b3J9fSgpLF9HTFRvb2w9X193ZWJwYWNrX3JlcXVpcmVfXygwKSxfR0xUb29sMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HTFRvb2wpLF9XZWJnbE51bWJlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDgpLGdsPShfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9XZWJnbE51bWJlciksdm9pZCAwKSxHTFRleHR1cmU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBHTFRleHR1cmUobVNvdXJjZSl7dmFyIGlzVGV4dHVyZT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXSYmYXJndW1lbnRzWzFdLG1QYXJhbWV0ZXJzPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTp7fTtpZihfY2xhc3NDYWxsQ2hlY2sodGhpcyxHTFRleHR1cmUpLGdsPV9HTFRvb2wyLmRlZmF1bHQuZ2wsaXNUZXh0dXJlKXRoaXMuX3RleHR1cmU9bVNvdXJjZTtlbHNle3RoaXMuX21Tb3VyY2U9bVNvdXJjZSx0aGlzLl90ZXh0dXJlPWdsLmNyZWF0ZVRleHR1cmUoKSx0aGlzLl9pc1ZpZGVvPVwiVklERU9cIj09PW1Tb3VyY2UudGFnTmFtZSx0aGlzLl9wcmVtdWx0aXBseUFscGhhPSEwLHRoaXMuX21hZ0ZpbHRlcj1tUGFyYW1ldGVycy5tYWdGaWx0ZXJ8fGdsLkxJTkVBUix0aGlzLl9taW5GaWx0ZXI9bVBhcmFtZXRlcnMubWluRmlsdGVyfHxnbC5ORUFSRVNUX01JUE1BUF9MSU5FQVIsdGhpcy5fd3JhcFM9bVBhcmFtZXRlcnMud3JhcFN8fGdsLk1JUlJPUkVEX1JFUEVBVCx0aGlzLl93cmFwVD1tUGFyYW1ldGVycy53cmFwVHx8Z2wuTUlSUk9SRURfUkVQRUFUO21Tb3VyY2Uud2lkdGh8fG1Tb3VyY2UudmlkZW9XaWR0aD9pc1NvdXJjZVBvd2VyT2ZUd28obVNvdXJjZSl8fCh0aGlzLl93cmFwUz10aGlzLl93cmFwVD1nbC5DTEFNUF9UT19FREdFLHRoaXMuX21pbkZpbHRlcj09PWdsLk5FQVJFU1RfTUlQTUFQX0xJTkVBUiYmKHRoaXMuX21pbkZpbHRlcj1nbC5MSU5FQVIpKToodGhpcy5fd3JhcFM9dGhpcy5fd3JhcFQ9Z2wuQ0xBTVBfVE9fRURHRSx0aGlzLl9taW5GaWx0ZXI9PT1nbC5ORUFSRVNUX01JUE1BUF9MSU5FQVImJih0aGlzLl9taW5GaWx0ZXI9Z2wuTElORUFSKSksZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCx0aGlzLl90ZXh0dXJlKSxnbC5waXhlbFN0b3JlaShnbC5VTlBBQ0tfRkxJUF9ZX1dFQkdMLCEwKSxtU291cmNlLmV4cG9zdXJlP2dsLnRleEltYWdlMkQoZ2wuVEVYVFVSRV8yRCwwLGdsLlJHQkEsbVNvdXJjZS5zaGFwZVswXSxtU291cmNlLnNoYXBlWzFdLDAsZ2wuUkdCQSxnbC5GTE9BVCxtU291cmNlLmRhdGEpOmdsLnRleEltYWdlMkQoZ2wuVEVYVFVSRV8yRCwwLGdsLlJHQkEsZ2wuUkdCQSxnbC5VTlNJR05FRF9CWVRFLG1Tb3VyY2UpLGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV8yRCxnbC5URVhUVVJFX01BR19GSUxURVIsdGhpcy5fbWFnRmlsdGVyKSxnbC50ZXhQYXJhbWV0ZXJpKGdsLlRFWFRVUkVfMkQsZ2wuVEVYVFVSRV9NSU5fRklMVEVSLHRoaXMuX21pbkZpbHRlciksZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELGdsLlRFWFRVUkVfV1JBUF9TLHRoaXMuX3dyYXBTKSxnbC50ZXhQYXJhbWV0ZXJpKGdsLlRFWFRVUkVfMkQsZ2wuVEVYVFVSRV9XUkFQX1QsdGhpcy5fd3JhcFQpO3ZhciBleHQ9X0dMVG9vbDIuZGVmYXVsdC5nZXRFeHRlbnNpb24oXCJFWFRfdGV4dHVyZV9maWx0ZXJfYW5pc290cm9waWNcIik7aWYoZXh0KXt2YXIgbWF4PWdsLmdldFBhcmFtZXRlcihleHQuTUFYX1RFWFRVUkVfTUFYX0FOSVNPVFJPUFlfRVhUKTtnbC50ZXhQYXJhbWV0ZXJmKGdsLlRFWFRVUkVfMkQsZXh0LlRFWFRVUkVfTUFYX0FOSVNPVFJPUFlfRVhULG1heCl9dGhpcy5fY2FuR2VuZXJhdGVNaXBtYXAoKSYmZ2wuZ2VuZXJhdGVNaXBtYXAoZ2wuVEVYVFVSRV8yRCksZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCxudWxsKX19cmV0dXJuIF9jcmVhdGVDbGFzcyhHTFRleHR1cmUsW3trZXk6XCJnZW5lcmF0ZU1pcG1hcFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fY2FuR2VuZXJhdGVNaXBtYXAoKSYmKGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsdGhpcy5fdGV4dHVyZSksZ2wuZ2VuZXJhdGVNaXBtYXAoZ2wuVEVYVFVSRV8yRCksZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCxudWxsKSl9fSx7a2V5OlwidXBkYXRlVGV4dHVyZVwiLHZhbHVlOmZ1bmN0aW9uKG1Tb3VyY2Upe21Tb3VyY2UmJih0aGlzLl9tU291cmNlPW1Tb3VyY2UpLGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsdGhpcy5fdGV4dHVyZSksZ2wucGl4ZWxTdG9yZWkoZ2wuVU5QQUNLX0ZMSVBfWV9XRUJHTCwhMCksZ2wudGV4SW1hZ2UyRChnbC5URVhUVVJFXzJELDAsZ2wuUkdCQSxnbC5SR0JBLGdsLlVOU0lHTkVEX0JZVEUsdGhpcy5fbVNvdXJjZSksZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELGdsLlRFWFRVUkVfTUFHX0ZJTFRFUix0aGlzLl9tYWdGaWx0ZXIpLGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV8yRCxnbC5URVhUVVJFX01JTl9GSUxURVIsdGhpcy5fbWluRmlsdGVyKSx0aGlzLl9jYW5HZW5lcmF0ZU1pcG1hcCgpJiZnbC5nZW5lcmF0ZU1pcG1hcChnbC5URVhUVVJFXzJEKSxnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELG51bGwpfX0se2tleTpcImJpbmRcIix2YWx1ZTpmdW5jdGlvbihpbmRleCl7dm9pZCAwPT09aW5kZXgmJihpbmRleD0wKSxfR0xUb29sMi5kZWZhdWx0LnNoYWRlciYmKGdsLmFjdGl2ZVRleHR1cmUoZ2wuVEVYVFVSRTAraW5kZXgpLGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsdGhpcy5fdGV4dHVyZSksdGhpcy5fYmluZEluZGV4PWluZGV4KX19LHtrZXk6XCJfY2FuR2VuZXJhdGVNaXBtYXBcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9taW5GaWx0ZXI9PT1nbC5MSU5FQVJfTUlQTUFQX05FQVJFU1R8fHRoaXMuX21pbkZpbHRlcj09PWdsLk5FQVJFU1RfTUlQTUFQX0xJTkVBUnx8dGhpcy5fbWluRmlsdGVyPT09Z2wuTElORUFSX01JUE1BUF9MSU5FQVJ8fHRoaXMuX21pbkZpbHRlcj09PWdsLk5FQVJFU1RfTUlQTUFQX05FQVJFU1R9fSx7a2V5OlwibWluRmlsdGVyXCIsc2V0OmZ1bmN0aW9uKG1WYWx1ZSl7aWYobVZhbHVlIT09Z2wuTElORUFSJiZtVmFsdWUhPT1nbC5ORUFSRVNUJiZtVmFsdWUhPT1nbC5ORUFSRVNUX01JUE1BUF9MSU5FQVImJm1WYWx1ZSE9PWdsLk5FQVJFU1RfTUlQTUFQX0xJTkVBUiYmbVZhbHVlIT09Z2wuTElORUFSX01JUE1BUF9MSU5FQVImJm1WYWx1ZSE9PWdsLk5FQVJFU1RfTUlQTUFQX05FQVJFU1QpcmV0dXJuIHRoaXM7dGhpcy5fbWluRmlsdGVyPW1WYWx1ZSxnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELHRoaXMuX3RleHR1cmUpLGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV8yRCxnbC5URVhUVVJFX01JTl9GSUxURVIsdGhpcy5fbWluRmlsdGVyKSxnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELG51bGwpfSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWluRmlsdGVyfX0se2tleTpcIm1hZ0ZpbHRlclwiLHNldDpmdW5jdGlvbihtVmFsdWUpe2lmKG1WYWx1ZSE9PWdsLkxJTkVBUiYmbVZhbHVlIT09Z2wuTkVBUkVTVClyZXR1cm4gdGhpczt0aGlzLl9tYWdGaWx0ZXI9bVZhbHVlLGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsdGhpcy5fdGV4dHVyZSksZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELGdsLlRFWFRVUkVfTUFHX0ZJTFRFUix0aGlzLl9tYWdGaWx0ZXIpLGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsbnVsbCl9LGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tYWdGaWx0ZXJ9fSx7a2V5Olwid3JhcFNcIixzZXQ6ZnVuY3Rpb24obVZhbHVlKXtpZihtVmFsdWUhPT1nbC5DTEFNUF9UT19FREdFJiZtVmFsdWUhPT1nbC5SRVBFQVQmJm1WYWx1ZSE9PWdsLk1JUlJPUkVEX1JFUEVBVClyZXR1cm4gdGhpczt0aGlzLl93cmFwUz1tVmFsdWUsZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCx0aGlzLl90ZXh0dXJlKSxnbC50ZXhQYXJhbWV0ZXJpKGdsLlRFWFRVUkVfMkQsZ2wuVEVYVFVSRV9XUkFQX1MsdGhpcy5fd3JhcFMpLGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsbnVsbCl9LGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl93cmFwU319LHtrZXk6XCJ3cmFwVFwiLHNldDpmdW5jdGlvbihtVmFsdWUpe2lmKG1WYWx1ZSE9PWdsLkNMQU1QX1RPX0VER0UmJm1WYWx1ZSE9PWdsLlJFUEVBVCYmbVZhbHVlIT09Z2wuTUlSUk9SRURfUkVQRUFUKXJldHVybiB0aGlzO3RoaXMuX3dyYXBUPW1WYWx1ZSxnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELHRoaXMuX3RleHR1cmUpLGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV8yRCxnbC5URVhUVVJFX1dSQVBfVCx0aGlzLl93cmFwVCksZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCxudWxsKX0sZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dyYXBUfX0se2tleTpcInByZW11bHRpcGx5QWxwaGFcIixzZXQ6ZnVuY3Rpb24obVZhbHVlKXt0aGlzLl9wcmVtdWx0aXBseUFscGhhPW1WYWx1ZSxnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELHRoaXMuX3RleHR1cmUpLGNvbnNvbGUubG9nKFwicHJlbXVsdGlwbHlBbHBoYTpcIixtVmFsdWUpLGdsLnBpeGVsU3RvcmVpKGdsLlVOUEFDS19QUkVNVUxUSVBMWV9BTFBIQV9XRUJHTCx0aGlzLl9wcmVtdWx0aXBseUFscGhhKSxnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELG51bGwpfSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcHJlbXVsdGlwbHlBbHBoYX19LHtrZXk6XCJ0ZXh0dXJlXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RleHR1cmV9fV0pLEdMVGV4dHVyZX0oKSxfd2hpdGVUZXh0dXJlPXZvaWQgMCxfZ3JleVRleHR1cmU9dm9pZCAwLF9ibGFja1RleHR1cmU9dm9pZCAwO0dMVGV4dHVyZS53aGl0ZVRleHR1cmU9ZnVuY3Rpb24oKXtpZih2b2lkIDA9PT1fd2hpdGVUZXh0dXJlKXt2YXIgY2FudmFzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7Y2FudmFzLndpZHRoPWNhbnZhcy5oZWlnaHQ9NDt2YXIgY3R4PWNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7Y3R4LmZpbGxTdHlsZT1cIiNmZmZcIixjdHguZmlsbFJlY3QoMCwwLDQsNCksX3doaXRlVGV4dHVyZT1uZXcgR0xUZXh0dXJlKGNhbnZhcyl9cmV0dXJuIF93aGl0ZVRleHR1cmV9LEdMVGV4dHVyZS5ncmV5VGV4dHVyZT1mdW5jdGlvbigpe2lmKHZvaWQgMD09PV9ncmV5VGV4dHVyZSl7dmFyIGNhbnZhcz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO2NhbnZhcy53aWR0aD1jYW52YXMuaGVpZ2h0PTQ7dmFyIGN0eD1jYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO2N0eC5maWxsU3R5bGU9XCJyZ2IoMTI3LCAxMjcsIDEyNylcIixjdHguZmlsbFJlY3QoMCwwLDQsNCksX2dyZXlUZXh0dXJlPW5ldyBHTFRleHR1cmUoY2FudmFzKX1yZXR1cm4gX2dyZXlUZXh0dXJlfSxHTFRleHR1cmUuYmxhY2tUZXh0dXJlPWZ1bmN0aW9uKCl7aWYodm9pZCAwPT09X2JsYWNrVGV4dHVyZSl7dmFyIGNhbnZhcz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO2NhbnZhcy53aWR0aD1jYW52YXMuaGVpZ2h0PTQ7dmFyIGN0eD1jYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO2N0eC5maWxsU3R5bGU9XCJyZ2IoMTI3LCAxMjcsIDEyNylcIixjdHguZmlsbFJlY3QoMCwwLDQsNCksX2JsYWNrVGV4dHVyZT1uZXcgR0xUZXh0dXJlKGNhbnZhcyl9cmV0dXJuIF9ibGFja1RleHR1cmV9LGV4cG9ydHMuZGVmYXVsdD1HTFRleHR1cmV9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX1mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsQ29uc3RydWN0b3Ipe2lmKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBpc1Bvd2VyT2ZUd28oeCl7cmV0dXJuIDAhPT14JiYhKHgmeC0xKX1mdW5jdGlvbiBnZXRTb3VyY2VUeXBlKG1Tb3VyY2Upe3ZhciB0eXBlPV9HTFRvb2wyLmRlZmF1bHQuVU5TSUdORURfQllURTtyZXR1cm4gbVNvdXJjZSBpbnN0YW5jZW9mIEFycmF5P3R5cGU9X0dMVG9vbDIuZGVmYXVsdC5VTlNJR05FRF9CWVRFOm1Tb3VyY2UgaW5zdGFuY2VvZiBVaW50OEFycmF5P3R5cGU9X0dMVG9vbDIuZGVmYXVsdC5VTlNJR05FRF9CWVRFOm1Tb3VyY2UgaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXk/dHlwZT1fR0xUb29sMi5kZWZhdWx0LkZMT0FUOm1Tb3VyY2UgaW5zdGFuY2VvZiBIVE1MSW1hZ2VFbGVtZW50P3R5cGU9XCJpbWFnZVwiOm1Tb3VyY2UgaW5zdGFuY2VvZiBIVE1MQ2FudmFzRWxlbWVudD90eXBlPVwiY2FudmFzXCI6bVNvdXJjZSBpbnN0YW5jZW9mIEhUTUxWaWRlb0VsZW1lbnQmJih0eXBlPVwidmlkZW9cIiksdHlwZX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX2NyZWF0ZUNsYXNzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQscHJvcHMpe2Zvcih2YXIgaT0wO2k8cHJvcHMubGVuZ3RoO2krKyl7dmFyIGRlc2NyaXB0b3I9cHJvcHNbaV07ZGVzY3JpcHRvci5lbnVtZXJhYmxlPWRlc2NyaXB0b3IuZW51bWVyYWJsZXx8ITEsZGVzY3JpcHRvci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gZGVzY3JpcHRvciYmKGRlc2NyaXB0b3Iud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsZGVzY3JpcHRvci5rZXksZGVzY3JpcHRvcil9fXJldHVybiBmdW5jdGlvbihDb25zdHJ1Y3Rvcixwcm90b1Byb3BzLHN0YXRpY1Byb3BzKXtyZXR1cm4gcHJvdG9Qcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyksc3RhdGljUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3Isc3RhdGljUHJvcHMpLENvbnN0cnVjdG9yfX0oKSxfZ2V0VGV4dHVyZVBhcmFtZXRlcnM9X193ZWJwYWNrX3JlcXVpcmVfXyg1NCksX2dldFRleHR1cmVQYXJhbWV0ZXJzMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9nZXRUZXh0dXJlUGFyYW1ldGVycyksX1dlYmdsTnVtYmVyPV9fd2VicGFja19yZXF1aXJlX18oOCksX1dlYmdsTnVtYmVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9XZWJnbE51bWJlciksX0dMVG9vbD1fX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9HTFRvb2wyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0dMVG9vbCksX3NjaGVkdWxpbmc9X193ZWJwYWNrX3JlcXVpcmVfXyg2KSxfc2NoZWR1bGluZzI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2NoZWR1bGluZyksZ2w9dm9pZCAwLEdMVGV4dHVyZT1mdW5jdGlvbigpe2Z1bmN0aW9uIEdMVGV4dHVyZShtU291cmNlKXt2YXIgbVBhcmFtPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fSxfdGhpcz10aGlzLG1XaWR0aD1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06MCxtSGVpZ2h0PWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTowO19jbGFzc0NhbGxDaGVjayh0aGlzLEdMVGV4dHVyZSksZ2w9X0dMVG9vbDIuZGVmYXVsdC5nbCx0aGlzLl9zb3VyY2U9bVNvdXJjZSx0aGlzLl9nZXREaW1lbnNpb24obVNvdXJjZSxtV2lkdGgsbUhlaWdodCksdGhpcy5fc291cmNlVHlwZT1tUGFyYW0udHlwZXx8Z2V0U291cmNlVHlwZShtU291cmNlKSx0aGlzLl9jaGVja1NvdXJjZSgpLHRoaXMuX3RleGVsVHlwZT10aGlzLl9nZXRUZXhlbFR5cGUoKSx0aGlzLl9pc1RleHR1cmVSZWFkeT0hMCx0aGlzLl9wYXJhbXM9KDAsX2dldFRleHR1cmVQYXJhbWV0ZXJzMi5kZWZhdWx0KShtUGFyYW0sbVNvdXJjZSx0aGlzLl93aWR0aCx0aGlzLl9oZWlnaHQpLHRoaXMuX2NoZWNrTWlwbWFwKCksdGhpcy5fY2hlY2tXcmFwcGluZygpLHRoaXMuX3RleHR1cmU9Z2wuY3JlYXRlVGV4dHVyZSgpLFwidmlkZW9cIj09PXRoaXMuX3NvdXJjZVR5cGU/KHRoaXMuX2lzVGV4dHVyZVJlYWR5PSExLF9zY2hlZHVsaW5nMi5kZWZhdWx0LmFkZEVGKGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLl9sb29wKCl9KSk6dGhpcy5fdXBsb2FkVGV4dHVyZSgpfXJldHVybiBfY3JlYXRlQ2xhc3MoR0xUZXh0dXJlLFt7a2V5OlwiX2xvb3BcIix2YWx1ZTpmdW5jdGlvbigpezQ9PXRoaXMuX3NvdXJjZS5yZWFkeVN0YXRlJiYodGhpcy5faXNUZXh0dXJlUmVhZHk9ITAsdGhpcy5fdXBsb2FkVGV4dHVyZSgpKX19LHtrZXk6XCJfdXBsb2FkVGV4dHVyZVwiLHZhbHVlOmZ1bmN0aW9uKCl7aWYoZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCx0aGlzLl90ZXh0dXJlKSxnbC5waXhlbFN0b3JlaShnbC5VTlBBQ0tfRkxJUF9ZX1dFQkdMLCEwKSx0aGlzLl9pc1NvdXJjZUh0bWxFbGVtZW50KCk/Z2wudGV4SW1hZ2UyRChnbC5URVhUVVJFXzJELDAsdGhpcy5fcGFyYW1zLmludGVybmFsRm9ybWF0LHRoaXMuX3BhcmFtcy5mb3JtYXQsdGhpcy5fdGV4ZWxUeXBlLHRoaXMuX3NvdXJjZSk6Z2wudGV4SW1hZ2UyRChnbC5URVhUVVJFXzJELDAsdGhpcy5fcGFyYW1zLmludGVybmFsRm9ybWF0LHRoaXMuX3dpZHRoLHRoaXMuX2hlaWdodCwwLHRoaXMuX3BhcmFtcy5mb3JtYXQsdGhpcy5fdGV4ZWxUeXBlLHRoaXMuX3NvdXJjZSksZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELGdsLlRFWFRVUkVfTUFHX0ZJTFRFUix0aGlzLl9wYXJhbXMubWFnRmlsdGVyKSxnbC50ZXhQYXJhbWV0ZXJpKGdsLlRFWFRVUkVfMkQsZ2wuVEVYVFVSRV9NSU5fRklMVEVSLHRoaXMuX3BhcmFtcy5taW5GaWx0ZXIpLGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV8yRCxnbC5URVhUVVJFX1dSQVBfUyx0aGlzLl9wYXJhbXMud3JhcFMpLGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV8yRCxnbC5URVhUVVJFX1dSQVBfVCx0aGlzLl9wYXJhbXMud3JhcFQpLGdsLnBpeGVsU3RvcmVpKGdsLlVOUEFDS19QUkVNVUxUSVBMWV9BTFBIQV9XRUJHTCx0aGlzLl9wYXJhbXMucHJlbXVsdGlwbHlBbHBoYSksdGhpcy5fcGFyYW1zLmFuaXNvdHJvcHk+MCl7dmFyIGV4dD1fR0xUb29sMi5kZWZhdWx0LmdldEV4dGVuc2lvbihcIkVYVF90ZXh0dXJlX2ZpbHRlcl9hbmlzb3Ryb3BpY1wiKTtpZihleHQpe3ZhciBtYXg9Z2wuZ2V0UGFyYW1ldGVyKGV4dC5NQVhfVEVYVFVSRV9NQVhfQU5JU09UUk9QWV9FWFQpLGxldmVsPU1hdGgubWluKG1heCx0aGlzLl9wYXJhbXMuYW5pc290cm9weSk7Z2wudGV4UGFyYW1ldGVyZihnbC5URVhUVVJFXzJELGV4dC5URVhUVVJFX01BWF9BTklTT1RST1BZX0VYVCxsZXZlbCl9fXRoaXMuX2dlbmVyYXRlTWlwbWFwJiZnbC5nZW5lcmF0ZU1pcG1hcChnbC5URVhUVVJFXzJEKSxnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELG51bGwpfX0se2tleTpcImJpbmRcIix2YWx1ZTpmdW5jdGlvbihpbmRleCl7dm9pZCAwPT09aW5kZXgmJihpbmRleD0wKSxfR0xUb29sMi5kZWZhdWx0LnNoYWRlciYmKGdsLmFjdGl2ZVRleHR1cmUoZ2wuVEVYVFVSRTAraW5kZXgpLHRoaXMuX2lzVGV4dHVyZVJlYWR5P2dsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsdGhpcy5fdGV4dHVyZSk6Z2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCxHTFRleHR1cmUuYmxhY2tUZXh0dXJlKCkudGV4dHVyZSksdGhpcy5fYmluZEluZGV4PWluZGV4KX19LHtrZXk6XCJ1cGRhdGVUZXh0dXJlXCIsdmFsdWU6ZnVuY3Rpb24obVNvdXJjZSl7dGhpcy5fc291cmNlPW1Tb3VyY2UsdGhpcy5fY2hlY2tTb3VyY2UoKSx0aGlzLl91cGxvYWRUZXh0dXJlKCl9fSx7a2V5OlwiZ2VuZXJhdGVNaXBtYXBcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX2dlbmVyYXRlTWlwbWFwJiYoZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCx0aGlzLl90ZXh0dXJlKSxnbC5nZW5lcmF0ZU1pcG1hcChnbC5URVhUVVJFXzJEKSxnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELG51bGwpKX19LHtrZXk6XCJzaG93UGFyYW1ldGVyc1wiLHZhbHVlOmZ1bmN0aW9uKCl7Y29uc29sZS5sb2coXCJTb3VyY2UgdHlwZSA6IFwiLF9XZWJnbE51bWJlcjIuZGVmYXVsdFt0aGlzLl9zb3VyY2VUeXBlXXx8dGhpcy5fc291cmNlVHlwZSksY29uc29sZS5sb2coXCJUZXhlbCB0eXBlOlwiLF9XZWJnbE51bWJlcjIuZGVmYXVsdFt0aGlzLnRleGVsVHlwZV0pLGNvbnNvbGUubG9nKFwiRGltZW5zaW9uIDpcIix0aGlzLl93aWR0aCx0aGlzLl9oZWlnaHQpO2Zvcih2YXIgcyBpbiB0aGlzLl9wYXJhbXMpY29uc29sZS5sb2cocyxfV2ViZ2xOdW1iZXIyLmRlZmF1bHRbdGhpcy5fcGFyYW1zW3NdXXx8dGhpcy5fcGFyYW1zW3NdKTtjb25zb2xlLmxvZyhcIk1pcG1hcHBpbmcgOlwiLHRoaXMuX2dlbmVyYXRlTWlwbWFwKX19LHtrZXk6XCJfZ2V0RGltZW5zaW9uXCIsdmFsdWU6ZnVuY3Rpb24obVNvdXJjZSxtV2lkdGgsbUhlaWdodCl7bVNvdXJjZT8odGhpcy5fd2lkdGg9bVNvdXJjZS53aWR0aHx8bVNvdXJjZS52aWRlb1dpZHRoLHRoaXMuX2hlaWdodD1tU291cmNlLmhlaWdodHx8bVNvdXJjZS52aWRlb1dpZHRoLHRoaXMuX3dpZHRoPXRoaXMuX3dpZHRofHxtV2lkdGgsdGhpcy5faGVpZ2h0PXRoaXMuX2hlaWdodHx8bUhlaWdodCx0aGlzLl93aWR0aCYmdGhpcy5faGVpZ2h0fHwodGhpcy5fd2lkdGg9dGhpcy5faGVpZ2h0PU1hdGguc3FydChtU291cmNlLmxlbmd0aC80KSkpOih0aGlzLl93aWR0aD1tV2lkdGgsdGhpcy5faGVpZ2h0PW1IZWlnaHQpfX0se2tleTpcIl9jaGVja1NvdXJjZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fc291cmNlJiYodGhpcy5fc291cmNlVHlwZT09PV9HTFRvb2wyLmRlZmF1bHQuVU5TSUdORURfQllURT90aGlzLl9zb3VyY2UgaW5zdGFuY2VvZiBVaW50OEFycmF5fHwodGhpcy5fc291cmNlPW5ldyBVaW50OEFycmF5KHRoaXMuX3NvdXJjZSkpOnRoaXMuX3NvdXJjZVR5cGU9PT1fR0xUb29sMi5kZWZhdWx0LkZMT0FUJiYodGhpcy5fc291cmNlIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5fHwodGhpcy5fc291cmNlPW5ldyBGbG9hdDMyQXJyYXkodGhpcy5fc291cmNlKSkpKX19LHtrZXk6XCJfZ2V0VGV4ZWxUeXBlXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNTb3VyY2VIdG1sRWxlbWVudCgpP19HTFRvb2wyLmRlZmF1bHQuVU5TSUdORURfQllURTpfR0xUb29sMi5kZWZhdWx0W19XZWJnbE51bWJlcjIuZGVmYXVsdFt0aGlzLl9zb3VyY2VUeXBlXV18fHRoaXMuX3NvdXJjZVR5cGV9fSx7a2V5OlwiX2NoZWNrTWlwbWFwXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9nZW5lcmF0ZU1pcG1hcD10aGlzLl9wYXJhbXMubWlwbWFwLGlzUG93ZXJPZlR3byh0aGlzLl93aWR0aCkmJmlzUG93ZXJPZlR3byh0aGlzLl9oZWlnaHQpfHwodGhpcy5fZ2VuZXJhdGVNaXBtYXA9ITEpLC0xPT1fV2ViZ2xOdW1iZXIyLmRlZmF1bHRbdGhpcy5fcGFyYW1zLm1pbkZpbHRlcl0uaW5kZXhPZihcIk1JUE1BUFwiKSYmKHRoaXMuX2dlbmVyYXRlTWlwbWFwPSExKX19LHtrZXk6XCJfY2hlY2tXcmFwcGluZ1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fZ2VuZXJhdGVNaXBtYXB8fCh0aGlzLl9wYXJhbXMud3JhcFM9X0dMVG9vbDIuZGVmYXVsdC5DTEFNUF9UT19FREdFLHRoaXMuX3BhcmFtcy53cmFwVD1fR0xUb29sMi5kZWZhdWx0LkNMQU1QX1RPX0VER0UpfX0se2tleTpcIl9pc1NvdXJjZUh0bWxFbGVtZW50XCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm5cImltYWdlXCI9PT10aGlzLl9zb3VyY2VUeXBlfHxcInZpZGVvXCI9PT10aGlzLl9zb3VyY2VUeXBlfHxcImNhbnZhc1wiPT09dGhpcy5fc291cmNlVHlwZX19LHtrZXk6XCJtaW5GaWx0ZXJcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcGFyYW1zLm1pbkZpbHRlcn0sc2V0OmZ1bmN0aW9uKG1WYWx1ZSl7dGhpcy5fcGFyYW1zLm1pbkZpbHRlcj1tVmFsdWUsdGhpcy5fY2hlY2tNaXBtYXAoKSxnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELHRoaXMuX3RleHR1cmUpLGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV8yRCxnbC5URVhUVVJFX01JTl9GSUxURVIsdGhpcy5fcGFyYW1zLm1pbkZpbHRlciksZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCxudWxsKSx0aGlzLmdlbmVyYXRlTWlwbWFwKCl9fSx7a2V5OlwibWFnRmlsdGVyXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BhcmFtcy5taW5GaWx0ZXJ9LHNldDpmdW5jdGlvbihtVmFsdWUpe3RoaXMuX3BhcmFtcy5tYWdGaWx0ZXI9bVZhbHVlLGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsdGhpcy5fdGV4dHVyZSksZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELGdsLlRFWFRVUkVfTUFHX0ZJTFRFUix0aGlzLl9wYXJhbXMubWFnRmlsdGVyKSxnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELG51bGwpfX0se2tleTpcIndyYXBTXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BhcmFtcy53cmFwU30sc2V0OmZ1bmN0aW9uKG1WYWx1ZSl7dGhpcy5fcGFyYW1zLndyYXBTPW1WYWx1ZSx0aGlzLl9jaGVja1dyYXBwaW5nKCksZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCx0aGlzLl90ZXh0dXJlKSxnbC50ZXhQYXJhbWV0ZXJpKGdsLlRFWFRVUkVfMkQsZ2wuVEVYVFVSRV9XUkFQX1MsdGhpcy5fcGFyYW1zLndyYXBTKSxnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELG51bGwpfX0se2tleTpcIndyYXBUXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BhcmFtcy53cmFwVH0sc2V0OmZ1bmN0aW9uKG1WYWx1ZSl7dGhpcy5fcGFyYW1zLndyYXBUPW1WYWx1ZSx0aGlzLl9jaGVja1dyYXBwaW5nKCksZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCx0aGlzLl90ZXh0dXJlKSxnbC50ZXhQYXJhbWV0ZXJpKGdsLlRFWFRVUkVfMkQsZ2wuVEVYVFVSRV9XUkFQX1QsdGhpcy5fcGFyYW1zLndyYXBUKSxnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELG51bGwpfX0se2tleTpcInRleGVsVHlwZVwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90ZXhlbFR5cGV9fSx7a2V5Olwid2lkdGhcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fd2lkdGh9fSx7a2V5OlwiaGVpZ2h0XCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2hlaWdodH19LHtrZXk6XCJ0ZXh0dXJlXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RleHR1cmV9fSx7a2V5OlwiaXNUZXh0dXJlUmVhZHlcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNUZXh0dXJlUmVhZHl9fV0pLEdMVGV4dHVyZX0oKSxfd2hpdGVUZXh0dXJlPXZvaWQgMCxfZ3JleVRleHR1cmU9dm9pZCAwLF9ibGFja1RleHR1cmU9dm9pZCAwO0dMVGV4dHVyZS53aGl0ZVRleHR1cmU9ZnVuY3Rpb24oKXtpZih2b2lkIDA9PT1fd2hpdGVUZXh0dXJlKXt2YXIgY2FudmFzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7Y2FudmFzLndpZHRoPWNhbnZhcy5oZWlnaHQ9Mjt2YXIgY3R4PWNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7Y3R4LmZpbGxTdHlsZT1cIiNmZmZcIixjdHguZmlsbFJlY3QoMCwwLDIsMiksX3doaXRlVGV4dHVyZT1uZXcgR0xUZXh0dXJlKGNhbnZhcyl9cmV0dXJuIF93aGl0ZVRleHR1cmV9LEdMVGV4dHVyZS5ncmV5VGV4dHVyZT1mdW5jdGlvbigpe2lmKHZvaWQgMD09PV9ncmV5VGV4dHVyZSl7dmFyIGNhbnZhcz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO2NhbnZhcy53aWR0aD1jYW52YXMuaGVpZ2h0PTI7dmFyIGN0eD1jYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO2N0eC5maWxsU3R5bGU9XCJyZ2IoMTI3LCAxMjcsIDEyNylcIixjdHguZmlsbFJlY3QoMCwwLDIsMiksX2dyZXlUZXh0dXJlPW5ldyBHTFRleHR1cmUoY2FudmFzKX1yZXR1cm4gX2dyZXlUZXh0dXJlfSxHTFRleHR1cmUuYmxhY2tUZXh0dXJlPWZ1bmN0aW9uKCl7aWYodm9pZCAwPT09X2JsYWNrVGV4dHVyZSl7dmFyIGNhbnZhcz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO2NhbnZhcy53aWR0aD1jYW52YXMuaGVpZ2h0PTI7dmFyIGN0eD1jYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO2N0eC5maWxsU3R5bGU9XCJyZ2IoMCwgMCwgMClcIixjdHguZmlsbFJlY3QoMCwwLDIsMiksX2JsYWNrVGV4dHVyZT1uZXcgR0xUZXh0dXJlKGNhbnZhcyl9cmV0dXJuIF9ibGFja1RleHR1cmV9LGV4cG9ydHMuZGVmYXVsdD1HTFRleHR1cmV9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX1mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsQ29uc3RydWN0b3Ipe2lmKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX2NyZWF0ZUNsYXNzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQscHJvcHMpe2Zvcih2YXIgaT0wO2k8cHJvcHMubGVuZ3RoO2krKyl7dmFyIGRlc2NyaXB0b3I9cHJvcHNbaV07ZGVzY3JpcHRvci5lbnVtZXJhYmxlPWRlc2NyaXB0b3IuZW51bWVyYWJsZXx8ITEsZGVzY3JpcHRvci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gZGVzY3JpcHRvciYmKGRlc2NyaXB0b3Iud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsZGVzY3JpcHRvci5rZXksZGVzY3JpcHRvcil9fXJldHVybiBmdW5jdGlvbihDb25zdHJ1Y3Rvcixwcm90b1Byb3BzLHN0YXRpY1Byb3BzKXtyZXR1cm4gcHJvdG9Qcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyksc3RhdGljUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3Isc3RhdGljUHJvcHMpLENvbnN0cnVjdG9yfX0oKSxfR0xUb29sPV9fd2VicGFja19yZXF1aXJlX18oMCksX0dMVG9vbDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfR0xUb29sKSxfcGFyc2VEZHM9X193ZWJwYWNrX3JlcXVpcmVfXyg1NSksX3BhcnNlRGRzMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wYXJzZURkcyksZ2w9dm9pZCAwLEdMQ3ViZVRleHR1cmU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBHTEN1YmVUZXh0dXJlKG1Tb3VyY2Upe3ZhciBtUGFyYW1ldGVycz1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e30saXNDdWJlVGV4dHVyZT1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXSYmYXJndW1lbnRzWzJdO2lmKF9jbGFzc0NhbGxDaGVjayh0aGlzLEdMQ3ViZVRleHR1cmUpLGdsPV9HTFRvb2wyLmRlZmF1bHQuZ2wsaXNDdWJlVGV4dHVyZSlyZXR1cm4gdm9pZCh0aGlzLnRleHR1cmU9bVNvdXJjZSk7dmFyIGhhc01pcG1hcHM9bVNvdXJjZS5sZW5ndGg+NjttU291cmNlWzBdLm1pcG1hcENvdW50JiYoaGFzTWlwbWFwcz1tU291cmNlWzBdLm1pcG1hcENvdW50PjEpLHRoaXMudGV4dHVyZT1nbC5jcmVhdGVUZXh0dXJlKCksdGhpcy5tYWdGaWx0ZXI9bVBhcmFtZXRlcnMubWFnRmlsdGVyfHxnbC5MSU5FQVIsdGhpcy5taW5GaWx0ZXI9bVBhcmFtZXRlcnMubWluRmlsdGVyfHxnbC5MSU5FQVJfTUlQTUFQX0xJTkVBUix0aGlzLndyYXBTPW1QYXJhbWV0ZXJzLndyYXBTfHxnbC5DTEFNUF9UT19FREdFLHRoaXMud3JhcFQ9bVBhcmFtZXRlcnMud3JhcFR8fGdsLkNMQU1QX1RPX0VER0UsaGFzTWlwbWFwc3x8dGhpcy5taW5GaWx0ZXIhPWdsLkxJTkVBUl9NSVBNQVBfTElORUFSfHwodGhpcy5taW5GaWx0ZXI9Z2wuTElORUFSKSxnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFX0NVQkVfTUFQLHRoaXMudGV4dHVyZSk7dmFyIHRhcmdldHM9W2dsLlRFWFRVUkVfQ1VCRV9NQVBfUE9TSVRJVkVfWCxnbC5URVhUVVJFX0NVQkVfTUFQX05FR0FUSVZFX1gsZ2wuVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9ZLGdsLlRFWFRVUkVfQ1VCRV9NQVBfTkVHQVRJVkVfWSxnbC5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1osZ2wuVEVYVFVSRV9DVUJFX01BUF9ORUdBVElWRV9aXSxudW1MZXZlbHM9MSxpbmRleD0wO2lmKG51bUxldmVscz1tU291cmNlLmxlbmd0aC82LHRoaXMubnVtTGV2ZWxzPW51bUxldmVscyxoYXNNaXBtYXBzKWZvcih2YXIgaj0wO2o8NjtqKyspZm9yKHZhciBpPTA7aTxudW1MZXZlbHM7aSsrKWdsLnBpeGVsU3RvcmVpKGdsLlVOUEFDS19GTElQX1lfV0VCR0wsITEpLGluZGV4PWoqbnVtTGV2ZWxzK2ksbVNvdXJjZVtpbmRleF0uc2hhcGU/Z2wudGV4SW1hZ2UyRCh0YXJnZXRzW2pdLGksZ2wuUkdCQSxtU291cmNlW2luZGV4XS5zaGFwZVswXSxtU291cmNlW2luZGV4XS5zaGFwZVsxXSwwLGdsLlJHQkEsZ2wuRkxPQVQsbVNvdXJjZVtpbmRleF0uZGF0YSk6Z2wudGV4SW1hZ2UyRCh0YXJnZXRzW2pdLGksZ2wuUkdCQSxnbC5SR0JBLGdsLlVOU0lHTkVEX0JZVEUsbVNvdXJjZVtpbmRleF0pLGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV9DVUJFX01BUCxnbC5URVhUVVJFX1dSQVBfUyx0aGlzLndyYXBTKSxnbC50ZXhQYXJhbWV0ZXJpKGdsLlRFWFRVUkVfQ1VCRV9NQVAsZ2wuVEVYVFVSRV9XUkFQX1QsdGhpcy53cmFwVCksZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFX0NVQkVfTUFQLGdsLlRFWFRVUkVfTUFHX0ZJTFRFUix0aGlzLm1hZ0ZpbHRlciksZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFX0NVQkVfTUFQLGdsLlRFWFRVUkVfTUlOX0ZJTFRFUix0aGlzLm1pbkZpbHRlcik7ZWxzZXtmb3IodmFyIF9pbmRleD0wLF9qPTA7X2o8NjtfaisrKV9pbmRleD1faipudW1MZXZlbHMsZ2wucGl4ZWxTdG9yZWkoZ2wuVU5QQUNLX0ZMSVBfWV9XRUJHTCwhMSksbVNvdXJjZVtfaW5kZXhdLnNoYXBlP2dsLnRleEltYWdlMkQodGFyZ2V0c1tfal0sMCxnbC5SR0JBLG1Tb3VyY2VbX2luZGV4XS5zaGFwZVswXSxtU291cmNlW19pbmRleF0uc2hhcGVbMV0sMCxnbC5SR0JBLGdsLkZMT0FULG1Tb3VyY2VbX2luZGV4XS5kYXRhKTpnbC50ZXhJbWFnZTJEKHRhcmdldHNbX2pdLDAsZ2wuUkdCQSxnbC5SR0JBLGdsLlVOU0lHTkVEX0JZVEUsbVNvdXJjZVtfaW5kZXhdKSxnbC50ZXhQYXJhbWV0ZXJpKGdsLlRFWFRVUkVfQ1VCRV9NQVAsZ2wuVEVYVFVSRV9XUkFQX1MsdGhpcy53cmFwUyksZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFX0NVQkVfTUFQLGdsLlRFWFRVUkVfV1JBUF9ULHRoaXMud3JhcFQpLGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV9DVUJFX01BUCxnbC5URVhUVVJFX01BR19GSUxURVIsdGhpcy5tYWdGaWx0ZXIpLGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV9DVUJFX01BUCxnbC5URVhUVVJFX01JTl9GSUxURVIsdGhpcy5taW5GaWx0ZXIpO2dsLmdlbmVyYXRlTWlwbWFwKGdsLlRFWFRVUkVfQ1VCRV9NQVApfWdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfQ1VCRV9NQVAsbnVsbCl9cmV0dXJuIF9jcmVhdGVDbGFzcyhHTEN1YmVUZXh0dXJlLFt7a2V5OlwiYmluZFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGluZGV4PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTowO19HTFRvb2wyLmRlZmF1bHQuc2hhZGVyJiYoZ2wuYWN0aXZlVGV4dHVyZShnbC5URVhUVVJFMCtpbmRleCksZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV9DVUJFX01BUCx0aGlzLnRleHR1cmUpLGdsLnVuaWZvcm0xaShfR0xUb29sMi5kZWZhdWx0LnNoYWRlci51bmlmb3JtVGV4dHVyZXNbaW5kZXhdLGluZGV4KSx0aGlzLl9iaW5kSW5kZXg9aW5kZXgpfX0se2tleTpcInVuYmluZFwiLHZhbHVlOmZ1bmN0aW9uKCl7Z2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV9DVUJFX01BUCxudWxsKX19XSksR0xDdWJlVGV4dHVyZX0oKTtHTEN1YmVUZXh0dXJlLnBhcnNlRERTPWZ1bmN0aW9uKG1BcnJheUJ1ZmZlcil7dmFyIGRkc0luZm9zPSgwLF9wYXJzZURkczIuZGVmYXVsdCkobUFycmF5QnVmZmVyKSxmbGFncz1kZHNJbmZvcy5mbGFncyxoZWFkZXI9bmV3IEludDMyQXJyYXkobUFycmF5QnVmZmVyLDAsMzEpLG1pcG1hcENvdW50PTE7MTMxMDcyJmZsYWdzJiYobWlwbWFwQ291bnQ9TWF0aC5tYXgoMSxoZWFkZXJbN10pKTt2YXIgc291cmNlcz1kZHNJbmZvcy5pbWFnZXMubWFwKGZ1bmN0aW9uKGltZyl7cmV0dXJue2RhdGE6bmV3IEZsb2F0MzJBcnJheShtQXJyYXlCdWZmZXIuc2xpY2UoaW1nLm9mZnNldCxpbWcub2Zmc2V0K2ltZy5sZW5ndGgpKSxzaGFwZTppbWcuc2hhcGUsbWlwbWFwQ291bnQ6bWlwbWFwQ291bnR9fSk7cmV0dXJuIG5ldyBHTEN1YmVUZXh0dXJlKHNvdXJjZXMpfSxleHBvcnRzLmRlZmF1bHQ9R0xDdWJlVGV4dHVyZX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIF9jcmVhdGVDbGFzcz1mdW5jdGlvbigpe2Z1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LHByb3BzKXtmb3IodmFyIGk9MDtpPHByb3BzLmxlbmd0aDtpKyspe3ZhciBkZXNjcmlwdG9yPXByb3BzW2ldO2Rlc2NyaXB0b3IuZW51bWVyYWJsZT1kZXNjcmlwdG9yLmVudW1lcmFibGV8fCExLGRlc2NyaXB0b3IuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGRlc2NyaXB0b3ImJihkZXNjcmlwdG9yLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LGRlc2NyaXB0b3Iua2V5LGRlc2NyaXB0b3IpfX1yZXR1cm4gZnVuY3Rpb24oQ29uc3RydWN0b3IscHJvdG9Qcm9wcyxzdGF0aWNQcm9wcyl7cmV0dXJuIHByb3RvUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLHByb3RvUHJvcHMpLHN0YXRpY1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLHN0YXRpY1Byb3BzKSxDb25zdHJ1Y3Rvcn19KCksc3VwcG9ydHNDdXN0b21FdmVudHM9ITA7dHJ5e2RvY3VtZW50LmNyZWF0ZUV2ZW50KFwiQ3VzdG9tRXZlbnRcIik7bnVsbH1jYXRjaChlKXtzdXBwb3J0c0N1c3RvbUV2ZW50cz0hMX12YXIgRXZlbnREaXNwYXRjaGVyPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gRXZlbnREaXNwYXRjaGVyKCl7X2NsYXNzQ2FsbENoZWNrKHRoaXMsRXZlbnREaXNwYXRjaGVyKSx0aGlzLl9ldmVudExpc3RlbmVycz17fX1yZXR1cm4gX2NyZWF0ZUNsYXNzKEV2ZW50RGlzcGF0Y2hlcixbe2tleTpcImFkZEV2ZW50TGlzdGVuZXJcIix2YWx1ZTpmdW5jdGlvbihhRXZlbnRUeXBlLGFGdW5jdGlvbil7cmV0dXJuIG51bGwhPT10aGlzLl9ldmVudExpc3RlbmVycyYmdm9pZCAwIT09dGhpcy5fZXZlbnRMaXN0ZW5lcnN8fCh0aGlzLl9ldmVudExpc3RlbmVycz17fSksdGhpcy5fZXZlbnRMaXN0ZW5lcnNbYUV2ZW50VHlwZV18fCh0aGlzLl9ldmVudExpc3RlbmVyc1thRXZlbnRUeXBlXT1bXSksdGhpcy5fZXZlbnRMaXN0ZW5lcnNbYUV2ZW50VHlwZV0ucHVzaChhRnVuY3Rpb24pLHRoaXN9fSx7a2V5Olwib25cIix2YWx1ZTpmdW5jdGlvbihhRXZlbnRUeXBlLGFGdW5jdGlvbil7cmV0dXJuIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihhRXZlbnRUeXBlLGFGdW5jdGlvbil9fSx7a2V5OlwicmVtb3ZlRXZlbnRMaXN0ZW5lclwiLHZhbHVlOmZ1bmN0aW9uKGFFdmVudFR5cGUsYUZ1bmN0aW9uKXtudWxsIT09dGhpcy5fZXZlbnRMaXN0ZW5lcnMmJnZvaWQgMCE9PXRoaXMuX2V2ZW50TGlzdGVuZXJzfHwodGhpcy5fZXZlbnRMaXN0ZW5lcnM9e30pO3ZhciBjdXJyZW50QXJyYXk9dGhpcy5fZXZlbnRMaXN0ZW5lcnNbYUV2ZW50VHlwZV07aWYodm9pZCAwPT09Y3VycmVudEFycmF5KXJldHVybiB0aGlzO2Zvcih2YXIgY3VycmVudEFycmF5TGVuZ3RoPWN1cnJlbnRBcnJheS5sZW5ndGgsaT0wO2k8Y3VycmVudEFycmF5TGVuZ3RoO2krKyljdXJyZW50QXJyYXlbaV09PT1hRnVuY3Rpb24mJihjdXJyZW50QXJyYXkuc3BsaWNlKGksMSksaS0tLGN1cnJlbnRBcnJheUxlbmd0aC0tKTtyZXR1cm4gdGhpc319LHtrZXk6XCJvZmZcIix2YWx1ZTpmdW5jdGlvbihhRXZlbnRUeXBlLGFGdW5jdGlvbil7cmV0dXJuIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihhRXZlbnRUeXBlLGFGdW5jdGlvbil9fSx7a2V5OlwiZGlzcGF0Y2hFdmVudFwiLHZhbHVlOmZ1bmN0aW9uKGFFdmVudCl7bnVsbCE9PXRoaXMuX2V2ZW50TGlzdGVuZXJzJiZ2b2lkIDAhPT10aGlzLl9ldmVudExpc3RlbmVyc3x8KHRoaXMuX2V2ZW50TGlzdGVuZXJzPXt9KTt2YXIgZXZlbnRUeXBlPWFFdmVudC50eXBlO3RyeXtudWxsPT09YUV2ZW50LnRhcmdldCYmKGFFdmVudC50YXJnZXQ9dGhpcyksYUV2ZW50LmN1cnJlbnRUYXJnZXQ9dGhpc31jYXRjaCh0aGVFcnJvcil7dmFyIG5ld0V2ZW50PXt0eXBlOmV2ZW50VHlwZSxkZXRhaWw6YUV2ZW50LmRldGFpbCxkaXNwYXRjaGVyOnRoaXN9O3JldHVybiB0aGlzLmRpc3BhdGNoRXZlbnQobmV3RXZlbnQpfXZhciBjdXJyZW50RXZlbnRMaXN0ZW5lcnM9dGhpcy5fZXZlbnRMaXN0ZW5lcnNbZXZlbnRUeXBlXTtpZihudWxsIT09Y3VycmVudEV2ZW50TGlzdGVuZXJzJiZ2b2lkIDAhPT1jdXJyZW50RXZlbnRMaXN0ZW5lcnMpZm9yKHZhciBjdXJyZW50QXJyYXk9dGhpcy5fY29weUFycmF5KGN1cnJlbnRFdmVudExpc3RlbmVycyksY3VycmVudEFycmF5TGVuZ3RoPWN1cnJlbnRBcnJheS5sZW5ndGgsaT0wO2k8Y3VycmVudEFycmF5TGVuZ3RoO2krKyl7dmFyIGN1cnJlbnRGdW5jdGlvbj1jdXJyZW50QXJyYXlbaV07Y3VycmVudEZ1bmN0aW9uLmNhbGwodGhpcyxhRXZlbnQpfXJldHVybiB0aGlzfX0se2tleTpcImRpc3BhdGNoQ3VzdG9tRXZlbnRcIix2YWx1ZTpmdW5jdGlvbihhRXZlbnRUeXBlLGFEZXRhaWwpe3ZhciBuZXdFdmVudD12b2lkIDA7cmV0dXJuIHN1cHBvcnRzQ3VzdG9tRXZlbnRzPyhuZXdFdmVudD1kb2N1bWVudC5jcmVhdGVFdmVudChcIkN1c3RvbUV2ZW50XCIpLG5ld0V2ZW50LmRpc3BhdGNoZXI9dGhpcyxuZXdFdmVudC5pbml0Q3VzdG9tRXZlbnQoYUV2ZW50VHlwZSwhMSwhMSxhRGV0YWlsKSk6bmV3RXZlbnQ9e3R5cGU6YUV2ZW50VHlwZSxkZXRhaWw6YURldGFpbCxkaXNwYXRjaGVyOnRoaXN9LHRoaXMuZGlzcGF0Y2hFdmVudChuZXdFdmVudCl9fSx7a2V5OlwidHJpZ2dlclwiLHZhbHVlOmZ1bmN0aW9uKGFFdmVudFR5cGUsYURldGFpbCl7cmV0dXJuIHRoaXMuZGlzcGF0Y2hDdXN0b21FdmVudChhRXZlbnRUeXBlLGFEZXRhaWwpfX0se2tleTpcIl9kZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXtpZihudWxsIT09dGhpcy5fZXZlbnRMaXN0ZW5lcnMpe2Zvcih2YXIgb2JqZWN0TmFtZSBpbiB0aGlzLl9ldmVudExpc3RlbmVycylpZih0aGlzLl9ldmVudExpc3RlbmVycy5oYXNPd25Qcm9wZXJ0eShvYmplY3ROYW1lKSl7Zm9yKHZhciBjdXJyZW50QXJyYXk9dGhpcy5fZXZlbnRMaXN0ZW5lcnNbb2JqZWN0TmFtZV0sY3VycmVudEFycmF5TGVuZ3RoPWN1cnJlbnRBcnJheS5sZW5ndGgsaT0wO2k8Y3VycmVudEFycmF5TGVuZ3RoO2krKyljdXJyZW50QXJyYXlbaV09bnVsbDtkZWxldGUgdGhpcy5fZXZlbnRMaXN0ZW5lcnNbb2JqZWN0TmFtZV19dGhpcy5fZXZlbnRMaXN0ZW5lcnM9bnVsbH19fSx7a2V5OlwiX2NvcHlBcnJheVwiLHZhbHVlOmZ1bmN0aW9uKGFBcnJheSl7Zm9yKHZhciBjdXJyZW50QXJyYXk9bmV3IEFycmF5KGFBcnJheS5sZW5ndGgpLGN1cnJlbnRBcnJheUxlbmd0aD1jdXJyZW50QXJyYXkubGVuZ3RoLGk9MDtpPGN1cnJlbnRBcnJheUxlbmd0aDtpKyspY3VycmVudEFycmF5W2ldPWFBcnJheVtpXTtyZXR1cm4gY3VycmVudEFycmF5fX1dKSxFdmVudERpc3BhdGNoZXJ9KCk7ZXhwb3J0cy5kZWZhdWx0PUV2ZW50RGlzcGF0Y2hlcn0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fWZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHwhMSxkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBkZXNjcmlwdG9yJiYoZGVzY3JpcHRvci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxkZXNjcmlwdG9yLmtleSxkZXNjcmlwdG9yKX19cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe3JldHVybiBwcm90b1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSxwcm90b1Byb3BzKSxzdGF0aWNQcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyksQ29uc3RydWN0b3J9fSgpLF9FYXNlTnVtYmVyPV9fd2VicGFja19yZXF1aXJlX18oMTMpLF9FYXNlTnVtYmVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9FYXNlTnVtYmVyKSxfc2NoZWR1bGluZz1fX3dlYnBhY2tfcmVxdWlyZV9fKDYpLF9zY2hlZHVsaW5nMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zY2hlZHVsaW5nKSxfZ2xNYXRyaXg9X193ZWJwYWNrX3JlcXVpcmVfXygxKSxnZXRNb3VzZT1mdW5jdGlvbihtRXZlbnQsbVRhcmdldCl7dmFyIG89bVRhcmdldHx8e307cmV0dXJuIG1FdmVudC50b3VjaGVzPyhvLng9bUV2ZW50LnRvdWNoZXNbMF0ucGFnZVgsby55PW1FdmVudC50b3VjaGVzWzBdLnBhZ2VZKTooby54PW1FdmVudC5jbGllbnRYLG8ueT1tRXZlbnQuY2xpZW50WSksb30sT3JiaXRhbENvbnRyb2w9ZnVuY3Rpb24oKXtmdW5jdGlvbiBPcmJpdGFsQ29udHJvbChtVGFyZ2V0KXt2YXIgX3RoaXM9dGhpcyxtTGlzdGVuZXJUYXJnZXQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOndpbmRvdyxtUmFkaXVzPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTo1MDA7X2NsYXNzQ2FsbENoZWNrKHRoaXMsT3JiaXRhbENvbnRyb2wpLHRoaXMuX3RhcmdldD1tVGFyZ2V0LHRoaXMuX2xpc3RlbmVyVGFyZ2V0PW1MaXN0ZW5lclRhcmdldCx0aGlzLl9tb3VzZT17fSx0aGlzLl9wcmVNb3VzZT17fSx0aGlzLmNlbnRlcj1fZ2xNYXRyaXgudmVjMy5jcmVhdGUoKSx0aGlzLl91cD1fZ2xNYXRyaXgudmVjMy5mcm9tVmFsdWVzKDAsMSwwKSx0aGlzLnJhZGl1cz1uZXcgX0Vhc2VOdW1iZXIyLmRlZmF1bHQobVJhZGl1cyksdGhpcy5wb3NpdGlvbj1fZ2xNYXRyaXgudmVjMy5mcm9tVmFsdWVzKDAsMCx0aGlzLnJhZGl1cy52YWx1ZSksdGhpcy5wb3NpdGlvbk9mZnNldD1fZ2xNYXRyaXgudmVjMy5jcmVhdGUoKSx0aGlzLl9yeD1uZXcgX0Vhc2VOdW1iZXIyLmRlZmF1bHQoMCksdGhpcy5fcngubGltaXQoLU1hdGguUEkvMixNYXRoLlBJLzIpLHRoaXMuX3J5PW5ldyBfRWFzZU51bWJlcjIuZGVmYXVsdCgwKSx0aGlzLl9wcmVSWD0wLHRoaXMuX3ByZVJZPTAsdGhpcy5faXNMb2NrWm9vbT0hMSx0aGlzLl9pc0xvY2tSb3RhdGlvbj0hMSx0aGlzLl9pc0ludmVydD0hMSx0aGlzLnNlbnNpdGl2aXR5PTEsdGhpcy5fd2hlZWxCaW5kPWZ1bmN0aW9uKGUpe3JldHVybiBfdGhpcy5fb25XaGVlbChlKX0sdGhpcy5fZG93bkJpbmQ9ZnVuY3Rpb24oZSl7cmV0dXJuIF90aGlzLl9vbkRvd24oZSl9LHRoaXMuX21vdmVCaW5kPWZ1bmN0aW9uKGUpe3JldHVybiBfdGhpcy5fb25Nb3ZlKGUpfSx0aGlzLl91cEJpbmQ9ZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuX29uVXAoKX0sdGhpcy5jb25uZWN0KCksX3NjaGVkdWxpbmcyLmRlZmF1bHQuYWRkRUYoZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuX2xvb3AoKX0pfXJldHVybiBfY3JlYXRlQ2xhc3MoT3JiaXRhbENvbnRyb2wsW3trZXk6XCJjb25uZWN0XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmRpc2Nvbm5lY3QoKSx0aGlzLl9saXN0ZW5lclRhcmdldC5hZGRFdmVudExpc3RlbmVyKFwibW91c2V3aGVlbFwiLHRoaXMuX3doZWVsQmluZCksdGhpcy5fbGlzdGVuZXJUYXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTU1vdXNlU2Nyb2xsXCIsdGhpcy5fd2hlZWxCaW5kKSx0aGlzLl9saXN0ZW5lclRhcmdldC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsdGhpcy5fZG93bkJpbmQpLHRoaXMuX2xpc3RlbmVyVGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaHN0YXJ0XCIsdGhpcy5fZG93bkJpbmQpLHRoaXMuX2xpc3RlbmVyVGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIix0aGlzLl9tb3ZlQmluZCksdGhpcy5fbGlzdGVuZXJUYXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNobW92ZVwiLHRoaXMuX21vdmVCaW5kKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsdGhpcy5fdXBCaW5kKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIix0aGlzLl91cEJpbmQpfX0se2tleTpcImRpc2Nvbm5lY3RcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX2xpc3RlbmVyVGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZXdoZWVsXCIsdGhpcy5fd2hlZWxCaW5kKSx0aGlzLl9saXN0ZW5lclRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKFwiRE9NTW91c2VTY3JvbGxcIix0aGlzLl93aGVlbEJpbmQpLHRoaXMuX2xpc3RlbmVyVGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIix0aGlzLl9kb3duQmluZCksdGhpcy5fbGlzdGVuZXJUYXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIix0aGlzLl9kb3duQmluZCksdGhpcy5fbGlzdGVuZXJUYXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLHRoaXMuX21vdmVCaW5kKSx0aGlzLl9saXN0ZW5lclRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsdGhpcy5fbW92ZUJpbmQpLHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIix0aGlzLl91cEJpbmQpLHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLHRoaXMuX3VwQmluZCl9fSx7a2V5OlwibG9ja1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIG1WYWx1ZT0hKGFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdKXx8YXJndW1lbnRzWzBdO3RoaXMuX2lzTG9ja1pvb209bVZhbHVlLHRoaXMuX2lzTG9ja1JvdGF0aW9uPW1WYWx1ZSx0aGlzLl9pc01vdXNlRG93bj0hMX19LHtrZXk6XCJsb2NrWm9vbVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIG1WYWx1ZT0hKGFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdKXx8YXJndW1lbnRzWzBdO3RoaXMuX2lzTG9ja1pvb209bVZhbHVlfX0se2tleTpcImxvY2tSb3RhdGlvblwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIG1WYWx1ZT0hKGFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdKXx8YXJndW1lbnRzWzBdO3RoaXMuX2lzTG9ja1JvdGF0aW9uPW1WYWx1ZX19LHtrZXk6XCJpbnZlcnNlQ29udHJvbFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGlzSW52ZXJ0PSEoYXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0pfHxhcmd1bWVudHNbMF07dGhpcy5faXNJbnZlcnQ9aXNJbnZlcnR9fSx7a2V5OlwiX29uRG93blwiLHZhbHVlOmZ1bmN0aW9uKG1FdmVudCl7dGhpcy5faXNMb2NrUm90YXRpb258fCh0aGlzLl9pc01vdXNlRG93bj0hMCxnZXRNb3VzZShtRXZlbnQsdGhpcy5fbW91c2UpLGdldE1vdXNlKG1FdmVudCx0aGlzLl9wcmVNb3VzZSksdGhpcy5fcHJlUlg9dGhpcy5fcngudGFyZ2V0VmFsdWUsdGhpcy5fcHJlUlk9dGhpcy5fcnkudGFyZ2V0VmFsdWUpfX0se2tleTpcIl9vbk1vdmVcIix2YWx1ZTpmdW5jdGlvbihtRXZlbnQpe2lmKCF0aGlzLl9pc0xvY2tSb3RhdGlvbiYmKGdldE1vdXNlKG1FdmVudCx0aGlzLl9tb3VzZSksbUV2ZW50LnRvdWNoZXMmJm1FdmVudC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuX2lzTW91c2VEb3duKSl7dmFyIGRpZmZYPS0odGhpcy5fbW91c2UueC10aGlzLl9wcmVNb3VzZS54KTt0aGlzLl9pc0ludmVydCYmKGRpZmZYKj0tMSksdGhpcy5fcnkudmFsdWU9dGhpcy5fcHJlUlktLjAxKmRpZmZYKnRoaXMuc2Vuc2l0aXZpdHk7dmFyIGRpZmZZPS0odGhpcy5fbW91c2UueS10aGlzLl9wcmVNb3VzZS55KTt0aGlzLl9pc0ludmVydCYmKGRpZmZZKj0tMSksdGhpcy5fcngudmFsdWU9dGhpcy5fcHJlUlgtLjAxKmRpZmZZKnRoaXMuc2Vuc2l0aXZpdHl9fX0se2tleTpcIl9vblVwXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9pc0xvY2tSb3RhdGlvbnx8KHRoaXMuX2lzTW91c2VEb3duPSExKX19LHtrZXk6XCJfb25XaGVlbFwiLHZhbHVlOmZ1bmN0aW9uKG1FdmVudCl7aWYoIXRoaXMuX2lzTG9ja1pvb20pe3ZhciB3PW1FdmVudC53aGVlbERlbHRhLGQ9bUV2ZW50LmRldGFpbCx2YWx1ZT0wO3ZhbHVlPWQ/dz93L2QvNDAqZD4wPzE6LTE6LWQvMzp3LzEyMCx0aGlzLnJhZGl1cy5hZGQoMiotdmFsdWUpfX19LHtrZXk6XCJfbG9vcFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fdXBkYXRlUG9zaXRpb24oKSx0aGlzLl90YXJnZXQmJnRoaXMuX3VwZGF0ZUNhbWVyYSgpfX0se2tleTpcIl91cGRhdGVQb3NpdGlvblwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5wb3NpdGlvblsxXT1NYXRoLnNpbih0aGlzLl9yeC52YWx1ZSkqdGhpcy5yYWRpdXMudmFsdWU7dmFyIHRyPU1hdGguY29zKHRoaXMuX3J4LnZhbHVlKSp0aGlzLnJhZGl1cy52YWx1ZTt0aGlzLnBvc2l0aW9uWzBdPU1hdGguY29zKHRoaXMuX3J5LnZhbHVlKy41Kk1hdGguUEkpKnRyLHRoaXMucG9zaXRpb25bMl09TWF0aC5zaW4odGhpcy5fcnkudmFsdWUrLjUqTWF0aC5QSSkqdHIsX2dsTWF0cml4LnZlYzMuYWRkKHRoaXMucG9zaXRpb24sdGhpcy5wb3NpdGlvbix0aGlzLnBvc2l0aW9uT2Zmc2V0KX19LHtrZXk6XCJfdXBkYXRlQ2FtZXJhXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl90YXJnZXQubG9va0F0KHRoaXMucG9zaXRpb24sdGhpcy5jZW50ZXIsdGhpcy5fdXApfX0se2tleTpcInJ4XCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3J4fX0se2tleTpcInJ5XCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3J5fX1dKSxPcmJpdGFsQ29udHJvbH0oKTtleHBvcnRzLmRlZmF1bHQ9T3JiaXRhbENvbnRyb2x9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsY2FsbCl7aWYoIXNlbGYpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiFjYWxsfHxcIm9iamVjdFwiIT10eXBlb2YgY2FsbCYmXCJmdW5jdGlvblwiIT10eXBlb2YgY2FsbD9zZWxmOmNhbGx9ZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLHN1cGVyQ2xhc3Mpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHN1cGVyQ2xhc3MmJm51bGwhPT1zdXBlckNsYXNzKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiBzdXBlckNsYXNzKTtzdWJDbGFzcy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzJiZzdXBlckNsYXNzLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnN1YkNsYXNzLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHN1cGVyQ2xhc3MmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLHN1cGVyQ2xhc3MpOnN1YkNsYXNzLl9fcHJvdG9fXz1zdXBlckNsYXNzKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX2NyZWF0ZUNsYXNzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQscHJvcHMpe2Zvcih2YXIgaT0wO2k8cHJvcHMubGVuZ3RoO2krKyl7dmFyIGRlc2NyaXB0b3I9cHJvcHNbaV07ZGVzY3JpcHRvci5lbnVtZXJhYmxlPWRlc2NyaXB0b3IuZW51bWVyYWJsZXx8ITEsZGVzY3JpcHRvci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gZGVzY3JpcHRvciYmKGRlc2NyaXB0b3Iud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsZGVzY3JpcHRvci5rZXksZGVzY3JpcHRvcil9fXJldHVybiBmdW5jdGlvbihDb25zdHJ1Y3Rvcixwcm90b1Byb3BzLHN0YXRpY1Byb3BzKXtyZXR1cm4gcHJvdG9Qcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyksc3RhdGljUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3Isc3RhdGljUHJvcHMpLENvbnN0cnVjdG9yfX0oKSxfQ2FtZXJhMj1fX3dlYnBhY2tfcmVxdWlyZV9fKDE1KSxfQ2FtZXJhMz1mdW5jdGlvbihvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fShfQ2FtZXJhMiksX2dsTWF0cml4PV9fd2VicGFja19yZXF1aXJlX18oMSksQ2FtZXJhT3J0aG89ZnVuY3Rpb24oX0NhbWVyYSl7ZnVuY3Rpb24gQ2FtZXJhT3J0aG8oKXtfY2xhc3NDYWxsQ2hlY2sodGhpcyxDYW1lcmFPcnRobyk7dmFyIF90aGlzPV9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsKENhbWVyYU9ydGhvLl9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKENhbWVyYU9ydGhvKSkuY2FsbCh0aGlzKSksZXllPV9nbE1hdHJpeC52ZWMzLmNsb25lKFswLDAsMTVdKSxjZW50ZXI9X2dsTWF0cml4LnZlYzMuY3JlYXRlKCksdXA9X2dsTWF0cml4LnZlYzMuY2xvbmUoWzAsLTEsMF0pO3JldHVybiBfdGhpcy5sb29rQXQoZXllLGNlbnRlcix1cCksX3RoaXMub3J0aG8oMSwtMSwxLC0xKSxfdGhpc31yZXR1cm4gX2luaGVyaXRzKENhbWVyYU9ydGhvLF9DYW1lcmEpLF9jcmVhdGVDbGFzcyhDYW1lcmFPcnRobyxbe2tleTpcInNldEJvdW5kYXJ5XCIsdmFsdWU6ZnVuY3Rpb24obGVmdCxyaWdodCx0b3AsYm90dG9tKXt2YXIgbmVhcj1hcmd1bWVudHMubGVuZ3RoPjQmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XT9hcmd1bWVudHNbNF06LjEsZmFyPWFyZ3VtZW50cy5sZW5ndGg+NSYmdm9pZCAwIT09YXJndW1lbnRzWzVdP2FyZ3VtZW50c1s1XToxMDA7dGhpcy5vcnRobyhsZWZ0LHJpZ2h0LHRvcCxib3R0b20sbmVhcixmYXIpfX0se2tleTpcIm9ydGhvXCIsdmFsdWU6ZnVuY3Rpb24obGVmdCxyaWdodCx0b3AsYm90dG9tKXt2YXIgbmVhcj1hcmd1bWVudHMubGVuZ3RoPjQmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XT9hcmd1bWVudHNbNF06LjEsZmFyPWFyZ3VtZW50cy5sZW5ndGg+NSYmdm9pZCAwIT09YXJndW1lbnRzWzVdP2FyZ3VtZW50c1s1XToxMDA7dGhpcy5sZWZ0PWxlZnQsdGhpcy5yaWdodD1yaWdodCx0aGlzLnRvcD10b3AsdGhpcy5ib3R0b209Ym90dG9tLG1hdDQub3J0aG8odGhpcy5fcHJvamVjdGlvbixsZWZ0LHJpZ2h0LHRvcCxib3R0b20sbmVhcixmYXIpfX1dKSxDYW1lcmFPcnRob30oX0NhbWVyYTMuZGVmYXVsdCk7ZXhwb3J0cy5kZWZhdWx0PUNhbWVyYU9ydGhvfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsQ29uc3RydWN0b3Ipe2lmKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX2NyZWF0ZUNsYXNzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQscHJvcHMpe2Zvcih2YXIgaT0wO2k8cHJvcHMubGVuZ3RoO2krKyl7dmFyIGRlc2NyaXB0b3I9cHJvcHNbaV07ZGVzY3JpcHRvci5lbnVtZXJhYmxlPWRlc2NyaXB0b3IuZW51bWVyYWJsZXx8ITEsZGVzY3JpcHRvci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gZGVzY3JpcHRvciYmKGRlc2NyaXB0b3Iud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsZGVzY3JpcHRvci5rZXksZGVzY3JpcHRvcil9fXJldHVybiBmdW5jdGlvbihDb25zdHJ1Y3Rvcixwcm90b1Byb3BzLHN0YXRpY1Byb3BzKXtyZXR1cm4gcHJvdG9Qcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyksc3RhdGljUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3Isc3RhdGljUHJvcHMpLENvbnN0cnVjdG9yfX0oKSxfZ2xNYXRyaXg9X193ZWJwYWNrX3JlcXVpcmVfXygxKSxPYmplY3QzRD1mdW5jdGlvbigpe2Z1bmN0aW9uIE9iamVjdDNEKCl7X2NsYXNzQ2FsbENoZWNrKHRoaXMsT2JqZWN0M0QpLHRoaXMuX25lZWRVcGRhdGU9ITAsdGhpcy5feD0wLHRoaXMuX3k9MCx0aGlzLl96PTAsdGhpcy5fc3g9MSx0aGlzLl9zeT0xLHRoaXMuX3N6PTEsdGhpcy5fcng9MCx0aGlzLl9yeT0wLHRoaXMuX3J6PTAsdGhpcy5fcG9zaXRpb249X2dsTWF0cml4LnZlYzMuY3JlYXRlKCksdGhpcy5fc2NhbGU9X2dsTWF0cml4LnZlYzMuZnJvbVZhbHVlcygxLDEsMSksdGhpcy5fcm90YXRpb249X2dsTWF0cml4LnZlYzMuY3JlYXRlKCksdGhpcy5fbWF0cml4PV9nbE1hdHJpeC5tYXQ0LmNyZWF0ZSgpLHRoaXMuX21hdHJpeFJvdGF0aW9uPV9nbE1hdHJpeC5tYXQ0LmNyZWF0ZSgpLHRoaXMuX21hdHJpeFNjYWxlPV9nbE1hdHJpeC5tYXQ0LmNyZWF0ZSgpLHRoaXMuX21hdHJpeFRyYW5zbGF0aW9uPV9nbE1hdHJpeC5tYXQ0LmNyZWF0ZSgpLHRoaXMuX21hdHJpeFF1YXRlcm5pb249X2dsTWF0cml4Lm1hdDQuY3JlYXRlKCksdGhpcy5fcXVhdD1fZ2xNYXRyaXgucXVhdC5jcmVhdGUoKX1yZXR1cm4gX2NyZWF0ZUNsYXNzKE9iamVjdDNELFt7a2V5OlwiX3VwZGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7X2dsTWF0cml4LnZlYzMuc2V0KHRoaXMuX3NjYWxlLHRoaXMuX3N4LHRoaXMuX3N5LHRoaXMuX3N6KSxfZ2xNYXRyaXgudmVjMy5zZXQodGhpcy5fcm90YXRpb24sdGhpcy5fcngsdGhpcy5fcnksdGhpcy5fcnopLF9nbE1hdHJpeC52ZWMzLnNldCh0aGlzLl9wb3NpdGlvbix0aGlzLl94LHRoaXMuX3ksdGhpcy5feiksX2dsTWF0cml4Lm1hdDQuaWRlbnRpdHkodGhpcy5fbWF0cml4VHJhbnNsYXRpb24sdGhpcy5fbWF0cml4VHJhbnNsYXRpb24pLF9nbE1hdHJpeC5tYXQ0LmlkZW50aXR5KHRoaXMuX21hdHJpeFNjYWxlLHRoaXMuX21hdHJpeFNjYWxlKSxfZ2xNYXRyaXgubWF0NC5pZGVudGl0eSh0aGlzLl9tYXRyaXhSb3RhdGlvbix0aGlzLl9tYXRyaXhSb3RhdGlvbiksX2dsTWF0cml4Lm1hdDQucm90YXRlWCh0aGlzLl9tYXRyaXhSb3RhdGlvbix0aGlzLl9tYXRyaXhSb3RhdGlvbix0aGlzLl9yeCksX2dsTWF0cml4Lm1hdDQucm90YXRlWSh0aGlzLl9tYXRyaXhSb3RhdGlvbix0aGlzLl9tYXRyaXhSb3RhdGlvbix0aGlzLl9yeSksX2dsTWF0cml4Lm1hdDQucm90YXRlWih0aGlzLl9tYXRyaXhSb3RhdGlvbix0aGlzLl9tYXRyaXhSb3RhdGlvbix0aGlzLl9yeiksX2dsTWF0cml4Lm1hdDQuZnJvbVF1YXQodGhpcy5fbWF0cml4UXVhdGVybmlvbix0aGlzLl9xdWF0KSxfZ2xNYXRyaXgubWF0NC5tdWwodGhpcy5fbWF0cml4Um90YXRpb24sdGhpcy5fbWF0cml4UXVhdGVybmlvbix0aGlzLl9tYXRyaXhSb3RhdGlvbiksX2dsTWF0cml4Lm1hdDQuc2NhbGUodGhpcy5fbWF0cml4U2NhbGUsdGhpcy5fbWF0cml4U2NhbGUsdGhpcy5fc2NhbGUpLF9nbE1hdHJpeC5tYXQ0LnRyYW5zbGF0ZSh0aGlzLl9tYXRyaXhUcmFuc2xhdGlvbix0aGlzLl9tYXRyaXhUcmFuc2xhdGlvbix0aGlzLl9wb3NpdGlvbiksX2dsTWF0cml4Lm1hdDQubXVsKHRoaXMuX21hdHJpeCx0aGlzLl9tYXRyaXhUcmFuc2xhdGlvbix0aGlzLl9tYXRyaXhSb3RhdGlvbiksX2dsTWF0cml4Lm1hdDQubXVsKHRoaXMuX21hdHJpeCx0aGlzLl9tYXRyaXgsdGhpcy5fbWF0cml4U2NhbGUpLHRoaXMuX25lZWRVcGRhdGU9ITF9fSx7a2V5Olwic2V0Um90YXRpb25Gcm9tUXVhdGVybmlvblwiLHZhbHVlOmZ1bmN0aW9uKG1RdWF0KXtfZ2xNYXRyaXgucXVhdC5jb3B5KHRoaXMuX3F1YXQsbVF1YXQpLHRoaXMuX25lZWRVcGRhdGU9ITB9fSx7a2V5OlwibWF0cml4XCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX25lZWRVcGRhdGUmJnRoaXMuX3VwZGF0ZSgpLHRoaXMuX21hdHJpeH19LHtrZXk6XCJ4XCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3h9LHNldDpmdW5jdGlvbihtVmFsdWUpe3RoaXMuX25lZWRVcGRhdGU9ITAsdGhpcy5feD1tVmFsdWV9fSx7a2V5OlwieVwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl95fSxzZXQ6ZnVuY3Rpb24obVZhbHVlKXt0aGlzLl9uZWVkVXBkYXRlPSEwLHRoaXMuX3k9bVZhbHVlfX0se2tleTpcInpcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fen0sc2V0OmZ1bmN0aW9uKG1WYWx1ZSl7dGhpcy5fbmVlZFVwZGF0ZT0hMCx0aGlzLl96PW1WYWx1ZX19LHtrZXk6XCJzY2FsZVhcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3h9LHNldDpmdW5jdGlvbihtVmFsdWUpe3RoaXMuX25lZWRVcGRhdGU9ITAsdGhpcy5fc3g9bVZhbHVlfX0se2tleTpcInNjYWxlWVwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zeX0sc2V0OmZ1bmN0aW9uKG1WYWx1ZSl7dGhpcy5fbmVlZFVwZGF0ZT0hMCx0aGlzLl9zeT1tVmFsdWV9fSx7a2V5Olwic2NhbGVaXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N6fSxzZXQ6ZnVuY3Rpb24obVZhbHVlKXt0aGlzLl9uZWVkVXBkYXRlPSEwLHRoaXMuX3N6PW1WYWx1ZX19LHtrZXk6XCJyb3RhdGlvblhcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcnh9LHNldDpmdW5jdGlvbihtVmFsdWUpe3RoaXMuX25lZWRVcGRhdGU9ITAsdGhpcy5fcng9bVZhbHVlfX0se2tleTpcInJvdGF0aW9uWVwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yeX0sc2V0OmZ1bmN0aW9uKG1WYWx1ZSl7dGhpcy5fbmVlZFVwZGF0ZT0hMCx0aGlzLl9yeT1tVmFsdWV9fSx7a2V5Olwicm90YXRpb25aXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3J6fSxzZXQ6ZnVuY3Rpb24obVZhbHVlKXt0aGlzLl9uZWVkVXBkYXRlPSEwLHRoaXMuX3J6PW1WYWx1ZX19XSksT2JqZWN0M0R9KCk7ZXhwb3J0cy5kZWZhdWx0PU9iamVjdDNEfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIF9zaW1wbGVDb2xvcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDEwKSxfc2ltcGxlQ29sb3IyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3NpbXBsZUNvbG9yKSxfYmlnVHJpYW5nbGU9X193ZWJwYWNrX3JlcXVpcmVfXygxOCksX2JpZ1RyaWFuZ2xlMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9iaWdUcmlhbmdsZSksX2dlbmVyYWw9X193ZWJwYWNrX3JlcXVpcmVfXygzMyksX2dlbmVyYWwyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dlbmVyYWwpLF9jb3B5PV9fd2VicGFja19yZXF1aXJlX18oMTkpLF9jb3B5Mj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jb3B5KSxfYmFzaWM9X193ZWJwYWNrX3JlcXVpcmVfXygxMSksX2Jhc2ljMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9iYXNpYyksX3NreWJveD1fX3dlYnBhY2tfcmVxdWlyZV9fKDM0KSxfc2t5Ym94Mj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9za3lib3gpLF9za3lib3gzPV9fd2VicGFja19yZXF1aXJlX18oMzUpLF9za3lib3g0PV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3NreWJveDMpLFNoYWRlckxpYnM9e3NpbXBsZUNvbG9yRnJhZzpfc2ltcGxlQ29sb3IyLmRlZmF1bHQsYmlnVHJpYW5nbGVWZXJ0Ol9iaWdUcmlhbmdsZTIuZGVmYXVsdCxnZW5lcmFsVmVydDpfZ2VuZXJhbDIuZGVmYXVsdCxjb3B5RnJhZzpfY29weTIuZGVmYXVsdCxiYXNpY1ZlcnQ6X2Jhc2ljMi5kZWZhdWx0LHNreWJveFZlcnQ6X3NreWJveDIuZGVmYXVsdCxza3lib3hGcmFnOl9za3lib3g0LmRlZmF1bHR9O2V4cG9ydHMuZGVmYXVsdD1TaGFkZXJMaWJzfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9XCIvLyBnZW5lcmFsV2l0aE5vcm1hbC52ZXJ0XFxuXFxuI2RlZmluZSBTSEFERVJfTkFNRSBHRU5FUkFMX1ZFUlRFWFxcblxcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4jZGVmaW5lIEdMU0xJRlkgMVxcbmF0dHJpYnV0ZSB2ZWMzIGFWZXJ0ZXhQb3NpdGlvbjtcXG5hdHRyaWJ1dGUgdmVjMiBhVGV4dHVyZUNvb3JkO1xcbmF0dHJpYnV0ZSB2ZWMzIGFOb3JtYWw7XFxuXFxudW5pZm9ybSBtYXQ0IHVNb2RlbE1hdHJpeDtcXG51bmlmb3JtIG1hdDQgdVZpZXdNYXRyaXg7XFxudW5pZm9ybSBtYXQ0IHVQcm9qZWN0aW9uTWF0cml4O1xcbnVuaWZvcm0gbWF0MyB1Tm9ybWFsTWF0cml4O1xcblxcbnVuaWZvcm0gdmVjMyBwb3NpdGlvbjtcXG51bmlmb3JtIHZlYzMgc2NhbGU7XFxuXFxudmFyeWluZyB2ZWMyIHZUZXh0dXJlQ29vcmQ7XFxudmFyeWluZyB2ZWMzIHZOb3JtYWw7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG5cXHR2ZWMzIHBvcyAgICAgID0gYVZlcnRleFBvc2l0aW9uICogc2NhbGU7XFxuXFx0cG9zICAgICAgICAgICArPSBwb3NpdGlvbjtcXG5cXHRnbF9Qb3NpdGlvbiAgID0gdVByb2plY3Rpb25NYXRyaXggKiB1Vmlld01hdHJpeCAqIHVNb2RlbE1hdHJpeCAqIHZlYzQocG9zLCAxLjApO1xcblxcdFxcblxcdHZUZXh0dXJlQ29vcmQgPSBhVGV4dHVyZUNvb3JkO1xcblxcdHZOb3JtYWwgICAgICAgPSBub3JtYWxpemUodU5vcm1hbE1hdHJpeCAqIGFOb3JtYWwpO1xcbn1cIn0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPVwiLy8gYmFzaWMudmVydFxcblxcbiNkZWZpbmUgU0hBREVSX05BTUUgU0tZQk9YX1ZFUlRFWFxcblxcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4jZGVmaW5lIEdMU0xJRlkgMVxcbmF0dHJpYnV0ZSB2ZWMzIGFWZXJ0ZXhQb3NpdGlvbjtcXG5hdHRyaWJ1dGUgdmVjMiBhVGV4dHVyZUNvb3JkO1xcbmF0dHJpYnV0ZSB2ZWMzIGFOb3JtYWw7XFxuXFxudW5pZm9ybSBtYXQ0IHVNb2RlbE1hdHJpeDtcXG51bmlmb3JtIG1hdDQgdVZpZXdNYXRyaXg7XFxudW5pZm9ybSBtYXQ0IHVQcm9qZWN0aW9uTWF0cml4O1xcblxcbnZhcnlpbmcgdmVjMiB2VGV4dHVyZUNvb3JkO1xcbnZhcnlpbmcgdmVjMyB2VmVydGV4O1xcbnZhcnlpbmcgdmVjMyB2Tm9ybWFsO1xcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuXFx0bWF0NCBtYXRWaWV3ID0gdVZpZXdNYXRyaXg7XFxuXFx0bWF0Vmlld1szXVswXSA9IDAuMDtcXG5cXHRtYXRWaWV3WzNdWzFdID0gMC4wO1xcblxcdG1hdFZpZXdbM11bMl0gPSAwLjA7XFxuXFx0XFxuXFx0Z2xfUG9zaXRpb24gPSB1UHJvamVjdGlvbk1hdHJpeCAqIG1hdFZpZXcgKiB1TW9kZWxNYXRyaXggKiB2ZWM0KGFWZXJ0ZXhQb3NpdGlvbiwgMS4wKTtcXG5cXHR2VGV4dHVyZUNvb3JkID0gYVRleHR1cmVDb29yZDtcXG5cXHRcXG5cXHR2VmVydGV4ID0gYVZlcnRleFBvc2l0aW9uO1xcblxcdHZOb3JtYWwgPSBhTm9ybWFsO1xcbn1cIn0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPVwiLy8gYmFzaWMuZnJhZ1xcblxcbiNkZWZpbmUgU0hBREVSX05BTUUgU0tZQk9YX0ZSQUdNRU5UXFxuXFxucHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7XFxuI2RlZmluZSBHTFNMSUZZIDFcXG51bmlmb3JtIHNhbXBsZXJDdWJlIHRleHR1cmU7XFxudmFyeWluZyB2ZWMyIHZUZXh0dXJlQ29vcmQ7XFxudmFyeWluZyB2ZWMzIHZWZXJ0ZXg7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gICAgZ2xfRnJhZ0NvbG9yID0gdGV4dHVyZUN1YmUodGV4dHVyZSwgdlZlcnRleCk7XFxufVwifSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsQ29uc3RydWN0b3Ipe2lmKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX2NyZWF0ZUNsYXNzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQscHJvcHMpe2Zvcih2YXIgaT0wO2k8cHJvcHMubGVuZ3RoO2krKyl7dmFyIGRlc2NyaXB0b3I9cHJvcHNbaV07ZGVzY3JpcHRvci5lbnVtZXJhYmxlPWRlc2NyaXB0b3IuZW51bWVyYWJsZXx8ITEsZGVzY3JpcHRvci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gZGVzY3JpcHRvciYmKGRlc2NyaXB0b3Iud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsZGVzY3JpcHRvci5rZXksZGVzY3JpcHRvcil9fXJldHVybiBmdW5jdGlvbihDb25zdHJ1Y3Rvcixwcm90b1Byb3BzLHN0YXRpY1Byb3BzKXtyZXR1cm4gcHJvdG9Qcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyksc3RhdGljUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3Isc3RhdGljUHJvcHMpLENvbnN0cnVjdG9yfX0oKSxQYXNzTWFjcm89ZnVuY3Rpb24oKXtmdW5jdGlvbiBQYXNzTWFjcm8oKXtfY2xhc3NDYWxsQ2hlY2sodGhpcyxQYXNzTWFjcm8pLHRoaXMuX3Bhc3Nlcz1bXX1yZXR1cm4gX2NyZWF0ZUNsYXNzKFBhc3NNYWNybyxbe2tleTpcImFkZFBhc3NcIix2YWx1ZTpmdW5jdGlvbihwYXNzKXt0aGlzLl9wYXNzZXMucHVzaChwYXNzKX19LHtrZXk6XCJwYXNzZXNcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcGFzc2VzfX1dKSxQYXNzTWFjcm99KCk7ZXhwb3J0cy5kZWZhdWx0PVBhc3NNYWNyb30sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZixjYWxsKXtpZighc2VsZil0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIWNhbGx8fFwib2JqZWN0XCIhPXR5cGVvZiBjYWxsJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBjYWxsP3NlbGY6Y2FsbH1mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3Msc3VwZXJDbGFzcyl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2Ygc3VwZXJDbGFzcyYmbnVsbCE9PXN1cGVyQ2xhc3MpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHN1cGVyQ2xhc3MpO3N1YkNsYXNzLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MmJnN1cGVyQ2xhc3MucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6c3ViQ2xhc3MsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksc3VwZXJDbGFzcyYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3Msc3VwZXJDbGFzcyk6c3ViQ2xhc3MuX19wcm90b19fPXN1cGVyQ2xhc3MpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfUGFzc0JsdXJCYXNlMj1fX3dlYnBhY2tfcmVxdWlyZV9fKDM4KSxfUGFzc0JsdXJCYXNlMz1mdW5jdGlvbihvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fShfUGFzc0JsdXJCYXNlMiksUGFzc1ZCbHVyPWZ1bmN0aW9uKF9QYXNzQmx1ckJhc2Upe2Z1bmN0aW9uIFBhc3NWQmx1cigpe3ZhciBtUXVhbGl0eT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06OSxtV2lkdGg9YXJndW1lbnRzWzFdLG1IZWlnaHQ9YXJndW1lbnRzWzJdLG1QYXJhbXM9YXJndW1lbnRzWzNdO3JldHVybiBfY2xhc3NDYWxsQ2hlY2sodGhpcyxQYXNzVkJsdXIpLF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsKFBhc3NWQmx1ci5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZihQYXNzVkJsdXIpKS5jYWxsKHRoaXMsbVF1YWxpdHksWzAsMV0sbVdpZHRoLG1IZWlnaHQsbVBhcmFtcykpfXJldHVybiBfaW5oZXJpdHMoUGFzc1ZCbHVyLF9QYXNzQmx1ckJhc2UpLFBhc3NWQmx1cn0oX1Bhc3NCbHVyQmFzZTMuZGVmYXVsdCk7ZXhwb3J0cy5kZWZhdWx0PVBhc3NWQmx1cn0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fWZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsY2FsbCl7aWYoIXNlbGYpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiFjYWxsfHxcIm9iamVjdFwiIT10eXBlb2YgY2FsbCYmXCJmdW5jdGlvblwiIT10eXBlb2YgY2FsbD9zZWxmOmNhbGx9ZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLHN1cGVyQ2xhc3Mpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHN1cGVyQ2xhc3MmJm51bGwhPT1zdXBlckNsYXNzKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiBzdXBlckNsYXNzKTtzdWJDbGFzcy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzJiZzdXBlckNsYXNzLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnN1YkNsYXNzLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHN1cGVyQ2xhc3MmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLHN1cGVyQ2xhc3MpOnN1YkNsYXNzLl9fcHJvdG9fXz1zdXBlckNsYXNzKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX0dMVG9vbD1fX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9HTFRvb2wyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0dMVG9vbCksX1Bhc3MyPV9fd2VicGFja19yZXF1aXJlX18oOSksX1Bhc3MzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1Bhc3MyKSxmc0JsdXI1PV9fd2VicGFja19yZXF1aXJlX18oNzMpLGZzQmx1cjk9X193ZWJwYWNrX3JlcXVpcmVfXyg3NCksZnNCbHVyMTM9X193ZWJwYWNrX3JlcXVpcmVfXyg3NSksUGFzc0JsdXJCYXNlPWZ1bmN0aW9uKF9QYXNzKXtmdW5jdGlvbiBQYXNzQmx1ckJhc2UoKXt2YXIgbVF1YWxpdHk9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOjksbURpcmVjdGlvbj1hcmd1bWVudHNbMV0sbVdpZHRoPWFyZ3VtZW50c1syXSxtSGVpZ2h0PWFyZ3VtZW50c1szXSxtUGFyYW1zPWFyZ3VtZW50cy5sZW5ndGg+NCYmdm9pZCAwIT09YXJndW1lbnRzWzRdP2FyZ3VtZW50c1s0XTp7fTtfY2xhc3NDYWxsQ2hlY2sodGhpcyxQYXNzQmx1ckJhc2UpO3ZhciBmcz12b2lkIDA7c3dpdGNoKG1RdWFsaXR5KXtjYXNlIDU6ZGVmYXVsdDpmcz1mc0JsdXI1O2JyZWFrO2Nhc2UgOTpmcz1mc0JsdXI5O2JyZWFrO2Nhc2UgMTM6ZnM9ZnNCbHVyMTN9dmFyIF90aGlzPV9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsKFBhc3NCbHVyQmFzZS5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZihQYXNzQmx1ckJhc2UpKS5jYWxsKHRoaXMsZnMsbVdpZHRoLG1IZWlnaHQsbVBhcmFtcykpO3JldHVybiBfdGhpcy51bmlmb3JtKFwidURpcmVjdGlvblwiLG1EaXJlY3Rpb24pLF90aGlzLnVuaWZvcm0oXCJ1UmVzb2x1dGlvblwiLFtfR0xUb29sMi5kZWZhdWx0LndpZHRoLF9HTFRvb2wyLmRlZmF1bHQuaGVpZ2h0XSksX3RoaXN9cmV0dXJuIF9pbmhlcml0cyhQYXNzQmx1ckJhc2UsX1Bhc3MpLFBhc3NCbHVyQmFzZX0oX1Bhc3MzLmRlZmF1bHQpO2V4cG9ydHMuZGVmYXVsdD1QYXNzQmx1ckJhc2V9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsY2FsbCl7aWYoIXNlbGYpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiFjYWxsfHxcIm9iamVjdFwiIT10eXBlb2YgY2FsbCYmXCJmdW5jdGlvblwiIT10eXBlb2YgY2FsbD9zZWxmOmNhbGx9ZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLHN1cGVyQ2xhc3Mpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHN1cGVyQ2xhc3MmJm51bGwhPT1zdXBlckNsYXNzKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiBzdXBlckNsYXNzKTtzdWJDbGFzcy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzJiZzdXBlckNsYXNzLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnN1YkNsYXNzLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHN1cGVyQ2xhc3MmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLHN1cGVyQ2xhc3MpOnN1YkNsYXNzLl9fcHJvdG9fXz1zdXBlckNsYXNzKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX1Bhc3NCbHVyQmFzZTI9X193ZWJwYWNrX3JlcXVpcmVfXygzOCksX1Bhc3NCbHVyQmFzZTM9ZnVuY3Rpb24ob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX0oX1Bhc3NCbHVyQmFzZTIpLFBhc3NIQmx1cj1mdW5jdGlvbihfUGFzc0JsdXJCYXNlKXtmdW5jdGlvbiBQYXNzSEJsdXIoKXt2YXIgbVF1YWxpdHk9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOjksbVdpZHRoPWFyZ3VtZW50c1sxXSxtSGVpZ2h0PWFyZ3VtZW50c1syXSxtUGFyYW1zPWFyZ3VtZW50c1szXTtyZXR1cm4gX2NsYXNzQ2FsbENoZWNrKHRoaXMsUGFzc0hCbHVyKSxfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLChQYXNzSEJsdXIuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YoUGFzc0hCbHVyKSkuY2FsbCh0aGlzLG1RdWFsaXR5LFsxLDBdLG1XaWR0aCxtSGVpZ2h0LG1QYXJhbXMpKX1yZXR1cm4gX2luaGVyaXRzKFBhc3NIQmx1cixfUGFzc0JsdXJCYXNlKSxQYXNzSEJsdXJ9KF9QYXNzQmx1ckJhc2UzLmRlZmF1bHQpO2V4cG9ydHMuZGVmYXVsdD1QYXNzSEJsdXJ9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1cIi8vIGZ4YWEuZnJhZ1xcblxcbiNkZWZpbmUgU0hBREVSX05BTUUgRlhBQVxcblxcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4jZGVmaW5lIEdMU0xJRlkgMVxcbnZhcnlpbmcgdmVjMiB2VGV4dHVyZUNvb3JkO1xcbnVuaWZvcm0gc2FtcGxlcjJEIHRleHR1cmU7XFxudW5pZm9ybSB2ZWMyIHVSZXNvbHV0aW9uO1xcblxcblxcbmZsb2F0IEZYQUFfU1VCUElYX1NISUZUID0gMS4wLzQuMDtcXG4jZGVmaW5lIEZYQUFfUkVEVUNFX01JTiAgICgxLjAvIDEyOC4wKVxcbiNkZWZpbmUgRlhBQV9SRURVQ0VfTVVMICAgKDEuMCAvIDguMClcXG4jZGVmaW5lIEZYQUFfU1BBTl9NQVggICAgIDguMFxcblxcblxcbnZlYzQgYXBwbHlGWEFBKHNhbXBsZXIyRCB0ZXgpIHtcXG4gICAgdmVjNCBjb2xvcjtcXG4gICAgdmVjMiBmcmFnQ29vcmQgPSBnbF9GcmFnQ29vcmQueHk7XFxuICAgIHZlYzMgcmdiTlcgPSB0ZXh0dXJlMkQodGV4LCAoZnJhZ0Nvb3JkICsgdmVjMigtMS4wLCAtMS4wKSkgKiB1UmVzb2x1dGlvbikueHl6O1xcbiAgICB2ZWMzIHJnYk5FID0gdGV4dHVyZTJEKHRleCwgKGZyYWdDb29yZCArIHZlYzIoMS4wLCAtMS4wKSkgKiB1UmVzb2x1dGlvbikueHl6O1xcbiAgICB2ZWMzIHJnYlNXID0gdGV4dHVyZTJEKHRleCwgKGZyYWdDb29yZCArIHZlYzIoLTEuMCwgMS4wKSkgKiB1UmVzb2x1dGlvbikueHl6O1xcbiAgICB2ZWMzIHJnYlNFID0gdGV4dHVyZTJEKHRleCwgKGZyYWdDb29yZCArIHZlYzIoMS4wLCAxLjApKSAqIHVSZXNvbHV0aW9uKS54eXo7XFxuICAgIHZlYzMgcmdiTSAgPSB0ZXh0dXJlMkQodGV4LCBmcmFnQ29vcmQgICogdVJlc29sdXRpb24pLnh5ejtcXG4gICAgdmVjMyBsdW1hID0gdmVjMygwLjI5OSwgMC41ODcsIDAuMTE0KTtcXG4gICAgZmxvYXQgbHVtYU5XID0gZG90KHJnYk5XLCBsdW1hKTtcXG4gICAgZmxvYXQgbHVtYU5FID0gZG90KHJnYk5FLCBsdW1hKTtcXG4gICAgZmxvYXQgbHVtYVNXID0gZG90KHJnYlNXLCBsdW1hKTtcXG4gICAgZmxvYXQgbHVtYVNFID0gZG90KHJnYlNFLCBsdW1hKTtcXG4gICAgZmxvYXQgbHVtYU0gID0gZG90KHJnYk0sICBsdW1hKTtcXG4gICAgZmxvYXQgbHVtYU1pbiA9IG1pbihsdW1hTSwgbWluKG1pbihsdW1hTlcsIGx1bWFORSksIG1pbihsdW1hU1csIGx1bWFTRSkpKTtcXG4gICAgZmxvYXQgbHVtYU1heCA9IG1heChsdW1hTSwgbWF4KG1heChsdW1hTlcsIGx1bWFORSksIG1heChsdW1hU1csIGx1bWFTRSkpKTtcXG5cXG4gICAgdmVjMiBkaXI7XFxuICAgIGRpci54ID0gLSgobHVtYU5XICsgbHVtYU5FKSAtIChsdW1hU1cgKyBsdW1hU0UpKTtcXG4gICAgZGlyLnkgPSAgKChsdW1hTlcgKyBsdW1hU1cpIC0gKGx1bWFORSArIGx1bWFTRSkpO1xcblxcbiAgICBmbG9hdCBkaXJSZWR1Y2UgPSBtYXgoKGx1bWFOVyArIGx1bWFORSArIGx1bWFTVyArIGx1bWFTRSkgKlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKDAuMjUgKiBGWEFBX1JFRFVDRV9NVUwpLCBGWEFBX1JFRFVDRV9NSU4pO1xcblxcbiAgICBmbG9hdCByY3BEaXJNaW4gPSAxLjAgLyAobWluKGFicyhkaXIueCksIGFicyhkaXIueSkpICsgZGlyUmVkdWNlKTtcXG4gICAgZGlyID0gbWluKHZlYzIoRlhBQV9TUEFOX01BWCwgRlhBQV9TUEFOX01BWCksXFxuICAgICAgICAgICAgICBtYXgodmVjMigtRlhBQV9TUEFOX01BWCwgLUZYQUFfU1BBTl9NQVgpLFxcbiAgICAgICAgICAgICAgZGlyICogcmNwRGlyTWluKSkgKiB1UmVzb2x1dGlvbjtcXG5cXG4gICAgdmVjMyByZ2JBID0gMC41ICogKFxcbiAgICAgICAgdGV4dHVyZTJEKHRleCwgZnJhZ0Nvb3JkICogdVJlc29sdXRpb24gKyBkaXIgKiAoMS4wIC8gMy4wIC0gMC41KSkueHl6ICtcXG4gICAgICAgIHRleHR1cmUyRCh0ZXgsIGZyYWdDb29yZCAqIHVSZXNvbHV0aW9uICsgZGlyICogKDIuMCAvIDMuMCAtIDAuNSkpLnh5eik7XFxuICAgIHZlYzMgcmdiQiA9IHJnYkEgKiAwLjUgKyAwLjI1ICogKFxcbiAgICAgICAgdGV4dHVyZTJEKHRleCwgZnJhZ0Nvb3JkICogdVJlc29sdXRpb24gKyBkaXIgKiAtMC41KS54eXogK1xcbiAgICAgICAgdGV4dHVyZTJEKHRleCwgZnJhZ0Nvb3JkICogdVJlc29sdXRpb24gKyBkaXIgKiAwLjUpLnh5eik7XFxuXFxuICAgIGZsb2F0IGx1bWFCID0gZG90KHJnYkIsIGx1bWEpO1xcbiAgICBpZiAoKGx1bWFCIDwgbHVtYU1pbikgfHwgKGx1bWFCID4gbHVtYU1heCkpXFxuICAgICAgICBjb2xvciA9IHZlYzQocmdiQSwgMS4wKTtcXG4gICAgZWxzZVxcbiAgICAgICAgY29sb3IgPSB2ZWM0KHJnYkIsIDEuMCk7XFxuICAgIHJldHVybiBjb2xvcjtcXG59XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gXFx0dmVjNCBjb2xvciA9IGFwcGx5RlhBQSh0ZXh0dXJlKTtcXG4gICAgZ2xfRnJhZ0NvbG9yID0gY29sb3I7XFxufVwifSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZXhwb3J0cy5TaGFkZXJMaWJzPWV4cG9ydHMuVmlldzNEPWV4cG9ydHMuVmlldz1leHBvcnRzLlNjZW5lPWV4cG9ydHMuQmF0Y2hGWEFBPWV4cG9ydHMuQmF0Y2hTa3k9ZXhwb3J0cy5CYXRjaFNreWJveD1leHBvcnRzLkJhdGNoTGluZT1leHBvcnRzLkJhdGNoRG90c1BsYW5lPWV4cG9ydHMuQmF0Y2hCYWxsPWV4cG9ydHMuQmF0Y2hBeGlzPWV4cG9ydHMuQmF0Y2hDb3B5PWV4cG9ydHMuUGFzc0Z4YWE9ZXhwb3J0cy5QYXNzSEJsdXI9ZXhwb3J0cy5QYXNzVkJsdXI9ZXhwb3J0cy5QYXNzQmx1cj1leHBvcnRzLlBhc3NNYWNybz1leHBvcnRzLlBhc3M9ZXhwb3J0cy5FZmZlY3RDb21wb3Nlcj1leHBvcnRzLkNvbGxhZGFQYXJzZXI9ZXhwb3J0cy5IRFJMb2FkZXI9ZXhwb3J0cy5PYmpMb2FkZXI9ZXhwb3J0cy5CaW5hcnlMb2FkZXI9ZXhwb3J0cy5PYmplY3QzRD1leHBvcnRzLlJheT1leHBvcnRzLkNhbWVyYUN1YmU9ZXhwb3J0cy5DYW1lcmFQZXJzcGVjdGl2ZT1leHBvcnRzLkNhbWVyYU9ydGhvPWV4cG9ydHMuQ2FtZXJhPWV4cG9ydHMuVG91Y2hEZXRlY3Rvcj1leHBvcnRzLlF1YXRSb3RhdGlvbj1leHBvcnRzLldlYmdsTnVtYmVyPWV4cG9ydHMuT3JiaXRhbENvbnRyb2w9ZXhwb3J0cy5Ud2Vlbk51bWJlcj1leHBvcnRzLkVhc2VOdW1iZXI9ZXhwb3J0cy5FdmVudERpc3BhdGNoZXI9ZXhwb3J0cy5TY2hlZHVsZXI9ZXhwb3J0cy5UcmFuc2Zvcm1GZWVkYmFja09iamVjdD1leHBvcnRzLk11bHRpc2FtcGxlRnJhbWVCdWZmZXI9ZXhwb3J0cy5DdWJlRnJhbWVCdWZmZXI9ZXhwb3J0cy5GcmFtZUJ1ZmZlcj1leHBvcnRzLkJhdGNoPWV4cG9ydHMuR2VvbT1leHBvcnRzLk1lc2g9ZXhwb3J0cy5HTEN1YmVUZXh0dXJlPWV4cG9ydHMuR0xUZXh0dXJlT2xkPWV4cG9ydHMuR0xUZXh0dXJlPWV4cG9ydHMuR0xTaGFkZXI9ZXhwb3J0cy5HTD12b2lkIDA7dmFyIF9jcmVhdGVDbGFzcz1mdW5jdGlvbigpe2Z1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LHByb3BzKXtmb3IodmFyIGk9MDtpPHByb3BzLmxlbmd0aDtpKyspe3ZhciBkZXNjcmlwdG9yPXByb3BzW2ldO2Rlc2NyaXB0b3IuZW51bWVyYWJsZT1kZXNjcmlwdG9yLmVudW1lcmFibGV8fCExLGRlc2NyaXB0b3IuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGRlc2NyaXB0b3ImJihkZXNjcmlwdG9yLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LGRlc2NyaXB0b3Iua2V5LGRlc2NyaXB0b3IpfX1yZXR1cm4gZnVuY3Rpb24oQ29uc3RydWN0b3IscHJvdG9Qcm9wcyxzdGF0aWNQcm9wcyl7cmV0dXJuIHByb3RvUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLHByb3RvUHJvcHMpLHN0YXRpY1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLHN0YXRpY1Byb3BzKSxDb25zdHJ1Y3Rvcn19KCksX2dsTWF0cml4PV9fd2VicGFja19yZXF1aXJlX18oMSksR0xNPWZ1bmN0aW9uKG9iail7aWYob2JqJiZvYmouX19lc01vZHVsZSlyZXR1cm4gb2JqO3ZhciBuZXdPYmo9e307aWYobnVsbCE9b2JqKWZvcih2YXIga2V5IGluIG9iailPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLGtleSkmJihuZXdPYmpba2V5XT1vYmpba2V5XSk7cmV0dXJuIG5ld09iai5kZWZhdWx0PW9iaixuZXdPYmp9KF9nbE1hdHJpeCksX0dMVG9vbD1fX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9HTFRvb2wyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0dMVG9vbCksX0dMU2hhZGVyPV9fd2VicGFja19yZXF1aXJlX18oMiksX0dMU2hhZGVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HTFNoYWRlciksX0dMVGV4dHVyZT1fX3dlYnBhY2tfcmVxdWlyZV9fKDI1KSxfR0xUZXh0dXJlMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HTFRleHR1cmUpLF9HTFRleHR1cmUzPV9fd2VicGFja19yZXF1aXJlX18oMjYpLF9HTFRleHR1cmU0PV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0dMVGV4dHVyZTMpLF9HTEN1YmVUZXh0dXJlPV9fd2VicGFja19yZXF1aXJlX18oMjcpLF9HTEN1YmVUZXh0dXJlMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HTEN1YmVUZXh0dXJlKSxfTWVzaD1fX3dlYnBhY2tfcmVxdWlyZV9fKDUpLF9NZXNoMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9NZXNoKSxfR2VvbT1fX3dlYnBhY2tfcmVxdWlyZV9fKDcpLF9HZW9tMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HZW9tKSxfQmF0Y2g9X193ZWJwYWNrX3JlcXVpcmVfXyg0KSxfQmF0Y2gyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0JhdGNoKSxfRnJhbWVCdWZmZXI9X193ZWJwYWNrX3JlcXVpcmVfXygxMiksX0ZyYW1lQnVmZmVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9GcmFtZUJ1ZmZlciksX0N1YmVGcmFtZUJ1ZmZlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDU2KSxfQ3ViZUZyYW1lQnVmZmVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9DdWJlRnJhbWVCdWZmZXIpLF9NdWx0aXNhbXBsZUZyYW1lQnVmZmVyPV9fd2VicGFja19yZXF1aXJlX18oNTcpLF9NdWx0aXNhbXBsZUZyYW1lQnVmZmVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9NdWx0aXNhbXBsZUZyYW1lQnVmZmVyKSxfVHJhbnNmb3JtRmVlZGJhY2tPYmplY3Q9X193ZWJwYWNrX3JlcXVpcmVfXyg1OCksX1RyYW5zZm9ybUZlZWRiYWNrT2JqZWN0Mj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9UcmFuc2Zvcm1GZWVkYmFja09iamVjdCksX3NjaGVkdWxpbmc9X193ZWJwYWNrX3JlcXVpcmVfXyg2KSxfc2NoZWR1bGluZzI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2NoZWR1bGluZyksX0V2ZW50RGlzcGF0Y2hlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDI4KSxfRXZlbnREaXNwYXRjaGVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9FdmVudERpc3BhdGNoZXIpLF9FYXNlTnVtYmVyPV9fd2VicGFja19yZXF1aXJlX18oMTMpLF9FYXNlTnVtYmVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9FYXNlTnVtYmVyKSxfVHdlZW5OdW1iZXI9X193ZWJwYWNrX3JlcXVpcmVfXyg1OSksX1R3ZWVuTnVtYmVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9Ud2Vlbk51bWJlciksX09yYml0YWxDb250cm9sPV9fd2VicGFja19yZXF1aXJlX18oMjkpLF9PcmJpdGFsQ29udHJvbDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfT3JiaXRhbENvbnRyb2wpLF9RdWF0Um90YXRpb249X193ZWJwYWNrX3JlcXVpcmVfXyg2MCksX1F1YXRSb3RhdGlvbjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfUXVhdFJvdGF0aW9uKSxfVG91Y2hEZXRlY3Rvcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDYxKSxfVG91Y2hEZXRlY3RvcjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfVG91Y2hEZXRlY3RvciksX1dlYmdsTnVtYmVyPV9fd2VicGFja19yZXF1aXJlX18oOCksX1dlYmdsTnVtYmVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9XZWJnbE51bWJlciksX1dlYmdsQ29uc3Q9X193ZWJwYWNrX3JlcXVpcmVfXygyMyksX0NhbWVyYT0oX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfV2ViZ2xDb25zdCksX193ZWJwYWNrX3JlcXVpcmVfXygxNSkpLF9DYW1lcmEyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0NhbWVyYSksX0NhbWVyYU9ydGhvPV9fd2VicGFja19yZXF1aXJlX18oMzApLF9DYW1lcmFPcnRobzI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQ2FtZXJhT3J0aG8pLF9DYW1lcmFQZXJzcGVjdGl2ZT1fX3dlYnBhY2tfcmVxdWlyZV9fKDE2KSxfQ2FtZXJhUGVyc3BlY3RpdmUyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0NhbWVyYVBlcnNwZWN0aXZlKSxfQ2FtZXJhQ3ViZT1fX3dlYnBhY2tfcmVxdWlyZV9fKDYzKSxfQ2FtZXJhQ3ViZTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQ2FtZXJhQ3ViZSksX1JheT1fX3dlYnBhY2tfcmVxdWlyZV9fKDE0KSxfUmF5Mj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9SYXkpLF9PYmplY3QzRD1fX3dlYnBhY2tfcmVxdWlyZV9fKDMxKSxfT2JqZWN0M0QyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX09iamVjdDNEKSxfQmluYXJ5TG9hZGVyPV9fd2VicGFja19yZXF1aXJlX18oMTcpLF9CaW5hcnlMb2FkZXIyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0JpbmFyeUxvYWRlciksX09iakxvYWRlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDY0KSxfT2JqTG9hZGVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9PYmpMb2FkZXIpLF9IRFJMb2FkZXI9X193ZWJwYWNrX3JlcXVpcmVfXyg2NSksX0hEUkxvYWRlcjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfSERSTG9hZGVyKSxfQ29sbGFkYVBhcnNlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDY3KSxfQ29sbGFkYVBhcnNlcjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQ29sbGFkYVBhcnNlciksX0VmZmVjdENvbXBvc2VyPV9fd2VicGFja19yZXF1aXJlX18oNzEpLF9FZmZlY3RDb21wb3NlcjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfRWZmZWN0Q29tcG9zZXIpLF9QYXNzPV9fd2VicGFja19yZXF1aXJlX18oOSksX1Bhc3MyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1Bhc3MpLF9QYXNzTWFjcm89X193ZWJwYWNrX3JlcXVpcmVfXygzNiksX1Bhc3NNYWNybzI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfUGFzc01hY3JvKSxfUGFzc0JsdXI9X193ZWJwYWNrX3JlcXVpcmVfXyg3MiksX1Bhc3NCbHVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9QYXNzQmx1ciksX1Bhc3NWQmx1cj1fX3dlYnBhY2tfcmVxdWlyZV9fKDM3KSxfUGFzc1ZCbHVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9QYXNzVkJsdXIpLF9QYXNzSEJsdXI9X193ZWJwYWNrX3JlcXVpcmVfXygzOSksX1Bhc3NIQmx1cjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfUGFzc0hCbHVyKSxfUGFzc0Z4YWE9X193ZWJwYWNrX3JlcXVpcmVfXyg3NiksX1Bhc3NGeGFhMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9QYXNzRnhhYSksX0JhdGNoQ29weT1fX3dlYnBhY2tfcmVxdWlyZV9fKDc3KSxfQmF0Y2hDb3B5Mj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9CYXRjaENvcHkpLF9CYXRjaEF4aXM9X193ZWJwYWNrX3JlcXVpcmVfXyg3OCksX0JhdGNoQXhpczI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQmF0Y2hBeGlzKSxfQmF0Y2hCYWxsPV9fd2VicGFja19yZXF1aXJlX18oODEpLF9CYXRjaEJhbGwyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0JhdGNoQmFsbCksX0JhdGNoRG90c1BsYW5lPV9fd2VicGFja19yZXF1aXJlX18oODIpLF9CYXRjaERvdHNQbGFuZTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQmF0Y2hEb3RzUGxhbmUpLF9CYXRjaExpbmU9X193ZWJwYWNrX3JlcXVpcmVfXyg4NCksX0JhdGNoTGluZTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQmF0Y2hMaW5lKSxfQmF0Y2hTa3lib3g9X193ZWJwYWNrX3JlcXVpcmVfXyg4NSksX0JhdGNoU2t5Ym94Mj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9CYXRjaFNreWJveCksX0JhdGNoU2t5PV9fd2VicGFja19yZXF1aXJlX18oODYpLF9CYXRjaFNreTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQmF0Y2hTa3kpLF9CYXRjaEZYQUE9X193ZWJwYWNrX3JlcXVpcmVfXyg4OCksX0JhdGNoRlhBQTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQmF0Y2hGWEFBKSxfU2NlbmU9X193ZWJwYWNrX3JlcXVpcmVfXyg4OSksX1NjZW5lMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9TY2VuZSksX1ZpZXc9X193ZWJwYWNrX3JlcXVpcmVfXyg5MCksX1ZpZXcyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1ZpZXcpLF9WaWV3M0Q9X193ZWJwYWNrX3JlcXVpcmVfXyg5MSksX1ZpZXczRDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfVmlldzNEKSxfU2hhZGVyTGlicz1fX3dlYnBhY2tfcmVxdWlyZV9fKDMyKSxfU2hhZGVyTGliczI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfU2hhZGVyTGlicyksQWxmcmlkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gQWxmcmlkKCl7X2NsYXNzQ2FsbENoZWNrKHRoaXMsQWxmcmlkKSx0aGlzLmdsbT1HTE0sdGhpcy5HTD1fR0xUb29sMi5kZWZhdWx0LHRoaXMuR0xUb29sPV9HTFRvb2wyLmRlZmF1bHQsdGhpcy5HTFNoYWRlcj1fR0xTaGFkZXIyLmRlZmF1bHQsdGhpcy5HTFRleHR1cmU9X0dMVGV4dHVyZTQuZGVmYXVsdCx0aGlzLkdMVGV4dHVyZU9sZD1fR0xUZXh0dXJlMi5kZWZhdWx0LHRoaXMuR0xDdWJlVGV4dHVyZT1fR0xDdWJlVGV4dHVyZTIuZGVmYXVsdCx0aGlzLk1lc2g9X01lc2gyLmRlZmF1bHQsdGhpcy5HZW9tPV9HZW9tMi5kZWZhdWx0LHRoaXMuQmF0Y2g9X0JhdGNoMi5kZWZhdWx0LHRoaXMuRnJhbWVCdWZmZXI9X0ZyYW1lQnVmZmVyMi5kZWZhdWx0LHRoaXMuQ3ViZUZyYW1lQnVmZmVyPV9DdWJlRnJhbWVCdWZmZXIyLmRlZmF1bHQsdGhpcy5TY2hlZHVsZXI9X3NjaGVkdWxpbmcyLmRlZmF1bHQsdGhpcy5FdmVudERpc3BhdGNoZXI9X0V2ZW50RGlzcGF0Y2hlcjIuZGVmYXVsdCx0aGlzLkVhc2VOdW1iZXI9X0Vhc2VOdW1iZXIyLmRlZmF1bHQsdGhpcy5Ud2Vlbk51bWJlcj1fVHdlZW5OdW1iZXIyLmRlZmF1bHQsdGhpcy5DYW1lcmE9X0NhbWVyYTIuZGVmYXVsdCx0aGlzLkNhbWVyYU9ydGhvPV9DYW1lcmFPcnRobzIuZGVmYXVsdCx0aGlzLkNhbWVyYVBlcnNwZWN0aXZlPV9DYW1lcmFQZXJzcGVjdGl2ZTIuZGVmYXVsdCx0aGlzLlJheT1fUmF5Mi5kZWZhdWx0LHRoaXMuQ2FtZXJhQ3ViZT1fQ2FtZXJhQ3ViZTIuZGVmYXVsdCx0aGlzLk9yYml0YWxDb250cm9sPV9PcmJpdGFsQ29udHJvbDIuZGVmYXVsdCx0aGlzLlF1YXRSb3RhdGlvbj1fUXVhdFJvdGF0aW9uMi5kZWZhdWx0LHRoaXMuQmluYXJ5TG9hZGVyPV9CaW5hcnlMb2FkZXIyLmRlZmF1bHQsdGhpcy5PYmpMb2FkZXI9X09iakxvYWRlcjIuZGVmYXVsdCx0aGlzLkNvbGxhZGFQYXJzZXI9X0NvbGxhZGFQYXJzZXIyLmRlZmF1bHQsdGhpcy5IRFJMb2FkZXI9X0hEUkxvYWRlcjIuZGVmYXVsdCx0aGlzLkJhdGNoQ29weT1fQmF0Y2hDb3B5Mi5kZWZhdWx0LHRoaXMuQmF0Y2hBeGlzPV9CYXRjaEF4aXMyLmRlZmF1bHQsdGhpcy5CYXRjaEJhbGw9X0JhdGNoQmFsbDIuZGVmYXVsdCx0aGlzLkJhdGNoQmFsbD1fQmF0Y2hCYWxsMi5kZWZhdWx0LHRoaXMuQmF0Y2hMaW5lPV9CYXRjaExpbmUyLmRlZmF1bHQsdGhpcy5CYXRjaFNreWJveD1fQmF0Y2hTa3lib3gyLmRlZmF1bHQsdGhpcy5CYXRjaFNreT1fQmF0Y2hTa3kyLmRlZmF1bHQsdGhpcy5CYXRjaEZYQUE9X0JhdGNoRlhBQTIuZGVmYXVsdCx0aGlzLkJhdGNoRG90c1BsYW5lPV9CYXRjaERvdHNQbGFuZTIuZGVmYXVsdCx0aGlzLlNjZW5lPV9TY2VuZTIuZGVmYXVsdCx0aGlzLlZpZXc9X1ZpZXcyLmRlZmF1bHQsdGhpcy5WaWV3M0Q9X1ZpZXczRDIuZGVmYXVsdCx0aGlzLk9iamVjdDNEPV9PYmplY3QzRDIuZGVmYXVsdCx0aGlzLlNoYWRlckxpYnM9X1NoYWRlckxpYnMyLmRlZmF1bHQsdGhpcy5XZWJnbE51bWJlcj1fV2ViZ2xOdW1iZXIyLmRlZmF1bHQsdGhpcy5FZmZlY3RDb21wb3Nlcj1fRWZmZWN0Q29tcG9zZXIyLmRlZmF1bHQsdGhpcy5QYXNzPV9QYXNzMi5kZWZhdWx0LHRoaXMuUGFzc01hY3JvPV9QYXNzTWFjcm8yLmRlZmF1bHQsdGhpcy5QYXNzQmx1cj1fUGFzc0JsdXIyLmRlZmF1bHQsdGhpcy5QYXNzVkJsdXI9X1Bhc3NWQmx1cjIuZGVmYXVsdCx0aGlzLlBhc3NIQmx1cj1fUGFzc0hCbHVyMi5kZWZhdWx0LHRoaXMuUGFzc0Z4YWE9X1Bhc3NGeGFhMi5kZWZhdWx0LHRoaXMuTXVsdGlzYW1wbGVGcmFtZUJ1ZmZlcj1fTXVsdGlzYW1wbGVGcmFtZUJ1ZmZlcjIuZGVmYXVsdCx0aGlzLlRyYW5zZm9ybUZlZWRiYWNrT2JqZWN0PV9UcmFuc2Zvcm1GZWVkYmFja09iamVjdDIuZGVmYXVsdDtmb3IodmFyIHMgaW4gR0xNKUdMTVtzXSYmKHdpbmRvd1tzXT1HTE1bc10pfXJldHVybiBfY3JlYXRlQ2xhc3MoQWxmcmlkLFt7a2V5OlwibG9nXCIsdmFsdWU6ZnVuY3Rpb24oKXtuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoXCJDaHJvbWVcIik+LTE/Y29uc29sZS5sb2coXCIlY2xpYiBhbGZyaWQgOiBWRVJTSU9OIDAuMi4wXCIsXCJiYWNrZ3JvdW5kOiAjMTkzNDQxOyBjb2xvcjogI0ZDRkZGNVwiKTpjb25zb2xlLmxvZyhcImxpYiBhbGZyaWQgOiBWRVJTSU9OIFwiLFwiMC4yLjBcIiksY29uc29sZS5sb2coXCIlY0NsYXNzZXMgOiBcIixcImNvbG9yOiAjMTkzNDQxXCIpO2Zvcih2YXIgcyBpbiB0aGlzKXRoaXNbc10mJmNvbnNvbGUubG9nKFwiJWMgLSBcIitzLFwiY29sb3I6ICMzRTYwNkZcIil9fV0pLEFsZnJpZH0oKSxhbD1uZXcgQWxmcmlkO2V4cG9ydHMuZGVmYXVsdD1hbCxleHBvcnRzLkdMPV9HTFRvb2wyLmRlZmF1bHQsZXhwb3J0cy5HTFNoYWRlcj1fR0xTaGFkZXIyLmRlZmF1bHQsZXhwb3J0cy5HTFRleHR1cmU9X0dMVGV4dHVyZTQuZGVmYXVsdCxleHBvcnRzLkdMVGV4dHVyZU9sZD1fR0xUZXh0dXJlMi5kZWZhdWx0LGV4cG9ydHMuR0xDdWJlVGV4dHVyZT1fR0xDdWJlVGV4dHVyZTIuZGVmYXVsdCxleHBvcnRzLk1lc2g9X01lc2gyLmRlZmF1bHQsZXhwb3J0cy5HZW9tPV9HZW9tMi5kZWZhdWx0LGV4cG9ydHMuQmF0Y2g9X0JhdGNoMi5kZWZhdWx0LGV4cG9ydHMuRnJhbWVCdWZmZXI9X0ZyYW1lQnVmZmVyMi5kZWZhdWx0LGV4cG9ydHMuQ3ViZUZyYW1lQnVmZmVyPV9DdWJlRnJhbWVCdWZmZXIyLmRlZmF1bHQsZXhwb3J0cy5NdWx0aXNhbXBsZUZyYW1lQnVmZmVyPV9NdWx0aXNhbXBsZUZyYW1lQnVmZmVyMi5kZWZhdWx0LGV4cG9ydHMuVHJhbnNmb3JtRmVlZGJhY2tPYmplY3Q9X1RyYW5zZm9ybUZlZWRiYWNrT2JqZWN0Mi5kZWZhdWx0LGV4cG9ydHMuU2NoZWR1bGVyPV9zY2hlZHVsaW5nMi5kZWZhdWx0LGV4cG9ydHMuRXZlbnREaXNwYXRjaGVyPV9FdmVudERpc3BhdGNoZXIyLmRlZmF1bHQsZXhwb3J0cy5FYXNlTnVtYmVyPV9FYXNlTnVtYmVyMi5kZWZhdWx0LGV4cG9ydHMuVHdlZW5OdW1iZXI9X1R3ZWVuTnVtYmVyMi5kZWZhdWx0LGV4cG9ydHMuT3JiaXRhbENvbnRyb2w9X09yYml0YWxDb250cm9sMi5kZWZhdWx0LGV4cG9ydHMuV2ViZ2xOdW1iZXI9X1dlYmdsTnVtYmVyMi5kZWZhdWx0LGV4cG9ydHMuUXVhdFJvdGF0aW9uPV9RdWF0Um90YXRpb24yLmRlZmF1bHQsZXhwb3J0cy5Ub3VjaERldGVjdG9yPV9Ub3VjaERldGVjdG9yMi5kZWZhdWx0LGV4cG9ydHMuQ2FtZXJhPV9DYW1lcmEyLmRlZmF1bHQsZXhwb3J0cy5DYW1lcmFPcnRobz1fQ2FtZXJhT3J0aG8yLmRlZmF1bHQsZXhwb3J0cy5DYW1lcmFQZXJzcGVjdGl2ZT1fQ2FtZXJhUGVyc3BlY3RpdmUyLmRlZmF1bHQsZXhwb3J0cy5DYW1lcmFDdWJlPV9DYW1lcmFDdWJlMi5kZWZhdWx0LGV4cG9ydHMuUmF5PV9SYXkyLmRlZmF1bHQsZXhwb3J0cy5PYmplY3QzRD1fT2JqZWN0M0QyLmRlZmF1bHQsZXhwb3J0cy5CaW5hcnlMb2FkZXI9X0JpbmFyeUxvYWRlcjIuZGVmYXVsdCxleHBvcnRzLk9iakxvYWRlcj1fT2JqTG9hZGVyMi5kZWZhdWx0LGV4cG9ydHMuSERSTG9hZGVyPV9IRFJMb2FkZXIyLmRlZmF1bHQsZXhwb3J0cy5Db2xsYWRhUGFyc2VyPV9Db2xsYWRhUGFyc2VyMi5kZWZhdWx0LGV4cG9ydHMuRWZmZWN0Q29tcG9zZXI9X0VmZmVjdENvbXBvc2VyMi5kZWZhdWx0LGV4cG9ydHMuUGFzcz1fUGFzczIuZGVmYXVsdCxleHBvcnRzLlBhc3NNYWNybz1fUGFzc01hY3JvMi5kZWZhdWx0LGV4cG9ydHMuUGFzc0JsdXI9X1Bhc3NCbHVyMi5kZWZhdWx0LGV4cG9ydHMuUGFzc1ZCbHVyPV9QYXNzVkJsdXIyLmRlZmF1bHQsZXhwb3J0cy5QYXNzSEJsdXI9X1Bhc3NIQmx1cjIuZGVmYXVsdCxleHBvcnRzLlBhc3NGeGFhPV9QYXNzRnhhYTIuZGVmYXVsdCxleHBvcnRzLkJhdGNoQ29weT1fQmF0Y2hDb3B5Mi5kZWZhdWx0LGV4cG9ydHMuQmF0Y2hBeGlzPV9CYXRjaEF4aXMyLmRlZmF1bHQsZXhwb3J0cy5CYXRjaEJhbGw9X0JhdGNoQmFsbDIuZGVmYXVsdCxleHBvcnRzLkJhdGNoRG90c1BsYW5lPV9CYXRjaERvdHNQbGFuZTIuZGVmYXVsdCxleHBvcnRzLkJhdGNoTGluZT1fQmF0Y2hMaW5lMi5kZWZhdWx0LGV4cG9ydHMuQmF0Y2hTa3lib3g9X0JhdGNoU2t5Ym94Mi5kZWZhdWx0LGV4cG9ydHMuQmF0Y2hTa3k9X0JhdGNoU2t5Mi5kZWZhdWx0LGV4cG9ydHMuQmF0Y2hGWEFBPV9CYXRjaEZYQUEyLmRlZmF1bHQsZXhwb3J0cy5TY2VuZT1fU2NlbmUyLmRlZmF1bHQsZXhwb3J0cy5WaWV3PV9WaWV3Mi5kZWZhdWx0LGV4cG9ydHMuVmlldzNEPV9WaWV3M0QyLmRlZmF1bHQsZXhwb3J0cy5TaGFkZXJMaWJzPV9TaGFkZXJMaWJzMi5kZWZhdWx0fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBjcmVhdGUoKXt2YXIgb3V0PW5ldyBnbE1hdHJpeC5BUlJBWV9UWVBFKDQpO3JldHVybiBvdXRbMF09MSxvdXRbMV09MCxvdXRbMl09MCxvdXRbM109MSxvdXR9ZnVuY3Rpb24gY2xvbmUoYSl7dmFyIG91dD1uZXcgZ2xNYXRyaXguQVJSQVlfVFlQRSg0KTtyZXR1cm4gb3V0WzBdPWFbMF0sb3V0WzFdPWFbMV0sb3V0WzJdPWFbMl0sb3V0WzNdPWFbM10sb3V0fWZ1bmN0aW9uIGNvcHkob3V0LGEpe3JldHVybiBvdXRbMF09YVswXSxvdXRbMV09YVsxXSxvdXRbMl09YVsyXSxvdXRbM109YVszXSxvdXR9ZnVuY3Rpb24gaWRlbnRpdHkob3V0KXtyZXR1cm4gb3V0WzBdPTEsb3V0WzFdPTAsb3V0WzJdPTAsb3V0WzNdPTEsb3V0fWZ1bmN0aW9uIGZyb21WYWx1ZXMobTAwLG0wMSxtMTAsbTExKXt2YXIgb3V0PW5ldyBnbE1hdHJpeC5BUlJBWV9UWVBFKDQpO3JldHVybiBvdXRbMF09bTAwLG91dFsxXT1tMDEsb3V0WzJdPW0xMCxvdXRbM109bTExLG91dH1mdW5jdGlvbiBzZXQob3V0LG0wMCxtMDEsbTEwLG0xMSl7cmV0dXJuIG91dFswXT1tMDAsb3V0WzFdPW0wMSxvdXRbMl09bTEwLG91dFszXT1tMTEsb3V0fWZ1bmN0aW9uIHRyYW5zcG9zZShvdXQsYSl7aWYob3V0PT09YSl7dmFyIGExPWFbMV07b3V0WzFdPWFbMl0sb3V0WzJdPWExfWVsc2Ugb3V0WzBdPWFbMF0sb3V0WzFdPWFbMl0sb3V0WzJdPWFbMV0sb3V0WzNdPWFbM107cmV0dXJuIG91dH1mdW5jdGlvbiBpbnZlcnQob3V0LGEpe3ZhciBhMD1hWzBdLGExPWFbMV0sYTI9YVsyXSxhMz1hWzNdLGRldD1hMCphMy1hMiphMTtyZXR1cm4gZGV0PyhkZXQ9MS9kZXQsb3V0WzBdPWEzKmRldCxvdXRbMV09LWExKmRldCxvdXRbMl09LWEyKmRldCxvdXRbM109YTAqZGV0LG91dCk6bnVsbH1mdW5jdGlvbiBhZGpvaW50KG91dCxhKXt2YXIgYTA9YVswXTtyZXR1cm4gb3V0WzBdPWFbM10sb3V0WzFdPS1hWzFdLG91dFsyXT0tYVsyXSxvdXRbM109YTAsb3V0fWZ1bmN0aW9uIGRldGVybWluYW50KGEpe3JldHVybiBhWzBdKmFbM10tYVsyXSphWzFdfWZ1bmN0aW9uIG11bHRpcGx5KG91dCxhLGIpe3ZhciBhMD1hWzBdLGExPWFbMV0sYTI9YVsyXSxhMz1hWzNdLGIwPWJbMF0sYjE9YlsxXSxiMj1iWzJdLGIzPWJbM107cmV0dXJuIG91dFswXT1hMCpiMCthMipiMSxvdXRbMV09YTEqYjArYTMqYjEsb3V0WzJdPWEwKmIyK2EyKmIzLG91dFszXT1hMSpiMithMypiMyxvdXR9ZnVuY3Rpb24gcm90YXRlKG91dCxhLHJhZCl7dmFyIGEwPWFbMF0sYTE9YVsxXSxhMj1hWzJdLGEzPWFbM10scz1NYXRoLnNpbihyYWQpLGM9TWF0aC5jb3MocmFkKTtyZXR1cm4gb3V0WzBdPWEwKmMrYTIqcyxvdXRbMV09YTEqYythMypzLG91dFsyXT1hMCotcythMipjLG91dFszXT1hMSotcythMypjLG91dH1mdW5jdGlvbiBzY2FsZShvdXQsYSx2KXt2YXIgYTA9YVswXSxhMT1hWzFdLGEyPWFbMl0sYTM9YVszXSx2MD12WzBdLHYxPXZbMV07cmV0dXJuIG91dFswXT1hMCp2MCxvdXRbMV09YTEqdjAsb3V0WzJdPWEyKnYxLG91dFszXT1hMyp2MSxvdXR9ZnVuY3Rpb24gZnJvbVJvdGF0aW9uKG91dCxyYWQpe3ZhciBzPU1hdGguc2luKHJhZCksYz1NYXRoLmNvcyhyYWQpO3JldHVybiBvdXRbMF09YyxvdXRbMV09cyxvdXRbMl09LXMsb3V0WzNdPWMsb3V0fWZ1bmN0aW9uIGZyb21TY2FsaW5nKG91dCx2KXtyZXR1cm4gb3V0WzBdPXZbMF0sb3V0WzFdPTAsb3V0WzJdPTAsb3V0WzNdPXZbMV0sb3V0fWZ1bmN0aW9uIHN0cihhKXtyZXR1cm5cIm1hdDIoXCIrYVswXStcIiwgXCIrYVsxXStcIiwgXCIrYVsyXStcIiwgXCIrYVszXStcIilcIn1mdW5jdGlvbiBmcm9iKGEpe3JldHVybiBNYXRoLnNxcnQoTWF0aC5wb3coYVswXSwyKStNYXRoLnBvdyhhWzFdLDIpK01hdGgucG93KGFbMl0sMikrTWF0aC5wb3coYVszXSwyKSl9ZnVuY3Rpb24gTERVKEwsRCxVLGEpe3JldHVybiBMWzJdPWFbMl0vYVswXSxVWzBdPWFbMF0sVVsxXT1hWzFdLFVbM109YVszXS1MWzJdKlVbMV0sW0wsRCxVXX1mdW5jdGlvbiBhZGQob3V0LGEsYil7cmV0dXJuIG91dFswXT1hWzBdK2JbMF0sb3V0WzFdPWFbMV0rYlsxXSxvdXRbMl09YVsyXStiWzJdLG91dFszXT1hWzNdK2JbM10sb3V0fWZ1bmN0aW9uIHN1YnRyYWN0KG91dCxhLGIpe3JldHVybiBvdXRbMF09YVswXS1iWzBdLG91dFsxXT1hWzFdLWJbMV0sb3V0WzJdPWFbMl0tYlsyXSxvdXRbM109YVszXS1iWzNdLG91dH1mdW5jdGlvbiBleGFjdEVxdWFscyhhLGIpe3JldHVybiBhWzBdPT09YlswXSYmYVsxXT09PWJbMV0mJmFbMl09PT1iWzJdJiZhWzNdPT09YlszXX1mdW5jdGlvbiBlcXVhbHMoYSxiKXt2YXIgYTA9YVswXSxhMT1hWzFdLGEyPWFbMl0sYTM9YVszXSxiMD1iWzBdLGIxPWJbMV0sYjI9YlsyXSxiMz1iWzNdO3JldHVybiBNYXRoLmFicyhhMC1iMCk8PWdsTWF0cml4LkVQU0lMT04qTWF0aC5tYXgoMSxNYXRoLmFicyhhMCksTWF0aC5hYnMoYjApKSYmTWF0aC5hYnMoYTEtYjEpPD1nbE1hdHJpeC5FUFNJTE9OKk1hdGgubWF4KDEsTWF0aC5hYnMoYTEpLE1hdGguYWJzKGIxKSkmJk1hdGguYWJzKGEyLWIyKTw9Z2xNYXRyaXguRVBTSUxPTipNYXRoLm1heCgxLE1hdGguYWJzKGEyKSxNYXRoLmFicyhiMikpJiZNYXRoLmFicyhhMy1iMyk8PWdsTWF0cml4LkVQU0lMT04qTWF0aC5tYXgoMSxNYXRoLmFicyhhMyksTWF0aC5hYnMoYjMpKX1mdW5jdGlvbiBtdWx0aXBseVNjYWxhcihvdXQsYSxiKXtyZXR1cm4gb3V0WzBdPWFbMF0qYixvdXRbMV09YVsxXSpiLG91dFsyXT1hWzJdKmIsb3V0WzNdPWFbM10qYixvdXR9ZnVuY3Rpb24gbXVsdGlwbHlTY2FsYXJBbmRBZGQob3V0LGEsYixzY2FsZSl7cmV0dXJuIG91dFswXT1hWzBdK2JbMF0qc2NhbGUsb3V0WzFdPWFbMV0rYlsxXSpzY2FsZSxvdXRbMl09YVsyXStiWzJdKnNjYWxlLG91dFszXT1hWzNdK2JbM10qc2NhbGUsb3V0fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGV4cG9ydHMuc3ViPWV4cG9ydHMubXVsPXZvaWQgMCxleHBvcnRzLmNyZWF0ZT1jcmVhdGUsZXhwb3J0cy5jbG9uZT1jbG9uZSxleHBvcnRzLmNvcHk9Y29weSxleHBvcnRzLmlkZW50aXR5PWlkZW50aXR5LGV4cG9ydHMuZnJvbVZhbHVlcz1mcm9tVmFsdWVzLGV4cG9ydHMuc2V0PXNldCxleHBvcnRzLnRyYW5zcG9zZT10cmFuc3Bvc2UsZXhwb3J0cy5pbnZlcnQ9aW52ZXJ0LGV4cG9ydHMuYWRqb2ludD1hZGpvaW50LGV4cG9ydHMuZGV0ZXJtaW5hbnQ9ZGV0ZXJtaW5hbnQsZXhwb3J0cy5tdWx0aXBseT1tdWx0aXBseSxleHBvcnRzLnJvdGF0ZT1yb3RhdGUsZXhwb3J0cy5zY2FsZT1zY2FsZSxleHBvcnRzLmZyb21Sb3RhdGlvbj1mcm9tUm90YXRpb24sZXhwb3J0cy5mcm9tU2NhbGluZz1mcm9tU2NhbGluZyxleHBvcnRzLnN0cj1zdHIsZXhwb3J0cy5mcm9iPWZyb2IsZXhwb3J0cy5MRFU9TERVLGV4cG9ydHMuYWRkPWFkZCxleHBvcnRzLnN1YnRyYWN0PXN1YnRyYWN0LGV4cG9ydHMuZXhhY3RFcXVhbHM9ZXhhY3RFcXVhbHMsZXhwb3J0cy5lcXVhbHM9ZXF1YWxzLGV4cG9ydHMubXVsdGlwbHlTY2FsYXI9bXVsdGlwbHlTY2FsYXIsZXhwb3J0cy5tdWx0aXBseVNjYWxhckFuZEFkZD1tdWx0aXBseVNjYWxhckFuZEFkZDt2YXIgX2NvbW1vbj1fX3dlYnBhY2tfcmVxdWlyZV9fKDMpLGdsTWF0cml4PWZ1bmN0aW9uKG9iail7aWYob2JqJiZvYmouX19lc01vZHVsZSlyZXR1cm4gb2JqO3ZhciBuZXdPYmo9e307aWYobnVsbCE9b2JqKWZvcih2YXIga2V5IGluIG9iailPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLGtleSkmJihuZXdPYmpba2V5XT1vYmpba2V5XSk7cmV0dXJuIG5ld09iai5kZWZhdWx0PW9iaixuZXdPYmp9KF9jb21tb24pO2V4cG9ydHMubXVsPW11bHRpcGx5LGV4cG9ydHMuc3ViPXN1YnRyYWN0fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBjcmVhdGUoKXt2YXIgb3V0PW5ldyBnbE1hdHJpeC5BUlJBWV9UWVBFKDYpO3JldHVybiBvdXRbMF09MSxvdXRbMV09MCxvdXRbMl09MCxvdXRbM109MSxvdXRbNF09MCxvdXRbNV09MCxvdXR9ZnVuY3Rpb24gY2xvbmUoYSl7dmFyIG91dD1uZXcgZ2xNYXRyaXguQVJSQVlfVFlQRSg2KTtyZXR1cm4gb3V0WzBdPWFbMF0sb3V0WzFdPWFbMV0sb3V0WzJdPWFbMl0sb3V0WzNdPWFbM10sb3V0WzRdPWFbNF0sb3V0WzVdPWFbNV0sb3V0fWZ1bmN0aW9uIGNvcHkob3V0LGEpe3JldHVybiBvdXRbMF09YVswXSxvdXRbMV09YVsxXSxvdXRbMl09YVsyXSxvdXRbM109YVszXSxvdXRbNF09YVs0XSxvdXRbNV09YVs1XSxvdXR9ZnVuY3Rpb24gaWRlbnRpdHkob3V0KXtyZXR1cm4gb3V0WzBdPTEsb3V0WzFdPTAsb3V0WzJdPTAsb3V0WzNdPTEsb3V0WzRdPTAsb3V0WzVdPTAsb3V0fWZ1bmN0aW9uIGZyb21WYWx1ZXMoYSxiLGMsZCx0eCx0eSl7dmFyIG91dD1uZXcgZ2xNYXRyaXguQVJSQVlfVFlQRSg2KTtyZXR1cm4gb3V0WzBdPWEsb3V0WzFdPWIsb3V0WzJdPWMsb3V0WzNdPWQsb3V0WzRdPXR4LG91dFs1XT10eSxvdXR9ZnVuY3Rpb24gc2V0KG91dCxhLGIsYyxkLHR4LHR5KXtyZXR1cm4gb3V0WzBdPWEsb3V0WzFdPWIsb3V0WzJdPWMsb3V0WzNdPWQsb3V0WzRdPXR4LG91dFs1XT10eSxvdXR9ZnVuY3Rpb24gaW52ZXJ0KG91dCxhKXt2YXIgYWE9YVswXSxhYj1hWzFdLGFjPWFbMl0sYWQ9YVszXSxhdHg9YVs0XSxhdHk9YVs1XSxkZXQ9YWEqYWQtYWIqYWM7cmV0dXJuIGRldD8oZGV0PTEvZGV0LG91dFswXT1hZCpkZXQsb3V0WzFdPS1hYipkZXQsb3V0WzJdPS1hYypkZXQsb3V0WzNdPWFhKmRldCxvdXRbNF09KGFjKmF0eS1hZCphdHgpKmRldCxvdXRbNV09KGFiKmF0eC1hYSphdHkpKmRldCxvdXQpOm51bGx9ZnVuY3Rpb24gZGV0ZXJtaW5hbnQoYSl7cmV0dXJuIGFbMF0qYVszXS1hWzFdKmFbMl19ZnVuY3Rpb24gbXVsdGlwbHkob3V0LGEsYil7dmFyIGEwPWFbMF0sYTE9YVsxXSxhMj1hWzJdLGEzPWFbM10sYTQ9YVs0XSxhNT1hWzVdLGIwPWJbMF0sYjE9YlsxXSxiMj1iWzJdLGIzPWJbM10sYjQ9Yls0XSxiNT1iWzVdO3JldHVybiBvdXRbMF09YTAqYjArYTIqYjEsb3V0WzFdPWExKmIwK2EzKmIxLG91dFsyXT1hMCpiMithMipiMyxvdXRbM109YTEqYjIrYTMqYjMsb3V0WzRdPWEwKmI0K2EyKmI1K2E0LG91dFs1XT1hMSpiNCthMypiNSthNSxvdXR9ZnVuY3Rpb24gcm90YXRlKG91dCxhLHJhZCl7dmFyIGEwPWFbMF0sYTE9YVsxXSxhMj1hWzJdLGEzPWFbM10sYTQ9YVs0XSxhNT1hWzVdLHM9TWF0aC5zaW4ocmFkKSxjPU1hdGguY29zKHJhZCk7cmV0dXJuIG91dFswXT1hMCpjK2EyKnMsb3V0WzFdPWExKmMrYTMqcyxvdXRbMl09YTAqLXMrYTIqYyxvdXRbM109YTEqLXMrYTMqYyxvdXRbNF09YTQsb3V0WzVdPWE1LG91dH1mdW5jdGlvbiBzY2FsZShvdXQsYSx2KXt2YXIgYTA9YVswXSxhMT1hWzFdLGEyPWFbMl0sYTM9YVszXSxhND1hWzRdLGE1PWFbNV0sdjA9dlswXSx2MT12WzFdO3JldHVybiBvdXRbMF09YTAqdjAsb3V0WzFdPWExKnYwLG91dFsyXT1hMip2MSxvdXRbM109YTMqdjEsb3V0WzRdPWE0LG91dFs1XT1hNSxvdXR9ZnVuY3Rpb24gdHJhbnNsYXRlKG91dCxhLHYpe3ZhciBhMD1hWzBdLGExPWFbMV0sYTI9YVsyXSxhMz1hWzNdLGE0PWFbNF0sYTU9YVs1XSx2MD12WzBdLHYxPXZbMV07cmV0dXJuIG91dFswXT1hMCxvdXRbMV09YTEsb3V0WzJdPWEyLG91dFszXT1hMyxvdXRbNF09YTAqdjArYTIqdjErYTQsb3V0WzVdPWExKnYwK2EzKnYxK2E1LG91dH1mdW5jdGlvbiBmcm9tUm90YXRpb24ob3V0LHJhZCl7dmFyIHM9TWF0aC5zaW4ocmFkKSxjPU1hdGguY29zKHJhZCk7cmV0dXJuIG91dFswXT1jLG91dFsxXT1zLG91dFsyXT0tcyxvdXRbM109YyxvdXRbNF09MCxvdXRbNV09MCxvdXR9ZnVuY3Rpb24gZnJvbVNjYWxpbmcob3V0LHYpe3JldHVybiBvdXRbMF09dlswXSxvdXRbMV09MCxvdXRbMl09MCxvdXRbM109dlsxXSxvdXRbNF09MCxvdXRbNV09MCxvdXR9ZnVuY3Rpb24gZnJvbVRyYW5zbGF0aW9uKG91dCx2KXtyZXR1cm4gb3V0WzBdPTEsb3V0WzFdPTAsb3V0WzJdPTAsb3V0WzNdPTEsb3V0WzRdPXZbMF0sb3V0WzVdPXZbMV0sb3V0fWZ1bmN0aW9uIHN0cihhKXtyZXR1cm5cIm1hdDJkKFwiK2FbMF0rXCIsIFwiK2FbMV0rXCIsIFwiK2FbMl0rXCIsIFwiK2FbM10rXCIsIFwiK2FbNF0rXCIsIFwiK2FbNV0rXCIpXCJ9ZnVuY3Rpb24gZnJvYihhKXtyZXR1cm4gTWF0aC5zcXJ0KE1hdGgucG93KGFbMF0sMikrTWF0aC5wb3coYVsxXSwyKStNYXRoLnBvdyhhWzJdLDIpK01hdGgucG93KGFbM10sMikrTWF0aC5wb3coYVs0XSwyKStNYXRoLnBvdyhhWzVdLDIpKzEpfWZ1bmN0aW9uIGFkZChvdXQsYSxiKXtyZXR1cm4gb3V0WzBdPWFbMF0rYlswXSxvdXRbMV09YVsxXStiWzFdLG91dFsyXT1hWzJdK2JbMl0sb3V0WzNdPWFbM10rYlszXSxvdXRbNF09YVs0XStiWzRdLG91dFs1XT1hWzVdK2JbNV0sb3V0fWZ1bmN0aW9uIHN1YnRyYWN0KG91dCxhLGIpe3JldHVybiBvdXRbMF09YVswXS1iWzBdLG91dFsxXT1hWzFdLWJbMV0sb3V0WzJdPWFbMl0tYlsyXSxvdXRbM109YVszXS1iWzNdLG91dFs0XT1hWzRdLWJbNF0sb3V0WzVdPWFbNV0tYls1XSxvdXR9ZnVuY3Rpb24gbXVsdGlwbHlTY2FsYXIob3V0LGEsYil7cmV0dXJuIG91dFswXT1hWzBdKmIsb3V0WzFdPWFbMV0qYixvdXRbMl09YVsyXSpiLG91dFszXT1hWzNdKmIsb3V0WzRdPWFbNF0qYixvdXRbNV09YVs1XSpiLG91dH1mdW5jdGlvbiBtdWx0aXBseVNjYWxhckFuZEFkZChvdXQsYSxiLHNjYWxlKXtyZXR1cm4gb3V0WzBdPWFbMF0rYlswXSpzY2FsZSxvdXRbMV09YVsxXStiWzFdKnNjYWxlLG91dFsyXT1hWzJdK2JbMl0qc2NhbGUsb3V0WzNdPWFbM10rYlszXSpzY2FsZSxvdXRbNF09YVs0XStiWzRdKnNjYWxlLG91dFs1XT1hWzVdK2JbNV0qc2NhbGUsb3V0fWZ1bmN0aW9uIGV4YWN0RXF1YWxzKGEsYil7cmV0dXJuIGFbMF09PT1iWzBdJiZhWzFdPT09YlsxXSYmYVsyXT09PWJbMl0mJmFbM109PT1iWzNdJiZhWzRdPT09Yls0XSYmYVs1XT09PWJbNV19ZnVuY3Rpb24gZXF1YWxzKGEsYil7dmFyIGEwPWFbMF0sYTE9YVsxXSxhMj1hWzJdLGEzPWFbM10sYTQ9YVs0XSxhNT1hWzVdLGIwPWJbMF0sYjE9YlsxXSxiMj1iWzJdLGIzPWJbM10sYjQ9Yls0XSxiNT1iWzVdO3JldHVybiBNYXRoLmFicyhhMC1iMCk8PWdsTWF0cml4LkVQU0lMT04qTWF0aC5tYXgoMSxNYXRoLmFicyhhMCksTWF0aC5hYnMoYjApKSYmTWF0aC5hYnMoYTEtYjEpPD1nbE1hdHJpeC5FUFNJTE9OKk1hdGgubWF4KDEsTWF0aC5hYnMoYTEpLE1hdGguYWJzKGIxKSkmJk1hdGguYWJzKGEyLWIyKTw9Z2xNYXRyaXguRVBTSUxPTipNYXRoLm1heCgxLE1hdGguYWJzKGEyKSxNYXRoLmFicyhiMikpJiZNYXRoLmFicyhhMy1iMyk8PWdsTWF0cml4LkVQU0lMT04qTWF0aC5tYXgoMSxNYXRoLmFicyhhMyksTWF0aC5hYnMoYjMpKSYmTWF0aC5hYnMoYTQtYjQpPD1nbE1hdHJpeC5FUFNJTE9OKk1hdGgubWF4KDEsTWF0aC5hYnMoYTQpLE1hdGguYWJzKGI0KSkmJk1hdGguYWJzKGE1LWI1KTw9Z2xNYXRyaXguRVBTSUxPTipNYXRoLm1heCgxLE1hdGguYWJzKGE1KSxNYXRoLmFicyhiNSkpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGV4cG9ydHMuc3ViPWV4cG9ydHMubXVsPXZvaWQgMCxleHBvcnRzLmNyZWF0ZT1jcmVhdGUsZXhwb3J0cy5jbG9uZT1jbG9uZSxleHBvcnRzLmNvcHk9Y29weSxleHBvcnRzLmlkZW50aXR5PWlkZW50aXR5LGV4cG9ydHMuZnJvbVZhbHVlcz1mcm9tVmFsdWVzLGV4cG9ydHMuc2V0PXNldCxleHBvcnRzLmludmVydD1pbnZlcnQsZXhwb3J0cy5kZXRlcm1pbmFudD1kZXRlcm1pbmFudCxleHBvcnRzLm11bHRpcGx5PW11bHRpcGx5LGV4cG9ydHMucm90YXRlPXJvdGF0ZSxleHBvcnRzLnNjYWxlPXNjYWxlLGV4cG9ydHMudHJhbnNsYXRlPXRyYW5zbGF0ZSxleHBvcnRzLmZyb21Sb3RhdGlvbj1mcm9tUm90YXRpb24sZXhwb3J0cy5mcm9tU2NhbGluZz1mcm9tU2NhbGluZyxleHBvcnRzLmZyb21UcmFuc2xhdGlvbj1mcm9tVHJhbnNsYXRpb24sZXhwb3J0cy5zdHI9c3RyLGV4cG9ydHMuZnJvYj1mcm9iLGV4cG9ydHMuYWRkPWFkZCxleHBvcnRzLnN1YnRyYWN0PXN1YnRyYWN0LGV4cG9ydHMubXVsdGlwbHlTY2FsYXI9bXVsdGlwbHlTY2FsYXIsZXhwb3J0cy5tdWx0aXBseVNjYWxhckFuZEFkZD1tdWx0aXBseVNjYWxhckFuZEFkZCxleHBvcnRzLmV4YWN0RXF1YWxzPWV4YWN0RXF1YWxzLGV4cG9ydHMuZXF1YWxzPWVxdWFsczt2YXIgX2NvbW1vbj1fX3dlYnBhY2tfcmVxdWlyZV9fKDMpLGdsTWF0cml4PWZ1bmN0aW9uKG9iail7aWYob2JqJiZvYmouX19lc01vZHVsZSlyZXR1cm4gb2JqO3ZhciBuZXdPYmo9e307aWYobnVsbCE9b2JqKWZvcih2YXIga2V5IGluIG9iailPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLGtleSkmJihuZXdPYmpba2V5XT1vYmpba2V5XSk7cmV0dXJuIG5ld09iai5kZWZhdWx0PW9iaixuZXdPYmp9KF9jb21tb24pO2V4cG9ydHMubXVsPW11bHRpcGx5LGV4cG9ydHMuc3ViPXN1YnRyYWN0fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBjcmVhdGUoKXt2YXIgb3V0PW5ldyBnbE1hdHJpeC5BUlJBWV9UWVBFKDE2KTtyZXR1cm4gb3V0WzBdPTEsb3V0WzFdPTAsb3V0WzJdPTAsb3V0WzNdPTAsb3V0WzRdPTAsb3V0WzVdPTEsb3V0WzZdPTAsb3V0WzddPTAsb3V0WzhdPTAsb3V0WzldPTAsb3V0WzEwXT0xLG91dFsxMV09MCxvdXRbMTJdPTAsb3V0WzEzXT0wLG91dFsxNF09MCxvdXRbMTVdPTEsb3V0fWZ1bmN0aW9uIGNsb25lKGEpe3ZhciBvdXQ9bmV3IGdsTWF0cml4LkFSUkFZX1RZUEUoMTYpO3JldHVybiBvdXRbMF09YVswXSxvdXRbMV09YVsxXSxvdXRbMl09YVsyXSxvdXRbM109YVszXSxvdXRbNF09YVs0XSxvdXRbNV09YVs1XSxvdXRbNl09YVs2XSxvdXRbN109YVs3XSxvdXRbOF09YVs4XSxvdXRbOV09YVs5XSxvdXRbMTBdPWFbMTBdLG91dFsxMV09YVsxMV0sb3V0WzEyXT1hWzEyXSxvdXRbMTNdPWFbMTNdLG91dFsxNF09YVsxNF0sb3V0WzE1XT1hWzE1XSxvdXR9ZnVuY3Rpb24gY29weShvdXQsYSl7cmV0dXJuIG91dFswXT1hWzBdLG91dFsxXT1hWzFdLG91dFsyXT1hWzJdLG91dFszXT1hWzNdLG91dFs0XT1hWzRdLG91dFs1XT1hWzVdLG91dFs2XT1hWzZdLG91dFs3XT1hWzddLG91dFs4XT1hWzhdLG91dFs5XT1hWzldLG91dFsxMF09YVsxMF0sb3V0WzExXT1hWzExXSxvdXRbMTJdPWFbMTJdLG91dFsxM109YVsxM10sb3V0WzE0XT1hWzE0XSxvdXRbMTVdPWFbMTVdLG91dH1mdW5jdGlvbiBmcm9tVmFsdWVzKG0wMCxtMDEsbTAyLG0wMyxtMTAsbTExLG0xMixtMTMsbTIwLG0yMSxtMjIsbTIzLG0zMCxtMzEsbTMyLG0zMyl7dmFyIG91dD1uZXcgZ2xNYXRyaXguQVJSQVlfVFlQRSgxNik7cmV0dXJuIG91dFswXT1tMDAsb3V0WzFdPW0wMSxvdXRbMl09bTAyLG91dFszXT1tMDMsb3V0WzRdPW0xMCxvdXRbNV09bTExLG91dFs2XT1tMTIsb3V0WzddPW0xMyxvdXRbOF09bTIwLG91dFs5XT1tMjEsb3V0WzEwXT1tMjIsb3V0WzExXT1tMjMsb3V0WzEyXT1tMzAsb3V0WzEzXT1tMzEsb3V0WzE0XT1tMzIsb3V0WzE1XT1tMzMsb3V0fWZ1bmN0aW9uIHNldChvdXQsbTAwLG0wMSxtMDIsbTAzLG0xMCxtMTEsbTEyLG0xMyxtMjAsbTIxLG0yMixtMjMsbTMwLG0zMSxtMzIsbTMzKXtyZXR1cm4gb3V0WzBdPW0wMCxvdXRbMV09bTAxLG91dFsyXT1tMDIsb3V0WzNdPW0wMyxvdXRbNF09bTEwLG91dFs1XT1tMTEsb3V0WzZdPW0xMixvdXRbN109bTEzLG91dFs4XT1tMjAsb3V0WzldPW0yMSxvdXRbMTBdPW0yMixvdXRbMTFdPW0yMyxvdXRbMTJdPW0zMCxvdXRbMTNdPW0zMSxvdXRbMTRdPW0zMixvdXRbMTVdPW0zMyxvdXR9ZnVuY3Rpb24gaWRlbnRpdHkob3V0KXtyZXR1cm4gb3V0WzBdPTEsb3V0WzFdPTAsb3V0WzJdPTAsb3V0WzNdPTAsb3V0WzRdPTAsb3V0WzVdPTEsb3V0WzZdPTAsb3V0WzddPTAsb3V0WzhdPTAsb3V0WzldPTAsb3V0WzEwXT0xLG91dFsxMV09MCxvdXRbMTJdPTAsb3V0WzEzXT0wLG91dFsxNF09MCxvdXRbMTVdPTEsb3V0fWZ1bmN0aW9uIHRyYW5zcG9zZShvdXQsYSl7aWYob3V0PT09YSl7dmFyIGEwMT1hWzFdLGEwMj1hWzJdLGEwMz1hWzNdLGExMj1hWzZdLGExMz1hWzddLGEyMz1hWzExXTtvdXRbMV09YVs0XSxvdXRbMl09YVs4XSxvdXRbM109YVsxMl0sb3V0WzRdPWEwMSxvdXRbNl09YVs5XSxvdXRbN109YVsxM10sb3V0WzhdPWEwMixvdXRbOV09YTEyLG91dFsxMV09YVsxNF0sb3V0WzEyXT1hMDMsb3V0WzEzXT1hMTMsb3V0WzE0XT1hMjN9ZWxzZSBvdXRbMF09YVswXSxvdXRbMV09YVs0XSxvdXRbMl09YVs4XSxvdXRbM109YVsxMl0sb3V0WzRdPWFbMV0sb3V0WzVdPWFbNV0sb3V0WzZdPWFbOV0sb3V0WzddPWFbMTNdLG91dFs4XT1hWzJdLG91dFs5XT1hWzZdLG91dFsxMF09YVsxMF0sb3V0WzExXT1hWzE0XSxvdXRbMTJdPWFbM10sb3V0WzEzXT1hWzddLG91dFsxNF09YVsxMV0sb3V0WzE1XT1hWzE1XTtyZXR1cm4gb3V0fWZ1bmN0aW9uIGludmVydChvdXQsYSl7dmFyIGEwMD1hWzBdLGEwMT1hWzFdLGEwMj1hWzJdLGEwMz1hWzNdLGExMD1hWzRdLGExMT1hWzVdLGExMj1hWzZdLGExMz1hWzddLGEyMD1hWzhdLGEyMT1hWzldLGEyMj1hWzEwXSxhMjM9YVsxMV0sYTMwPWFbMTJdLGEzMT1hWzEzXSxhMzI9YVsxNF0sYTMzPWFbMTVdLGIwMD1hMDAqYTExLWEwMSphMTAsYjAxPWEwMCphMTItYTAyKmExMCxiMDI9YTAwKmExMy1hMDMqYTEwLGIwMz1hMDEqYTEyLWEwMiphMTEsYjA0PWEwMSphMTMtYTAzKmExMSxiMDU9YTAyKmExMy1hMDMqYTEyLGIwNj1hMjAqYTMxLWEyMSphMzAsYjA3PWEyMCphMzItYTIyKmEzMCxiMDg9YTIwKmEzMy1hMjMqYTMwLGIwOT1hMjEqYTMyLWEyMiphMzEsYjEwPWEyMSphMzMtYTIzKmEzMSxiMTE9YTIyKmEzMy1hMjMqYTMyLGRldD1iMDAqYjExLWIwMSpiMTArYjAyKmIwOStiMDMqYjA4LWIwNCpiMDcrYjA1KmIwNjtyZXR1cm4gZGV0PyhkZXQ9MS9kZXQsb3V0WzBdPShhMTEqYjExLWExMipiMTArYTEzKmIwOSkqZGV0LG91dFsxXT0oYTAyKmIxMC1hMDEqYjExLWEwMypiMDkpKmRldCxvdXRbMl09KGEzMSpiMDUtYTMyKmIwNCthMzMqYjAzKSpkZXQsb3V0WzNdPShhMjIqYjA0LWEyMSpiMDUtYTIzKmIwMykqZGV0LG91dFs0XT0oYTEyKmIwOC1hMTAqYjExLWExMypiMDcpKmRldCxvdXRbNV09KGEwMCpiMTEtYTAyKmIwOCthMDMqYjA3KSpkZXQsb3V0WzZdPShhMzIqYjAyLWEzMCpiMDUtYTMzKmIwMSkqZGV0LG91dFs3XT0oYTIwKmIwNS1hMjIqYjAyK2EyMypiMDEpKmRldCxvdXRbOF09KGExMCpiMTAtYTExKmIwOCthMTMqYjA2KSpkZXQsb3V0WzldPShhMDEqYjA4LWEwMCpiMTAtYTAzKmIwNikqZGV0LG91dFsxMF09KGEzMCpiMDQtYTMxKmIwMithMzMqYjAwKSpkZXQsb3V0WzExXT0oYTIxKmIwMi1hMjAqYjA0LWEyMypiMDApKmRldCxvdXRbMTJdPShhMTEqYjA3LWExMCpiMDktYTEyKmIwNikqZGV0LG91dFsxM109KGEwMCpiMDktYTAxKmIwNythMDIqYjA2KSpkZXQsb3V0WzE0XT0oYTMxKmIwMS1hMzAqYjAzLWEzMipiMDApKmRldCxvdXRbMTVdPShhMjAqYjAzLWEyMSpiMDErYTIyKmIwMCkqZGV0LG91dCk6bnVsbH1mdW5jdGlvbiBhZGpvaW50KG91dCxhKXt2YXIgYTAwPWFbMF0sYTAxPWFbMV0sYTAyPWFbMl0sYTAzPWFbM10sYTEwPWFbNF0sYTExPWFbNV0sYTEyPWFbNl0sYTEzPWFbN10sYTIwPWFbOF0sYTIxPWFbOV0sYTIyPWFbMTBdLGEyMz1hWzExXSxhMzA9YVsxMl0sYTMxPWFbMTNdLGEzMj1hWzE0XSxhMzM9YVsxNV07cmV0dXJuIG91dFswXT1hMTEqKGEyMiphMzMtYTIzKmEzMiktYTIxKihhMTIqYTMzLWExMyphMzIpK2EzMSooYTEyKmEyMy1hMTMqYTIyKSxvdXRbMV09LShhMDEqKGEyMiphMzMtYTIzKmEzMiktYTIxKihhMDIqYTMzLWEwMyphMzIpK2EzMSooYTAyKmEyMy1hMDMqYTIyKSksb3V0WzJdPWEwMSooYTEyKmEzMy1hMTMqYTMyKS1hMTEqKGEwMiphMzMtYTAzKmEzMikrYTMxKihhMDIqYTEzLWEwMyphMTIpLG91dFszXT0tKGEwMSooYTEyKmEyMy1hMTMqYTIyKS1hMTEqKGEwMiphMjMtYTAzKmEyMikrYTIxKihhMDIqYTEzLWEwMyphMTIpKSxvdXRbNF09LShhMTAqKGEyMiphMzMtYTIzKmEzMiktYTIwKihhMTIqYTMzLWExMyphMzIpK2EzMCooYTEyKmEyMy1hMTMqYTIyKSksb3V0WzVdPWEwMCooYTIyKmEzMy1hMjMqYTMyKS1hMjAqKGEwMiphMzMtYTAzKmEzMikrYTMwKihhMDIqYTIzLWEwMyphMjIpLG91dFs2XT0tKGEwMCooYTEyKmEzMy1hMTMqYTMyKS1hMTAqKGEwMiphMzMtYTAzKmEzMikrYTMwKihhMDIqYTEzLWEwMyphMTIpKSxvdXRbN109YTAwKihhMTIqYTIzLWExMyphMjIpLWExMCooYTAyKmEyMy1hMDMqYTIyKSthMjAqKGEwMiphMTMtYTAzKmExMiksb3V0WzhdPWExMCooYTIxKmEzMy1hMjMqYTMxKS1hMjAqKGExMSphMzMtYTEzKmEzMSkrYTMwKihhMTEqYTIzLWExMyphMjEpLG91dFs5XT0tKGEwMCooYTIxKmEzMy1hMjMqYTMxKS1hMjAqKGEwMSphMzMtYTAzKmEzMSkrYTMwKihhMDEqYTIzLWEwMyphMjEpKSxvdXRbMTBdPWEwMCooYTExKmEzMy1hMTMqYTMxKS1hMTAqKGEwMSphMzMtYTAzKmEzMSkrYTMwKihhMDEqYTEzLWEwMyphMTEpLG91dFsxMV09LShhMDAqKGExMSphMjMtYTEzKmEyMSktYTEwKihhMDEqYTIzLWEwMyphMjEpK2EyMCooYTAxKmExMy1hMDMqYTExKSksb3V0WzEyXT0tKGExMCooYTIxKmEzMi1hMjIqYTMxKS1hMjAqKGExMSphMzItYTEyKmEzMSkrYTMwKihhMTEqYTIyLWExMiphMjEpKSxvdXRbMTNdPWEwMCooYTIxKmEzMi1hMjIqYTMxKS1hMjAqKGEwMSphMzItYTAyKmEzMSkrYTMwKihhMDEqYTIyLWEwMiphMjEpLG91dFsxNF09LShhMDAqKGExMSphMzItYTEyKmEzMSktYTEwKihhMDEqYTMyLWEwMiphMzEpK2EzMCooYTAxKmExMi1hMDIqYTExKSksb3V0WzE1XT1hMDAqKGExMSphMjItYTEyKmEyMSktYTEwKihhMDEqYTIyLWEwMiphMjEpK2EyMCooYTAxKmExMi1hMDIqYTExKSxvdXR9ZnVuY3Rpb24gZGV0ZXJtaW5hbnQoYSl7dmFyIGEwMD1hWzBdLGEwMT1hWzFdLGEwMj1hWzJdLGEwMz1hWzNdLGExMD1hWzRdLGExMT1hWzVdLGExMj1hWzZdLGExMz1hWzddLGEyMD1hWzhdLGEyMT1hWzldLGEyMj1hWzEwXSxhMjM9YVsxMV0sYTMwPWFbMTJdLGEzMT1hWzEzXSxhMzI9YVsxNF0sYTMzPWFbMTVdO3JldHVybihhMDAqYTExLWEwMSphMTApKihhMjIqYTMzLWEyMyphMzIpLShhMDAqYTEyLWEwMiphMTApKihhMjEqYTMzLWEyMyphMzEpKyhhMDAqYTEzLWEwMyphMTApKihhMjEqYTMyLWEyMiphMzEpKyhhMDEqYTEyLWEwMiphMTEpKihhMjAqYTMzLWEyMyphMzApLShhMDEqYTEzLWEwMyphMTEpKihhMjAqYTMyLWEyMiphMzApKyhhMDIqYTEzLWEwMyphMTIpKihhMjAqYTMxLWEyMSphMzApfWZ1bmN0aW9uIG11bHRpcGx5KG91dCxhLGIpe3ZhciBhMDA9YVswXSxhMDE9YVsxXSxhMDI9YVsyXSxhMDM9YVszXSxhMTA9YVs0XSxhMTE9YVs1XSxhMTI9YVs2XSxhMTM9YVs3XSxhMjA9YVs4XSxhMjE9YVs5XSxhMjI9YVsxMF0sYTIzPWFbMTFdLGEzMD1hWzEyXSxhMzE9YVsxM10sYTMyPWFbMTRdLGEzMz1hWzE1XSxiMD1iWzBdLGIxPWJbMV0sYjI9YlsyXSxiMz1iWzNdO3JldHVybiBvdXRbMF09YjAqYTAwK2IxKmExMCtiMiphMjArYjMqYTMwLG91dFsxXT1iMCphMDErYjEqYTExK2IyKmEyMStiMyphMzEsb3V0WzJdPWIwKmEwMitiMSphMTIrYjIqYTIyK2IzKmEzMixvdXRbM109YjAqYTAzK2IxKmExMytiMiphMjMrYjMqYTMzLGIwPWJbNF0sYjE9Yls1XSxiMj1iWzZdLGIzPWJbN10sb3V0WzRdPWIwKmEwMCtiMSphMTArYjIqYTIwK2IzKmEzMCxvdXRbNV09YjAqYTAxK2IxKmExMStiMiphMjErYjMqYTMxLG91dFs2XT1iMCphMDIrYjEqYTEyK2IyKmEyMitiMyphMzIsb3V0WzddPWIwKmEwMytiMSphMTMrYjIqYTIzK2IzKmEzMyxiMD1iWzhdLGIxPWJbOV0sYjI9YlsxMF0sYjM9YlsxMV0sb3V0WzhdPWIwKmEwMCtiMSphMTArYjIqYTIwK2IzKmEzMCxvdXRbOV09YjAqYTAxK2IxKmExMStiMiphMjErYjMqYTMxLG91dFsxMF09YjAqYTAyK2IxKmExMitiMiphMjIrYjMqYTMyLG91dFsxMV09YjAqYTAzK2IxKmExMytiMiphMjMrYjMqYTMzLGIwPWJbMTJdLGIxPWJbMTNdLGIyPWJbMTRdLGIzPWJbMTVdLG91dFsxMl09YjAqYTAwK2IxKmExMCtiMiphMjArYjMqYTMwLG91dFsxM109YjAqYTAxK2IxKmExMStiMiphMjErYjMqYTMxLG91dFsxNF09YjAqYTAyK2IxKmExMitiMiphMjIrYjMqYTMyLG91dFsxNV09YjAqYTAzK2IxKmExMytiMiphMjMrYjMqYTMzLG91dH1mdW5jdGlvbiB0cmFuc2xhdGUob3V0LGEsdil7dmFyIHg9dlswXSx5PXZbMV0sej12WzJdLGEwMD12b2lkIDAsYTAxPXZvaWQgMCxhMDI9dm9pZCAwLGEwMz12b2lkIDAsYTEwPXZvaWQgMCxhMTE9dm9pZCAwLGExMj12b2lkIDAsYTEzPXZvaWQgMCxhMjA9dm9pZCAwLGEyMT12b2lkIDAsYTIyPXZvaWQgMCxhMjM9dm9pZCAwO3JldHVybiBhPT09b3V0PyhvdXRbMTJdPWFbMF0qeCthWzRdKnkrYVs4XSp6K2FbMTJdLG91dFsxM109YVsxXSp4K2FbNV0qeSthWzldKnorYVsxM10sb3V0WzE0XT1hWzJdKngrYVs2XSp5K2FbMTBdKnorYVsxNF0sb3V0WzE1XT1hWzNdKngrYVs3XSp5K2FbMTFdKnorYVsxNV0pOihhMDA9YVswXSxhMDE9YVsxXSxhMDI9YVsyXSxhMDM9YVszXSxhMTA9YVs0XSxhMTE9YVs1XSxhMTI9YVs2XSxhMTM9YVs3XSxhMjA9YVs4XSxhMjE9YVs5XSxhMjI9YVsxMF0sYTIzPWFbMTFdLG91dFswXT1hMDAsb3V0WzFdPWEwMSxvdXRbMl09YTAyLG91dFszXT1hMDMsb3V0WzRdPWExMCxvdXRbNV09YTExLG91dFs2XT1hMTIsb3V0WzddPWExMyxvdXRbOF09YTIwLG91dFs5XT1hMjEsb3V0WzEwXT1hMjIsb3V0WzExXT1hMjMsb3V0WzEyXT1hMDAqeCthMTAqeSthMjAqeithWzEyXSxvdXRbMTNdPWEwMSp4K2ExMSp5K2EyMSp6K2FbMTNdLG91dFsxNF09YTAyKngrYTEyKnkrYTIyKnorYVsxNF0sb3V0WzE1XT1hMDMqeCthMTMqeSthMjMqeithWzE1XSksb3V0fWZ1bmN0aW9uIHNjYWxlKG91dCxhLHYpe3ZhciB4PXZbMF0seT12WzFdLHo9dlsyXTtyZXR1cm4gb3V0WzBdPWFbMF0qeCxvdXRbMV09YVsxXSp4LG91dFsyXT1hWzJdKngsb3V0WzNdPWFbM10qeCxvdXRbNF09YVs0XSp5LG91dFs1XT1hWzVdKnksb3V0WzZdPWFbNl0qeSxvdXRbN109YVs3XSp5LG91dFs4XT1hWzhdKnosb3V0WzldPWFbOV0qeixvdXRbMTBdPWFbMTBdKnosb3V0WzExXT1hWzExXSp6LG91dFsxMl09YVsxMl0sb3V0WzEzXT1hWzEzXSxvdXRbMTRdPWFbMTRdLG91dFsxNV09YVsxNV0sb3V0fWZ1bmN0aW9uIHJvdGF0ZShvdXQsYSxyYWQsYXhpcyl7dmFyIHg9YXhpc1swXSx5PWF4aXNbMV0sej1heGlzWzJdLGxlbj1NYXRoLnNxcnQoeCp4K3kqeSt6KnopLHM9dm9pZCAwLGM9dm9pZCAwLHQ9dm9pZCAwLGEwMD12b2lkIDAsYTAxPXZvaWQgMCxhMDI9dm9pZCAwLGEwMz12b2lkIDAsYTEwPXZvaWQgMCxhMTE9dm9pZCAwLGExMj12b2lkIDAsYTEzPXZvaWQgMCxhMjA9dm9pZCAwLGEyMT12b2lkIDAsYTIyPXZvaWQgMCxhMjM9dm9pZCAwLGIwMD12b2lkIDAsYjAxPXZvaWQgMCxiMDI9dm9pZCAwLGIxMD12b2lkIDAsYjExPXZvaWQgMCxiMTI9dm9pZCAwLGIyMD12b2lkIDAsYjIxPXZvaWQgMCxiMjI9dm9pZCAwO3JldHVybiBNYXRoLmFicyhsZW4pPGdsTWF0cml4LkVQU0lMT04/bnVsbDoobGVuPTEvbGVuLHgqPWxlbix5Kj1sZW4seio9bGVuLHM9TWF0aC5zaW4ocmFkKSxjPU1hdGguY29zKHJhZCksdD0xLWMsYTAwPWFbMF0sYTAxPWFbMV0sYTAyPWFbMl0sYTAzPWFbM10sYTEwPWFbNF0sYTExPWFbNV0sYTEyPWFbNl0sYTEzPWFbN10sYTIwPWFbOF0sYTIxPWFbOV0sYTIyPWFbMTBdLGEyMz1hWzExXSxiMDA9eCp4KnQrYyxiMDE9eSp4KnQreipzLGIwMj16KngqdC15KnMsYjEwPXgqeSp0LXoqcyxiMTE9eSp5KnQrYyxiMTI9eip5KnQreCpzLGIyMD14KnoqdCt5KnMsYjIxPXkqeip0LXgqcyxiMjI9eip6KnQrYyxvdXRbMF09YTAwKmIwMCthMTAqYjAxK2EyMCpiMDIsb3V0WzFdPWEwMSpiMDArYTExKmIwMSthMjEqYjAyLG91dFsyXT1hMDIqYjAwK2ExMipiMDErYTIyKmIwMixvdXRbM109YTAzKmIwMCthMTMqYjAxK2EyMypiMDIsb3V0WzRdPWEwMCpiMTArYTEwKmIxMSthMjAqYjEyLG91dFs1XT1hMDEqYjEwK2ExMSpiMTErYTIxKmIxMixvdXRbNl09YTAyKmIxMCthMTIqYjExK2EyMipiMTIsb3V0WzddPWEwMypiMTArYTEzKmIxMSthMjMqYjEyLG91dFs4XT1hMDAqYjIwK2ExMCpiMjErYTIwKmIyMixvdXRbOV09YTAxKmIyMCthMTEqYjIxK2EyMSpiMjIsb3V0WzEwXT1hMDIqYjIwK2ExMipiMjErYTIyKmIyMixvdXRbMTFdPWEwMypiMjArYTEzKmIyMSthMjMqYjIyLGEhPT1vdXQmJihvdXRbMTJdPWFbMTJdLG91dFsxM109YVsxM10sb3V0WzE0XT1hWzE0XSxvdXRbMTVdPWFbMTVdKSxvdXQpfWZ1bmN0aW9uIHJvdGF0ZVgob3V0LGEscmFkKXt2YXIgcz1NYXRoLnNpbihyYWQpLGM9TWF0aC5jb3MocmFkKSxhMTA9YVs0XSxhMTE9YVs1XSxhMTI9YVs2XSxhMTM9YVs3XSxhMjA9YVs4XSxhMjE9YVs5XSxhMjI9YVsxMF0sYTIzPWFbMTFdO3JldHVybiBhIT09b3V0JiYob3V0WzBdPWFbMF0sb3V0WzFdPWFbMV0sb3V0WzJdPWFbMl0sb3V0WzNdPWFbM10sb3V0WzEyXT1hWzEyXSxvdXRbMTNdPWFbMTNdLG91dFsxNF09YVsxNF0sb3V0WzE1XT1hWzE1XSksb3V0WzRdPWExMCpjK2EyMCpzLG91dFs1XT1hMTEqYythMjEqcyxvdXRbNl09YTEyKmMrYTIyKnMsb3V0WzddPWExMypjK2EyMypzLG91dFs4XT1hMjAqYy1hMTAqcyxvdXRbOV09YTIxKmMtYTExKnMsb3V0WzEwXT1hMjIqYy1hMTIqcyxvdXRbMTFdPWEyMypjLWExMypzLG91dH1mdW5jdGlvbiByb3RhdGVZKG91dCxhLHJhZCl7dmFyIHM9TWF0aC5zaW4ocmFkKSxjPU1hdGguY29zKHJhZCksYTAwPWFbMF0sYTAxPWFbMV0sYTAyPWFbMl0sYTAzPWFbM10sYTIwPWFbOF0sYTIxPWFbOV0sYTIyPWFbMTBdLGEyMz1hWzExXTtyZXR1cm4gYSE9PW91dCYmKG91dFs0XT1hWzRdLG91dFs1XT1hWzVdLG91dFs2XT1hWzZdLG91dFs3XT1hWzddLG91dFsxMl09YVsxMl0sb3V0WzEzXT1hWzEzXSxvdXRbMTRdPWFbMTRdLG91dFsxNV09YVsxNV0pLG91dFswXT1hMDAqYy1hMjAqcyxvdXRbMV09YTAxKmMtYTIxKnMsb3V0WzJdPWEwMipjLWEyMipzLG91dFszXT1hMDMqYy1hMjMqcyxvdXRbOF09YTAwKnMrYTIwKmMsb3V0WzldPWEwMSpzK2EyMSpjLG91dFsxMF09YTAyKnMrYTIyKmMsb3V0WzExXT1hMDMqcythMjMqYyxvdXR9ZnVuY3Rpb24gcm90YXRlWihvdXQsYSxyYWQpe3ZhciBzPU1hdGguc2luKHJhZCksYz1NYXRoLmNvcyhyYWQpLGEwMD1hWzBdLGEwMT1hWzFdLGEwMj1hWzJdLGEwMz1hWzNdLGExMD1hWzRdLGExMT1hWzVdLGExMj1hWzZdLGExMz1hWzddO3JldHVybiBhIT09b3V0JiYob3V0WzhdPWFbOF0sb3V0WzldPWFbOV0sb3V0WzEwXT1hWzEwXSxvdXRbMTFdPWFbMTFdLG91dFsxMl09YVsxMl0sb3V0WzEzXT1hWzEzXSxvdXRbMTRdPWFbMTRdLG91dFsxNV09YVsxNV0pLG91dFswXT1hMDAqYythMTAqcyxvdXRbMV09YTAxKmMrYTExKnMsb3V0WzJdPWEwMipjK2ExMipzLG91dFszXT1hMDMqYythMTMqcyxvdXRbNF09YTEwKmMtYTAwKnMsb3V0WzVdPWExMSpjLWEwMSpzLG91dFs2XT1hMTIqYy1hMDIqcyxvdXRbN109YTEzKmMtYTAzKnMsb3V0fWZ1bmN0aW9uIGZyb21UcmFuc2xhdGlvbihvdXQsdil7cmV0dXJuIG91dFswXT0xLG91dFsxXT0wLG91dFsyXT0wLG91dFszXT0wLG91dFs0XT0wLG91dFs1XT0xLG91dFs2XT0wLG91dFs3XT0wLG91dFs4XT0wLG91dFs5XT0wLG91dFsxMF09MSxvdXRbMTFdPTAsb3V0WzEyXT12WzBdLG91dFsxM109dlsxXSxvdXRbMTRdPXZbMl0sb3V0WzE1XT0xLG91dH1mdW5jdGlvbiBmcm9tU2NhbGluZyhvdXQsdil7cmV0dXJuIG91dFswXT12WzBdLG91dFsxXT0wLG91dFsyXT0wLG91dFszXT0wLG91dFs0XT0wLG91dFs1XT12WzFdLG91dFs2XT0wLG91dFs3XT0wLG91dFs4XT0wLG91dFs5XT0wLG91dFsxMF09dlsyXSxvdXRbMTFdPTAsb3V0WzEyXT0wLG91dFsxM109MCxvdXRbMTRdPTAsb3V0WzE1XT0xLG91dH1mdW5jdGlvbiBmcm9tUm90YXRpb24ob3V0LHJhZCxheGlzKXt2YXIgeD1heGlzWzBdLHk9YXhpc1sxXSx6PWF4aXNbMl0sbGVuPU1hdGguc3FydCh4KngreSp5K3oqeikscz12b2lkIDAsYz12b2lkIDAsdD12b2lkIDA7cmV0dXJuIE1hdGguYWJzKGxlbik8Z2xNYXRyaXguRVBTSUxPTj9udWxsOihsZW49MS9sZW4seCo9bGVuLHkqPWxlbix6Kj1sZW4scz1NYXRoLnNpbihyYWQpLGM9TWF0aC5jb3MocmFkKSx0PTEtYyxvdXRbMF09eCp4KnQrYyxvdXRbMV09eSp4KnQreipzLG91dFsyXT16KngqdC15KnMsb3V0WzNdPTAsb3V0WzRdPXgqeSp0LXoqcyxvdXRbNV09eSp5KnQrYyxvdXRbNl09eip5KnQreCpzLG91dFs3XT0wLG91dFs4XT14KnoqdCt5KnMsb3V0WzldPXkqeip0LXgqcyxvdXRbMTBdPXoqeip0K2Msb3V0WzExXT0wLG91dFsxMl09MCxvdXRbMTNdPTAsb3V0WzE0XT0wLG91dFsxNV09MSxvdXQpfWZ1bmN0aW9uIGZyb21YUm90YXRpb24ob3V0LHJhZCl7dmFyIHM9TWF0aC5zaW4ocmFkKSxjPU1hdGguY29zKHJhZCk7cmV0dXJuIG91dFswXT0xLG91dFsxXT0wLG91dFsyXT0wLG91dFszXT0wLG91dFs0XT0wLG91dFs1XT1jLG91dFs2XT1zLG91dFs3XT0wLG91dFs4XT0wLG91dFs5XT0tcyxvdXRbMTBdPWMsb3V0WzExXT0wLG91dFsxMl09MCxvdXRbMTNdPTAsb3V0WzE0XT0wLG91dFsxNV09MSxvdXR9ZnVuY3Rpb24gZnJvbVlSb3RhdGlvbihvdXQscmFkKXt2YXIgcz1NYXRoLnNpbihyYWQpLGM9TWF0aC5jb3MocmFkKTtyZXR1cm4gb3V0WzBdPWMsb3V0WzFdPTAsb3V0WzJdPS1zLG91dFszXT0wLG91dFs0XT0wLG91dFs1XT0xLG91dFs2XT0wLG91dFs3XT0wLG91dFs4XT1zLG91dFs5XT0wLG91dFsxMF09YyxvdXRbMTFdPTAsb3V0WzEyXT0wLG91dFsxM109MCxvdXRbMTRdPTAsb3V0WzE1XT0xLG91dH1mdW5jdGlvbiBmcm9tWlJvdGF0aW9uKG91dCxyYWQpe3ZhciBzPU1hdGguc2luKHJhZCksYz1NYXRoLmNvcyhyYWQpO3JldHVybiBvdXRbMF09YyxvdXRbMV09cyxvdXRbMl09MCxvdXRbM109MCxvdXRbNF09LXMsb3V0WzVdPWMsb3V0WzZdPTAsb3V0WzddPTAsb3V0WzhdPTAsb3V0WzldPTAsb3V0WzEwXT0xLG91dFsxMV09MCxvdXRbMTJdPTAsb3V0WzEzXT0wLG91dFsxNF09MCxvdXRbMTVdPTEsb3V0fWZ1bmN0aW9uIGZyb21Sb3RhdGlvblRyYW5zbGF0aW9uKG91dCxxLHYpe3ZhciB4PXFbMF0seT1xWzFdLHo9cVsyXSx3PXFbM10seDI9eCt4LHkyPXkreSx6Mj16K3oseHg9eCp4Mix4eT14KnkyLHh6PXgqejIseXk9eSp5Mix5ej15KnoyLHp6PXoqejIsd3g9dyp4Mix3eT13KnkyLHd6PXcqejI7cmV0dXJuIG91dFswXT0xLSh5eSt6eiksb3V0WzFdPXh5K3d6LG91dFsyXT14ei13eSxvdXRbM109MCxvdXRbNF09eHktd3osb3V0WzVdPTEtKHh4K3p6KSxvdXRbNl09eXord3gsb3V0WzddPTAsb3V0WzhdPXh6K3d5LG91dFs5XT15ei13eCxvdXRbMTBdPTEtKHh4K3l5KSxvdXRbMTFdPTAsb3V0WzEyXT12WzBdLG91dFsxM109dlsxXSxvdXRbMTRdPXZbMl0sb3V0WzE1XT0xLG91dH1mdW5jdGlvbiBnZXRUcmFuc2xhdGlvbihvdXQsbWF0KXtyZXR1cm4gb3V0WzBdPW1hdFsxMl0sb3V0WzFdPW1hdFsxM10sb3V0WzJdPW1hdFsxNF0sb3V0fWZ1bmN0aW9uIGdldFNjYWxpbmcob3V0LG1hdCl7dmFyIG0xMT1tYXRbMF0sbTEyPW1hdFsxXSxtMTM9bWF0WzJdLG0yMT1tYXRbNF0sbTIyPW1hdFs1XSxtMjM9bWF0WzZdLG0zMT1tYXRbOF0sbTMyPW1hdFs5XSxtMzM9bWF0WzEwXTtyZXR1cm4gb3V0WzBdPU1hdGguc3FydChtMTEqbTExK20xMiptMTIrbTEzKm0xMyksb3V0WzFdPU1hdGguc3FydChtMjEqbTIxK20yMiptMjIrbTIzKm0yMyksb3V0WzJdPU1hdGguc3FydChtMzEqbTMxK20zMiptMzIrbTMzKm0zMyksb3V0fWZ1bmN0aW9uIGdldFJvdGF0aW9uKG91dCxtYXQpe3ZhciB0cmFjZT1tYXRbMF0rbWF0WzVdK21hdFsxMF0sUz0wO3JldHVybiB0cmFjZT4wPyhTPTIqTWF0aC5zcXJ0KHRyYWNlKzEpLG91dFszXT0uMjUqUyxvdXRbMF09KG1hdFs2XS1tYXRbOV0pL1Msb3V0WzFdPShtYXRbOF0tbWF0WzJdKS9TLG91dFsyXT0obWF0WzFdLW1hdFs0XSkvUyk6bWF0WzBdPm1hdFs1XSZtYXRbMF0+bWF0WzEwXT8oUz0yKk1hdGguc3FydCgxK21hdFswXS1tYXRbNV0tbWF0WzEwXSksb3V0WzNdPShtYXRbNl0tbWF0WzldKS9TLG91dFswXT0uMjUqUyxvdXRbMV09KG1hdFsxXSttYXRbNF0pL1Msb3V0WzJdPShtYXRbOF0rbWF0WzJdKS9TKTptYXRbNV0+bWF0WzEwXT8oUz0yKk1hdGguc3FydCgxK21hdFs1XS1tYXRbMF0tbWF0WzEwXSksb3V0WzNdPShtYXRbOF0tbWF0WzJdKS9TLG91dFswXT0obWF0WzFdK21hdFs0XSkvUyxvdXRbMV09LjI1KlMsb3V0WzJdPShtYXRbNl0rbWF0WzldKS9TKTooUz0yKk1hdGguc3FydCgxK21hdFsxMF0tbWF0WzBdLW1hdFs1XSksb3V0WzNdPShtYXRbMV0tbWF0WzRdKS9TLG91dFswXT0obWF0WzhdK21hdFsyXSkvUyxvdXRbMV09KG1hdFs2XSttYXRbOV0pL1Msb3V0WzJdPS4yNSpTKSxvdXR9ZnVuY3Rpb24gZnJvbVJvdGF0aW9uVHJhbnNsYXRpb25TY2FsZShvdXQscSx2LHMpe3ZhciB4PXFbMF0seT1xWzFdLHo9cVsyXSx3PXFbM10seDI9eCt4LHkyPXkreSx6Mj16K3oseHg9eCp4Mix4eT14KnkyLHh6PXgqejIseXk9eSp5Mix5ej15KnoyLHp6PXoqejIsd3g9dyp4Mix3eT13KnkyLHd6PXcqejIsc3g9c1swXSxzeT1zWzFdLHN6PXNbMl07cmV0dXJuIG91dFswXT0oMS0oeXkrenopKSpzeCxvdXRbMV09KHh5K3d6KSpzeCxvdXRbMl09KHh6LXd5KSpzeCxvdXRbM109MCxvdXRbNF09KHh5LXd6KSpzeSxvdXRbNV09KDEtKHh4K3p6KSkqc3ksb3V0WzZdPSh5eit3eCkqc3ksb3V0WzddPTAsb3V0WzhdPSh4eit3eSkqc3osb3V0WzldPSh5ei13eCkqc3osb3V0WzEwXT0oMS0oeHgreXkpKSpzeixvdXRbMTFdPTAsb3V0WzEyXT12WzBdLG91dFsxM109dlsxXSxvdXRbMTRdPXZbMl0sb3V0WzE1XT0xLG91dH1mdW5jdGlvbiBmcm9tUm90YXRpb25UcmFuc2xhdGlvblNjYWxlT3JpZ2luKG91dCxxLHYscyxvKXt2YXIgeD1xWzBdLHk9cVsxXSx6PXFbMl0sdz1xWzNdLHgyPXgreCx5Mj15K3ksejI9eit6LHh4PXgqeDIseHk9eCp5Mix4ej14KnoyLHl5PXkqeTIseXo9eSp6Mix6ej16KnoyLHd4PXcqeDIsd3k9dyp5Mix3ej13KnoyLHN4PXNbMF0sc3k9c1sxXSxzej1zWzJdLG94PW9bMF0sb3k9b1sxXSxvej1vWzJdO3JldHVybiBvdXRbMF09KDEtKHl5K3p6KSkqc3gsb3V0WzFdPSh4eSt3eikqc3gsb3V0WzJdPSh4ei13eSkqc3gsb3V0WzNdPTAsb3V0WzRdPSh4eS13eikqc3ksb3V0WzVdPSgxLSh4eCt6eikpKnN5LG91dFs2XT0oeXord3gpKnN5LG91dFs3XT0wLG91dFs4XT0oeHord3kpKnN6LG91dFs5XT0oeXotd3gpKnN6LG91dFsxMF09KDEtKHh4K3l5KSkqc3osb3V0WzExXT0wLG91dFsxMl09dlswXStveC0ob3V0WzBdKm94K291dFs0XSpveStvdXRbOF0qb3opLG91dFsxM109dlsxXStveS0ob3V0WzFdKm94K291dFs1XSpveStvdXRbOV0qb3opLG91dFsxNF09dlsyXStvei0ob3V0WzJdKm94K291dFs2XSpveStvdXRbMTBdKm96KSxvdXRbMTVdPTEsb3V0fWZ1bmN0aW9uIGZyb21RdWF0KG91dCxxKXt2YXIgeD1xWzBdLHk9cVsxXSx6PXFbMl0sdz1xWzNdLHgyPXgreCx5Mj15K3ksejI9eit6LHh4PXgqeDIseXg9eSp4Mix5eT15KnkyLHp4PXoqeDIsenk9eip5Mix6ej16KnoyLHd4PXcqeDIsd3k9dyp5Mix3ej13KnoyO3JldHVybiBvdXRbMF09MS15eS16eixvdXRbMV09eXgrd3osb3V0WzJdPXp4LXd5LG91dFszXT0wLG91dFs0XT15eC13eixvdXRbNV09MS14eC16eixvdXRbNl09enkrd3gsb3V0WzddPTAsb3V0WzhdPXp4K3d5LG91dFs5XT16eS13eCxvdXRbMTBdPTEteHgteXksb3V0WzExXT0wLG91dFsxMl09MCxvdXRbMTNdPTAsb3V0WzE0XT0wLG91dFsxNV09MSxvdXR9ZnVuY3Rpb24gZnJ1c3R1bShvdXQsbGVmdCxyaWdodCxib3R0b20sdG9wLG5lYXIsZmFyKXt2YXIgcmw9MS8ocmlnaHQtbGVmdCksdGI9MS8odG9wLWJvdHRvbSksbmY9MS8obmVhci1mYXIpO3JldHVybiBvdXRbMF09MipuZWFyKnJsLG91dFsxXT0wLG91dFsyXT0wLG91dFszXT0wLG91dFs0XT0wLG91dFs1XT0yKm5lYXIqdGIsb3V0WzZdPTAsb3V0WzddPTAsb3V0WzhdPShyaWdodCtsZWZ0KSpybCxvdXRbOV09KHRvcCtib3R0b20pKnRiLG91dFsxMF09KGZhcituZWFyKSpuZixvdXRbMTFdPS0xLG91dFsxMl09MCxvdXRbMTNdPTAsb3V0WzE0XT1mYXIqbmVhcioyKm5mLG91dFsxNV09MCxvdXR9ZnVuY3Rpb24gcGVyc3BlY3RpdmUob3V0LGZvdnksYXNwZWN0LG5lYXIsZmFyKXt2YXIgZj0xL01hdGgudGFuKGZvdnkvMiksbmY9MS8obmVhci1mYXIpO3JldHVybiBvdXRbMF09Zi9hc3BlY3Qsb3V0WzFdPTAsb3V0WzJdPTAsb3V0WzNdPTAsb3V0WzRdPTAsb3V0WzVdPWYsb3V0WzZdPTAsb3V0WzddPTAsb3V0WzhdPTAsb3V0WzldPTAsb3V0WzEwXT0oZmFyK25lYXIpKm5mLG91dFsxMV09LTEsb3V0WzEyXT0wLG91dFsxM109MCxvdXRbMTRdPTIqZmFyKm5lYXIqbmYsb3V0WzE1XT0wLG91dH1mdW5jdGlvbiBwZXJzcGVjdGl2ZUZyb21GaWVsZE9mVmlldyhvdXQsZm92LG5lYXIsZmFyKXt2YXIgdXBUYW49TWF0aC50YW4oZm92LnVwRGVncmVlcypNYXRoLlBJLzE4MCksZG93blRhbj1NYXRoLnRhbihmb3YuZG93bkRlZ3JlZXMqTWF0aC5QSS8xODApLGxlZnRUYW49TWF0aC50YW4oZm92LmxlZnREZWdyZWVzKk1hdGguUEkvMTgwKSxyaWdodFRhbj1NYXRoLnRhbihmb3YucmlnaHREZWdyZWVzKk1hdGguUEkvMTgwKSx4U2NhbGU9Mi8obGVmdFRhbityaWdodFRhbikseVNjYWxlPTIvKHVwVGFuK2Rvd25UYW4pO3JldHVybiBvdXRbMF09eFNjYWxlLG91dFsxXT0wLG91dFsyXT0wLG91dFszXT0wLG91dFs0XT0wLG91dFs1XT15U2NhbGUsb3V0WzZdPTAsb3V0WzddPTAsb3V0WzhdPS0obGVmdFRhbi1yaWdodFRhbikqeFNjYWxlKi41LG91dFs5XT0odXBUYW4tZG93blRhbikqeVNjYWxlKi41LG91dFsxMF09ZmFyLyhuZWFyLWZhciksb3V0WzExXT0tMSxvdXRbMTJdPTAsb3V0WzEzXT0wLG91dFsxNF09ZmFyKm5lYXIvKG5lYXItZmFyKSxvdXRbMTVdPTAsb3V0fWZ1bmN0aW9uIG9ydGhvKG91dCxsZWZ0LHJpZ2h0LGJvdHRvbSx0b3AsbmVhcixmYXIpe3ZhciBscj0xLyhsZWZ0LXJpZ2h0KSxidD0xLyhib3R0b20tdG9wKSxuZj0xLyhuZWFyLWZhcik7cmV0dXJuIG91dFswXT0tMipscixvdXRbMV09MCxvdXRbMl09MCxvdXRbM109MCxvdXRbNF09MCxvdXRbNV09LTIqYnQsb3V0WzZdPTAsb3V0WzddPTAsb3V0WzhdPTAsb3V0WzldPTAsb3V0WzEwXT0yKm5mLG91dFsxMV09MCxvdXRbMTJdPShsZWZ0K3JpZ2h0KSpscixvdXRbMTNdPSh0b3ArYm90dG9tKSpidCxvdXRbMTRdPShmYXIrbmVhcikqbmYsb3V0WzE1XT0xLG91dH1mdW5jdGlvbiBsb29rQXQob3V0LGV5ZSxjZW50ZXIsdXApe3ZhciB4MD12b2lkIDAseDE9dm9pZCAwLHgyPXZvaWQgMCx5MD12b2lkIDAseTE9dm9pZCAwLHkyPXZvaWQgMCx6MD12b2lkIDAsejE9dm9pZCAwLHoyPXZvaWQgMCxsZW49dm9pZCAwLGV5ZXg9ZXllWzBdLGV5ZXk9ZXllWzFdLGV5ZXo9ZXllWzJdLHVweD11cFswXSx1cHk9dXBbMV0sdXB6PXVwWzJdLGNlbnRlcng9Y2VudGVyWzBdLGNlbnRlcnk9Y2VudGVyWzFdLGNlbnRlcno9Y2VudGVyWzJdO3JldHVybiBNYXRoLmFicyhleWV4LWNlbnRlcngpPGdsTWF0cml4LkVQU0lMT04mJk1hdGguYWJzKGV5ZXktY2VudGVyeSk8Z2xNYXRyaXguRVBTSUxPTiYmTWF0aC5hYnMoZXllei1jZW50ZXJ6KTxnbE1hdHJpeC5FUFNJTE9OP21hdDQuaWRlbnRpdHkob3V0KTooejA9ZXlleC1jZW50ZXJ4LHoxPWV5ZXktY2VudGVyeSx6Mj1leWV6LWNlbnRlcnosbGVuPTEvTWF0aC5zcXJ0KHowKnowK3oxKnoxK3oyKnoyKSx6MCo9bGVuLHoxKj1sZW4sejIqPWxlbix4MD11cHkqejItdXB6KnoxLHgxPXVweip6MC11cHgqejIseDI9dXB4KnoxLXVweSp6MCxsZW49TWF0aC5zcXJ0KHgwKngwK3gxKngxK3gyKngyKSxsZW4/KGxlbj0xL2xlbix4MCo9bGVuLHgxKj1sZW4seDIqPWxlbik6KHgwPTAseDE9MCx4Mj0wKSx5MD16MSp4Mi16Mip4MSx5MT16Mip4MC16MCp4Mix5Mj16MCp4MS16MSp4MCxsZW49TWF0aC5zcXJ0KHkwKnkwK3kxKnkxK3kyKnkyKSxsZW4/KGxlbj0xL2xlbix5MCo9bGVuLHkxKj1sZW4seTIqPWxlbik6KHkwPTAseTE9MCx5Mj0wKSxvdXRbMF09eDAsb3V0WzFdPXkwLG91dFsyXT16MCxvdXRbM109MCxvdXRbNF09eDEsb3V0WzVdPXkxLG91dFs2XT16MSxvdXRbN109MCxvdXRbOF09eDIsb3V0WzldPXkyLG91dFsxMF09ejIsb3V0WzExXT0wLG91dFsxMl09LSh4MCpleWV4K3gxKmV5ZXkreDIqZXlleiksb3V0WzEzXT0tKHkwKmV5ZXgreTEqZXlleSt5MipleWV6KSxvdXRbMTRdPS0oejAqZXlleCt6MSpleWV5K3oyKmV5ZXopLG91dFsxNV09MSxvdXQpfWZ1bmN0aW9uIHRhcmdldFRvKG91dCxleWUsdGFyZ2V0LHVwKXt2YXIgZXlleD1leWVbMF0sZXlleT1leWVbMV0sZXllej1leWVbMl0sdXB4PXVwWzBdLHVweT11cFsxXSx1cHo9dXBbMl0sejA9ZXlleC10YXJnZXRbMF0sejE9ZXlleS10YXJnZXRbMV0sejI9ZXllei10YXJnZXRbMl0sbGVuPXowKnowK3oxKnoxK3oyKnoyO2xlbj4wJiYobGVuPTEvTWF0aC5zcXJ0KGxlbiksejAqPWxlbix6MSo9bGVuLHoyKj1sZW4pO3ZhciB4MD11cHkqejItdXB6KnoxLHgxPXVweip6MC11cHgqejIseDI9dXB4KnoxLXVweSp6MDtyZXR1cm4gb3V0WzBdPXgwLG91dFsxXT14MSxvdXRbMl09eDIsb3V0WzNdPTAsb3V0WzRdPXoxKngyLXoyKngxLG91dFs1XT16Mip4MC16MCp4MixvdXRbNl09ejAqeDEtejEqeDAsb3V0WzddPTAsb3V0WzhdPXowLG91dFs5XT16MSxvdXRbMTBdPXoyLG91dFsxMV09MCxvdXRbMTJdPWV5ZXgsb3V0WzEzXT1leWV5LG91dFsxNF09ZXlleixvdXRbMTVdPTEsb3V0fWZ1bmN0aW9uIHN0cihhKXtyZXR1cm5cIm1hdDQoXCIrYVswXStcIiwgXCIrYVsxXStcIiwgXCIrYVsyXStcIiwgXCIrYVszXStcIiwgXCIrYVs0XStcIiwgXCIrYVs1XStcIiwgXCIrYVs2XStcIiwgXCIrYVs3XStcIiwgXCIrYVs4XStcIiwgXCIrYVs5XStcIiwgXCIrYVsxMF0rXCIsIFwiK2FbMTFdK1wiLCBcIithWzEyXStcIiwgXCIrYVsxM10rXCIsIFwiK2FbMTRdK1wiLCBcIithWzE1XStcIilcIn1mdW5jdGlvbiBmcm9iKGEpe3JldHVybiBNYXRoLnNxcnQoTWF0aC5wb3coYVswXSwyKStNYXRoLnBvdyhhWzFdLDIpK01hdGgucG93KGFbMl0sMikrTWF0aC5wb3coYVszXSwyKStNYXRoLnBvdyhhWzRdLDIpK01hdGgucG93KGFbNV0sMikrTWF0aC5wb3coYVs2XSwyKStNYXRoLnBvdyhhWzddLDIpK01hdGgucG93KGFbOF0sMikrTWF0aC5wb3coYVs5XSwyKStNYXRoLnBvdyhhWzEwXSwyKStNYXRoLnBvdyhhWzExXSwyKStNYXRoLnBvdyhhWzEyXSwyKStNYXRoLnBvdyhhWzEzXSwyKStNYXRoLnBvdyhhWzE0XSwyKStNYXRoLnBvdyhhWzE1XSwyKSl9ZnVuY3Rpb24gYWRkKG91dCxhLGIpe3JldHVybiBvdXRbMF09YVswXStiWzBdLG91dFsxXT1hWzFdK2JbMV0sb3V0WzJdPWFbMl0rYlsyXSxvdXRbM109YVszXStiWzNdLG91dFs0XT1hWzRdK2JbNF0sb3V0WzVdPWFbNV0rYls1XSxvdXRbNl09YVs2XStiWzZdLG91dFs3XT1hWzddK2JbN10sb3V0WzhdPWFbOF0rYls4XSxvdXRbOV09YVs5XStiWzldLG91dFsxMF09YVsxMF0rYlsxMF0sb3V0WzExXT1hWzExXStiWzExXSxvdXRbMTJdPWFbMTJdK2JbMTJdLG91dFsxM109YVsxM10rYlsxM10sb3V0WzE0XT1hWzE0XStiWzE0XSxvdXRbMTVdPWFbMTVdK2JbMTVdLG91dH1mdW5jdGlvbiBzdWJ0cmFjdChvdXQsYSxiKXtyZXR1cm4gb3V0WzBdPWFbMF0tYlswXSxvdXRbMV09YVsxXS1iWzFdLG91dFsyXT1hWzJdLWJbMl0sb3V0WzNdPWFbM10tYlszXSxvdXRbNF09YVs0XS1iWzRdLG91dFs1XT1hWzVdLWJbNV0sb3V0WzZdPWFbNl0tYls2XSxvdXRbN109YVs3XS1iWzddLG91dFs4XT1hWzhdLWJbOF0sb3V0WzldPWFbOV0tYls5XSxvdXRbMTBdPWFbMTBdLWJbMTBdLG91dFsxMV09YVsxMV0tYlsxMV0sb3V0WzEyXT1hWzEyXS1iWzEyXSxvdXRbMTNdPWFbMTNdLWJbMTNdLG91dFsxNF09YVsxNF0tYlsxNF0sb3V0WzE1XT1hWzE1XS1iWzE1XSxvdXR9ZnVuY3Rpb24gbXVsdGlwbHlTY2FsYXIob3V0LGEsYil7cmV0dXJuIG91dFswXT1hWzBdKmIsb3V0WzFdPWFbMV0qYixvdXRbMl09YVsyXSpiLG91dFszXT1hWzNdKmIsb3V0WzRdPWFbNF0qYixvdXRbNV09YVs1XSpiLG91dFs2XT1hWzZdKmIsb3V0WzddPWFbN10qYixvdXRbOF09YVs4XSpiLG91dFs5XT1hWzldKmIsb3V0WzEwXT1hWzEwXSpiLG91dFsxMV09YVsxMV0qYixvdXRbMTJdPWFbMTJdKmIsb3V0WzEzXT1hWzEzXSpiLG91dFsxNF09YVsxNF0qYixvdXRbMTVdPWFbMTVdKmIsb3V0fWZ1bmN0aW9uIG11bHRpcGx5U2NhbGFyQW5kQWRkKG91dCxhLGIsc2NhbGUpe3JldHVybiBvdXRbMF09YVswXStiWzBdKnNjYWxlLG91dFsxXT1hWzFdK2JbMV0qc2NhbGUsb3V0WzJdPWFbMl0rYlsyXSpzY2FsZSxvdXRbM109YVszXStiWzNdKnNjYWxlLG91dFs0XT1hWzRdK2JbNF0qc2NhbGUsb3V0WzVdPWFbNV0rYls1XSpzY2FsZSxvdXRbNl09YVs2XStiWzZdKnNjYWxlLG91dFs3XT1hWzddK2JbN10qc2NhbGUsb3V0WzhdPWFbOF0rYls4XSpzY2FsZSxvdXRbOV09YVs5XStiWzldKnNjYWxlLG91dFsxMF09YVsxMF0rYlsxMF0qc2NhbGUsb3V0WzExXT1hWzExXStiWzExXSpzY2FsZSxvdXRbMTJdPWFbMTJdK2JbMTJdKnNjYWxlLG91dFsxM109YVsxM10rYlsxM10qc2NhbGUsb3V0WzE0XT1hWzE0XStiWzE0XSpzY2FsZSxvdXRbMTVdPWFbMTVdK2JbMTVdKnNjYWxlLG91dH1mdW5jdGlvbiBleGFjdEVxdWFscyhhLGIpe3JldHVybiBhWzBdPT09YlswXSYmYVsxXT09PWJbMV0mJmFbMl09PT1iWzJdJiZhWzNdPT09YlszXSYmYVs0XT09PWJbNF0mJmFbNV09PT1iWzVdJiZhWzZdPT09Yls2XSYmYVs3XT09PWJbN10mJmFbOF09PT1iWzhdJiZhWzldPT09Yls5XSYmYVsxMF09PT1iWzEwXSYmYVsxMV09PT1iWzExXSYmYVsxMl09PT1iWzEyXSYmYVsxM109PT1iWzEzXSYmYVsxNF09PT1iWzE0XSYmYVsxNV09PT1iWzE1XX1mdW5jdGlvbiBlcXVhbHMoYSxiKXt2YXIgYTA9YVswXSxhMT1hWzFdLGEyPWFbMl0sYTM9YVszXSxhND1hWzRdLGE1PWFbNV0sYTY9YVs2XSxhNz1hWzddLGE4PWFbOF0sYTk9YVs5XSxhMTA9YVsxMF0sYTExPWFbMTFdLGExMj1hWzEyXSxhMTM9YVsxM10sYTE0PWFbMTRdLGExNT1hWzE1XSxiMD1iWzBdLGIxPWJbMV0sYjI9YlsyXSxiMz1iWzNdLGI0PWJbNF0sYjU9Yls1XSxiNj1iWzZdLGI3PWJbN10sYjg9Yls4XSxiOT1iWzldLGIxMD1iWzEwXSxiMTE9YlsxMV0sYjEyPWJbMTJdLGIxMz1iWzEzXSxiMTQ9YlsxNF0sYjE1PWJbMTVdO3JldHVybiBNYXRoLmFicyhhMC1iMCk8PWdsTWF0cml4LkVQU0lMT04qTWF0aC5tYXgoMSxNYXRoLmFicyhhMCksTWF0aC5hYnMoYjApKSYmTWF0aC5hYnMoYTEtYjEpPD1nbE1hdHJpeC5FUFNJTE9OKk1hdGgubWF4KDEsTWF0aC5hYnMoYTEpLE1hdGguYWJzKGIxKSkmJk1hdGguYWJzKGEyLWIyKTw9Z2xNYXRyaXguRVBTSUxPTipNYXRoLm1heCgxLE1hdGguYWJzKGEyKSxNYXRoLmFicyhiMikpJiZNYXRoLmFicyhhMy1iMyk8PWdsTWF0cml4LkVQU0lMT04qTWF0aC5tYXgoMSxNYXRoLmFicyhhMyksTWF0aC5hYnMoYjMpKSYmTWF0aC5hYnMoYTQtYjQpPD1nbE1hdHJpeC5FUFNJTE9OKk1hdGgubWF4KDEsTWF0aC5hYnMoYTQpLE1hdGguYWJzKGI0KSkmJk1hdGguYWJzKGE1LWI1KTw9Z2xNYXRyaXguRVBTSUxPTipNYXRoLm1heCgxLE1hdGguYWJzKGE1KSxNYXRoLmFicyhiNSkpJiZNYXRoLmFicyhhNi1iNik8PWdsTWF0cml4LkVQU0lMT04qTWF0aC5tYXgoMSxNYXRoLmFicyhhNiksTWF0aC5hYnMoYjYpKSYmTWF0aC5hYnMoYTctYjcpPD1nbE1hdHJpeC5FUFNJTE9OKk1hdGgubWF4KDEsTWF0aC5hYnMoYTcpLE1hdGguYWJzKGI3KSkmJk1hdGguYWJzKGE4LWI4KTw9Z2xNYXRyaXguRVBTSUxPTipNYXRoLm1heCgxLE1hdGguYWJzKGE4KSxNYXRoLmFicyhiOCkpJiZNYXRoLmFicyhhOS1iOSk8PWdsTWF0cml4LkVQU0lMT04qTWF0aC5tYXgoMSxNYXRoLmFicyhhOSksTWF0aC5hYnMoYjkpKSYmTWF0aC5hYnMoYTEwLWIxMCk8PWdsTWF0cml4LkVQU0lMT04qTWF0aC5tYXgoMSxNYXRoLmFicyhhMTApLE1hdGguYWJzKGIxMCkpJiZNYXRoLmFicyhhMTEtYjExKTw9Z2xNYXRyaXguRVBTSUxPTipNYXRoLm1heCgxLE1hdGguYWJzKGExMSksTWF0aC5hYnMoYjExKSkmJk1hdGguYWJzKGExMi1iMTIpPD1nbE1hdHJpeC5FUFNJTE9OKk1hdGgubWF4KDEsTWF0aC5hYnMoYTEyKSxNYXRoLmFicyhiMTIpKSYmTWF0aC5hYnMoYTEzLWIxMyk8PWdsTWF0cml4LkVQU0lMT04qTWF0aC5tYXgoMSxNYXRoLmFicyhhMTMpLE1hdGguYWJzKGIxMykpJiZNYXRoLmFicyhhMTQtYjE0KTw9Z2xNYXRyaXguRVBTSUxPTipNYXRoLm1heCgxLE1hdGguYWJzKGExNCksTWF0aC5hYnMoYjE0KSkmJk1hdGguYWJzKGExNS1iMTUpPD1nbE1hdHJpeC5FUFNJTE9OKk1hdGgubWF4KDEsTWF0aC5hYnMoYTE1KSxNYXRoLmFicyhiMTUpKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxleHBvcnRzLnN1Yj1leHBvcnRzLm11bD12b2lkIDAsZXhwb3J0cy5jcmVhdGU9Y3JlYXRlLGV4cG9ydHMuY2xvbmU9Y2xvbmUsZXhwb3J0cy5jb3B5PWNvcHksZXhwb3J0cy5mcm9tVmFsdWVzPWZyb21WYWx1ZXMsZXhwb3J0cy5zZXQ9c2V0LGV4cG9ydHMuaWRlbnRpdHk9aWRlbnRpdHksZXhwb3J0cy50cmFuc3Bvc2U9dHJhbnNwb3NlLGV4cG9ydHMuaW52ZXJ0PWludmVydCxleHBvcnRzLmFkam9pbnQ9YWRqb2ludCxleHBvcnRzLmRldGVybWluYW50PWRldGVybWluYW50LGV4cG9ydHMubXVsdGlwbHk9bXVsdGlwbHksZXhwb3J0cy50cmFuc2xhdGU9dHJhbnNsYXRlLGV4cG9ydHMuc2NhbGU9c2NhbGUsZXhwb3J0cy5yb3RhdGU9cm90YXRlLGV4cG9ydHMucm90YXRlWD1yb3RhdGVYLGV4cG9ydHMucm90YXRlWT1yb3RhdGVZLGV4cG9ydHMucm90YXRlWj1yb3RhdGVaLGV4cG9ydHMuZnJvbVRyYW5zbGF0aW9uPWZyb21UcmFuc2xhdGlvbixleHBvcnRzLmZyb21TY2FsaW5nPWZyb21TY2FsaW5nLGV4cG9ydHMuZnJvbVJvdGF0aW9uPWZyb21Sb3RhdGlvbixleHBvcnRzLmZyb21YUm90YXRpb249ZnJvbVhSb3RhdGlvbixleHBvcnRzLmZyb21ZUm90YXRpb249ZnJvbVlSb3RhdGlvbixleHBvcnRzLmZyb21aUm90YXRpb249ZnJvbVpSb3RhdGlvbixleHBvcnRzLmZyb21Sb3RhdGlvblRyYW5zbGF0aW9uPWZyb21Sb3RhdGlvblRyYW5zbGF0aW9uLGV4cG9ydHMuZ2V0VHJhbnNsYXRpb249Z2V0VHJhbnNsYXRpb24sZXhwb3J0cy5nZXRTY2FsaW5nPWdldFNjYWxpbmcsZXhwb3J0cy5nZXRSb3RhdGlvbj1nZXRSb3RhdGlvbixleHBvcnRzLmZyb21Sb3RhdGlvblRyYW5zbGF0aW9uU2NhbGU9ZnJvbVJvdGF0aW9uVHJhbnNsYXRpb25TY2FsZSxleHBvcnRzLmZyb21Sb3RhdGlvblRyYW5zbGF0aW9uU2NhbGVPcmlnaW49ZnJvbVJvdGF0aW9uVHJhbnNsYXRpb25TY2FsZU9yaWdpbixleHBvcnRzLmZyb21RdWF0PWZyb21RdWF0LGV4cG9ydHMuZnJ1c3R1bT1mcnVzdHVtLGV4cG9ydHMucGVyc3BlY3RpdmU9cGVyc3BlY3RpdmUsZXhwb3J0cy5wZXJzcGVjdGl2ZUZyb21GaWVsZE9mVmlldz1wZXJzcGVjdGl2ZUZyb21GaWVsZE9mVmlldyxleHBvcnRzLm9ydGhvPW9ydGhvLGV4cG9ydHMubG9va0F0PWxvb2tBdCxleHBvcnRzLnRhcmdldFRvPXRhcmdldFRvLGV4cG9ydHMuc3RyPXN0cixleHBvcnRzLmZyb2I9ZnJvYixleHBvcnRzLmFkZD1hZGQsZXhwb3J0cy5zdWJ0cmFjdD1zdWJ0cmFjdCxleHBvcnRzLm11bHRpcGx5U2NhbGFyPW11bHRpcGx5U2NhbGFyLGV4cG9ydHMubXVsdGlwbHlTY2FsYXJBbmRBZGQ9bXVsdGlwbHlTY2FsYXJBbmRBZGQsZXhwb3J0cy5leGFjdEVxdWFscz1leGFjdEVxdWFscyxleHBvcnRzLmVxdWFscz1lcXVhbHM7dmFyIF9jb21tb249X193ZWJwYWNrX3JlcXVpcmVfXygzKSxnbE1hdHJpeD1mdW5jdGlvbihvYmope2lmKG9iaiYmb2JqLl9fZXNNb2R1bGUpcmV0dXJuIG9iajt2YXIgbmV3T2JqPXt9O2lmKG51bGwhPW9iailmb3IodmFyIGtleSBpbiBvYmopT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaixrZXkpJiYobmV3T2JqW2tleV09b2JqW2tleV0pO3JldHVybiBuZXdPYmouZGVmYXVsdD1vYmosbmV3T2JqfShfY29tbW9uKTtleHBvcnRzLm11bD1tdWx0aXBseSxleHBvcnRzLnN1Yj1zdWJ0cmFjdH0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKXtpZihvYmomJm9iai5fX2VzTW9kdWxlKXJldHVybiBvYmo7dmFyIG5ld09iaj17fTtpZihudWxsIT1vYmopZm9yKHZhciBrZXkgaW4gb2JqKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosa2V5KSYmKG5ld09ialtrZXldPW9ialtrZXldKTtyZXR1cm4gbmV3T2JqLmRlZmF1bHQ9b2JqLG5ld09ian1mdW5jdGlvbiBjcmVhdGUoKXt2YXIgb3V0PW5ldyBnbE1hdHJpeC5BUlJBWV9UWVBFKDQpO3JldHVybiBvdXRbMF09MCxvdXRbMV09MCxvdXRbMl09MCxvdXRbM109MSxvdXR9ZnVuY3Rpb24gaWRlbnRpdHkob3V0KXtyZXR1cm4gb3V0WzBdPTAsb3V0WzFdPTAsb3V0WzJdPTAsb3V0WzNdPTEsb3V0fWZ1bmN0aW9uIHNldEF4aXNBbmdsZShvdXQsYXhpcyxyYWQpe3JhZCo9LjU7dmFyIHM9TWF0aC5zaW4ocmFkKTtyZXR1cm4gb3V0WzBdPXMqYXhpc1swXSxvdXRbMV09cypheGlzWzFdLG91dFsyXT1zKmF4aXNbMl0sb3V0WzNdPU1hdGguY29zKHJhZCksb3V0fWZ1bmN0aW9uIGdldEF4aXNBbmdsZShvdXRfYXhpcyxxKXt2YXIgcmFkPTIqTWF0aC5hY29zKHFbM10pLHM9TWF0aC5zaW4ocmFkLzIpO3JldHVybiAwIT1zPyhvdXRfYXhpc1swXT1xWzBdL3Msb3V0X2F4aXNbMV09cVsxXS9zLG91dF9heGlzWzJdPXFbMl0vcyk6KG91dF9heGlzWzBdPTEsb3V0X2F4aXNbMV09MCxvdXRfYXhpc1syXT0wKSxyYWR9ZnVuY3Rpb24gbXVsdGlwbHkob3V0LGEsYil7dmFyIGF4PWFbMF0sYXk9YVsxXSxhej1hWzJdLGF3PWFbM10sYng9YlswXSxieT1iWzFdLGJ6PWJbMl0sYnc9YlszXTtyZXR1cm4gb3V0WzBdPWF4KmJ3K2F3KmJ4K2F5KmJ6LWF6KmJ5LG91dFsxXT1heSpidythdypieStheipieC1heCpieixvdXRbMl09YXoqYncrYXcqYnorYXgqYnktYXkqYngsb3V0WzNdPWF3KmJ3LWF4KmJ4LWF5KmJ5LWF6KmJ6LG91dH1mdW5jdGlvbiByb3RhdGVYKG91dCxhLHJhZCl7cmFkKj0uNTt2YXIgYXg9YVswXSxheT1hWzFdLGF6PWFbMl0sYXc9YVszXSxieD1NYXRoLnNpbihyYWQpLGJ3PU1hdGguY29zKHJhZCk7cmV0dXJuIG91dFswXT1heCpidythdypieCxvdXRbMV09YXkqYncrYXoqYngsb3V0WzJdPWF6KmJ3LWF5KmJ4LG91dFszXT1hdypidy1heCpieCxvdXR9ZnVuY3Rpb24gcm90YXRlWShvdXQsYSxyYWQpe3JhZCo9LjU7dmFyIGF4PWFbMF0sYXk9YVsxXSxhej1hWzJdLGF3PWFbM10sYnk9TWF0aC5zaW4ocmFkKSxidz1NYXRoLmNvcyhyYWQpO3JldHVybiBvdXRbMF09YXgqYnctYXoqYnksb3V0WzFdPWF5KmJ3K2F3KmJ5LG91dFsyXT1heipidytheCpieSxvdXRbM109YXcqYnctYXkqYnksb3V0fWZ1bmN0aW9uIHJvdGF0ZVoob3V0LGEscmFkKXtyYWQqPS41O3ZhciBheD1hWzBdLGF5PWFbMV0sYXo9YVsyXSxhdz1hWzNdLGJ6PU1hdGguc2luKHJhZCksYnc9TWF0aC5jb3MocmFkKTtyZXR1cm4gb3V0WzBdPWF4KmJ3K2F5KmJ6LG91dFsxXT1heSpidy1heCpieixvdXRbMl09YXoqYncrYXcqYnosb3V0WzNdPWF3KmJ3LWF6KmJ6LG91dH1mdW5jdGlvbiBjYWxjdWxhdGVXKG91dCxhKXt2YXIgeD1hWzBdLHk9YVsxXSx6PWFbMl07cmV0dXJuIG91dFswXT14LG91dFsxXT15LG91dFsyXT16LG91dFszXT1NYXRoLnNxcnQoTWF0aC5hYnMoMS14KngteSp5LXoqeikpLG91dH1mdW5jdGlvbiBzbGVycChvdXQsYSxiLHQpe3ZhciBheD1hWzBdLGF5PWFbMV0sYXo9YVsyXSxhdz1hWzNdLGJ4PWJbMF0sYnk9YlsxXSxiej1iWzJdLGJ3PWJbM10sb21lZ2E9dm9pZCAwLGNvc29tPXZvaWQgMCxzaW5vbT12b2lkIDAsc2NhbGUwPXZvaWQgMCxzY2FsZTE9dm9pZCAwO3JldHVybiBjb3NvbT1heCpieCtheSpieStheipieithdypidyxjb3NvbTwwJiYoY29zb209LWNvc29tLGJ4PS1ieCxieT0tYnksYno9LWJ6LGJ3PS1idyksMS1jb3NvbT4xZS02PyhvbWVnYT1NYXRoLmFjb3MoY29zb20pLHNpbm9tPU1hdGguc2luKG9tZWdhKSxzY2FsZTA9TWF0aC5zaW4oKDEtdCkqb21lZ2EpL3Npbm9tLHNjYWxlMT1NYXRoLnNpbih0Km9tZWdhKS9zaW5vbSk6KHNjYWxlMD0xLXQsc2NhbGUxPXQpLG91dFswXT1zY2FsZTAqYXgrc2NhbGUxKmJ4LG91dFsxXT1zY2FsZTAqYXkrc2NhbGUxKmJ5LG91dFsyXT1zY2FsZTAqYXorc2NhbGUxKmJ6LG91dFszXT1zY2FsZTAqYXcrc2NhbGUxKmJ3LG91dH1mdW5jdGlvbiBpbnZlcnQob3V0LGEpe3ZhciBhMD1hWzBdLGExPWFbMV0sYTI9YVsyXSxhMz1hWzNdLGRvdD1hMCphMCthMSphMSthMiphMithMyphMyxpbnZEb3Q9ZG90PzEvZG90OjA7cmV0dXJuIG91dFswXT0tYTAqaW52RG90LG91dFsxXT0tYTEqaW52RG90LG91dFsyXT0tYTIqaW52RG90LG91dFszXT1hMyppbnZEb3Qsb3V0fWZ1bmN0aW9uIGNvbmp1Z2F0ZShvdXQsYSl7cmV0dXJuIG91dFswXT0tYVswXSxvdXRbMV09LWFbMV0sb3V0WzJdPS1hWzJdLG91dFszXT1hWzNdLG91dH1mdW5jdGlvbiBmcm9tTWF0MyhvdXQsbSl7dmFyIGZUcmFjZT1tWzBdK21bNF0rbVs4XSxmUm9vdD12b2lkIDA7aWYoZlRyYWNlPjApZlJvb3Q9TWF0aC5zcXJ0KGZUcmFjZSsxKSxvdXRbM109LjUqZlJvb3QsZlJvb3Q9LjUvZlJvb3Qsb3V0WzBdPShtWzVdLW1bN10pKmZSb290LG91dFsxXT0obVs2XS1tWzJdKSpmUm9vdCxvdXRbMl09KG1bMV0tbVszXSkqZlJvb3Q7ZWxzZXt2YXIgaT0wO21bNF0+bVswXSYmKGk9MSksbVs4XT5tWzMqaStpXSYmKGk9Mik7dmFyIGo9KGkrMSklMyxrPShpKzIpJTM7ZlJvb3Q9TWF0aC5zcXJ0KG1bMyppK2ldLW1bMypqK2pdLW1bMyprK2tdKzEpLG91dFtpXT0uNSpmUm9vdCxmUm9vdD0uNS9mUm9vdCxvdXRbM109KG1bMypqK2tdLW1bMyprK2pdKSpmUm9vdCxvdXRbal09KG1bMypqK2ldK21bMyppK2pdKSpmUm9vdCxvdXRba109KG1bMyprK2ldK21bMyppK2tdKSpmUm9vdH1yZXR1cm4gb3V0fWZ1bmN0aW9uIGZyb21FdWxlcihvdXQseCx5LHope3ZhciBoYWxmVG9SYWQ9LjUqTWF0aC5QSS8xODA7eCo9aGFsZlRvUmFkLHkqPWhhbGZUb1JhZCx6Kj1oYWxmVG9SYWQ7dmFyIHN4PU1hdGguc2luKHgpLGN4PU1hdGguY29zKHgpLHN5PU1hdGguc2luKHkpLGN5PU1hdGguY29zKHkpLHN6PU1hdGguc2luKHopLGN6PU1hdGguY29zKHopO3JldHVybiBvdXRbMF09c3gqY3kqY3otY3gqc3kqc3osb3V0WzFdPWN4KnN5KmN6K3N4KmN5KnN6LG91dFsyXT1jeCpjeSpzei1zeCpzeSpjeixvdXRbM109Y3gqY3kqY3orc3gqc3kqc3osb3V0fWZ1bmN0aW9uIHN0cihhKXtyZXR1cm5cInF1YXQoXCIrYVswXStcIiwgXCIrYVsxXStcIiwgXCIrYVsyXStcIiwgXCIrYVszXStcIilcIn1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxleHBvcnRzLnNldEF4ZXM9ZXhwb3J0cy5zcWxlcnA9ZXhwb3J0cy5yb3RhdGlvblRvPWV4cG9ydHMuZXF1YWxzPWV4cG9ydHMuZXhhY3RFcXVhbHM9ZXhwb3J0cy5ub3JtYWxpemU9ZXhwb3J0cy5zcXJMZW49ZXhwb3J0cy5zcXVhcmVkTGVuZ3RoPWV4cG9ydHMubGVuPWV4cG9ydHMubGVuZ3RoPWV4cG9ydHMubGVycD1leHBvcnRzLmRvdD1leHBvcnRzLnNjYWxlPWV4cG9ydHMubXVsPWV4cG9ydHMuYWRkPWV4cG9ydHMuc2V0PWV4cG9ydHMuY29weT1leHBvcnRzLmZyb21WYWx1ZXM9ZXhwb3J0cy5jbG9uZT12b2lkIDAsZXhwb3J0cy5jcmVhdGU9Y3JlYXRlLGV4cG9ydHMuaWRlbnRpdHk9aWRlbnRpdHksZXhwb3J0cy5zZXRBeGlzQW5nbGU9c2V0QXhpc0FuZ2xlLGV4cG9ydHMuZ2V0QXhpc0FuZ2xlPWdldEF4aXNBbmdsZSxleHBvcnRzLm11bHRpcGx5PW11bHRpcGx5LGV4cG9ydHMucm90YXRlWD1yb3RhdGVYLGV4cG9ydHMucm90YXRlWT1yb3RhdGVZLGV4cG9ydHMucm90YXRlWj1yb3RhdGVaLGV4cG9ydHMuY2FsY3VsYXRlVz1jYWxjdWxhdGVXLGV4cG9ydHMuc2xlcnA9c2xlcnAsZXhwb3J0cy5pbnZlcnQ9aW52ZXJ0LGV4cG9ydHMuY29uanVnYXRlPWNvbmp1Z2F0ZSxleHBvcnRzLmZyb21NYXQzPWZyb21NYXQzLGV4cG9ydHMuZnJvbUV1bGVyPWZyb21FdWxlcixleHBvcnRzLnN0cj1zdHI7dmFyIF9jb21tb249X193ZWJwYWNrX3JlcXVpcmVfXygzKSxnbE1hdHJpeD1faW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfY29tbW9uKSxfbWF0PV9fd2VicGFja19yZXF1aXJlX18oMjApLG1hdDM9X2ludGVyb3BSZXF1aXJlV2lsZGNhcmQoX21hdCksX3ZlYz1fX3dlYnBhY2tfcmVxdWlyZV9fKDIxKSx2ZWMzPV9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKF92ZWMpLF92ZWMyPV9fd2VicGFja19yZXF1aXJlX18oMjIpLHZlYzQ9X2ludGVyb3BSZXF1aXJlV2lsZGNhcmQoX3ZlYzIpLGxlbmd0aD0oZXhwb3J0cy5jbG9uZT12ZWM0LmNsb25lLGV4cG9ydHMuZnJvbVZhbHVlcz12ZWM0LmZyb21WYWx1ZXMsZXhwb3J0cy5jb3B5PXZlYzQuY29weSxleHBvcnRzLnNldD12ZWM0LnNldCxleHBvcnRzLmFkZD12ZWM0LmFkZCxleHBvcnRzLm11bD1tdWx0aXBseSxleHBvcnRzLnNjYWxlPXZlYzQuc2NhbGUsZXhwb3J0cy5kb3Q9dmVjNC5kb3QsZXhwb3J0cy5sZXJwPXZlYzQubGVycCxleHBvcnRzLmxlbmd0aD12ZWM0Lmxlbmd0aCksc3F1YXJlZExlbmd0aD0oZXhwb3J0cy5sZW49bGVuZ3RoLGV4cG9ydHMuc3F1YXJlZExlbmd0aD12ZWM0LnNxdWFyZWRMZW5ndGgpLG5vcm1hbGl6ZT0oZXhwb3J0cy5zcXJMZW49c3F1YXJlZExlbmd0aCxleHBvcnRzLm5vcm1hbGl6ZT12ZWM0Lm5vcm1hbGl6ZSk7ZXhwb3J0cy5leGFjdEVxdWFscz12ZWM0LmV4YWN0RXF1YWxzLGV4cG9ydHMuZXF1YWxzPXZlYzQuZXF1YWxzLGV4cG9ydHMucm90YXRpb25Ubz1mdW5jdGlvbigpe3ZhciB0bXB2ZWMzPXZlYzMuY3JlYXRlKCkseFVuaXRWZWMzPXZlYzMuZnJvbVZhbHVlcygxLDAsMCkseVVuaXRWZWMzPXZlYzMuZnJvbVZhbHVlcygwLDEsMCk7cmV0dXJuIGZ1bmN0aW9uKG91dCxhLGIpe3ZhciBkb3Q9dmVjMy5kb3QoYSxiKTtyZXR1cm4gZG90PC0uOTk5OTk5Pyh2ZWMzLmNyb3NzKHRtcHZlYzMseFVuaXRWZWMzLGEpLHZlYzMubGVuKHRtcHZlYzMpPDFlLTYmJnZlYzMuY3Jvc3ModG1wdmVjMyx5VW5pdFZlYzMsYSksdmVjMy5ub3JtYWxpemUodG1wdmVjMyx0bXB2ZWMzKSxzZXRBeGlzQW5nbGUob3V0LHRtcHZlYzMsTWF0aC5QSSksb3V0KTpkb3Q+Ljk5OTk5OT8ob3V0WzBdPTAsb3V0WzFdPTAsb3V0WzJdPTAsb3V0WzNdPTEsb3V0KToodmVjMy5jcm9zcyh0bXB2ZWMzLGEsYiksb3V0WzBdPXRtcHZlYzNbMF0sb3V0WzFdPXRtcHZlYzNbMV0sb3V0WzJdPXRtcHZlYzNbMl0sb3V0WzNdPTErZG90LG5vcm1hbGl6ZShvdXQsb3V0KSl9fSgpLGV4cG9ydHMuc3FsZXJwPWZ1bmN0aW9uKCl7dmFyIHRlbXAxPWNyZWF0ZSgpLHRlbXAyPWNyZWF0ZSgpO3JldHVybiBmdW5jdGlvbihvdXQsYSxiLGMsZCx0KXtyZXR1cm4gc2xlcnAodGVtcDEsYSxkLHQpLHNsZXJwKHRlbXAyLGIsYyx0KSxzbGVycChvdXQsdGVtcDEsdGVtcDIsMip0KigxLXQpKSxvdXR9fSgpLGV4cG9ydHMuc2V0QXhlcz1mdW5jdGlvbigpe3ZhciBtYXRyPW1hdDMuY3JlYXRlKCk7cmV0dXJuIGZ1bmN0aW9uKG91dCx2aWV3LHJpZ2h0LHVwKXtyZXR1cm4gbWF0clswXT1yaWdodFswXSxtYXRyWzNdPXJpZ2h0WzFdLG1hdHJbNl09cmlnaHRbMl0sbWF0clsxXT11cFswXSxtYXRyWzRdPXVwWzFdLG1hdHJbN109dXBbMl0sbWF0clsyXT0tdmlld1swXSxtYXRyWzVdPS12aWV3WzFdLG1hdHJbOF09LXZpZXdbMl0sbm9ybWFsaXplKG91dCxmcm9tTWF0MyhvdXQsbWF0cikpfX0oKX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gY3JlYXRlKCl7dmFyIG91dD1uZXcgZ2xNYXRyaXguQVJSQVlfVFlQRSgyKTtyZXR1cm4gb3V0WzBdPTAsb3V0WzFdPTAsb3V0fWZ1bmN0aW9uIGNsb25lKGEpe3ZhciBvdXQ9bmV3IGdsTWF0cml4LkFSUkFZX1RZUEUoMik7cmV0dXJuIG91dFswXT1hWzBdLG91dFsxXT1hWzFdLG91dH1mdW5jdGlvbiBmcm9tVmFsdWVzKHgseSl7dmFyIG91dD1uZXcgZ2xNYXRyaXguQVJSQVlfVFlQRSgyKTtyZXR1cm4gb3V0WzBdPXgsb3V0WzFdPXksb3V0fWZ1bmN0aW9uIGNvcHkob3V0LGEpe3JldHVybiBvdXRbMF09YVswXSxvdXRbMV09YVsxXSxvdXR9ZnVuY3Rpb24gc2V0KG91dCx4LHkpe3JldHVybiBvdXRbMF09eCxvdXRbMV09eSxvdXR9ZnVuY3Rpb24gYWRkKG91dCxhLGIpe3JldHVybiBvdXRbMF09YVswXStiWzBdLG91dFsxXT1hWzFdK2JbMV0sb3V0fWZ1bmN0aW9uIHN1YnRyYWN0KG91dCxhLGIpe3JldHVybiBvdXRbMF09YVswXS1iWzBdLG91dFsxXT1hWzFdLWJbMV0sb3V0fWZ1bmN0aW9uIG11bHRpcGx5KG91dCxhLGIpe3JldHVybiBvdXRbMF09YVswXSpiWzBdLG91dFsxXT1hWzFdKmJbMV0sb3V0fWZ1bmN0aW9uIGRpdmlkZShvdXQsYSxiKXtyZXR1cm4gb3V0WzBdPWFbMF0vYlswXSxvdXRbMV09YVsxXS9iWzFdLG91dH1mdW5jdGlvbiBjZWlsKG91dCxhKXtyZXR1cm4gb3V0WzBdPU1hdGguY2VpbChhWzBdKSxvdXRbMV09TWF0aC5jZWlsKGFbMV0pLG91dH1mdW5jdGlvbiBmbG9vcihvdXQsYSl7cmV0dXJuIG91dFswXT1NYXRoLmZsb29yKGFbMF0pLG91dFsxXT1NYXRoLmZsb29yKGFbMV0pLG91dH1mdW5jdGlvbiBtaW4ob3V0LGEsYil7cmV0dXJuIG91dFswXT1NYXRoLm1pbihhWzBdLGJbMF0pLG91dFsxXT1NYXRoLm1pbihhWzFdLGJbMV0pLG91dH1mdW5jdGlvbiBtYXgob3V0LGEsYil7cmV0dXJuIG91dFswXT1NYXRoLm1heChhWzBdLGJbMF0pLG91dFsxXT1NYXRoLm1heChhWzFdLGJbMV0pLG91dH1mdW5jdGlvbiByb3VuZChvdXQsYSl7cmV0dXJuIG91dFswXT1NYXRoLnJvdW5kKGFbMF0pLG91dFsxXT1NYXRoLnJvdW5kKGFbMV0pLG91dH1mdW5jdGlvbiBzY2FsZShvdXQsYSxiKXtyZXR1cm4gb3V0WzBdPWFbMF0qYixvdXRbMV09YVsxXSpiLG91dH1mdW5jdGlvbiBzY2FsZUFuZEFkZChvdXQsYSxiLHNjYWxlKXtyZXR1cm4gb3V0WzBdPWFbMF0rYlswXSpzY2FsZSxvdXRbMV09YVsxXStiWzFdKnNjYWxlLG91dH1mdW5jdGlvbiBkaXN0YW5jZShhLGIpe3ZhciB4PWJbMF0tYVswXSx5PWJbMV0tYVsxXTtyZXR1cm4gTWF0aC5zcXJ0KHgqeCt5KnkpfWZ1bmN0aW9uIHNxdWFyZWREaXN0YW5jZShhLGIpe3ZhciB4PWJbMF0tYVswXSx5PWJbMV0tYVsxXTtyZXR1cm4geCp4K3kqeX1mdW5jdGlvbiBsZW5ndGgoYSl7dmFyIHg9YVswXSx5PWFbMV07cmV0dXJuIE1hdGguc3FydCh4KngreSp5KX1mdW5jdGlvbiBzcXVhcmVkTGVuZ3RoKGEpe3ZhciB4PWFbMF0seT1hWzFdO3JldHVybiB4KngreSp5fWZ1bmN0aW9uIG5lZ2F0ZShvdXQsYSl7cmV0dXJuIG91dFswXT0tYVswXSxvdXRbMV09LWFbMV0sb3V0fWZ1bmN0aW9uIGludmVyc2Uob3V0LGEpe3JldHVybiBvdXRbMF09MS9hWzBdLG91dFsxXT0xL2FbMV0sb3V0fWZ1bmN0aW9uIG5vcm1hbGl6ZShvdXQsYSl7dmFyIHg9YVswXSx5PWFbMV0sbGVuPXgqeCt5Knk7cmV0dXJuIGxlbj4wJiYobGVuPTEvTWF0aC5zcXJ0KGxlbiksb3V0WzBdPWFbMF0qbGVuLG91dFsxXT1hWzFdKmxlbiksb3V0fWZ1bmN0aW9uIGRvdChhLGIpe3JldHVybiBhWzBdKmJbMF0rYVsxXSpiWzFdfWZ1bmN0aW9uIGNyb3NzKG91dCxhLGIpe3ZhciB6PWFbMF0qYlsxXS1hWzFdKmJbMF07cmV0dXJuIG91dFswXT1vdXRbMV09MCxvdXRbMl09eixvdXR9ZnVuY3Rpb24gbGVycChvdXQsYSxiLHQpe3ZhciBheD1hWzBdLGF5PWFbMV07cmV0dXJuIG91dFswXT1heCt0KihiWzBdLWF4KSxvdXRbMV09YXkrdCooYlsxXS1heSksb3V0fWZ1bmN0aW9uIHJhbmRvbShvdXQsc2NhbGUpe3NjYWxlPXNjYWxlfHwxO3ZhciByPTIqZ2xNYXRyaXguUkFORE9NKCkqTWF0aC5QSTtyZXR1cm4gb3V0WzBdPU1hdGguY29zKHIpKnNjYWxlLG91dFsxXT1NYXRoLnNpbihyKSpzY2FsZSxvdXR9ZnVuY3Rpb24gdHJhbnNmb3JtTWF0MihvdXQsYSxtKXt2YXIgeD1hWzBdLHk9YVsxXTtyZXR1cm4gb3V0WzBdPW1bMF0qeCttWzJdKnksb3V0WzFdPW1bMV0qeCttWzNdKnksb3V0fWZ1bmN0aW9uIHRyYW5zZm9ybU1hdDJkKG91dCxhLG0pe3ZhciB4PWFbMF0seT1hWzFdO3JldHVybiBvdXRbMF09bVswXSp4K21bMl0qeSttWzRdLG91dFsxXT1tWzFdKngrbVszXSp5K21bNV0sb3V0fWZ1bmN0aW9uIHRyYW5zZm9ybU1hdDMob3V0LGEsbSl7dmFyIHg9YVswXSx5PWFbMV07cmV0dXJuIG91dFswXT1tWzBdKngrbVszXSp5K21bNl0sb3V0WzFdPW1bMV0qeCttWzRdKnkrbVs3XSxvdXR9ZnVuY3Rpb24gdHJhbnNmb3JtTWF0NChvdXQsYSxtKXt2YXIgeD1hWzBdLHk9YVsxXTtyZXR1cm4gb3V0WzBdPW1bMF0qeCttWzRdKnkrbVsxMl0sb3V0WzFdPW1bMV0qeCttWzVdKnkrbVsxM10sb3V0fWZ1bmN0aW9uIHN0cihhKXtyZXR1cm5cInZlYzIoXCIrYVswXStcIiwgXCIrYVsxXStcIilcIn1mdW5jdGlvbiBleGFjdEVxdWFscyhhLGIpe3JldHVybiBhWzBdPT09YlswXSYmYVsxXT09PWJbMV19ZnVuY3Rpb24gZXF1YWxzKGEsYil7dmFyIGEwPWFbMF0sYTE9YVsxXSxiMD1iWzBdLGIxPWJbMV07cmV0dXJuIE1hdGguYWJzKGEwLWIwKTw9Z2xNYXRyaXguRVBTSUxPTipNYXRoLm1heCgxLE1hdGguYWJzKGEwKSxNYXRoLmFicyhiMCkpJiZNYXRoLmFicyhhMS1iMSk8PWdsTWF0cml4LkVQU0lMT04qTWF0aC5tYXgoMSxNYXRoLmFicyhhMSksTWF0aC5hYnMoYjEpKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxleHBvcnRzLmZvckVhY2g9ZXhwb3J0cy5zcXJMZW49ZXhwb3J0cy5zcXJEaXN0PWV4cG9ydHMuZGlzdD1leHBvcnRzLmRpdj1leHBvcnRzLm11bD1leHBvcnRzLnN1Yj1leHBvcnRzLmxlbj12b2lkIDAsZXhwb3J0cy5jcmVhdGU9Y3JlYXRlLGV4cG9ydHMuY2xvbmU9Y2xvbmUsZXhwb3J0cy5mcm9tVmFsdWVzPWZyb21WYWx1ZXMsZXhwb3J0cy5jb3B5PWNvcHksZXhwb3J0cy5zZXQ9c2V0LGV4cG9ydHMuYWRkPWFkZCxleHBvcnRzLnN1YnRyYWN0PXN1YnRyYWN0LGV4cG9ydHMubXVsdGlwbHk9bXVsdGlwbHksZXhwb3J0cy5kaXZpZGU9ZGl2aWRlLGV4cG9ydHMuY2VpbD1jZWlsLGV4cG9ydHMuZmxvb3I9Zmxvb3IsZXhwb3J0cy5taW49bWluLGV4cG9ydHMubWF4PW1heCxleHBvcnRzLnJvdW5kPXJvdW5kLGV4cG9ydHMuc2NhbGU9c2NhbGUsZXhwb3J0cy5zY2FsZUFuZEFkZD1zY2FsZUFuZEFkZCxleHBvcnRzLmRpc3RhbmNlPWRpc3RhbmNlLGV4cG9ydHMuc3F1YXJlZERpc3RhbmNlPXNxdWFyZWREaXN0YW5jZSxleHBvcnRzLmxlbmd0aD1sZW5ndGgsZXhwb3J0cy5zcXVhcmVkTGVuZ3RoPXNxdWFyZWRMZW5ndGgsZXhwb3J0cy5uZWdhdGU9bmVnYXRlLGV4cG9ydHMuaW52ZXJzZT1pbnZlcnNlLGV4cG9ydHMubm9ybWFsaXplPW5vcm1hbGl6ZSxleHBvcnRzLmRvdD1kb3QsZXhwb3J0cy5jcm9zcz1jcm9zcyxleHBvcnRzLmxlcnA9bGVycCxleHBvcnRzLnJhbmRvbT1yYW5kb20sZXhwb3J0cy50cmFuc2Zvcm1NYXQyPXRyYW5zZm9ybU1hdDIsZXhwb3J0cy50cmFuc2Zvcm1NYXQyZD10cmFuc2Zvcm1NYXQyZCxleHBvcnRzLnRyYW5zZm9ybU1hdDM9dHJhbnNmb3JtTWF0MyxleHBvcnRzLnRyYW5zZm9ybU1hdDQ9dHJhbnNmb3JtTWF0NCxleHBvcnRzLnN0cj1zdHIsZXhwb3J0cy5leGFjdEVxdWFscz1leGFjdEVxdWFscyxleHBvcnRzLmVxdWFscz1lcXVhbHM7dmFyIF9jb21tb249X193ZWJwYWNrX3JlcXVpcmVfXygzKSxnbE1hdHJpeD1mdW5jdGlvbihvYmope2lmKG9iaiYmb2JqLl9fZXNNb2R1bGUpcmV0dXJuIG9iajt2YXIgbmV3T2JqPXt9O2lmKG51bGwhPW9iailmb3IodmFyIGtleSBpbiBvYmopT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaixrZXkpJiYobmV3T2JqW2tleV09b2JqW2tleV0pO3JldHVybiBuZXdPYmouZGVmYXVsdD1vYmosbmV3T2JqfShfY29tbW9uKTtleHBvcnRzLmxlbj1sZW5ndGgsZXhwb3J0cy5zdWI9c3VidHJhY3QsZXhwb3J0cy5tdWw9bXVsdGlwbHksZXhwb3J0cy5kaXY9ZGl2aWRlLGV4cG9ydHMuZGlzdD1kaXN0YW5jZSxleHBvcnRzLnNxckRpc3Q9c3F1YXJlZERpc3RhbmNlLGV4cG9ydHMuc3FyTGVuPXNxdWFyZWRMZW5ndGgsZXhwb3J0cy5mb3JFYWNoPWZ1bmN0aW9uKCl7dmFyIHZlYz1jcmVhdGUoKTtyZXR1cm4gZnVuY3Rpb24oYSxzdHJpZGUsb2Zmc2V0LGNvdW50LGZuLGFyZyl7dmFyIGk9dm9pZCAwLGw9dm9pZCAwO2ZvcihzdHJpZGV8fChzdHJpZGU9Miksb2Zmc2V0fHwob2Zmc2V0PTApLGw9Y291bnQ/TWF0aC5taW4oY291bnQqc3RyaWRlK29mZnNldCxhLmxlbmd0aCk6YS5sZW5ndGgsaT1vZmZzZXQ7aTxsO2krPXN0cmlkZSl2ZWNbMF09YVtpXSx2ZWNbMV09YVtpKzFdLGZuKHZlYyx2ZWMsYXJnKSxhW2ldPXZlY1swXSxhW2krMV09dmVjWzFdO3JldHVybiBhfX0oKX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gZ2V0QW5kQXBwbHlFeHRlbnNpb24oZ2wsbmFtZSl7dmFyIGV4dD1nbC5nZXRFeHRlbnNpb24obmFtZSk7aWYoIWV4dClyZXR1cm4hMTt2YXIgc3VmZml4PW5hbWUuc3BsaXQoXCJfXCIpWzBdLHN1ZmZpeFJFPW5ldyBSZWdFeHAoc3VmZml4K1wiJFwiKTtmb3IodmFyIGtleSBpbiBleHQpe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGV4dFtrZXldKXt2YXIgdW5zdWZmaXhlZEtleT1rZXkucmVwbGFjZShzdWZmaXhSRSxcIlwiKTtrZXkuc3Vic3RyaW5nJiYoZ2xbdW5zdWZmaXhlZEtleV09ZXh0W2tleV0uYmluZChleHQpKX19cmV0dXJuITB9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZXhwb3J0cy5kZWZhdWx0PWdldEFuZEFwcGx5RXh0ZW5zaW9ufSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIF9HTFRvb2w9X193ZWJwYWNrX3JlcXVpcmVfXygwKSxfR0xUb29sMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HTFRvb2wpLF9XZWJnbENvbnN0PV9fd2VicGFja19yZXF1aXJlX18oMjMpLF9XZWJnbENvbnN0Mj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9XZWJnbENvbnN0KSxleHBvc2VBdHRyaWJ1dGVzPWZ1bmN0aW9uKCl7Zm9yKHZhciBzIGluIF9XZWJnbENvbnN0Mi5kZWZhdWx0KV9HTFRvb2wyLmRlZmF1bHRbc10/Y29uc29sZS5sb2coXCJhbHJlYWR5IGV4aXN0IDogXCIscyk6X0dMVG9vbDIuZGVmYXVsdFtzXT1fV2ViZ2xDb25zdDIuZGVmYXVsdFtzXX07ZXhwb3J0cy5kZWZhdWx0PWV4cG9zZUF0dHJpYnV0ZXN9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGNoZWNrRmxvYXQoKXtyZXR1cm4gX0dMVG9vbDIuZGVmYXVsdC53ZWJnbDI/X0dMVG9vbDIuZGVmYXVsdC5nbC5GTE9BVDpfR0xUb29sMi5kZWZhdWx0LmdldEV4dGVuc2lvbihcIk9FU190ZXh0dXJlX2Zsb2F0XCIpP19HTFRvb2wyLmRlZmF1bHQuZ2wuRkxPQVQ6KGNvbnNvbGUud2FybihcIlVTSU5HIEZMT0FUIEJVVCBPRVNfdGV4dHVyZV9mbG9hdCBOT1QgU1VQUE9SVEVEXCIpLF9HTFRvb2wyLmRlZmF1bHQuZ2wuVU5TSUdORURfQllURSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZXhwb3J0cy5kZWZhdWx0PWZ1bmN0aW9uKCl7cmV0dXJuIGhhc0NoZWNrZWR8fChfZmxvYXQ9Y2hlY2tGbG9hdCgpKSxfZmxvYXR9O3ZhciBfR0xUb29sPV9fd2VicGFja19yZXF1aXJlX18oMCksX0dMVG9vbDI9ZnVuY3Rpb24ob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX0oX0dMVG9vbCksaGFzQ2hlY2tlZD0hMSxfZmxvYXQ9dm9pZCAwfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBjaGVja0hhbGZGbG9hdCgpe2lmKF9HTFRvb2wyLmRlZmF1bHQud2ViZ2wyKXJldHVybiBfR0xUb29sMi5kZWZhdWx0LmdsLkhBTEZfRkxPQVQ7dmFyIGV4dEhhbGZGbG9hdD1fR0xUb29sMi5kZWZhdWx0LmdldEV4dGVuc2lvbihcIk9FU190ZXh0dXJlX2hhbGZfZmxvYXRcIik7cmV0dXJuIGV4dEhhbGZGbG9hdD9leHRIYWxmRmxvYXQuSEFMRl9GTE9BVF9PRVM6KGNvbnNvbGUud2FybihcIlVTSU5HIEhBTEYgRkxPQVQgQlVUIE9FU190ZXh0dXJlX2hhbGZfZmxvYXQgTk9UIFNVUFBPUlRFRFwiKSxfR0xUb29sMi5kZWZhdWx0LmdsLlVOU0lHTkVEX0JZVEUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGV4cG9ydHMuZGVmYXVsdD1mdW5jdGlvbigpe3JldHVybiBoYXNDaGVja2VkfHwoaGFsZkZsb2F0PWNoZWNrSGFsZkZsb2F0KCkpLGhhbGZGbG9hdH07dmFyIF9HTFRvb2w9X193ZWJwYWNrX3JlcXVpcmVfXygwKSxfR0xUb29sMj1mdW5jdGlvbihvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fShfR0xUb29sKSxoYXNDaGVja2VkPSExLGhhbGZGbG9hdD12b2lkIDB9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGV4cG9ydHMuZGVmYXVsdD1bXCJFWFRfc2hhZGVyX3RleHR1cmVfbG9kXCIsXCJFWFRfc1JHQlwiLFwiRVhUX2ZyYWdfZGVwdGhcIixcIk9FU190ZXh0dXJlX2Zsb2F0XCIsXCJPRVNfdGV4dHVyZV9oYWxmX2Zsb2F0XCIsXCJPRVNfdGV4dHVyZV9mbG9hdF9saW5lYXJcIixcIk9FU190ZXh0dXJlX2hhbGZfZmxvYXRfbGluZWFyXCIsXCJPRVNfc3RhbmRhcmRfZGVyaXZhdGl2ZXNcIixcIldFQkdMX2RlcHRoX3RleHR1cmVcIixcIkVYVF90ZXh0dXJlX2ZpbHRlcl9hbmlzb3Ryb3BpY1wiLFwiT0VTX3ZlcnRleF9hcnJheV9vYmplY3RcIixcIkFOR0xFX2luc3RhbmNlZF9hcnJheXNcIixcIldFQkdMX2RyYXdfYnVmZmVyc1wiXX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oc3RyaW5ncyl7XCJzdHJpbmdcIj09dHlwZW9mIHN0cmluZ3MmJihzdHJpbmdzPVtzdHJpbmdzXSk7Zm9yKHZhciBleHBycz1bXS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSxwYXJ0cz1bXSxpPTA7aTxzdHJpbmdzLmxlbmd0aC0xO2krKylwYXJ0cy5wdXNoKHN0cmluZ3NbaV0sZXhwcnNbaV18fFwiXCIpO3JldHVybiBwYXJ0cy5wdXNoKHN0cmluZ3NbaV0pLHBhcnRzLmpvaW4oXCJcIil9fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9XCIvLyBiYXNpYy5mcmFnXFxuXFxuI2RlZmluZSBTSEFERVJfTkFNRSBCQVNJQ19GUkFHTUVOVFxcblxcbnByZWNpc2lvbiBsb3dwIGZsb2F0O1xcbiNkZWZpbmUgR0xTTElGWSAxXFxudmFyeWluZyB2ZWMyIHZUZXh0dXJlQ29vcmQ7XFxudW5pZm9ybSBmbG9hdCB0aW1lO1xcbi8vIHVuaWZvcm0gc2FtcGxlcjJEIHRleHR1cmU7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gICAgZ2xfRnJhZ0NvbG9yID0gdmVjNCh2VGV4dHVyZUNvb3JkLCBzaW4odGltZSkgKiAuNSArIC41LCAxLjApO1xcbn1cIn0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaXNQb3dlck9mVHdvKHgpe3JldHVybiAwIT09eCYmISh4JngtMSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIF9HTFRvb2w9X193ZWJwYWNrX3JlcXVpcmVfXygwKSxfR0xUb29sMj1mdW5jdGlvbihvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fShfR0xUb29sKSxnZXRUZXh0dXJlUGFyYW1ldGVycz1mdW5jdGlvbihtUGFyYW1zLG1Tb3VyY2UsbVdpZHRoLG1IZWlnaHQpe2lmKCFtUGFyYW1zLm1pbkZpbHRlcil7dmFyIG1pbkZpbHRlcj1fR0xUb29sMi5kZWZhdWx0LkxJTkVBUjttV2lkdGgmJm1XaWR0aCYmaXNQb3dlck9mVHdvKG1XaWR0aCkmJmlzUG93ZXJPZlR3byhtSGVpZ2h0KSYmKG1pbkZpbHRlcj1fR0xUb29sMi5kZWZhdWx0Lk5FQVJFU1RfTUlQTUFQX0xJTkVBUiksbVBhcmFtcy5taW5GaWx0ZXI9bWluRmlsdGVyfXJldHVybiBtUGFyYW1zLm1pcG1hcD1tUGFyYW1zLm1pcG1hcHx8ITAsbVBhcmFtcy5tYWdGaWx0ZXI9bVBhcmFtcy5tYWdGaWx0ZXJ8fF9HTFRvb2wyLmRlZmF1bHQuTElORUFSLG1QYXJhbXMud3JhcFM9bVBhcmFtcy53cmFwU3x8X0dMVG9vbDIuZGVmYXVsdC5DTEFNUF9UT19FREdFLG1QYXJhbXMud3JhcFQ9bVBhcmFtcy53cmFwVHx8X0dMVG9vbDIuZGVmYXVsdC5DTEFNUF9UT19FREdFLG1QYXJhbXMuaW50ZXJuYWxGb3JtYXQ9bVBhcmFtcy5pbnRlcm5hbEZvcm1hdHx8X0dMVG9vbDIuZGVmYXVsdC5SR0JBLG1QYXJhbXMuZm9ybWF0PW1QYXJhbXMuZm9ybWF0fHxfR0xUb29sMi5kZWZhdWx0LlJHQkEsbVBhcmFtcy5wcmVtdWx0aXBseUFscGhhPW1QYXJhbXMucHJlbXVsdGlwbHlBbHBoYXx8ITEsbVBhcmFtcy5sZXZlbD1tUGFyYW1zLmxldmVsfHwwLG1QYXJhbXMuYW5pc290cm9weT1tUGFyYW1zLmFuaXNvdHJvcHl8fDAsbVBhcmFtc307ZXhwb3J0cy5kZWZhdWx0PWdldFRleHR1cmVQYXJhbWV0ZXJzfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBwYXJzZUhlYWRlcnMoYXJyYXlCdWZmZXIpe3ZhciBoZWFkZXI9bmV3IEludDMyQXJyYXkoYXJyYXlCdWZmZXIsMCxoZWFkZXJMZW5ndGhJbnQpO2lmKGhlYWRlcltvZmZfbWFnaWNdIT09RERTX01BR0lDKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgbWFnaWMgbnVtYmVyIGluIEREUyBoZWFkZXJcIik7aWYoIWhlYWRlcltvZmZfcGZGbGFnc10mRERQRl9GT1VSQ0MpdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgZm9ybWF0LCBtdXN0IGNvbnRhaW4gYSBGb3VyQ0MgY29kZVwiKTt2YXIgYmxvY2tCeXRlcyxmb3JtYXQsZm91ckNDPWhlYWRlcltvZmZfcGZGb3VyQ0NdO3N3aXRjaChmb3VyQ0Mpe2Nhc2UgRk9VUkNDX0RYVDE6YmxvY2tCeXRlcz04LGZvcm1hdD1cImR4dDFcIjticmVhaztjYXNlIEZPVVJDQ19EWFQzOmJsb2NrQnl0ZXM9MTYsZm9ybWF0PVwiZHh0M1wiO2JyZWFrO2Nhc2UgRk9VUkNDX0RYVDU6YmxvY2tCeXRlcz0xNixmb3JtYXQ9XCJkeHQ1XCI7YnJlYWs7Y2FzZSBGT1VSQ0NfRlAzMkY6Zm9ybWF0PVwicmdiYTMyZlwiO2JyZWFrO2Nhc2UgRk9VUkNDX0RYMTA6dmFyIGR4MTBIZWFkZXI9bmV3IFVpbnQzMkFycmF5KGFycmF5QnVmZmVyLnNsaWNlKDEyOCwxNDgpKTtmb3JtYXQ9ZHgxMEhlYWRlclswXTt2YXIgcmVzb3VyY2VEaW1lbnNpb249ZHgxMEhlYWRlclsxXTtkeDEwSGVhZGVyWzJdLGR4MTBIZWFkZXJbM10sZHgxMEhlYWRlcls0XTtpZihyZXNvdXJjZURpbWVuc2lvbiE9PUQzRDEwX1JFU09VUkNFX0RJTUVOU0lPTl9URVhUVVJFMkR8fGZvcm1hdCE9PURYR0lfRk9STUFUX1IzMkczMkIzMkEzMl9GTE9BVCl0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBEWDEwIHRleHR1cmUgZm9ybWF0IFwiK2Zvcm1hdCk7Zm9ybWF0PVwicmdiYTMyZlwiO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgRm91ckNDIGNvZGU6IFwiK2ludDMyVG9Gb3VyQ0MoZm91ckNDKSl9dmFyIGZsYWdzPWhlYWRlcltvZmZfZmxhZ3NdLG1pcG1hcENvdW50PTE7ZmxhZ3MmRERTRF9NSVBNQVBDT1VOVCYmKG1pcG1hcENvdW50PU1hdGgubWF4KDEsaGVhZGVyW29mZl9taXBtYXBDb3VudF0pKTt2YXIgY3ViZW1hcD0hMTtoZWFkZXJbb2ZmX2NhcHMyXSZERFNDQVBTMl9DVUJFTUFQJiYoY3ViZW1hcD0hMCk7dmFyIGRhdGFMZW5ndGgsd2lkdGg9aGVhZGVyW29mZl93aWR0aF0saGVpZ2h0PWhlYWRlcltvZmZfaGVpZ2h0XSxkYXRhT2Zmc2V0PWhlYWRlcltvZmZfc2l6ZV0rNCx0ZXhXaWR0aD13aWR0aCx0ZXhIZWlnaHQ9aGVpZ2h0LGltYWdlcz1bXTtpZihmb3VyQ0M9PT1GT1VSQ0NfRFgxMCYmKGRhdGFPZmZzZXQrPTIwKSxjdWJlbWFwKWZvcih2YXIgZj0wO2Y8NjtmKyspe2lmKFwicmdiYTMyZlwiIT09Zm9ybWF0KXRocm93IG5ldyBFcnJvcihcIk9ubHkgUkdCQTMyZiBjdWJlbWFwcyBhcmUgc3VwcG9ydGVkXCIpO3dpZHRoPXRleFdpZHRoLGhlaWdodD10ZXhIZWlnaHQ7Zm9yKHZhciByZXF1aXJlZE1pcExldmVscz1NYXRoLmxvZyh3aWR0aCkvTWF0aC5sb2coMikrMSxpPTA7aTxyZXF1aXJlZE1pcExldmVscztpKyspZGF0YUxlbmd0aD13aWR0aCpoZWlnaHQqMTYsaW1hZ2VzLnB1c2goe29mZnNldDpkYXRhT2Zmc2V0LGxlbmd0aDpkYXRhTGVuZ3RoLHNoYXBlOlt3aWR0aCxoZWlnaHRdfSksaTxtaXBtYXBDb3VudCYmKGRhdGFPZmZzZXQrPWRhdGFMZW5ndGgpLHdpZHRoPU1hdGguZmxvb3Iod2lkdGgvMiksaGVpZ2h0PU1hdGguZmxvb3IoaGVpZ2h0LzIpfWVsc2UgZm9yKHZhciBpPTA7aTxtaXBtYXBDb3VudDtpKyspZGF0YUxlbmd0aD1NYXRoLm1heCg0LHdpZHRoKS80Kk1hdGgubWF4KDQsaGVpZ2h0KS80KmJsb2NrQnl0ZXMsaW1hZ2VzLnB1c2goe29mZnNldDpkYXRhT2Zmc2V0LGxlbmd0aDpkYXRhTGVuZ3RoLHNoYXBlOlt3aWR0aCxoZWlnaHRdfSksZGF0YU9mZnNldCs9ZGF0YUxlbmd0aCx3aWR0aD1NYXRoLmZsb29yKHdpZHRoLzIpLGhlaWdodD1NYXRoLmZsb29yKGhlaWdodC8yKTtyZXR1cm57c2hhcGU6W3RleFdpZHRoLHRleEhlaWdodF0saW1hZ2VzOmltYWdlcyxmb3JtYXQ6Zm9ybWF0LGZsYWdzOmZsYWdzLGN1YmVtYXA6Y3ViZW1hcH19ZnVuY3Rpb24gZm91ckNDVG9JbnQzMih2YWx1ZSl7cmV0dXJuIHZhbHVlLmNoYXJDb2RlQXQoMCkrKHZhbHVlLmNoYXJDb2RlQXQoMSk8PDgpKyh2YWx1ZS5jaGFyQ29kZUF0KDIpPDwxNikrKHZhbHVlLmNoYXJDb2RlQXQoMyk8PDI0KX1mdW5jdGlvbiBpbnQzMlRvRm91ckNDKHZhbHVlKXtyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZSgyNTUmdmFsdWUsdmFsdWU+PjgmMjU1LHZhbHVlPj4xNiYyNTUsdmFsdWU+PjI0JjI1NSl9dmFyIEREU19NQUdJQz01NDIzMjc4NzYsRERTRF9NSVBNQVBDT1VOVD0xMzEwNzIsRERQRl9GT1VSQ0M9NCxGT1VSQ0NfRFhUMT1mb3VyQ0NUb0ludDMyKFwiRFhUMVwiKSxGT1VSQ0NfRFhUMz1mb3VyQ0NUb0ludDMyKFwiRFhUM1wiKSxGT1VSQ0NfRFhUNT1mb3VyQ0NUb0ludDMyKFwiRFhUNVwiKSxGT1VSQ0NfRFgxMD1mb3VyQ0NUb0ludDMyKFwiRFgxMFwiKSxGT1VSQ0NfRlAzMkY9MTE2LEREU0NBUFMyX0NVQkVNQVA9NTEyLEQzRDEwX1JFU09VUkNFX0RJTUVOU0lPTl9URVhUVVJFMkQ9MyxEWEdJX0ZPUk1BVF9SMzJHMzJCMzJBMzJfRkxPQVQ9MixoZWFkZXJMZW5ndGhJbnQ9MzEsb2ZmX21hZ2ljPTAsb2ZmX3NpemU9MSxvZmZfZmxhZ3M9MixvZmZfaGVpZ2h0PTMsb2ZmX3dpZHRoPTQsb2ZmX21pcG1hcENvdW50PTcsb2ZmX3BmRmxhZ3M9MjAsb2ZmX3BmRm91ckNDPTIxLG9mZl9jYXBzMj0yODttb2R1bGUuZXhwb3J0cz1wYXJzZUhlYWRlcnN9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX1mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsQ29uc3RydWN0b3Ipe2lmKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX2NyZWF0ZUNsYXNzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQscHJvcHMpe2Zvcih2YXIgaT0wO2k8cHJvcHMubGVuZ3RoO2krKyl7dmFyIGRlc2NyaXB0b3I9cHJvcHNbaV07ZGVzY3JpcHRvci5lbnVtZXJhYmxlPWRlc2NyaXB0b3IuZW51bWVyYWJsZXx8ITEsZGVzY3JpcHRvci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gZGVzY3JpcHRvciYmKGRlc2NyaXB0b3Iud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsZGVzY3JpcHRvci5rZXksZGVzY3JpcHRvcil9fXJldHVybiBmdW5jdGlvbihDb25zdHJ1Y3Rvcixwcm90b1Byb3BzLHN0YXRpY1Byb3BzKXtyZXR1cm4gcHJvdG9Qcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyksc3RhdGljUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3Isc3RhdGljUHJvcHMpLENvbnN0cnVjdG9yfX0oKSxfR0xUb29sPV9fd2VicGFja19yZXF1aXJlX18oMCksX0dMVG9vbDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfR0xUb29sKSxfR0xDdWJlVGV4dHVyZT1fX3dlYnBhY2tfcmVxdWlyZV9fKDI3KSxfR0xDdWJlVGV4dHVyZTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfR0xDdWJlVGV4dHVyZSksZ2w9dm9pZCAwLEN1YmVGcmFtZUJ1ZmZlcj1mdW5jdGlvbigpe2Z1bmN0aW9uIEN1YmVGcmFtZUJ1ZmZlcihzaXplKXt2YXIgbVBhcmFtZXRlcnM9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9O19jbGFzc0NhbGxDaGVjayh0aGlzLEN1YmVGcmFtZUJ1ZmZlciksZ2w9X0dMVG9vbDIuZGVmYXVsdC5nbCx0aGlzLl9zaXplPXNpemUsdGhpcy5tYWdGaWx0ZXI9bVBhcmFtZXRlcnMubWFnRmlsdGVyfHxnbC5MSU5FQVIsdGhpcy5taW5GaWx0ZXI9bVBhcmFtZXRlcnMubWluRmlsdGVyfHxnbC5MSU5FQVIsdGhpcy53cmFwUz1tUGFyYW1ldGVycy53cmFwU3x8Z2wuQ0xBTVBfVE9fRURHRSx0aGlzLndyYXBUPW1QYXJhbWV0ZXJzLndyYXBUfHxnbC5DTEFNUF9UT19FREdFLHRoaXMuX2luaXQoKX1yZXR1cm4gX2NyZWF0ZUNsYXNzKEN1YmVGcmFtZUJ1ZmZlcixbe2tleTpcIl9pbml0XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLnRleHR1cmU9Z2wuY3JlYXRlVGV4dHVyZSgpLHRoaXMuZ2xUZXh0dXJlPW5ldyBfR0xDdWJlVGV4dHVyZTIuZGVmYXVsdCh0aGlzLnRleHR1cmUse30sITApLGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfQ1VCRV9NQVAsdGhpcy50ZXh0dXJlKSxnbC50ZXhQYXJhbWV0ZXJpKGdsLlRFWFRVUkVfQ1VCRV9NQVAsZ2wuVEVYVFVSRV9NQUdfRklMVEVSLHRoaXMubWFnRmlsdGVyKSxnbC50ZXhQYXJhbWV0ZXJpKGdsLlRFWFRVUkVfQ1VCRV9NQVAsZ2wuVEVYVFVSRV9NSU5fRklMVEVSLHRoaXMubWluRmlsdGVyKSxnbC50ZXhQYXJhbWV0ZXJpKGdsLlRFWFRVUkVfQ1VCRV9NQVAsZ2wuVEVYVFVSRV9XUkFQX1MsdGhpcy53cmFwUyksZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFX0NVQkVfTUFQLGdsLlRFWFRVUkVfV1JBUF9ULHRoaXMud3JhcFQpO2Zvcih2YXIgdGFyZ2V0cz1bZ2wuVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9YLGdsLlRFWFRVUkVfQ1VCRV9NQVBfTkVHQVRJVkVfWCxnbC5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1ksZ2wuVEVYVFVSRV9DVUJFX01BUF9ORUdBVElWRV9ZLGdsLlRFWFRVUkVfQ1VCRV9NQVBfUE9TSVRJVkVfWixnbC5URVhUVVJFX0NVQkVfTUFQX05FR0FUSVZFX1pdLGk9MDtpPHRhcmdldHMubGVuZ3RoO2krKylnbC5waXhlbFN0b3JlaShnbC5VTlBBQ0tfRkxJUF9ZX1dFQkdMLCExKSxnbC50ZXhJbWFnZTJEKHRhcmdldHNbaV0sMCxnbC5SR0JBLHRoaXMud2lkdGgsdGhpcy5oZWlnaHQsMCxnbC5SR0JBLGdsLkZMT0FULG51bGwpO3RoaXMuX2ZyYW1lQnVmZmVycz1bXTtmb3IodmFyIF9pPTA7X2k8dGFyZ2V0cy5sZW5ndGg7X2krKyl7dmFyIGZyYW1lQnVmZmVyPWdsLmNyZWF0ZUZyYW1lYnVmZmVyKCk7Z2wuYmluZEZyYW1lYnVmZmVyKGdsLkZSQU1FQlVGRkVSLGZyYW1lQnVmZmVyKSxnbC5mcmFtZWJ1ZmZlclRleHR1cmUyRChnbC5GUkFNRUJVRkZFUixnbC5DT0xPUl9BVFRBQ0hNRU5UMCx0YXJnZXRzW19pXSx0aGlzLnRleHR1cmUsMCk7dmFyIHN0YXR1cz1nbC5jaGVja0ZyYW1lYnVmZmVyU3RhdHVzKGdsLkZSQU1FQlVGRkVSKTtzdGF0dXMhPT1nbC5GUkFNRUJVRkZFUl9DT01QTEVURSYmY29uc29sZS5sb2coXCInZ2wuY2hlY2tGcmFtZWJ1ZmZlclN0YXR1cygpIHJldHVybmVkICdcIitzdGF0dXMpLHRoaXMuX2ZyYW1lQnVmZmVycy5wdXNoKGZyYW1lQnVmZmVyKX1nbC5iaW5kRnJhbWVidWZmZXIoZ2wuRlJBTUVCVUZGRVIsbnVsbCksZ2wuYmluZFJlbmRlcmJ1ZmZlcihnbC5SRU5ERVJCVUZGRVIsbnVsbCksZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV9DVUJFX01BUCxudWxsKX19LHtrZXk6XCJiaW5kXCIsdmFsdWU6ZnVuY3Rpb24obVRhcmdldEluZGV4KXtfR0xUb29sMi5kZWZhdWx0LnZpZXdwb3J0KDAsMCx0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KSxnbC5iaW5kRnJhbWVidWZmZXIoZ2wuRlJBTUVCVUZGRVIsdGhpcy5fZnJhbWVCdWZmZXJzW21UYXJnZXRJbmRleF0pfX0se2tleTpcInVuYmluZFwiLHZhbHVlOmZ1bmN0aW9uKCl7Z2wuYmluZEZyYW1lYnVmZmVyKGdsLkZSQU1FQlVGRkVSLG51bGwpLF9HTFRvb2wyLmRlZmF1bHQudmlld3BvcnQoMCwwLF9HTFRvb2wyLmRlZmF1bHQud2lkdGgsX0dMVG9vbDIuZGVmYXVsdC5oZWlnaHQpfX0se2tleTpcImdldFRleHR1cmVcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdsVGV4dHVyZX19LHtrZXk6XCJ3aWR0aFwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zaXplfX0se2tleTpcImhlaWdodFwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zaXplfX1dKSxDdWJlRnJhbWVCdWZmZXJ9KCk7ZXhwb3J0cy5kZWZhdWx0PUN1YmVGcmFtZUJ1ZmZlcn0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fWZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIGlzUG93ZXJPZlR3byh4KXtyZXR1cm4gMCE9PXgmJiEoeCZ4LTEpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHwhMSxkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBkZXNjcmlwdG9yJiYoZGVzY3JpcHRvci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxkZXNjcmlwdG9yLmtleSxkZXNjcmlwdG9yKX19cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe3JldHVybiBwcm90b1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSxwcm90b1Byb3BzKSxzdGF0aWNQcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyksQ29uc3RydWN0b3J9fSgpLF9HTFRvb2w9X193ZWJwYWNrX3JlcXVpcmVfXygwKSxfR0xUb29sMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HTFRvb2wpLF9HTFRleHR1cmU9X193ZWJwYWNrX3JlcXVpcmVfXygyNSksX0dMVGV4dHVyZTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfR0xUZXh0dXJlKSxnbD12b2lkIDAsTXVsdGlzYW1wbGVGcmFtZUJ1ZmZlcj1mdW5jdGlvbigpe2Z1bmN0aW9uIE11bHRpc2FtcGxlRnJhbWVCdWZmZXIobVdpZHRoLG1IZWlnaHQpe3ZhciBtUGFyYW1ldGVycz1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06e307X2NsYXNzQ2FsbENoZWNrKHRoaXMsTXVsdGlzYW1wbGVGcmFtZUJ1ZmZlciksZ2w9X0dMVG9vbDIuZGVmYXVsdC5nbCx0aGlzLndpZHRoPW1XaWR0aCx0aGlzLmhlaWdodD1tSGVpZ2h0LHRoaXMubWFnRmlsdGVyPW1QYXJhbWV0ZXJzLm1hZ0ZpbHRlcnx8Z2wuTElORUFSLHRoaXMubWluRmlsdGVyPW1QYXJhbWV0ZXJzLm1pbkZpbHRlcnx8Z2wuTElORUFSLHRoaXMud3JhcFM9bVBhcmFtZXRlcnMud3JhcFN8fGdsLkNMQU1QX1RPX0VER0UsdGhpcy53cmFwVD1tUGFyYW1ldGVycy53cmFwVHx8Z2wuQ0xBTVBfVE9fRURHRSx0aGlzLnVzZURlcHRoPW1QYXJhbWV0ZXJzLnVzZURlcHRofHwhMCx0aGlzLnVzZVN0ZW5jaWw9bVBhcmFtZXRlcnMudXNlU3RlbmNpbHx8ITEsdGhpcy50ZXhlbFR5cGU9bVBhcmFtZXRlcnMudHlwZSx0aGlzLl9udW1TYW1wbGU9bVBhcmFtZXRlcnMubnVtU2FtcGxlfHw4LGlzUG93ZXJPZlR3byh0aGlzLndpZHRoKSYmaXNQb3dlck9mVHdvKHRoaXMuaGVpZ2h0KXx8KHRoaXMud3JhcFM9dGhpcy53cmFwVD1nbC5DTEFNUF9UT19FREdFLHRoaXMubWluRmlsdGVyPT09Z2wuTElORUFSX01JUE1BUF9ORUFSRVNUJiYodGhpcy5taW5GaWx0ZXI9Z2wuTElORUFSKSksdGhpcy5faW5pdCgpfXJldHVybiBfY3JlYXRlQ2xhc3MoTXVsdGlzYW1wbGVGcmFtZUJ1ZmZlcixbe2tleTpcIl9pbml0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdGV4ZWxUeXBlPWdsLlVOU0lHTkVEX0JZVEU7dGhpcy50ZXhlbFR5cGUmJih0ZXhlbFR5cGU9dGhpcy50ZXhlbFR5cGUpLHRoaXMudGV4ZWxUeXBlPXRleGVsVHlwZSx0aGlzLmZyYW1lQnVmZmVyPWdsLmNyZWF0ZUZyYW1lYnVmZmVyKCksdGhpcy5mcmFtZUJ1ZmZlckNvbG9yPWdsLmNyZWF0ZUZyYW1lYnVmZmVyKCksdGhpcy5yZW5kZXJCdWZmZXJDb2xvcj1nbC5jcmVhdGVSZW5kZXJidWZmZXIoKSx0aGlzLnJlbmRlckJ1ZmZlckRlcHRoPWdsLmNyZWF0ZVJlbmRlcmJ1ZmZlcigpLHRoaXMuZ2xUZXh0dXJlPXRoaXMuX2NyZWF0ZVRleHR1cmUoKSx0aGlzLmdsRGVwdGhUZXh0dXJlPXRoaXMuX2NyZWF0ZVRleHR1cmUoZ2wuREVQVEhfQ09NUE9ORU5UMTYsZ2wuVU5TSUdORURfU0hPUlQsZ2wuREVQVEhfQ09NUE9ORU5ULCEwKSxnbC5iaW5kUmVuZGVyYnVmZmVyKGdsLlJFTkRFUkJVRkZFUix0aGlzLnJlbmRlckJ1ZmZlckNvbG9yKSxnbC5yZW5kZXJidWZmZXJTdG9yYWdlTXVsdGlzYW1wbGUoZ2wuUkVOREVSQlVGRkVSLHRoaXMuX251bVNhbXBsZSxnbC5SR0JBOCx0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KSxnbC5iaW5kUmVuZGVyYnVmZmVyKGdsLlJFTkRFUkJVRkZFUix0aGlzLnJlbmRlckJ1ZmZlckRlcHRoKSxnbC5yZW5kZXJidWZmZXJTdG9yYWdlTXVsdGlzYW1wbGUoZ2wuUkVOREVSQlVGRkVSLHRoaXMuX251bVNhbXBsZSxnbC5ERVBUSF9DT01QT05FTlQxNix0aGlzLndpZHRoLHRoaXMuaGVpZ2h0KSxnbC5iaW5kRnJhbWVidWZmZXIoZ2wuRlJBTUVCVUZGRVIsdGhpcy5mcmFtZUJ1ZmZlciksZ2wuZnJhbWVidWZmZXJSZW5kZXJidWZmZXIoZ2wuRlJBTUVCVUZGRVIsZ2wuQ09MT1JfQVRUQUNITUVOVDAsZ2wuUkVOREVSQlVGRkVSLHRoaXMucmVuZGVyQnVmZmVyQ29sb3IpLGdsLmZyYW1lYnVmZmVyUmVuZGVyYnVmZmVyKGdsLkZSQU1FQlVGRkVSLGdsLkRFUFRIX0FUVEFDSE1FTlQsZ2wuUkVOREVSQlVGRkVSLHRoaXMucmVuZGVyQnVmZmVyRGVwdGgpLGdsLmJpbmRGcmFtZWJ1ZmZlcihnbC5GUkFNRUJVRkZFUixudWxsKSxnbC5iaW5kRnJhbWVidWZmZXIoZ2wuRlJBTUVCVUZGRVIsdGhpcy5mcmFtZUJ1ZmZlckNvbG9yKSxnbC5mcmFtZWJ1ZmZlclRleHR1cmUyRChnbC5GUkFNRUJVRkZFUixnbC5DT0xPUl9BVFRBQ0hNRU5UMCxnbC5URVhUVVJFXzJELHRoaXMuZ2xUZXh0dXJlLnRleHR1cmUsMCksZ2wuYmluZEZyYW1lYnVmZmVyKGdsLkZSQU1FQlVGRkVSLG51bGwpfX0se2tleTpcIl9jcmVhdGVUZXh0dXJlXCIsdmFsdWU6ZnVuY3Rpb24obUludGVybmFsZm9ybWF0LG1UZXhlbFR5cGUsbUZvcm1hdCl7dmFyIGZvcmNlTmVhcmVzdD1hcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXSYmYXJndW1lbnRzWzNdO3ZvaWQgMD09PW1JbnRlcm5hbGZvcm1hdCYmKG1JbnRlcm5hbGZvcm1hdD1nbC5SR0JBKSx2b2lkIDA9PT1tVGV4ZWxUeXBlJiYobVRleGVsVHlwZT10aGlzLnRleGVsVHlwZSksbUZvcm1hdHx8KG1Gb3JtYXQ9bUludGVybmFsZm9ybWF0KTt2YXIgdD1nbC5jcmVhdGVUZXh0dXJlKCksZ2x0PW5ldyBfR0xUZXh0dXJlMi5kZWZhdWx0KHQsITApLG1hZ0ZpbHRlcj1mb3JjZU5lYXJlc3Q/X0dMVG9vbDIuZGVmYXVsdC5ORUFSRVNUOnRoaXMubWFnRmlsdGVyLG1pbkZpbHRlcj1mb3JjZU5lYXJlc3Q/X0dMVG9vbDIuZGVmYXVsdC5ORUFSRVNUOnRoaXMubWluRmlsdGVyO3JldHVybiBnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELHQpLGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV8yRCxnbC5URVhUVVJFX01BR19GSUxURVIsbWFnRmlsdGVyKSxnbC50ZXhQYXJhbWV0ZXJpKGdsLlRFWFRVUkVfMkQsZ2wuVEVYVFVSRV9NSU5fRklMVEVSLG1pbkZpbHRlciksZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELGdsLlRFWFRVUkVfV1JBUF9TLHRoaXMud3JhcFMpLGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV8yRCxnbC5URVhUVVJFX1dSQVBfVCx0aGlzLndyYXBUKSxnbC50ZXhJbWFnZTJEKGdsLlRFWFRVUkVfMkQsMCxtSW50ZXJuYWxmb3JtYXQsdGhpcy53aWR0aCx0aGlzLmhlaWdodCwwLG1Gb3JtYXQsbVRleGVsVHlwZSxudWxsKSxnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELG51bGwpLGdsdH19LHtrZXk6XCJiaW5kXCIsdmFsdWU6ZnVuY3Rpb24oKXsoIShhcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXSl8fGFyZ3VtZW50c1swXSkmJl9HTFRvb2wyLmRlZmF1bHQudmlld3BvcnQoMCwwLHRoaXMud2lkdGgsdGhpcy5oZWlnaHQpLGdsLmJpbmRGcmFtZWJ1ZmZlcihnbC5GUkFNRUJVRkZFUix0aGlzLmZyYW1lQnVmZmVyKX19LHtrZXk6XCJ1bmJpbmRcIix2YWx1ZTpmdW5jdGlvbigpeyghKGFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdKXx8YXJndW1lbnRzWzBdKSYmX0dMVG9vbDIuZGVmYXVsdC52aWV3cG9ydCgwLDAsX0dMVG9vbDIuZGVmYXVsdC53aWR0aCxfR0xUb29sMi5kZWZhdWx0LmhlaWdodCk7dmFyIHdpZHRoPXRoaXMud2lkdGgsaGVpZ2h0PXRoaXMuaGVpZ2h0O2dsLmJpbmRGcmFtZWJ1ZmZlcihnbC5GUkFNRUJVRkZFUixudWxsKSxnbC5iaW5kRnJhbWVidWZmZXIoZ2wuUkVBRF9GUkFNRUJVRkZFUix0aGlzLmZyYW1lQnVmZmVyKSxnbC5iaW5kRnJhbWVidWZmZXIoZ2wuRFJBV19GUkFNRUJVRkZFUix0aGlzLmZyYW1lQnVmZmVyQ29sb3IpLGdsLmNsZWFyQnVmZmVyZnYoZ2wuQ09MT1IsMCxbMCwwLDAsMF0pLGdsLmJsaXRGcmFtZWJ1ZmZlcigwLDAsd2lkdGgsaGVpZ2h0LDAsMCx3aWR0aCxoZWlnaHQsZ2wuQ09MT1JfQlVGRkVSX0JJVCxfR0xUb29sMi5kZWZhdWx0Lk5FQVJFU1QpLGdsLmJpbmRGcmFtZWJ1ZmZlcihnbC5GUkFNRUJVRkZFUixudWxsKX19LHtrZXk6XCJnZXRUZXh0dXJlXCIsdmFsdWU6ZnVuY3Rpb24oKXthcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXSYmYXJndW1lbnRzWzBdO3JldHVybiB0aGlzLmdsVGV4dHVyZX19LHtrZXk6XCJnZXREZXB0aFRleHR1cmVcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdsRGVwdGhUZXh0dXJlfX1dKSxNdWx0aXNhbXBsZUZyYW1lQnVmZmVyfSgpO2V4cG9ydHMuZGVmYXVsdD1NdWx0aXNhbXBsZUZyYW1lQnVmZmVyfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIF9jcmVhdGVDbGFzcz1mdW5jdGlvbigpe2Z1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LHByb3BzKXtmb3IodmFyIGk9MDtpPHByb3BzLmxlbmd0aDtpKyspe3ZhciBkZXNjcmlwdG9yPXByb3BzW2ldO2Rlc2NyaXB0b3IuZW51bWVyYWJsZT1kZXNjcmlwdG9yLmVudW1lcmFibGV8fCExLGRlc2NyaXB0b3IuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGRlc2NyaXB0b3ImJihkZXNjcmlwdG9yLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LGRlc2NyaXB0b3Iua2V5LGRlc2NyaXB0b3IpfX1yZXR1cm4gZnVuY3Rpb24oQ29uc3RydWN0b3IscHJvdG9Qcm9wcyxzdGF0aWNQcm9wcyl7cmV0dXJuIHByb3RvUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLHByb3RvUHJvcHMpLHN0YXRpY1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLHN0YXRpY1Byb3BzKSxDb25zdHJ1Y3Rvcn19KCksX0dMVG9vbD1fX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9HTFRvb2wyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0dMVG9vbCksX0dMU2hhZGVyPV9fd2VicGFja19yZXF1aXJlX18oMiksX0dMU2hhZGVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HTFNoYWRlciksX01lc2g9X193ZWJwYWNrX3JlcXVpcmVfXyg1KSxfTWVzaDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfTWVzaCksZ2w9dm9pZCAwLFRyYW5zZm9ybUZlZWRiYWNrT2JqZWN0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gVHJhbnNmb3JtRmVlZGJhY2tPYmplY3Qoc3RyVmVydGV4U2hhZGVyLHN0ckZyYWdtZW50U2hhZGVyKXtfY2xhc3NDYWxsQ2hlY2sodGhpcyxUcmFuc2Zvcm1GZWVkYmFja09iamVjdCksZ2w9X0dMVG9vbDIuZGVmYXVsdC5nbCx0aGlzLl92cz1zdHJWZXJ0ZXhTaGFkZXIsdGhpcy5fZnM9c3RyRnJhZ21lbnRTaGFkZXIsdGhpcy5faW5pdCgpfXJldHVybiBfY3JlYXRlQ2xhc3MoVHJhbnNmb3JtRmVlZGJhY2tPYmplY3QsW3trZXk6XCJfaW5pdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fbWVzaEN1cnJlbnQ9bmV3IF9NZXNoMi5kZWZhdWx0LHRoaXMuX21lc2hUYXJnZXQ9bmV3IF9NZXNoMi5kZWZhdWx0LHRoaXMuX251bVBvaW50cz0tMSx0aGlzLl92YXJ5aW5ncz1bXSx0aGlzLnRyYW5zZm9ybUZlZWRiYWNrPWdsLmNyZWF0ZVRyYW5zZm9ybUZlZWRiYWNrKCl9fSx7a2V5OlwiYnVmZmVyRGF0YVwiLHZhbHVlOmZ1bmN0aW9uKG1EYXRhLG1OYW1lLG1WYXJ5aW5nTmFtZSl7dmFyIGlzVHJhbnNmb3JtRmVlZGJhY2s9ISFtVmFyeWluZ05hbWU7Y29uc29sZS5sb2coXCJpcyBUcmFuc2Zvcm0gZmVlZGJhY2sgP1wiLG1OYW1lLGlzVHJhbnNmb3JtRmVlZGJhY2spLHRoaXMuX21lc2hDdXJyZW50LmJ1ZmZlckRhdGEobURhdGEsbU5hbWUsbnVsbCxnbC5TVFJFQU1fQ09QWSwhMSksdGhpcy5fbWVzaFRhcmdldC5idWZmZXJEYXRhKG1EYXRhLG1OYW1lLG51bGwsZ2wuU1RSRUFNX0NPUFksITEpLGlzVHJhbnNmb3JtRmVlZGJhY2smJih0aGlzLl92YXJ5aW5ncy5wdXNoKG1WYXJ5aW5nTmFtZSksdGhpcy5fbnVtUG9pbnRzPDAmJih0aGlzLl9udW1Qb2ludHM9bURhdGEubGVuZ3RoKSl9fSx7a2V5OlwiYnVmZmVySW5kZXhcIix2YWx1ZTpmdW5jdGlvbihtQXJyYXlJbmRpY2VzKXt0aGlzLl9tZXNoQ3VycmVudC5idWZmZXJJbmRleChtQXJyYXlJbmRpY2VzKSx0aGlzLl9tZXNoVGFyZ2V0LmJ1ZmZlckluZGV4KG1BcnJheUluZGljZXMpfX0se2tleTpcInVuaWZvcm1cIix2YWx1ZTpmdW5jdGlvbihtTmFtZSxtVHlwZSxtVmFsdWUpe3RoaXMuc2hhZGVyJiZ0aGlzLnNoYWRlci51bmlmb3JtKG1OYW1lLG1UeXBlLG1WYWx1ZSl9fSx7a2V5OlwiZ2VuZXJhdGVcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuc2hhZGVyPW5ldyBfR0xTaGFkZXIyLmRlZmF1bHQodGhpcy5fdnMsdGhpcy5fZnMsdGhpcy5fdmFyeWluZ3MpfX0se2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5zaGFkZXJ8fHRoaXMuZ2VuZXJhdGUoKSx0aGlzLnNoYWRlci5iaW5kKCksX0dMVG9vbDIuZGVmYXVsdC5kcmF3VHJhbnNmb3JtRmVlZGJhY2sodGhpcyksdGhpcy5fc3dhcCgpfX0se2tleTpcIl9zd2FwXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdG1wPXRoaXMuX21lc2hDdXJyZW50O3RoaXMuX21lc2hDdXJyZW50PXRoaXMuX21lc2hUYXJnZXQsdGhpcy5fbWVzaFRhcmdldD10bXB9fSx7a2V5OlwibnVtUG9pbnRzXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX251bVBvaW50c319LHtrZXk6XCJtZXNoQ3VycmVudFwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tZXNoQ3VycmVudH19LHtrZXk6XCJtZXNoVGFyZ2V0XCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21lc2hUYXJnZXR9fSx7a2V5OlwibWVzaFNvdXJjZVwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tZXNoQ3VycmVudH19LHtrZXk6XCJtZXNoRGVzdGluYXRpb25cIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWVzaFRhcmdldH19XSksVHJhbnNmb3JtRmVlZGJhY2tPYmplY3R9KCk7ZXhwb3J0cy5kZWZhdWx0PVRyYW5zZm9ybUZlZWRiYWNrT2JqZWN0fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsQ29uc3RydWN0b3Ipe2lmKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBnZXRGdW5jKG1FYXNpbmcpe3N3aXRjaChtRWFzaW5nKXtkZWZhdWx0OmNhc2VcImxpbmVhclwiOnJldHVybiBFYXNpbmcuTGluZWFyLk5vbmU7Y2FzZVwiZXhwSW5cIjpyZXR1cm4gRWFzaW5nLkV4cG9uZW50aWFsLkluO2Nhc2VcImV4cE91dFwiOnJldHVybiBFYXNpbmcuRXhwb25lbnRpYWwuT3V0O2Nhc2VcImV4cEluT3V0XCI6cmV0dXJuIEVhc2luZy5FeHBvbmVudGlhbC5Jbk91dDtjYXNlXCJjdWJpY0luXCI6cmV0dXJuIEVhc2luZy5DdWJpYy5JbjtjYXNlXCJjdWJpY091dFwiOnJldHVybiBFYXNpbmcuQ3ViaWMuT3V0O2Nhc2VcImN1YmljSW5PdXRcIjpyZXR1cm4gRWFzaW5nLkN1YmljLkluT3V0O2Nhc2VcInF1YXJ0aWNJblwiOnJldHVybiBFYXNpbmcuUXVhcnRpYy5JbjtjYXNlXCJxdWFydGljT3V0XCI6cmV0dXJuIEVhc2luZy5RdWFydGljLk91dDtjYXNlXCJxdWFydGljSW5PdXRcIjpyZXR1cm4gRWFzaW5nLlF1YXJ0aWMuSW5PdXQ7Y2FzZVwicXVpbnRpY0luXCI6cmV0dXJuIEVhc2luZy5RdWludGljLkluO2Nhc2VcInF1aW50aWNPdXRcIjpyZXR1cm4gRWFzaW5nLlF1aW50aWMuT3V0O2Nhc2VcInF1aW50aWNJbk91dFwiOnJldHVybiBFYXNpbmcuUXVpbnRpYy5Jbk91dDtjYXNlXCJzaW51c29pZGFsSW5cIjpyZXR1cm4gRWFzaW5nLlNpbnVzb2lkYWwuSW47Y2FzZVwic2ludXNvaWRhbE91dFwiOnJldHVybiBFYXNpbmcuU2ludXNvaWRhbC5PdXQ7Y2FzZVwic2ludXNvaWRhbEluT3V0XCI6cmV0dXJuIEVhc2luZy5TaW51c29pZGFsLkluT3V0O2Nhc2VcImNpcmN1bGFySW5cIjpyZXR1cm4gRWFzaW5nLkNpcmN1bGFyLkluO2Nhc2VcImNpcmN1bGFyT3V0XCI6cmV0dXJuIEVhc2luZy5DaXJjdWxhci5PdXQ7Y2FzZVwiY2lyY3VsYXJJbk91dFwiOnJldHVybiBFYXNpbmcuQ2lyY3VsYXIuSW5PdXQ7Y2FzZVwiZWxhc3RpY0luXCI6cmV0dXJuIEVhc2luZy5FbGFzdGljLkluO2Nhc2VcImVsYXN0aWNPdXRcIjpyZXR1cm4gRWFzaW5nLkVsYXN0aWMuT3V0O2Nhc2VcImVsYXN0aWNJbk91dFwiOnJldHVybiBFYXNpbmcuRWxhc3RpYy5Jbk91dDtjYXNlXCJiYWNrSW5cIjpyZXR1cm4gRWFzaW5nLkJhY2suSW47Y2FzZVwiYmFja091dFwiOnJldHVybiBFYXNpbmcuQmFjay5PdXQ7Y2FzZVwiYmFja0luT3V0XCI6cmV0dXJuIEVhc2luZy5CYWNrLkluT3V0O2Nhc2VcImJvdW5jZUluXCI6cmV0dXJuIEVhc2luZy5Cb3VuY2UuaW47Y2FzZVwiYm91bmNlT3V0XCI6cmV0dXJuIEVhc2luZy5Cb3VuY2Uub3V0O2Nhc2VcImJvdW5jZUluT3V0XCI6cmV0dXJuIEVhc2luZy5Cb3VuY2UuaW5PdXR9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHwhMSxkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBkZXNjcmlwdG9yJiYoZGVzY3JpcHRvci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxkZXNjcmlwdG9yLmtleSxkZXNjcmlwdG9yKX19cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe3JldHVybiBwcm90b1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSxwcm90b1Byb3BzKSxzdGF0aWNQcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyksQ29uc3RydWN0b3J9fSgpLF9zY2hlZHVsaW5nPV9fd2VicGFja19yZXF1aXJlX18oNiksX3NjaGVkdWxpbmcyPWZ1bmN0aW9uKG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19KF9zY2hlZHVsaW5nKSxFYXNpbmc9e0xpbmVhcjp7Tm9uZTpmdW5jdGlvbihrKXtyZXR1cm4ga319LFF1YWRyYXRpYzp7SW46ZnVuY3Rpb24oayl7cmV0dXJuIGsqa30sT3V0OmZ1bmN0aW9uKGspe3JldHVybiBrKigyLWspfSxJbk91dDpmdW5jdGlvbihrKXtyZXR1cm4oayo9Mik8MT8uNSprKms6LS41KigtLWsqKGstMiktMSl9fSxDdWJpYzp7SW46ZnVuY3Rpb24oayl7cmV0dXJuIGsqayprfSxPdXQ6ZnVuY3Rpb24oayl7cmV0dXJuLS1rKmsqaysxfSxJbk91dDpmdW5jdGlvbihrKXtyZXR1cm4oayo9Mik8MT8uNSprKmsqazouNSooKGstPTIpKmsqaysyKX19LFF1YXJ0aWM6e0luOmZ1bmN0aW9uKGspe3JldHVybiBrKmsqayprfSxPdXQ6ZnVuY3Rpb24oayl7cmV0dXJuIDEtIC0tayprKmsqa30sSW5PdXQ6ZnVuY3Rpb24oayl7cmV0dXJuKGsqPTIpPDE/LjUqayprKmsqazotLjUqKChrLT0yKSprKmsqay0yKX19LFF1aW50aWM6e0luOmZ1bmN0aW9uKGspe3JldHVybiBrKmsqayprKmt9LE91dDpmdW5jdGlvbihrKXtyZXR1cm4tLWsqayprKmsqaysxfSxJbk91dDpmdW5jdGlvbihrKXtyZXR1cm4oayo9Mik8MT8uNSprKmsqayprKms6LjUqKChrLT0yKSprKmsqayprKzIpfX0sU2ludXNvaWRhbDp7SW46ZnVuY3Rpb24oayl7cmV0dXJuIDEtTWF0aC5jb3MoaypNYXRoLlBJLzIpfSxPdXQ6ZnVuY3Rpb24oayl7cmV0dXJuIE1hdGguc2luKGsqTWF0aC5QSS8yKX0sSW5PdXQ6ZnVuY3Rpb24oayl7cmV0dXJuLjUqKDEtTWF0aC5jb3MoTWF0aC5QSSprKSl9fSxFeHBvbmVudGlhbDp7SW46ZnVuY3Rpb24oayl7cmV0dXJuIDA9PT1rPzA6TWF0aC5wb3coMTAyNCxrLTEpfSxPdXQ6ZnVuY3Rpb24oayl7cmV0dXJuIDE9PT1rPzE6MS1NYXRoLnBvdygyLC0xMCprKX0sSW5PdXQ6ZnVuY3Rpb24oayl7cmV0dXJuIDA9PT1rPzA6MT09PWs/MTooayo9Mik8MT8uNSpNYXRoLnBvdygxMDI0LGstMSk6LjUqKDItTWF0aC5wb3coMiwtMTAqKGstMSkpKX19LENpcmN1bGFyOntJbjpmdW5jdGlvbihrKXtyZXR1cm4gMS1NYXRoLnNxcnQoMS1rKmspfSxPdXQ6ZnVuY3Rpb24oayl7cmV0dXJuIE1hdGguc3FydCgxLSAtLWsqayl9LEluT3V0OmZ1bmN0aW9uKGspe3JldHVybihrKj0yKTwxPy0uNSooTWF0aC5zcXJ0KDEtayprKS0xKTouNSooTWF0aC5zcXJ0KDEtKGstPTIpKmspKzEpfX0sRWxhc3RpYzp7SW46ZnVuY3Rpb24oayl7dmFyIHM9dm9pZCAwLGE9LjE7cmV0dXJuIDA9PT1rPzA6MT09PWs/MTooIWF8fGE8MT8oYT0xLHM9LjEpOnM9LjQqTWF0aC5hc2luKDEvYSkvKDIqTWF0aC5QSSksLWEqTWF0aC5wb3coMiwxMCooay09MSkpKk1hdGguc2luKChrLXMpKigyKk1hdGguUEkpLy40KSl9LE91dDpmdW5jdGlvbihrKXt2YXIgcz12b2lkIDAsYT0uMTtyZXR1cm4gMD09PWs/MDoxPT09az8xOighYXx8YTwxPyhhPTEscz0uMSk6cz0uNCpNYXRoLmFzaW4oMS9hKS8oMipNYXRoLlBJKSxhKk1hdGgucG93KDIsLTEwKmspKk1hdGguc2luKChrLXMpKigyKk1hdGguUEkpLy40KSsxKX0sSW5PdXQ6ZnVuY3Rpb24oayl7dmFyIHM9dm9pZCAwLGE9LjE7cmV0dXJuIDA9PT1rPzA6MT09PWs/MTooIWF8fGE8MT8oYT0xLHM9LjEpOnM9LjQqTWF0aC5hc2luKDEvYSkvKDIqTWF0aC5QSSksKGsqPTIpPDE/YSpNYXRoLnBvdygyLDEwKihrLT0xKSkqTWF0aC5zaW4oKGstcykqKDIqTWF0aC5QSSkvLjQpKi0uNTphKk1hdGgucG93KDIsLTEwKihrLT0xKSkqTWF0aC5zaW4oKGstcykqKDIqTWF0aC5QSSkvLjQpKi41KzEpfX0sQmFjazp7SW46ZnVuY3Rpb24oayl7dmFyIHM9MS43MDE1ODtyZXR1cm4gayprKigocysxKSprLXMpfSxPdXQ6ZnVuY3Rpb24oayl7dmFyIHM9MS43MDE1ODtyZXR1cm4tLWsqayooKHMrMSkqaytzKSsxfSxJbk91dDpmdW5jdGlvbihrKXt2YXIgcz0yLjU5NDkwOTU7cmV0dXJuKGsqPTIpPDE/ayprKigocysxKSprLXMpKi41Oi41Kigoay09MikqayooKHMrMSkqaytzKSsyKX19LEJvdW5jZTp7aW46ZnVuY3Rpb24oayl7cmV0dXJuIDEtRWFzaW5nLkJvdW5jZS5vdXQoMS1rKX0sb3V0OmZ1bmN0aW9uKGspe3JldHVybiBrPDEvMi43NT83LjU2MjUqayprOms8Mi8yLjc1PzcuNTYyNSooay09MS41LzIuNzUpKmsrLjc1Oms8Mi41LzIuNzU/Ny41NjI1KihrLT0yLjI1LzIuNzUpKmsrLjkzNzU6Ny41NjI1KihrLT0yLjYyNS8yLjc1KSprKy45ODQzNzV9LGluT3V0OmZ1bmN0aW9uKGspe3JldHVybiBrPC41Py41KkVhc2luZy5Cb3VuY2UuaW4oMiprKTouNSpFYXNpbmcuQm91bmNlLm91dCgyKmstMSkrLjV9fX0sVHdlZW5OdW1iZXI9ZnVuY3Rpb24oKXtmdW5jdGlvbiBUd2Vlbk51bWJlcihtVmFsdWUpe3ZhciBfdGhpcz10aGlzLG1FYXNpbmc9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOlwiZXhwT3V0XCIsbVNwZWVkPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTouMDE7X2NsYXNzQ2FsbENoZWNrKHRoaXMsVHdlZW5OdW1iZXIpLHRoaXMuX3ZhbHVlPW1WYWx1ZSx0aGlzLl9zdGFydFZhbHVlPW1WYWx1ZSx0aGlzLl90YXJnZXRWYWx1ZT1tVmFsdWUsdGhpcy5fY291bnRlcj0xLHRoaXMuc3BlZWQ9bVNwZWVkLHRoaXMuZWFzaW5nPW1FYXNpbmcsdGhpcy5fbmVlZFVwZGF0ZT0hMCx0aGlzLl9lZkluZGV4PV9zY2hlZHVsaW5nMi5kZWZhdWx0LmFkZEVGKGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLl91cGRhdGUoKX0pfXJldHVybiBfY3JlYXRlQ2xhc3MoVHdlZW5OdW1iZXIsW3trZXk6XCJfdXBkYXRlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgbmV3Q291bnRlcj10aGlzLl9jb3VudGVyK3RoaXMuc3BlZWQ7aWYobmV3Q291bnRlcj4xJiYobmV3Q291bnRlcj0xKSx0aGlzLl9jb3VudGVyPT09bmV3Q291bnRlcilyZXR1cm4gdm9pZCh0aGlzLl9uZWVkVXBkYXRlPSExKTt0aGlzLl9jb3VudGVyPW5ld0NvdW50ZXIsdGhpcy5fbmVlZFVwZGF0ZT0hMH19LHtrZXk6XCJsaW1pdFwiLHZhbHVlOmZ1bmN0aW9uKG1NaW4sbU1heCl7aWYobU1pbj5tTWF4KXJldHVybiB2b2lkIHRoaXMubGltaXQobU1heCxtTWluKTt0aGlzLl9taW49bU1pbix0aGlzLl9tYXg9bU1heCx0aGlzLl9jaGVja0xpbWl0KCl9fSx7a2V5Olwic2V0VG9cIix2YWx1ZTpmdW5jdGlvbihtVmFsdWUpe3RoaXMuX3ZhbHVlPW1WYWx1ZSx0aGlzLl90YXJnZXRWYWx1ZT1tVmFsdWUsdGhpcy5fY291bnRlcj0xfX0se2tleTpcIl9jaGVja0xpbWl0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2b2lkIDAhPT10aGlzLl9taW4mJnRoaXMuX3RhcmdldFZhbHVlPHRoaXMuX21pbiYmKHRoaXMuX3RhcmdldFZhbHVlPXRoaXMuX21pbiksdm9pZCAwIT09dGhpcy5fbWF4JiZ0aGlzLl90YXJnZXRWYWx1ZT50aGlzLl9tYXgmJih0aGlzLl90YXJnZXRWYWx1ZT10aGlzLl9tYXgpfX0se2tleTpcImRlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe19zY2hlZHVsaW5nMi5kZWZhdWx0LnJlbW92ZUVGKHRoaXMuX2VmSW5kZXgpfX0se2tleTpcInZhbHVlXCIsc2V0OmZ1bmN0aW9uKG1WYWx1ZSl7dGhpcy5fc3RhcnRWYWx1ZT10aGlzLl92YWx1ZSx0aGlzLl90YXJnZXRWYWx1ZT1tVmFsdWUsdGhpcy5fY2hlY2tMaW1pdCgpLHRoaXMuX2NvdW50ZXI9MH0sZ2V0OmZ1bmN0aW9uKCl7aWYodGhpcy5fbmVlZFVwZGF0ZSl7dmFyIGY9Z2V0RnVuYyh0aGlzLmVhc2luZykscD1mKHRoaXMuX2NvdW50ZXIpO3RoaXMuX3ZhbHVlPXRoaXMuX3N0YXJ0VmFsdWUrcCoodGhpcy5fdGFyZ2V0VmFsdWUtdGhpcy5fc3RhcnRWYWx1ZSksdGhpcy5fbmVlZFVwZGF0ZT0hMX1yZXR1cm4gdGhpcy5fdmFsdWV9fSx7a2V5OlwidGFyZ2V0VmFsdWVcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGFyZ2V0VmFsdWV9fV0pLFR3ZWVuTnVtYmVyfSgpO2V4cG9ydHMuZGVmYXVsdD1Ud2Vlbk51bWJlcn0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fWZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHwhMSxkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBkZXNjcmlwdG9yJiYoZGVzY3JpcHRvci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxkZXNjcmlwdG9yLmtleSxkZXNjcmlwdG9yKX19cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe3JldHVybiBwcm90b1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSxwcm90b1Byb3BzKSxzdGF0aWNQcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyksQ29uc3RydWN0b3J9fSgpLF9nbE1hdHJpeD1fX3dlYnBhY2tfcmVxdWlyZV9fKDEpLF9nbE1hdHJpeDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ2xNYXRyaXgpLF9FYXNlTnVtYmVyPV9fd2VicGFja19yZXF1aXJlX18oMTMpLF9FYXNlTnVtYmVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9FYXNlTnVtYmVyKSxfc2NoZWR1bGluZz1fX3dlYnBhY2tfcmVxdWlyZV9fKDYpLF9zY2hlZHVsaW5nMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zY2hlZHVsaW5nKSxnZXRNb3VzZT1mdW5jdGlvbihtRXZlbnQsbVRhcmdldCl7dmFyIG89bVRhcmdldHx8e307cmV0dXJuIG1FdmVudC50b3VjaGVzPyhvLng9bUV2ZW50LnRvdWNoZXNbMF0ucGFnZVgsby55PW1FdmVudC50b3VjaGVzWzBdLnBhZ2VZKTooby54PW1FdmVudC5jbGllbnRYLG8ueT1tRXZlbnQuY2xpZW50WSksb30sUXVhdFJvdGF0aW9uPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gUXVhdFJvdGF0aW9uKG1UYXJnZXQpe3ZhciBfdGhpcz10aGlzLG1MaXN0ZW5lclRhcmdldD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06d2luZG93LG1FYXNpbmc9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOi4xO19jbGFzc0NhbGxDaGVjayh0aGlzLFF1YXRSb3RhdGlvbiksdGhpcy5fdGFyZ2V0PW1UYXJnZXQsdGhpcy5fbGlzdGVuZXJUYXJnZXQ9bUxpc3RlbmVyVGFyZ2V0LHRoaXMubWF0cml4PV9nbE1hdHJpeDIuZGVmYXVsdC5tYXQ0LmNyZWF0ZSgpLHRoaXMubT1fZ2xNYXRyaXgyLmRlZmF1bHQubWF0NC5jcmVhdGUoKSx0aGlzLl92WmF4aXM9X2dsTWF0cml4Mi5kZWZhdWx0LnZlYzMuY2xvbmUoWzAsMCwwXSksdGhpcy5fekF4aXM9X2dsTWF0cml4Mi5kZWZhdWx0LnZlYzMuY2xvbmUoWzAsMCwxXSksdGhpcy5wcmVNb3VzZT17eDowLHk6MH0sdGhpcy5tb3VzZT17eDowLHk6MH0sdGhpcy5faXNNb3VzZURvd249ITEsdGhpcy5fcm90YXRpb249X2dsTWF0cml4Mi5kZWZhdWx0LnF1YXQuY3JlYXRlKCksdGhpcy50ZW1wUm90YXRpb249X2dsTWF0cml4Mi5kZWZhdWx0LnF1YXQuY3JlYXRlKCksdGhpcy5fcm90YXRlWk1hcmdpbj0wLHRoaXMuX29mZnNldD0uMDA0LHRoaXMuX3NsZXJwPS0xLHRoaXMuX2lzTG9ja2VkPSExLHRoaXMuX2RpZmZYPW5ldyBfRWFzZU51bWJlcjIuZGVmYXVsdCgwLG1FYXNpbmcpLHRoaXMuX2RpZmZZPW5ldyBfRWFzZU51bWJlcjIuZGVmYXVsdCgwLG1FYXNpbmcpLHRoaXMuX2xpc3RlbmVyVGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIixmdW5jdGlvbihlKXtyZXR1cm4gX3RoaXMuX29uRG93bihlKX0pLHRoaXMuX2xpc3RlbmVyVGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaHN0YXJ0XCIsZnVuY3Rpb24oZSl7cmV0dXJuIF90aGlzLl9vbkRvd24oZSl9KSx0aGlzLl9saXN0ZW5lclRhcmdldC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsZnVuY3Rpb24oZSl7cmV0dXJuIF90aGlzLl9vbk1vdmUoZSl9KSx0aGlzLl9saXN0ZW5lclRhcmdldC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsZnVuY3Rpb24oZSl7cmV0dXJuIF90aGlzLl9vbk1vdmUoZSl9KSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuX29uVXAoKX0pLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLl9vblVwKCl9KSxfc2NoZWR1bGluZzIuZGVmYXVsdC5hZGRFRihmdW5jdGlvbigpe3JldHVybiBfdGhpcy5fbG9vcCgpfSl9cmV0dXJuIF9jcmVhdGVDbGFzcyhRdWF0Um90YXRpb24sW3trZXk6XCJpbnZlcnNlQ29udHJvbFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGlzSW52ZXJ0PSEoYXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0pfHxhcmd1bWVudHNbMF07dGhpcy5faXNJbnZlcnQ9aXNJbnZlcnR9fSx7a2V5OlwibG9ja1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIG1WYWx1ZT0hKGFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdKXx8YXJndW1lbnRzWzBdO3RoaXMuX2lzTG9ja2VkPW1WYWx1ZX19LHtrZXk6XCJzZXRDYW1lcmFQb3NcIix2YWx1ZTpmdW5jdGlvbihtUXVhdCl7dmFyIHNwZWVkPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTouMTtpZih0aGlzLmVhc2luZz1zcGVlZCwhKHRoaXMuX3NsZXJwPjApKXt2YXIgdGVtcFJvdGF0aW9uPV9nbE1hdHJpeDIuZGVmYXVsdC5xdWF0LmNsb25lKHRoaXMuX3JvdGF0aW9uKTt0aGlzLl91cGRhdGVSb3RhdGlvbih0ZW1wUm90YXRpb24pLHRoaXMuX3JvdGF0aW9uPV9nbE1hdHJpeDIuZGVmYXVsdC5xdWF0LmNsb25lKHRlbXBSb3RhdGlvbiksdGhpcy5fY3VyckRpZmZYPXRoaXMuZGlmZlg9MCx0aGlzLl9jdXJyRGlmZlk9dGhpcy5kaWZmWT0wLHRoaXMuX2lzTW91c2VEb3duPSExLHRoaXMuX2lzUm90YXRlWj0wLHRoaXMuX3RhcmdldFF1YXQ9X2dsTWF0cml4Mi5kZWZhdWx0LnF1YXQuY2xvbmUobVF1YXQpLHRoaXMuX3NsZXJwPTF9fX0se2tleTpcInJlc2V0UXVhdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fcm90YXRpb249X2dsTWF0cml4Mi5kZWZhdWx0LnF1YXQuY2xvbmUoWzAsMCwxLDBdKSx0aGlzLnRlbXBSb3RhdGlvbj1fZ2xNYXRyaXgyLmRlZmF1bHQucXVhdC5jbG9uZShbMCwwLDAsMF0pLHRoaXMuX3RhcmdldFF1YXQ9dm9pZCAwLHRoaXMuX3NsZXJwPS0xfX0se2tleTpcIl9vbkRvd25cIix2YWx1ZTpmdW5jdGlvbihtRXZlbnQpe2lmKCF0aGlzLl9pc0xvY2tlZCl7dmFyIG1vdXNlPWdldE1vdXNlKG1FdmVudCksdGVtcFJvdGF0aW9uPV9nbE1hdHJpeDIuZGVmYXVsdC5xdWF0LmNsb25lKHRoaXMuX3JvdGF0aW9uKTt0aGlzLl91cGRhdGVSb3RhdGlvbih0ZW1wUm90YXRpb24pLHRoaXMuX3JvdGF0aW9uPXRlbXBSb3RhdGlvbix0aGlzLl9pc01vdXNlRG93bj0hMCx0aGlzLl9pc1JvdGF0ZVo9MCx0aGlzLnByZU1vdXNlPXt4Om1vdXNlLngseTptb3VzZS55fSxtb3VzZS55PHRoaXMuX3JvdGF0ZVpNYXJnaW58fG1vdXNlLnk+d2luZG93LmlubmVySGVpZ2h0LXRoaXMuX3JvdGF0ZVpNYXJnaW4/dGhpcy5faXNSb3RhdGVaPTE6KG1vdXNlLng8dGhpcy5fcm90YXRlWk1hcmdpbnx8bW91c2UueD53aW5kb3cuaW5uZXJXaWR0aC10aGlzLl9yb3RhdGVaTWFyZ2luKSYmKHRoaXMuX2lzUm90YXRlWj0yKSx0aGlzLl9kaWZmWC5zZXRUbygwKSx0aGlzLl9kaWZmWS5zZXRUbygwKX19fSx7a2V5OlwiX29uTW92ZVwiLHZhbHVlOmZ1bmN0aW9uKG1FdmVudCl7dGhpcy5faXNMb2NrZWR8fGdldE1vdXNlKG1FdmVudCx0aGlzLm1vdXNlKX19LHtrZXk6XCJfb25VcFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5faXNMb2NrZWR8fCh0aGlzLl9pc01vdXNlRG93bj0hMSl9fSx7a2V5OlwiX3VwZGF0ZVJvdGF0aW9uXCIsdmFsdWU6ZnVuY3Rpb24obVRlbXBSb3RhdGlvbil7dGhpcy5faXNNb3VzZURvd24mJiF0aGlzLl9pc0xvY2tlZCYmKHRoaXMuX2RpZmZYLnZhbHVlPS0odGhpcy5tb3VzZS54LXRoaXMucHJlTW91c2UueCksdGhpcy5fZGlmZlkudmFsdWU9dGhpcy5tb3VzZS55LXRoaXMucHJlTW91c2UueSx0aGlzLl9pc0ludmVydCYmKHRoaXMuX2RpZmZYLnZhbHVlPS10aGlzLl9kaWZmWC50YXJnZXRWYWx1ZSx0aGlzLl9kaWZmWS52YWx1ZT0tdGhpcy5fZGlmZlkudGFyZ2V0VmFsdWUpKTt2YXIgYW5nbGU9dm9pZCAwLF9xdWF0PXZvaWQgMDtpZih0aGlzLl9pc1JvdGF0ZVo+MCkxPT09dGhpcy5faXNSb3RhdGVaPyhhbmdsZT0tdGhpcy5fZGlmZlgudmFsdWUqdGhpcy5fb2Zmc2V0LGFuZ2xlKj10aGlzLnByZU1vdXNlLnk8dGhpcy5fcm90YXRlWk1hcmdpbj8tMToxLF9xdWF0PV9nbE1hdHJpeDIuZGVmYXVsdC5xdWF0LmNsb25lKFswLDAsTWF0aC5zaW4oYW5nbGUpLE1hdGguY29zKGFuZ2xlKV0pLF9nbE1hdHJpeDIuZGVmYXVsdC5xdWF0Lm11bHRpcGx5KF9xdWF0LG1UZW1wUm90YXRpb24sX3F1YXQpKTooYW5nbGU9LXRoaXMuX2RpZmZZLnZhbHVlKnRoaXMuX29mZnNldCxhbmdsZSo9dGhpcy5wcmVNb3VzZS54PHRoaXMuX3JvdGF0ZVpNYXJnaW4/MTotMSxfcXVhdD1fZ2xNYXRyaXgyLmRlZmF1bHQucXVhdC5jbG9uZShbMCwwLE1hdGguc2luKGFuZ2xlKSxNYXRoLmNvcyhhbmdsZSldKSxfZ2xNYXRyaXgyLmRlZmF1bHQucXVhdC5tdWx0aXBseShfcXVhdCxtVGVtcFJvdGF0aW9uLF9xdWF0KSk7ZWxzZXt2YXIgdj1fZ2xNYXRyaXgyLmRlZmF1bHQudmVjMy5jbG9uZShbdGhpcy5fZGlmZlgudmFsdWUsdGhpcy5fZGlmZlkudmFsdWUsMF0pLGF4aXM9X2dsTWF0cml4Mi5kZWZhdWx0LnZlYzMuY3JlYXRlKCk7X2dsTWF0cml4Mi5kZWZhdWx0LnZlYzMuY3Jvc3MoYXhpcyx2LHRoaXMuX3pBeGlzKSxfZ2xNYXRyaXgyLmRlZmF1bHQudmVjMy5ub3JtYWxpemUoYXhpcyxheGlzKSxhbmdsZT1fZ2xNYXRyaXgyLmRlZmF1bHQudmVjMy5sZW5ndGgodikqdGhpcy5fb2Zmc2V0LF9xdWF0PV9nbE1hdHJpeDIuZGVmYXVsdC5xdWF0LmNsb25lKFtNYXRoLnNpbihhbmdsZSkqYXhpc1swXSxNYXRoLnNpbihhbmdsZSkqYXhpc1sxXSxNYXRoLnNpbihhbmdsZSkqYXhpc1syXSxNYXRoLmNvcyhhbmdsZSldKSxfZ2xNYXRyaXgyLmRlZmF1bHQucXVhdC5tdWx0aXBseShtVGVtcFJvdGF0aW9uLF9xdWF0LG1UZW1wUm90YXRpb24pfX19LHtrZXk6XCJfbG9vcFwiLHZhbHVlOmZ1bmN0aW9uKCl7X2dsTWF0cml4Mi5kZWZhdWx0Lm1hdDQuaWRlbnRpdHkodGhpcy5tKSx2b2lkIDA9PT10aGlzLl90YXJnZXRRdWF0PyhfZ2xNYXRyaXgyLmRlZmF1bHQucXVhdC5zZXQodGhpcy50ZW1wUm90YXRpb24sdGhpcy5fcm90YXRpb25bMF0sdGhpcy5fcm90YXRpb25bMV0sdGhpcy5fcm90YXRpb25bMl0sdGhpcy5fcm90YXRpb25bM10pLHRoaXMuX3VwZGF0ZVJvdGF0aW9uKHRoaXMudGVtcFJvdGF0aW9uKSk6KHRoaXMuX3NsZXJwKz0uMSooMC10aGlzLl9zbGVycCksdGhpcy5fc2xlcnA8NWUtND8oX2dsTWF0cml4Mi5kZWZhdWx0LnF1YXQuY29weSh0aGlzLl9yb3RhdGlvbix0aGlzLl90YXJnZXRRdWF0KSxfZ2xNYXRyaXgyLmRlZmF1bHQucXVhdC5jb3B5KHRoaXMudGVtcFJvdGF0aW9uLHRoaXMuX3RhcmdldFF1YXQpLHRoaXMuX3RhcmdldFF1YXQ9dm9pZCAwLHRoaXMuX2RpZmZYLnNldFRvKDApLHRoaXMuX2RpZmZZLnNldFRvKDApLHRoaXMuX3NsZXJwPS0xKTooX2dsTWF0cml4Mi5kZWZhdWx0LnF1YXQuc2V0KHRoaXMudGVtcFJvdGF0aW9uLDAsMCwwLDApLF9nbE1hdHJpeDIuZGVmYXVsdC5xdWF0LnNsZXJwKHRoaXMudGVtcFJvdGF0aW9uLHRoaXMuX3RhcmdldFF1YXQsdGhpcy5fcm90YXRpb24sdGhpcy5fc2xlcnApKSksX2dsTWF0cml4Mi5kZWZhdWx0LnZlYzMudHJhbnNmb3JtUXVhdCh0aGlzLl92WmF4aXMsdGhpcy5fdlpheGlzLHRoaXMudGVtcFJvdGF0aW9uKSxfZ2xNYXRyaXgyLmRlZmF1bHQubWF0NC5mcm9tUXVhdCh0aGlzLm1hdHJpeCx0aGlzLnRlbXBSb3RhdGlvbil9fSx7a2V5OlwiZWFzaW5nXCIsc2V0OmZ1bmN0aW9uKG1WYWx1ZSl7dGhpcy5fZGlmZlguZWFzaW5nPW1WYWx1ZSx0aGlzLl9kaWZmWS5lYXNpbmc9bVZhbHVlfSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGlmZlguZWFzaW5nfX1dKSxRdWF0Um90YXRpb259KCk7ZXhwb3J0cy5kZWZhdWx0PVF1YXRSb3RhdGlvbn0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fWZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsY2FsbCl7aWYoIXNlbGYpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiFjYWxsfHxcIm9iamVjdFwiIT10eXBlb2YgY2FsbCYmXCJmdW5jdGlvblwiIT10eXBlb2YgY2FsbD9zZWxmOmNhbGx9ZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLHN1cGVyQ2xhc3Mpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHN1cGVyQ2xhc3MmJm51bGwhPT1zdXBlckNsYXNzKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiBzdXBlckNsYXNzKTtzdWJDbGFzcy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzJiZzdXBlckNsYXNzLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnN1YkNsYXNzLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHN1cGVyQ2xhc3MmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLHN1cGVyQ2xhc3MpOnN1YkNsYXNzLl9fcHJvdG9fXz1zdXBlckNsYXNzKX1mdW5jdGlvbiBkaXN0YW5jZShhLGIpe3ZhciBkeD1hLngtYi54LGR5PWEueS1iLnk7cmV0dXJuIE1hdGguc3FydChkeCpkeCtkeSpkeSl9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIF9jcmVhdGVDbGFzcz1mdW5jdGlvbigpe2Z1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LHByb3BzKXtmb3IodmFyIGk9MDtpPHByb3BzLmxlbmd0aDtpKyspe3ZhciBkZXNjcmlwdG9yPXByb3BzW2ldO2Rlc2NyaXB0b3IuZW51bWVyYWJsZT1kZXNjcmlwdG9yLmVudW1lcmFibGV8fCExLGRlc2NyaXB0b3IuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGRlc2NyaXB0b3ImJihkZXNjcmlwdG9yLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LGRlc2NyaXB0b3Iua2V5LGRlc2NyaXB0b3IpfX1yZXR1cm4gZnVuY3Rpb24oQ29uc3RydWN0b3IscHJvdG9Qcm9wcyxzdGF0aWNQcm9wcyl7cmV0dXJuIHByb3RvUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLHByb3RvUHJvcHMpLHN0YXRpY1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLHN0YXRpY1Byb3BzKSxDb25zdHJ1Y3Rvcn19KCksX0dMVG9vbD1fX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9HTFRvb2wyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0dMVG9vbCksX0V2ZW50RGlzcGF0Y2hlcjI9X193ZWJwYWNrX3JlcXVpcmVfXygyOCksX0V2ZW50RGlzcGF0Y2hlcjM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfRXZlbnREaXNwYXRjaGVyMiksX1JheT1fX3dlYnBhY2tfcmVxdWlyZV9fKDE0KSxfUmF5Mj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9SYXkpLF9nZXRNb3VzZT1fX3dlYnBhY2tfcmVxdWlyZV9fKDYyKSxfZ2V0TW91c2UyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldE1vdXNlKSxUb3VjaERldGVjdG9yPWZ1bmN0aW9uKF9FdmVudERpc3BhdGNoZXIpe2Z1bmN0aW9uIFRvdWNoRGV0ZWN0b3IobU1lc2gsbUNhbWVyYSl7dmFyIG1Ta2lwTW92ZUNoZWNrPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdJiZhcmd1bWVudHNbMl0sbUxpc3RlbmVyVGFyZ2V0PWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTp3aW5kb3c7X2NsYXNzQ2FsbENoZWNrKHRoaXMsVG91Y2hEZXRlY3Rvcik7dmFyIF90aGlzPV9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsKFRvdWNoRGV0ZWN0b3IuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YoVG91Y2hEZXRlY3RvcikpLmNhbGwodGhpcykpO3JldHVybiBfdGhpcy5fbWVzaD1tTWVzaCxfdGhpcy5fbWVzaC5nZW5lcmF0ZUZhY2VzKCksX3RoaXMuX2NhbWVyYT1tQ2FtZXJhLF90aGlzLmZhY2VWZXJ0aWNlcz1tTWVzaC5mYWNlcy5tYXAoZnVuY3Rpb24oZmFjZSl7cmV0dXJuIGZhY2UudmVydGljZXN9KSxfdGhpcy5jbGlja1RvbGVyYW5jZT04LF90aGlzLl9yYXk9bmV3IF9SYXkyLmRlZmF1bHQoWzAsMCwwXSxbMCwwLC0xXSksX3RoaXMuX2hpdD12ZWMzLmZyb21WYWx1ZXMoLTk5OSwtOTk5LC05OTkpLF90aGlzLl9sYXN0UG9zLF90aGlzLl9maXJzdFBvcyxfdGhpcy5tdHhNb2RlbD1tYXQ0LmNyZWF0ZSgpLF90aGlzLl9saXN0ZW5lclRhcmdldD1tTGlzdGVuZXJUYXJnZXQsX3RoaXMuX3NraXBwaW5nTW92ZT1tU2tpcE1vdmVDaGVjayxfdGhpcy5fb25Nb3ZlQmluZD1mdW5jdGlvbihlKXtyZXR1cm4gX3RoaXMuX29uTW92ZShlKX0sX3RoaXMuX29uRG93bkJpbmQ9ZnVuY3Rpb24oZSl7cmV0dXJuIF90aGlzLl9vbkRvd24oZSl9LF90aGlzLl9vblVwQmluZD1mdW5jdGlvbigpe3JldHVybiBfdGhpcy5fb25VcCgpfSxfdGhpcy5jb25uZWN0KCksX3RoaXN9cmV0dXJuIF9pbmhlcml0cyhUb3VjaERldGVjdG9yLF9FdmVudERpc3BhdGNoZXIpLF9jcmVhdGVDbGFzcyhUb3VjaERldGVjdG9yLFt7a2V5OlwiY29ubmVjdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fbGlzdGVuZXJUYXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLHRoaXMuX29uRG93bkJpbmQpLHRoaXMuX2xpc3RlbmVyVGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIix0aGlzLl9vbk1vdmVCaW5kKSx0aGlzLl9saXN0ZW5lclRhcmdldC5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLHRoaXMuX29uVXBCaW5kKX19LHtrZXk6XCJkaXNjb25uZWN0XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9saXN0ZW5lclRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsdGhpcy5fb25Eb3duQmluZCksdGhpcy5fbGlzdGVuZXJUYXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLHRoaXMuX29uTW92ZUJpbmQpLHRoaXMuX2xpc3RlbmVyVGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsdGhpcy5fb25VcEJpbmQpfX0se2tleTpcIl9jaGVja0hpdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIF90aGlzMj10aGlzLG1UeXBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpcIm9uSGl0XCIsY2FtZXJhPXRoaXMuX2NhbWVyYTtpZihjYW1lcmEpe3ZhciBteD10aGlzLl9sYXN0UG9zLngvX0dMVG9vbDIuZGVmYXVsdC53aWR0aCoyLTEsbXk9LXRoaXMuX2xhc3RQb3MueS9fR0xUb29sMi5kZWZhdWx0LmhlaWdodCoyKzE7Y2FtZXJhLmdlbmVyYXRlUmF5KFtteCxteSwwXSx0aGlzLl9yYXkpO2Zvcih2YXIgaGl0PXZvaWQgMCx2MD12ZWMzLmNyZWF0ZSgpLHYxPXZlYzMuY3JlYXRlKCksdjI9dmVjMy5jcmVhdGUoKSxkaXN0PTAsZ2V0VmVjdG9yPWZ1bmN0aW9uKHYsdGFyZ2V0KXt2ZWMzLnRyYW5zZm9ybU1hdDQodGFyZ2V0LHYsX3RoaXMyLm10eE1vZGVsKX0saT0wO2k8dGhpcy5mYWNlVmVydGljZXMubGVuZ3RoO2krKyl7dmFyIHZlcnRpY2VzPXRoaXMuZmFjZVZlcnRpY2VzW2ldO2dldFZlY3Rvcih2ZXJ0aWNlc1swXSx2MCksZ2V0VmVjdG9yKHZlcnRpY2VzWzFdLHYxKSxnZXRWZWN0b3IodmVydGljZXNbMl0sdjIpO3ZhciB0PXRoaXMuX3JheS5pbnRlcnNlY3RUcmlhbmdsZSh2MCx2MSx2Mik7aWYodClpZihoaXQpe3ZhciBkaXN0VG9DYW09dmVjMy5kaXN0KHQsY2FtZXJhLnBvc2l0aW9uKTtkaXN0VG9DYW08ZGlzdCYmKGhpdD12ZWMzLmNsb25lKHQpLGRpc3Q9ZGlzdFRvQ2FtKX1lbHNlIGhpdD12ZWMzLmNsb25lKHQpLGRpc3Q9dmVjMy5kaXN0KGhpdCxjYW1lcmEucG9zaXRpb24pfWhpdD8odGhpcy5faGl0PXZlYzMuY2xvbmUoaGl0KSx0aGlzLmRpc3BhdGNoQ3VzdG9tRXZlbnQobVR5cGUse2hpdDpoaXR9KSk6dGhpcy5kaXNwYXRjaEN1c3RvbUV2ZW50KFwib25VcFwiKX19fSx7a2V5OlwiX29uRG93blwiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX2ZpcnN0UG9zPSgwLF9nZXRNb3VzZTIuZGVmYXVsdCkoZSksdGhpcy5fbGFzdFBvcz0oMCxfZ2V0TW91c2UyLmRlZmF1bHQpKGUpLHRoaXMuX2NoZWNrSGl0KFwib25Eb3duXCIpfX0se2tleTpcIl9vbk1vdmVcIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9sYXN0UG9zPSgwLF9nZXRNb3VzZTIuZGVmYXVsdCkoZSksdGhpcy5fc2tpcHBpbmdNb3ZlfHx0aGlzLl9jaGVja0hpdCgpfX0se2tleTpcIl9vblVwXCIsdmFsdWU6ZnVuY3Rpb24oKXtkaXN0YW5jZSh0aGlzLl9maXJzdFBvcyx0aGlzLl9sYXN0UG9zKTx0aGlzLmNsaWNrVG9sZXJhbmNlJiZ0aGlzLl9jaGVja0hpdCgpfX1dKSxUb3VjaERldGVjdG9yfShfRXZlbnREaXNwYXRjaGVyMy5kZWZhdWx0KTtleHBvcnRzLmRlZmF1bHQ9VG91Y2hEZXRlY3Rvcn0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZXhwb3J0cy5kZWZhdWx0PWZ1bmN0aW9uKGUpe3ZhciB4PXZvaWQgMCx5PXZvaWQgMDtyZXR1cm4gZS50b3VjaGVzPyh4PWUudG91Y2hlc1swXS5wYWdlWCx5PWUudG91Y2hlc1swXS5wYWdlWSk6KHg9ZS5jbGllbnRYLHk9ZS5jbGllbnRZKSx7eDp4LHk6eX19fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsQ29uc3RydWN0b3Ipe2lmKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLGNhbGwpe2lmKCFzZWxmKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hY2FsbHx8XCJvYmplY3RcIiE9dHlwZW9mIGNhbGwmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGNhbGw/c2VsZjpjYWxsfWZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcyxzdXBlckNsYXNzKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBzdXBlckNsYXNzJiZudWxsIT09c3VwZXJDbGFzcyl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2Ygc3VwZXJDbGFzcyk7c3ViQ2xhc3MucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyYmc3VwZXJDbGFzcy5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTpzdWJDbGFzcyxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxzdXBlckNsYXNzJiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcyxzdXBlckNsYXNzKTpzdWJDbGFzcy5fX3Byb3RvX189c3VwZXJDbGFzcyl9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIF9jcmVhdGVDbGFzcz1mdW5jdGlvbigpe2Z1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LHByb3BzKXtmb3IodmFyIGk9MDtpPHByb3BzLmxlbmd0aDtpKyspe3ZhciBkZXNjcmlwdG9yPXByb3BzW2ldO2Rlc2NyaXB0b3IuZW51bWVyYWJsZT1kZXNjcmlwdG9yLmVudW1lcmFibGV8fCExLGRlc2NyaXB0b3IuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGRlc2NyaXB0b3ImJihkZXNjcmlwdG9yLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LGRlc2NyaXB0b3Iua2V5LGRlc2NyaXB0b3IpfX1yZXR1cm4gZnVuY3Rpb24oQ29uc3RydWN0b3IscHJvdG9Qcm9wcyxzdGF0aWNQcm9wcyl7cmV0dXJuIHByb3RvUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLHByb3RvUHJvcHMpLHN0YXRpY1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLHN0YXRpY1Byb3BzKSxDb25zdHJ1Y3Rvcn19KCksX0NhbWVyYVBlcnNwZWN0aXZlMj1fX3dlYnBhY2tfcmVxdWlyZV9fKDE2KSxfQ2FtZXJhUGVyc3BlY3RpdmUzPWZ1bmN0aW9uKG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19KF9DYW1lcmFQZXJzcGVjdGl2ZTIpLF9nbE1hdHJpeD1fX3dlYnBhY2tfcmVxdWlyZV9fKDEpLENBTUVSQV9TRVRUSU5HUz1bW19nbE1hdHJpeC52ZWMzLmZyb21WYWx1ZXMoMCwwLDApLF9nbE1hdHJpeC52ZWMzLmZyb21WYWx1ZXMoMSwwLDApLF9nbE1hdHJpeC52ZWMzLmZyb21WYWx1ZXMoMCwtMSwwKV0sW19nbE1hdHJpeC52ZWMzLmZyb21WYWx1ZXMoMCwwLDApLF9nbE1hdHJpeC52ZWMzLmZyb21WYWx1ZXMoLTEsMCwwKSxfZ2xNYXRyaXgudmVjMy5mcm9tVmFsdWVzKDAsLTEsMCldLFtfZ2xNYXRyaXgudmVjMy5mcm9tVmFsdWVzKDAsMCwwKSxfZ2xNYXRyaXgudmVjMy5mcm9tVmFsdWVzKDAsMSwwKSxfZ2xNYXRyaXgudmVjMy5mcm9tVmFsdWVzKDAsMCwxKV0sW19nbE1hdHJpeC52ZWMzLmZyb21WYWx1ZXMoMCwwLDApLF9nbE1hdHJpeC52ZWMzLmZyb21WYWx1ZXMoMCwtMSwwKSxfZ2xNYXRyaXgudmVjMy5mcm9tVmFsdWVzKDAsMCwtMSldLFtfZ2xNYXRyaXgudmVjMy5mcm9tVmFsdWVzKDAsMCwwKSxfZ2xNYXRyaXgudmVjMy5mcm9tVmFsdWVzKDAsMCwxKSxfZ2xNYXRyaXgudmVjMy5mcm9tVmFsdWVzKDAsLTEsMCldLFtfZ2xNYXRyaXgudmVjMy5mcm9tVmFsdWVzKDAsMCwwKSxfZ2xNYXRyaXgudmVjMy5mcm9tVmFsdWVzKDAsMCwtMSksX2dsTWF0cml4LnZlYzMuZnJvbVZhbHVlcygwLC0xLDApXV0sQ2FtZXJhQ3ViZT1mdW5jdGlvbihfQ2FtZXJhUGVyc3BlY3RpdmUpe2Z1bmN0aW9uIENhbWVyYUN1YmUoKXtfY2xhc3NDYWxsQ2hlY2sodGhpcyxDYW1lcmFDdWJlKTt2YXIgX3RoaXM9X3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywoQ2FtZXJhQ3ViZS5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZihDYW1lcmFDdWJlKSkuY2FsbCh0aGlzKSk7cmV0dXJuIF90aGlzLnNldFBlcnNwZWN0aXZlKE1hdGguUEkvMiwxLC4xLDFlMyksX3RoaXN9cmV0dXJuIF9pbmhlcml0cyhDYW1lcmFDdWJlLF9DYW1lcmFQZXJzcGVjdGl2ZSksX2NyZWF0ZUNsYXNzKENhbWVyYUN1YmUsW3trZXk6XCJmYWNlXCIsdmFsdWU6ZnVuY3Rpb24obUluZGV4KXt2YXIgbz1DQU1FUkFfU0VUVElOR1NbbUluZGV4XTt0aGlzLmxvb2tBdChvWzBdLG9bMV0sb1syXSl9fV0pLENhbWVyYUN1YmV9KF9DYW1lcmFQZXJzcGVjdGl2ZTMuZGVmYXVsdCk7ZXhwb3J0cy5kZWZhdWx0PUNhbWVyYUN1YmV9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX1mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsQ29uc3RydWN0b3Ipe2lmKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLGNhbGwpe2lmKCFzZWxmKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hY2FsbHx8XCJvYmplY3RcIiE9dHlwZW9mIGNhbGwmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGNhbGw/c2VsZjpjYWxsfWZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcyxzdXBlckNsYXNzKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBzdXBlckNsYXNzJiZudWxsIT09c3VwZXJDbGFzcyl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2Ygc3VwZXJDbGFzcyk7c3ViQ2xhc3MucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyYmc3VwZXJDbGFzcy5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTpzdWJDbGFzcyxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxzdXBlckNsYXNzJiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcyxzdXBlckNsYXNzKTpzdWJDbGFzcy5fX3Byb3RvX189c3VwZXJDbGFzcyl9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIF9jcmVhdGVDbGFzcz1mdW5jdGlvbigpe2Z1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LHByb3BzKXtmb3IodmFyIGk9MDtpPHByb3BzLmxlbmd0aDtpKyspe3ZhciBkZXNjcmlwdG9yPXByb3BzW2ldO2Rlc2NyaXB0b3IuZW51bWVyYWJsZT1kZXNjcmlwdG9yLmVudW1lcmFibGV8fCExLGRlc2NyaXB0b3IuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGRlc2NyaXB0b3ImJihkZXNjcmlwdG9yLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LGRlc2NyaXB0b3Iua2V5LGRlc2NyaXB0b3IpfX1yZXR1cm4gZnVuY3Rpb24oQ29uc3RydWN0b3IscHJvdG9Qcm9wcyxzdGF0aWNQcm9wcyl7cmV0dXJuIHByb3RvUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLHByb3RvUHJvcHMpLHN0YXRpY1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLHN0YXRpY1Byb3BzKSxDb25zdHJ1Y3Rvcn19KCksX2dldD1mdW5jdGlvbiBnZXQob2JqZWN0LHByb3BlcnR5LHJlY2VpdmVyKXtudWxsPT09b2JqZWN0JiYob2JqZWN0PUZ1bmN0aW9uLnByb3RvdHlwZSk7dmFyIGRlc2M9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QscHJvcGVydHkpO2lmKHZvaWQgMD09PWRlc2Mpe3ZhciBwYXJlbnQ9T2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7cmV0dXJuIG51bGw9PT1wYXJlbnQ/dm9pZCAwOmdldChwYXJlbnQscHJvcGVydHkscmVjZWl2ZXIpfWlmKFwidmFsdWVcImluIGRlc2MpcmV0dXJuIGRlc2MudmFsdWU7dmFyIGdldHRlcj1kZXNjLmdldDtpZih2b2lkIDAhPT1nZXR0ZXIpcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKX0sX0JpbmFyeUxvYWRlcjI9X193ZWJwYWNrX3JlcXVpcmVfXygxNyksX0JpbmFyeUxvYWRlcjM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQmluYXJ5TG9hZGVyMiksX01lc2g9X193ZWJwYWNrX3JlcXVpcmVfXyg1KSxfTWVzaDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfTWVzaCksT2JqTG9hZGVyPWZ1bmN0aW9uKF9CaW5hcnlMb2FkZXIpe2Z1bmN0aW9uIE9iakxvYWRlcigpe3JldHVybiBfY2xhc3NDYWxsQ2hlY2sodGhpcyxPYmpMb2FkZXIpLF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsKE9iakxvYWRlci5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZihPYmpMb2FkZXIpKS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfXJldHVybiBfaW5oZXJpdHMoT2JqTG9hZGVyLF9CaW5hcnlMb2FkZXIpLF9jcmVhdGVDbGFzcyhPYmpMb2FkZXIsW3trZXk6XCJsb2FkXCIsdmFsdWU6ZnVuY3Rpb24odXJsLGNhbGxiYWNrKXt2YXIgZHJhd1R5cGU9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOjQ7dGhpcy5fZHJhd1R5cGU9ZHJhd1R5cGUsX2dldChPYmpMb2FkZXIucHJvdG90eXBlLl9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKE9iakxvYWRlci5wcm90b3R5cGUpLFwibG9hZFwiLHRoaXMpLmNhbGwodGhpcyx1cmwsY2FsbGJhY2spfX0se2tleTpcIl9vbkxvYWRlZFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5wYXJzZU9iaih0aGlzLl9yZXEucmVzcG9uc2UpfX0se2tleTpcInBhcnNlT2JqXCIsdmFsdWU6ZnVuY3Rpb24ob2JqU3RyKXtmdW5jdGlvbiBwYXJzZVZlcnRleEluZGV4KHZhbHVlKXt2YXIgaW5kZXg9cGFyc2VJbnQodmFsdWUpO3JldHVybiAzKihpbmRleD49MD9pbmRleC0xOmluZGV4K3ZlcnRpY2VzLmxlbmd0aC8zKX1mdW5jdGlvbiBwYXJzZU5vcm1hbEluZGV4KHZhbHVlKXt2YXIgaW5kZXg9cGFyc2VJbnQodmFsdWUpO3JldHVybiAzKihpbmRleD49MD9pbmRleC0xOmluZGV4K25vcm1hbHMubGVuZ3RoLzMpfWZ1bmN0aW9uIHBhcnNlVVZJbmRleCh2YWx1ZSl7dmFyIGluZGV4PXBhcnNlSW50KHZhbHVlKTtyZXR1cm4gMiooaW5kZXg+PTA/aW5kZXgtMTppbmRleCt1dnMubGVuZ3RoLzIpfWZ1bmN0aW9uIGFkZFZlcnRleChhLGIsYyl7cG9zaXRpb25zLnB1c2goW3ZlcnRpY2VzW2FdLHZlcnRpY2VzW2ErMV0sdmVydGljZXNbYSsyXV0pLHBvc2l0aW9ucy5wdXNoKFt2ZXJ0aWNlc1tiXSx2ZXJ0aWNlc1tiKzFdLHZlcnRpY2VzW2IrMl1dKSxwb3NpdGlvbnMucHVzaChbdmVydGljZXNbY10sdmVydGljZXNbYysxXSx2ZXJ0aWNlc1tjKzJdXSksaW5kaWNlcy5wdXNoKDMqY291bnQrMCksaW5kaWNlcy5wdXNoKDMqY291bnQrMSksaW5kaWNlcy5wdXNoKDMqY291bnQrMiksY291bnQrK31mdW5jdGlvbiBhZGRVVihhLGIsYyl7Y29vcmRzLnB1c2goW3V2c1thXSx1dnNbYSsxXV0pLGNvb3Jkcy5wdXNoKFt1dnNbYl0sdXZzW2IrMV1dKSxjb29yZHMucHVzaChbdXZzW2NdLHV2c1tjKzFdXSl9ZnVuY3Rpb24gYWRkTm9ybWFsKGEsYixjKXtmaW5hbE5vcm1hbHMucHVzaChbbm9ybWFsc1thXSxub3JtYWxzW2ErMV0sbm9ybWFsc1thKzJdXSksZmluYWxOb3JtYWxzLnB1c2goW25vcm1hbHNbYl0sbm9ybWFsc1tiKzFdLG5vcm1hbHNbYisyXV0pLGZpbmFsTm9ybWFscy5wdXNoKFtub3JtYWxzW2NdLG5vcm1hbHNbYysxXSxub3JtYWxzW2MrMl1dKX1mdW5jdGlvbiBhZGRGYWNlKGEsYixjLGQsdWEsdWIsdWMsdWQsbmEsbmIsbmMsbmQpe3ZhciBpYT1wYXJzZVZlcnRleEluZGV4KGEpLGliPXBhcnNlVmVydGV4SW5kZXgoYiksaWM9cGFyc2VWZXJ0ZXhJbmRleChjKSxpZD12b2lkIDA7dm9pZCAwPT09ZD9hZGRWZXJ0ZXgoaWEsaWIsaWMpOihpZD1wYXJzZVZlcnRleEluZGV4KGQpLGFkZFZlcnRleChpYSxpYixpZCksYWRkVmVydGV4KGliLGljLGlkKSksdm9pZCAwIT09dWEmJihpYT1wYXJzZVVWSW5kZXgodWEpLGliPXBhcnNlVVZJbmRleCh1YiksaWM9cGFyc2VVVkluZGV4KHVjKSx2b2lkIDA9PT1kP2FkZFVWKGlhLGliLGljKTooaWQ9cGFyc2VVVkluZGV4KHVkKSxhZGRVVihpYSxpYixpZCksYWRkVVYoaWIsaWMsaWQpKSksdm9pZCAwIT09bmEmJihpYT1wYXJzZU5vcm1hbEluZGV4KG5hKSxpYj1wYXJzZU5vcm1hbEluZGV4KG5iKSxpYz1wYXJzZU5vcm1hbEluZGV4KG5jKSx2b2lkIDA9PT1kP2FkZE5vcm1hbChpYSxpYixpYyk6KGlkPXBhcnNlTm9ybWFsSW5kZXgobmQpLGFkZE5vcm1hbChpYSxpYixpZCksYWRkTm9ybWFsKGliLGljLGlkKSkpfWZvcih2YXIgbGluZXM9b2JqU3RyLnNwbGl0KFwiXFxuXCIpLHBvc2l0aW9ucz1bXSxjb29yZHM9W10sZmluYWxOb3JtYWxzPVtdLHZlcnRpY2VzPVtdLG5vcm1hbHM9W10sdXZzPVtdLGluZGljZXM9W10sY291bnQ9MCxyZXN1bHQ9dm9pZCAwLHZlcnRleFBhdHRlcm49L3YoICtbXFxkfFxcLnxcXCt8XFwtfGV8RV0rKSggK1tcXGR8XFwufFxcK3xcXC18ZXxFXSspKCArW1xcZHxcXC58XFwrfFxcLXxlfEVdKykvLG5vcm1hbFBhdHRlcm49L3ZuKCArW1xcZHxcXC58XFwrfFxcLXxlfEVdKykoICtbXFxkfFxcLnxcXCt8XFwtfGV8RV0rKSggK1tcXGR8XFwufFxcK3xcXC18ZXxFXSspLyx1dlBhdHRlcm49L3Z0KCArW1xcZHxcXC58XFwrfFxcLXxlfEVdKykoICtbXFxkfFxcLnxcXCt8XFwtfGV8RV0rKS8sZmFjZVBhdHRlcm4xPS9mKCArLT9cXGQrKSggKy0/XFxkKykoICstP1xcZCspKCArLT9cXGQrKT8vLGZhY2VQYXR0ZXJuMj0vZiggKygtP1xcZCspXFwvKC0/XFxkKykpKCArKC0/XFxkKylcXC8oLT9cXGQrKSkoICsoLT9cXGQrKVxcLygtP1xcZCspKSggKygtP1xcZCspXFwvKC0/XFxkKykpPy8sZmFjZVBhdHRlcm4zPS9mKCArKC0/XFxkKylcXC8oLT9cXGQrKVxcLygtP1xcZCspKSggKygtP1xcZCspXFwvKC0/XFxkKylcXC8oLT9cXGQrKSkoICsoLT9cXGQrKVxcLygtP1xcZCspXFwvKC0/XFxkKykpKCArKC0/XFxkKylcXC8oLT9cXGQrKVxcLygtP1xcZCspKT8vLGZhY2VQYXR0ZXJuND0vZiggKygtP1xcZCspXFwvXFwvKC0/XFxkKykpKCArKC0/XFxkKylcXC9cXC8oLT9cXGQrKSkoICsoLT9cXGQrKVxcL1xcLygtP1xcZCspKSggKygtP1xcZCspXFwvXFwvKC0/XFxkKykpPy8saT0wO2k8bGluZXMubGVuZ3RoO2krKyl7dmFyIGxpbmU9bGluZXNbaV07bGluZT1saW5lLnRyaW0oKSwwIT09bGluZS5sZW5ndGgmJlwiI1wiIT09bGluZS5jaGFyQXQoMCkmJihudWxsIT09KHJlc3VsdD12ZXJ0ZXhQYXR0ZXJuLmV4ZWMobGluZSkpP3ZlcnRpY2VzLnB1c2gocGFyc2VGbG9hdChyZXN1bHRbMV0pLHBhcnNlRmxvYXQocmVzdWx0WzJdKSxwYXJzZUZsb2F0KHJlc3VsdFszXSkpOm51bGwhPT0ocmVzdWx0PW5vcm1hbFBhdHRlcm4uZXhlYyhsaW5lKSk/bm9ybWFscy5wdXNoKHBhcnNlRmxvYXQocmVzdWx0WzFdKSxwYXJzZUZsb2F0KHJlc3VsdFsyXSkscGFyc2VGbG9hdChyZXN1bHRbM10pKTpudWxsIT09KHJlc3VsdD11dlBhdHRlcm4uZXhlYyhsaW5lKSk/dXZzLnB1c2gocGFyc2VGbG9hdChyZXN1bHRbMV0pLHBhcnNlRmxvYXQocmVzdWx0WzJdKSk6bnVsbCE9PShyZXN1bHQ9ZmFjZVBhdHRlcm4xLmV4ZWMobGluZSkpP2FkZEZhY2UocmVzdWx0WzFdLHJlc3VsdFsyXSxyZXN1bHRbM10scmVzdWx0WzRdKTpudWxsIT09KHJlc3VsdD1mYWNlUGF0dGVybjIuZXhlYyhsaW5lKSk/YWRkRmFjZShyZXN1bHRbMl0scmVzdWx0WzVdLHJlc3VsdFs4XSxyZXN1bHRbMTFdLHJlc3VsdFszXSxyZXN1bHRbNl0scmVzdWx0WzldLHJlc3VsdFsxMl0pOm51bGwhPT0ocmVzdWx0PWZhY2VQYXR0ZXJuMy5leGVjKGxpbmUpKT9hZGRGYWNlKHJlc3VsdFsyXSxyZXN1bHRbNl0scmVzdWx0WzEwXSxyZXN1bHRbMTRdLHJlc3VsdFszXSxyZXN1bHRbN10scmVzdWx0WzExXSxyZXN1bHRbMTVdLHJlc3VsdFs0XSxyZXN1bHRbOF0scmVzdWx0WzEyXSxyZXN1bHRbMTZdKTpudWxsIT09KHJlc3VsdD1mYWNlUGF0dGVybjQuZXhlYyhsaW5lKSkmJmFkZEZhY2UocmVzdWx0WzJdLHJlc3VsdFs1XSxyZXN1bHRbOF0scmVzdWx0WzExXSx2b2lkIDAsdm9pZCAwLHZvaWQgMCx2b2lkIDAscmVzdWx0WzNdLHJlc3VsdFs2XSxyZXN1bHRbOV0scmVzdWx0WzEyXSkpfXJldHVybiB0aGlzLl9nZW5lcmF0ZU1lc2hlcyh7cG9zaXRpb25zOnBvc2l0aW9ucyxjb29yZHM6Y29vcmRzLG5vcm1hbHM6ZmluYWxOb3JtYWxzLGluZGljZXM6aW5kaWNlc30pfX0se2tleTpcIl9nZW5lcmF0ZU1lc2hlc1wiLHZhbHVlOmZ1bmN0aW9uKG8pe3ZhciBoYXNOb3JtYWxzPW8ubm9ybWFscy5sZW5ndGg+MCxoYXNVVnM9by5jb29yZHMubGVuZ3RoPjAsbWVzaD12b2lkIDA7aWYoby5wb3NpdGlvbnMubGVuZ3RoPjY1NTM1KXt2YXIgbWVzaGVzPVtdLGxhc3RJbmRleD0wLG9Db3B5PXt9O2ZvcihvQ29weS5wb3NpdGlvbnM9by5wb3NpdGlvbnMuY29uY2F0KCksb0NvcHkuY29vcmRzPW8uY29vcmRzLmNvbmNhdCgpLG9Db3B5LmluZGljZXM9by5pbmRpY2VzLmNvbmNhdCgpLG9Db3B5Lm5vcm1hbHM9by5ub3JtYWxzLmNvbmNhdCgpO28uaW5kaWNlcy5sZW5ndGg+MDspe2Zvcih2YXIgc2xpY2VOdW09TWF0aC5taW4oNjU1MzUsby5wb3NpdGlvbnMubGVuZ3RoKSxpbmRpY2VzPW8uaW5kaWNlcy5zcGxpY2UoMCxzbGljZU51bSkscG9zaXRpb25zPVtdLGNvb3Jkcz1bXSxub3JtYWxzPVtdLGluZGV4PXZvaWQgMCx0bXBJbmRleD0wLGk9MDtpPGluZGljZXMubGVuZ3RoO2krKylpbmRpY2VzW2ldPnRtcEluZGV4JiYodG1wSW5kZXg9aW5kaWNlc1tpXSksaW5kZXg9aW5kaWNlc1tpXSxwb3NpdGlvbnMucHVzaChvQ29weS5wb3NpdGlvbnNbaW5kZXhdKSxoYXNVVnMmJmNvb3Jkcy5wdXNoKG9Db3B5LmNvb3Jkc1tpbmRleF0pLGhhc05vcm1hbHMmJm5vcm1hbHMucHVzaChvQ29weS5ub3JtYWxzW2luZGV4XSksaW5kaWNlc1tpXS09bGFzdEluZGV4O2xhc3RJbmRleD10bXBJbmRleCsxLG1lc2g9bmV3IF9NZXNoMi5kZWZhdWx0KHRoaXMuX2RyYXdUeXBlKSxtZXNoLmJ1ZmZlclZlcnRleChwb3NpdGlvbnMpLGhhc1VWcyYmbWVzaC5idWZmZXJUZXhDb29yZChjb29yZHMpLG1lc2guYnVmZmVySW5kZXgoaW5kaWNlcyksaGFzTm9ybWFscyYmbWVzaC5idWZmZXJOb3JtYWwobm9ybWFscyksbWVzaGVzLnB1c2gobWVzaCl9cmV0dXJuIHRoaXMuX2NhbGxiYWNrJiZ0aGlzLl9jYWxsYmFjayhtZXNoZXMsb0NvcHkpLG1lc2hlc31yZXR1cm4gbWVzaD1uZXcgX01lc2gyLmRlZmF1bHQodGhpcy5fZHJhd1R5cGUpLG1lc2guYnVmZmVyVmVydGV4KG8ucG9zaXRpb25zKSxoYXNVVnMmJm1lc2guYnVmZmVyVGV4Q29vcmQoby5jb29yZHMpLG1lc2guYnVmZmVySW5kZXgoby5pbmRpY2VzKSxoYXNOb3JtYWxzJiZtZXNoLmJ1ZmZlck5vcm1hbChvLm5vcm1hbHMpLHRoaXMuX2NhbGxiYWNrJiZ0aGlzLl9jYWxsYmFjayhtZXNoLG8pLG1lc2h9fV0pLE9iakxvYWRlcn0oX0JpbmFyeUxvYWRlcjMuZGVmYXVsdCk7T2JqTG9hZGVyLnBhcnNlPWZ1bmN0aW9uKG9ialN0cil7cmV0dXJuKG5ldyBPYmpMb2FkZXIpLnBhcnNlT2JqKG9ialN0cil9LGV4cG9ydHMuZGVmYXVsdD1PYmpMb2FkZXJ9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX1mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsQ29uc3RydWN0b3Ipe2lmKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLGNhbGwpe2lmKCFzZWxmKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hY2FsbHx8XCJvYmplY3RcIiE9dHlwZW9mIGNhbGwmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGNhbGw/c2VsZjpjYWxsfWZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcyxzdXBlckNsYXNzKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBzdXBlckNsYXNzJiZudWxsIT09c3VwZXJDbGFzcyl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2Ygc3VwZXJDbGFzcyk7c3ViQ2xhc3MucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyYmc3VwZXJDbGFzcy5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTpzdWJDbGFzcyxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxzdXBlckNsYXNzJiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcyxzdXBlckNsYXNzKTpzdWJDbGFzcy5fX3Byb3RvX189c3VwZXJDbGFzcyl9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIF9jcmVhdGVDbGFzcz1mdW5jdGlvbigpe2Z1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LHByb3BzKXtmb3IodmFyIGk9MDtpPHByb3BzLmxlbmd0aDtpKyspe3ZhciBkZXNjcmlwdG9yPXByb3BzW2ldO2Rlc2NyaXB0b3IuZW51bWVyYWJsZT1kZXNjcmlwdG9yLmVudW1lcmFibGV8fCExLGRlc2NyaXB0b3IuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGRlc2NyaXB0b3ImJihkZXNjcmlwdG9yLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LGRlc2NyaXB0b3Iua2V5LGRlc2NyaXB0b3IpfX1yZXR1cm4gZnVuY3Rpb24oQ29uc3RydWN0b3IscHJvdG9Qcm9wcyxzdGF0aWNQcm9wcyl7cmV0dXJuIHByb3RvUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLHByb3RvUHJvcHMpLHN0YXRpY1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLHN0YXRpY1Byb3BzKSxDb25zdHJ1Y3Rvcn19KCksX0JpbmFyeUxvYWRlcjI9X193ZWJwYWNrX3JlcXVpcmVfXygxNyksX0JpbmFyeUxvYWRlcjM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQmluYXJ5TG9hZGVyMiksX0hEUlBhcnNlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDY2KSxfSERSUGFyc2VyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9IRFJQYXJzZXIpLEhEUkxvYWRlcj1mdW5jdGlvbihfQmluYXJ5TG9hZGVyKXtmdW5jdGlvbiBIRFJMb2FkZXIoKXtyZXR1cm4gX2NsYXNzQ2FsbENoZWNrKHRoaXMsSERSTG9hZGVyKSxfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLChIRFJMb2FkZXIuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YoSERSTG9hZGVyKSkuY2FsbCh0aGlzLCEwKSl9cmV0dXJuIF9pbmhlcml0cyhIRFJMb2FkZXIsX0JpbmFyeUxvYWRlciksX2NyZWF0ZUNsYXNzKEhEUkxvYWRlcixbe2tleTpcInBhcnNlXCIsdmFsdWU6ZnVuY3Rpb24obUFycmF5QnVmZmVyKXtyZXR1cm4oMCxfSERSUGFyc2VyMi5kZWZhdWx0KShtQXJyYXlCdWZmZXIpfX0se2tleTpcIl9vbkxvYWRlZFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIG89dGhpcy5wYXJzZSh0aGlzLl9yZXEucmVzcG9uc2UpO3RoaXMuX2NhbGxiYWNrJiZ0aGlzLl9jYWxsYmFjayhvKX19XSksSERSTG9hZGVyfShfQmluYXJ5TG9hZGVyMy5kZWZhdWx0KTtIRFJMb2FkZXIucGFyc2U9ZnVuY3Rpb24obUFycmF5QnVmZmVyKXtyZXR1cm4oMCxfSERSUGFyc2VyMi5kZWZhdWx0KShtQXJyYXlCdWZmZXIpfSxleHBvcnRzLmRlZmF1bHQ9SERSTG9hZGVyfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByZWFkUGl4ZWxzUmF3UkxFKGJ1ZmZlcixkYXRhLG9mZnNldCxmaWxlT2Zmc2V0LHNjYW5saW5lV2lkdGgsbnVtU2NhbmxpbmVzKXtmdW5jdGlvbiByZWFkQnVmKGJ1Zil7dmFyIGJ5dGVzUmVhZD0wO2Rve2J1ZltieXRlc1JlYWQrK109YnVmZmVyW2ZpbGVPZmZzZXRdfXdoaWxlKCsrZmlsZU9mZnNldDxidWZmZXJMZW5ndGgmJmJ5dGVzUmVhZDxidWYubGVuZ3RoKTtyZXR1cm4gYnl0ZXNSZWFkfWZ1bmN0aW9uIHJlYWRCdWZPZmZzZXQoYnVmLG9mZnNldCxsZW5ndGgpe3ZhciBieXRlc1JlYWQ9MDtkb3tidWZbb2Zmc2V0K2J5dGVzUmVhZCsrXT1idWZmZXJbZmlsZU9mZnNldF19d2hpbGUoKytmaWxlT2Zmc2V0PGJ1ZmZlckxlbmd0aCYmYnl0ZXNSZWFkPGxlbmd0aCk7cmV0dXJuIGJ5dGVzUmVhZH1mb3IodmFyIHJnYmU9bmV3IEFycmF5KDQpLHNjYW5saW5lQnVmZmVyPW51bGwscHRyPXZvaWQgMCxwdHJFbmQ9dm9pZCAwLGNvdW50PXZvaWQgMCxidWY9bmV3IEFycmF5KDIpLGJ1ZmZlckxlbmd0aD1idWZmZXIubGVuZ3RoO251bVNjYW5saW5lcz4wOyl7aWYocmVhZEJ1ZihyZ2JlKTxyZ2JlLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciByZWFkaW5nIGJ5dGVzOiBleHBlY3RlZCBcIityZ2JlLmxlbmd0aCk7aWYoMiE9PXJnYmVbMF18fDIhPT1yZ2JlWzFdfHwwIT0oMTI4JnJnYmVbMl0pKXJldHVybiBkYXRhW29mZnNldCsrXT1yZ2JlWzBdLGRhdGFbb2Zmc2V0KytdPXJnYmVbMV0sZGF0YVtvZmZzZXQrK109cmdiZVsyXSxkYXRhW29mZnNldCsrXT1yZ2JlWzNdLHZvaWQgZnVuY3Rpb24oYnVmZmVyLGRhdGEsb2Zmc2V0LG51bXBpeGVscyl7dmFyIG51bUV4cGVjdGVkPTQqbnVtcGl4ZWxzLG51bVJlYWQ9cmVhZEJ1Zk9mZnNldChkYXRhLG9mZnNldCxudW1FeHBlY3RlZCk7aWYobnVtUmVhZDxudW1FeHBlY3RlZCl0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciByZWFkaW5nIHJhdyBwaXhlbHM6IGdvdCBcIitudW1SZWFkK1wiIGJ5dGVzLCBleHBlY3RlZCBcIitudW1FeHBlY3RlZCl9KDAsZGF0YSxvZmZzZXQsc2NhbmxpbmVXaWR0aCpudW1TY2FubGluZXMtMSk7aWYoKCgyNTUmcmdiZVsyXSk8PDh8MjU1JnJnYmVbM10pIT09c2NhbmxpbmVXaWR0aCl0aHJvdyBuZXcgRXJyb3IoXCJXcm9uZyBzY2FubGluZSB3aWR0aCBcIisoKDI1NSZyZ2JlWzJdKTw8OHwyNTUmcmdiZVszXSkrXCIsIGV4cGVjdGVkIFwiK3NjYW5saW5lV2lkdGgpO251bGw9PT1zY2FubGluZUJ1ZmZlciYmKHNjYW5saW5lQnVmZmVyPW5ldyBBcnJheSg0KnNjYW5saW5lV2lkdGgpKSxwdHI9MDtmb3IodmFyIGk9MDtpPDQ7aSsrKWZvcihwdHJFbmQ9KGkrMSkqc2NhbmxpbmVXaWR0aDtwdHI8cHRyRW5kOyl7aWYocmVhZEJ1ZihidWYpPGJ1Zi5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IgcmVhZGluZyAyLWJ5dGUgYnVmZmVyXCIpO2lmKCgyNTUmYnVmWzBdKT4xMjgpe2lmKDA9PT0oY291bnQ9KDI1NSZidWZbMF0pLTEyOCl8fGNvdW50PnB0ckVuZC1wdHIpdGhyb3cgbmV3IEVycm9yKFwiQmFkIHNjYW5saW5lIGRhdGFcIik7Zm9yKDtjb3VudC0tID4wOylzY2FubGluZUJ1ZmZlcltwdHIrK109YnVmWzFdfWVsc2V7aWYoMD09PShjb3VudD0yNTUmYnVmWzBdKXx8Y291bnQ+cHRyRW5kLXB0cil0aHJvdyBuZXcgRXJyb3IoXCJCYWQgc2NhbmxpbmUgZGF0YVwiKTtpZihzY2FubGluZUJ1ZmZlcltwdHIrK109YnVmWzFdLC0tY291bnQ+MCl7aWYocmVhZEJ1Zk9mZnNldChzY2FubGluZUJ1ZmZlcixwdHIsY291bnQpPGNvdW50KXRocm93IG5ldyBFcnJvcihcIkVycm9yIHJlYWRpbmcgbm9uLXJ1biBkYXRhXCIpO3B0cis9Y291bnR9fX1mb3IodmFyIF9pPTA7X2k8c2NhbmxpbmVXaWR0aDtfaSsrKWRhdGFbb2Zmc2V0KzBdPXNjYW5saW5lQnVmZmVyW19pXSxkYXRhW29mZnNldCsxXT1zY2FubGluZUJ1ZmZlcltfaStzY2FubGluZVdpZHRoXSxkYXRhW29mZnNldCsyXT1zY2FubGluZUJ1ZmZlcltfaSsyKnNjYW5saW5lV2lkdGhdLGRhdGFbb2Zmc2V0KzNdPXNjYW5saW5lQnVmZmVyW19pKzMqc2NhbmxpbmVXaWR0aF0sb2Zmc2V0Kz00O251bVNjYW5saW5lcy0tfX1mdW5jdGlvbiBwYXJzZUhkcihidWZmZXIpe2J1ZmZlciBpbnN0YW5jZW9mIEFycmF5QnVmZmVyJiYoYnVmZmVyPW5ldyBVaW50OEFycmF5KGJ1ZmZlcikpO2Zvcih2YXIgZmlsZU9mZnNldD0wLGJ1ZmZlckxlbmd0aD1idWZmZXIubGVuZ3RoLE5FV19MSU5FPTEwLHdpZHRoPTAsaGVpZ2h0PTAsZXhwb3N1cmU9MSxybGU9ITEsaT0wO2k8MjA7aSsrKXt2YXIgbGluZT1mdW5jdGlvbigpe3ZhciBidWY9XCJcIjtkb3t2YXIgYj1idWZmZXJbZmlsZU9mZnNldF07aWYoYj09PU5FV19MSU5FKXsrK2ZpbGVPZmZzZXQ7YnJlYWt9YnVmKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGIpfXdoaWxlKCsrZmlsZU9mZnNldDxidWZmZXJMZW5ndGgpO3JldHVybiBidWZ9KCksbWF0Y2g9dm9pZCAwO2lmKG1hdGNoPWxpbmUubWF0Y2gocmFkaWFuY2VQYXR0ZXJuKSk7ZWxzZSBpZihtYXRjaD1saW5lLm1hdGNoKGZvcm1hdFBhdHRlcm4pKXJsZT0hMDtlbHNlIGlmKG1hdGNoPWxpbmUubWF0Y2goZXhwb3N1cmVQYXR0ZXJuKSlleHBvc3VyZT1OdW1iZXIobWF0Y2hbMV0pO2Vsc2UgaWYobWF0Y2g9bGluZS5tYXRjaChjb21tZW50UGF0dGVybikpO2Vsc2UgaWYobWF0Y2g9bGluZS5tYXRjaCh3aWR0aEhlaWdodFBhdHRlcm4pKXtoZWlnaHQ9TnVtYmVyKG1hdGNoWzFdKSx3aWR0aD1OdW1iZXIobWF0Y2hbMl0pO2JyZWFrfX1pZighcmxlKXRocm93IG5ldyBFcnJvcihcIkZpbGUgaXMgbm90IHJ1biBsZW5ndGggZW5jb2RlZCFcIik7dmFyIGRhdGE9bmV3IFVpbnQ4QXJyYXkod2lkdGgqaGVpZ2h0KjQpO3JlYWRQaXhlbHNSYXdSTEUoYnVmZmVyLGRhdGEsMCxmaWxlT2Zmc2V0LHdpZHRoLGhlaWdodCk7Zm9yKHZhciBmbG9hdERhdGE9bmV3IEZsb2F0MzJBcnJheSh3aWR0aCpoZWlnaHQqNCksb2Zmc2V0PTA7b2Zmc2V0PGRhdGEubGVuZ3RoO29mZnNldCs9NCl7dmFyIHI9ZGF0YVtvZmZzZXQrMF0vMjU1LGc9ZGF0YVtvZmZzZXQrMV0vMjU1LGI9ZGF0YVtvZmZzZXQrMl0vMjU1LGU9ZGF0YVtvZmZzZXQrM10sZj1NYXRoLnBvdygyLGUtMTI4KTtyKj1mLGcqPWYsYio9Zjt2YXIgZmxvYXRPZmZzZXQ9b2Zmc2V0O2Zsb2F0RGF0YVtmbG9hdE9mZnNldCswXT1yLGZsb2F0RGF0YVtmbG9hdE9mZnNldCsxXT1nLGZsb2F0RGF0YVtmbG9hdE9mZnNldCsyXT1iLGZsb2F0RGF0YVtmbG9hdE9mZnNldCszXT0xfXJldHVybntzaGFwZTpbd2lkdGgsaGVpZ2h0XSxleHBvc3VyZTpleHBvc3VyZSxnYW1tYToxLGRhdGE6ZmxvYXREYXRhfX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcmFkaWFuY2VQYXR0ZXJuPVwiI1xcXFw/UkFESUFOQ0VcIixjb21tZW50UGF0dGVybj1cIiMuKlwiLGV4cG9zdXJlUGF0dGVybj1cIkVYUE9TVVJFPVxcXFxzKihbMC05XSpbLl1bMC05XSopXCIsZm9ybWF0UGF0dGVybj1cIkZPUk1BVD0zMi1iaXRfcmxlX3JnYmVcIix3aWR0aEhlaWdodFBhdHRlcm49XCItWSAoWzAtOV0rKSBcXFxcK1ggKFswLTldKylcIjtleHBvcnRzLmRlZmF1bHQ9cGFyc2VIZHJ9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX2NvbGxhZGFQYXJzZXI9X193ZWJwYWNrX3JlcXVpcmVfXyg2OCksX2NvbGxhZGFQYXJzZXIyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NvbGxhZGFQYXJzZXIpLF9NZXNoPV9fd2VicGFja19yZXF1aXJlX18oNSksX01lc2gyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX01lc2gpLGdlbmVyYXRlTWVzaD1mdW5jdGlvbihtZXNoZXMpe3ZhciBjYWNoZXM9e307bWVzaGVzLmZvckVhY2goZnVuY3Rpb24obWVzaCl7dmFyIF9tZXNoJG1lc2g9bWVzaC5tZXNoLHZlcnRpY2VzPV9tZXNoJG1lc2gudmVydGljZXMsbm9ybWFscz1fbWVzaCRtZXNoLm5vcm1hbHMsY29vcmRzPV9tZXNoJG1lc2guY29vcmRzLHRyaWFuZ2xlcz1fbWVzaCRtZXNoLnRyaWFuZ2xlcyxuYW1lPV9tZXNoJG1lc2gubmFtZTtpZighY2FjaGVzW25hbWVdKXt2YXIgZ2xNZXNoPShuZXcgX01lc2gyLmRlZmF1bHQpLmJ1ZmZlckZsYXR0ZW5EYXRhKHZlcnRpY2VzLFwiYVZlcnRleFBvc2l0aW9uXCIsMykuYnVmZmVyRmxhdHRlbkRhdGEoY29vcmRzLFwiYVRleHR1cmVDb29yZFwiLDIpLmJ1ZmZlckZsYXR0ZW5EYXRhKG5vcm1hbHMsXCJhTm9ybWFsXCIsMykuYnVmZmVySW5kZXgodHJpYW5nbGVzKTtjYWNoZXNbbmFtZV09Z2xNZXNofW1lc2guZ2xNZXNoPWNhY2hlc1tuYW1lXX0pfSxwYXJzZT1mdW5jdGlvbihtRGF0YSl7dmFyIG1lc2hlcz1fY29sbGFkYVBhcnNlcjIuZGVmYXVsdC5wYXJzZShtRGF0YSk7cmV0dXJuIGdlbmVyYXRlTWVzaChtZXNoZXMpLG1lc2hlc30sbG9hZD1mdW5jdGlvbihtUGF0aCxtQ2FsbGJhY2spe19jb2xsYWRhUGFyc2VyMi5kZWZhdWx0LmxvYWQobVBhdGgsZnVuY3Rpb24obWVzaGVzKXtnZW5lcmF0ZU1lc2gobWVzaGVzKSxtQ2FsbGJhY2sobWVzaGVzKX0pfSxDb2xsYWRhUGFyc2VyPXtwYXJzZTpwYXJzZSxsb2FkOmxvYWR9O2V4cG9ydHMuZGVmYXVsdD1Db2xsYWRhUGFyc2VyfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX0NvbGxhZGE9X193ZWJwYWNrX3JlcXVpcmVfXyg2OSksX0NvbGxhZGEyPWZ1bmN0aW9uKG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19KF9Db2xsYWRhKSxfZ2xNYXRyaXg9X193ZWJwYWNrX3JlcXVpcmVfXygxKSxwYXJzZURhdGE9ZnVuY3Rpb24obURhdGEpe2Z1bmN0aW9uIGdldE1hdGVyaWFsKGlkKXt2YXIgbWF0PXZvaWQgMDtmb3IodmFyIF9zIGluIG1hdGVyaWFscylfcz09PWlkJiYobWF0PW1hdGVyaWFsc1tfc10pO3ZhciBvTWF0ZXJpYWw9e307cmV0dXJuIG1hdC5kaWZmdXNlJiYob01hdGVyaWFsLmRpZmZ1c2VDb2xvcj1tYXQuZGlmZnVzZSksb01hdGVyaWFsLmRpZmZ1c2VDb2xvcj1tYXQuZGlmZnVzZXx8WzAsMCwwXSxvTWF0ZXJpYWwuc2hpbmluZXNzPW1hdC5zaGluaW5lc3N8fDAsbWF0LnRleHR1cmVzJiYobWF0LnRleHR1cmVzLmRpZmZ1c2UmJihvTWF0ZXJpYWwuZGlmZnVzZU1hcElEPW1hdC50ZXh0dXJlcy5kaWZmdXNlLm1hcF9pZCksbWF0LnRleHR1cmVzLm5vcm1hbCYmKG9NYXRlcmlhbC5ub3JtYWxNYXBJRD1tYXQudGV4dHVyZXMubm9ybWFsLm1hcF9pZCkpLG9NYXRlcmlhbH1mdW5jdGlvbiB3YWxrKG5vZGUsbXR4UGFyZW50KXt2YXIgbT1fZ2xNYXRyaXgubWF0NC5jcmVhdGUoKTtpZihub2RlLm1vZGVsP19nbE1hdHJpeC5tYXQ0Lm11bHRpcGx5KG0sbXR4UGFyZW50LG5vZGUubW9kZWwpOl9nbE1hdHJpeC5tYXQ0LmNvcHkobSxtdHhQYXJlbnQpLG5vZGUuY2hpbGRyZW4ubGVuZ3RoPjAmJm5vZGUuY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbihjaGlsZCl7d2FsayhjaGlsZCxtKX0pLG5vZGUubWVzaCl7dmFyIF9vTWVzaD17fTtfb01lc2gubW9kZWxNYXRyaXg9bSxfb01lc2gubWVzaD1tZXNoZXNbbm9kZS5tZXNoXSxfb01lc2guaWQ9bm9kZS5pZCxfb01lc2gubmFtZT1ub2RlLm5hbWUsX29NZXNoLm1hdGVyaWFsPWdldE1hdGVyaWFsKG5vZGUubWF0ZXJpYWwpLG1lc2hPYmpzLnB1c2goX29NZXNoKX19dmFyIG1hdGVyaWFscz1tRGF0YS5tYXRlcmlhbHMsbWVzaGVzPW1EYXRhLm1lc2hlcyxtZXNoT2Jqcz1bXSxhbGxNZXNoZXM9W107Zm9yKHZhciBzIGluIG1lc2hlcyl7dmFyIG9NZXNoPW1lc2hlc1tzXSx2ZXJ0aWNlcz1vTWVzaC52ZXJ0aWNlcyxub3JtYWxzPW9NZXNoLm5vcm1hbHMsY29vcmRzPW9NZXNoLmNvb3Jkcyx0cmlhbmdsZXM9b01lc2gudHJpYW5nbGVzLGJ1ZmZlcnM9e3ZlcnRpY2VzOnZlcnRpY2VzLG5vcm1hbHM6bm9ybWFscyxjb29yZHM6Y29vcmRzLHRyaWFuZ2xlczp0cmlhbmdsZXN9O2FsbE1lc2hlcy5wdXNoKHtpZDpzLGJ1ZmZlcnM6YnVmZmVyc30pfXZhciBtdHg9X2dsTWF0cml4Lm1hdDQuY3JlYXRlKCk7cmV0dXJuIHdhbGsobURhdGEucm9vdCxtdHgpLG1lc2hPYmpzfSxwYXJzZT1mdW5jdGlvbihtRmlsZSl7dmFyIG89X0NvbGxhZGEyLmRlZmF1bHQucGFyc2UobUZpbGUpO3JldHVybiBwYXJzZURhdGEobyl9LGxvYWQ9ZnVuY3Rpb24obVBhdGgsbUNhbGxCYWNrKXtfQ29sbGFkYTIuZGVmYXVsdC5sb2FkKG1QYXRoLGZ1bmN0aW9uKG1EYXRhKXttQ2FsbEJhY2socGFyc2VEYXRhKG1EYXRhKSl9KX0sQ29sbGFkYVBhcnNlcj17bG9hZDpsb2FkLHBhcnNlOnBhcnNlfTtleHBvcnRzLmRlZmF1bHQ9Q29sbGFkYVBhcnNlcixtb2R1bGUuZXhwb3J0cz1leHBvcnRzLmRlZmF1bHR9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiOyhmdW5jdGlvbihnbG9iYWwpe2Z1bmN0aW9uIHJlcXVlc3QodXJsLGNhbGxiYWNrKXt2YXIgcmVxPW5ldyBYTUxIdHRwUmVxdWVzdDtyZXEub25sb2FkPWZ1bmN0aW9uKCl7dGhpcy5yZXNwb25zZTsyMDA9PXRoaXMuc3RhdHVzJiZjYWxsYmFjayYmY2FsbGJhY2sodGhpcy5yZXNwb25zZSl9LHJlcS5vcGVuKFwiZ2V0XCIsdXJsLCEwKSxyZXEuc2VuZCgpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfZ2xNYXRyaXg9X193ZWJwYWNrX3JlcXVpcmVfXygxKSxpc1dvcmtlcj12b2lkIDA9PT1nbG9iYWwuZG9jdW1lbnQsREVHMlJBRD0yKk1hdGguUEkvMzYwLHRlbXBfbWF0ND1udWxsLHRlbXBfdmVjMj1udWxsLHRlbXBfdmVjMz1udWxsLHRlbXBfdmVjND1udWxsLHRlbXBfcXVhdD1udWxsLENvbGxhZGE9e2xpYnNQYXRoOlwiLi9cIix3b3JrZXJQYXRoOlwiLi9cIixub19mbGlwOiEwLHVzZV90cmFuc2ZlcmFibGVzOiEwLG9uZXJyb3I6bnVsbCx2ZXJib3NlOiExLGNvbmZpZzp7Zm9yY2VQYXJzZXI6ITF9LGluaXQ6ZnVuY3Rpb24oY29uZmlnKXtjb25maWc9Y29uZmlnfHx7fTtmb3IodmFyIGkgaW4gY29uZmlnKXRoaXNbaV09Y29uZmlnW2ldO2lmKHRoaXMuY29uZmlnPWNvbmZpZyxpc1dvcmtlcil0cnl7aW1wb3J0U2NyaXB0cyh0aGlzLmxpYnNQYXRoK1wiZ2wtbWF0cml4LW1pbi5qc1wiLHRoaXMubGlic1BhdGgrXCJ0aW55eG1sLmpzXCIpfWNhdGNoKGVycil7Q29sbGFkYS50aHJvd0V4Y2VwdGlvbihDb2xsYWRhLkxJQk1JU1NJTkdfRVJST1IpfXRlbXBfbWF0ND1fZ2xNYXRyaXgubWF0NC5jcmVhdGUoKSx0ZW1wX3ZlYzI9dmVjMy5jcmVhdGUoKSx0ZW1wX3ZlYzM9dmVjMy5jcmVhdGUoKSx0ZW1wX3ZlYzQ9dmVjMy5jcmVhdGUoKSx0ZW1wX3F1YXQ9X2dsTWF0cml4LnF1YXQuY3JlYXRlKCksaXNXb3JrZXImJmNvbnNvbGUubG9nKFwiQ29sbGFkYSB3b3JrZXIgcmVhZHlcIil9LGxvYWQ6ZnVuY3Rpb24odXJsLGNhbGxiYWNrKXtyZXF1ZXN0KHVybCxmdW5jdGlvbihkYXRhKXtjYWxsYmFjayhkYXRhP0NvbGxhZGEucGFyc2UoZGF0YSk6bnVsbCl9KX0sX3htbHJvb3Q6bnVsbCxfbm9kZXNfYnlfaWQ6bnVsbCxfdHJhbnNmZXJhYmxlczpudWxsLF9jb250cm9sbGVyc19mb3VuZDpudWxsLF9nZW9tZXRyaWVzX2ZvdW5kOm51bGwsc2FmZVN0cmluZzpmdW5jdGlvbihzdHIpe3JldHVybiBzdHI/dGhpcy5jb252ZXJ0SUQ/dGhpcy5jb252ZXJ0SUQoc3RyKTpzdHIucmVwbGFjZSgvIC9nLFwiX1wiKTpcIlwifSxMSUJNSVNTSU5HX0VSUk9SOlwiTGlicmFyaWVzIGxvYWRpbmcgZXJyb3IsIHdoZW4gdXNpbmcgd29ya2VycyByZW1lbWJlciB0byBwYXNzIHRoZSBVUkwgdG8gdGhlIHRpbnl4bWwuanMgaW4gdGhlIG9wdGlvbnMubGlic1BhdGhcIixOT1hNTFBBUlNFUl9FUlJPUjpcIlRpbnlYTUwgbm90IGZvdW5kLCB3aGVuIHVzaW5nIHdvcmtlcnMgcmVtZW1iZXIgdG8gcGFzcyB0aGUgVVJMIHRvIHRoZSB0aW55eG1sLmpzIGluIHRoZSBvcHRpb25zLmxpYnNQYXRoIChXb3JrZXJzIGRvIG5vdCBhbGxvdyB0byBhY2Nlc3MgdGhlIG5hdGl2ZSBYTUwgRE9NUGFyc2VyKVwiLHRocm93RXhjZXB0aW9uOmZ1bmN0aW9uKG1zZyl7dGhyb3cgaXNXb3JrZXI/c2VsZi5wb3N0TWVzc2FnZSh7YWN0aW9uOlwiZXhjZXB0aW9uXCIsbXNnOm1zZ30pOkNvbGxhZGEub25lcnJvciYmQ29sbGFkYS5vbmVycm9yKG1zZyksbXNnfSxnZXRGaWxlbmFtZTpmdW5jdGlvbihmaWxlbmFtZSl7dmFyIHBvcz1maWxlbmFtZS5sYXN0SW5kZXhPZihcIlxcXFxcIik7cmV0dXJuLTEhPXBvcyYmKGZpbGVuYW1lPWZpbGVuYW1lLnN1YnN0cihwb3MrMSkpLHBvcz1maWxlbmFtZS5sYXN0SW5kZXhPZihcIi9cIiksLTEhPXBvcyYmKGZpbGVuYW1lPWZpbGVuYW1lLnN1YnN0cihwb3MrMSkpLGZpbGVuYW1lfSxsYXN0X25hbWU6MCxnZW5lcmF0ZU5hbWU6ZnVuY3Rpb24odil7dj12fHxcIm5hbWVfXCI7dmFyIG5hbWU9dit0aGlzLmxhc3RfbmFtZTtyZXR1cm4gdGhpcy5sYXN0X25hbWUrKyxuYW1lfSxwYXJzZTpmdW5jdGlvbihkYXRhLG9wdGlvbnMsZmlsZW5hbWUpe29wdGlvbnM9b3B0aW9uc3x8e30sZmlsZW5hbWU9ZmlsZW5hbWV8fFwiX2RhZV9cIitEYXRlLm5vdygpK1wiLmRhZVwiO3ZhciB4bWxwYXJzZXI9bnVsbCxyb290PW51bGw7aWYodGhpcy5fdHJhbnNmZXJhYmxlcz1bXSx0aGlzLnZlcmJvc2UmJmNvbnNvbGUubG9nKFwiIC0gWE1MIHBhcnNpbmcuLi5cIiksZ2xvYmFsLkRPTVBhcnNlciYmIXRoaXMuY29uZmlnLmZvcmNlUGFyc2VyKXhtbHBhcnNlcj1uZXcgRE9NUGFyc2VyLHJvb3Q9eG1scGFyc2VyLnBhcnNlRnJvbVN0cmluZyhkYXRhLFwidGV4dC94bWxcIiksdGhpcy52ZXJib3NlJiZjb25zb2xlLmxvZyhcIiAtIFhNTCBwYXJzZWRcIik7ZWxzZXtpZighZ2xvYmFsLkRPTUltcGxlbWVudGF0aW9uKXJldHVybiBDb2xsYWRhLnRocm93RXhjZXB0aW9uKENvbGxhZGEuTk9YTUxQQVJTRVJfRVJST1IpO3RyeXt4bWxwYXJzZXI9bmV3IERPTUltcGxlbWVudGF0aW9ufWNhdGNoKGVycil7cmV0dXJuIENvbGxhZGEudGhyb3dFeGNlcHRpb24oQ29sbGFkYS5OT1hNTFBBUlNFUl9FUlJPUil9cm9vdD14bWxwYXJzZXIubG9hZFhNTChkYXRhKSx0aGlzLnZlcmJvc2UmJmNvbnNvbGUubG9nKFwiIC0gWE1MIHBhcnNlZFwiKTtmb3IodmFyIGJ5X2lkcz1yb290Ll9ub2Rlc19ieV9pZD17fSxpPTAsbD1yb290LmFsbC5sZW5ndGg7aTxsOysraSl7dmFyIG5vZGU9cm9vdC5hbGxbaV07YnlfaWRzW25vZGUuaWRdPW5vZGUsbm9kZS5nZXRBdHRyaWJ1dGUoXCJzaWRcIikmJihieV9pZHNbbm9kZS5nZXRBdHRyaWJ1dGUoXCJzaWRcIildPW5vZGUpfXRoaXMuZXh0cmFfZnVuY3Rpb25zfHwodGhpcy5leHRyYV9mdW5jdGlvbnM9ITAsRE9NRG9jdW1lbnQucHJvdG90eXBlLnF1ZXJ5U2VsZWN0b3I9RE9NRWxlbWVudC5wcm90b3R5cGUucXVlcnlTZWxlY3Rvcj1mdW5jdGlvbihzZWxlY3Rvcil7Zm9yKHZhciB0YWdzPXNlbGVjdG9yLnNwbGl0KFwiIFwiKSxjdXJyZW50X2VsZW1lbnQ9dGhpczt0YWdzLmxlbmd0aDspe3ZhciBjdXJyZW50PXRhZ3Muc2hpZnQoKSx0b2tlbnM9Y3VycmVudC5zcGxpdChcIiNcIiksdGFnbmFtZT10b2tlbnNbMF0saWQ9dG9rZW5zWzFdLGVsZW1lbnRzPXRhZ25hbWU/Y3VycmVudF9lbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKHRhZ25hbWUpOmN1cnJlbnRfZWxlbWVudC5jaGlsZE5vZGVzO2lmKGlkKXtmb3IodmFyIGk9MDtpPGVsZW1lbnRzLmxlbmd0aDtpKyspaWYoZWxlbWVudHMuaXRlbShpKS5nZXRBdHRyaWJ1dGUoXCJpZFwiKT09aWQpe2lmKDA9PXRhZ3MubGVuZ3RoKXJldHVybiBlbGVtZW50cy5pdGVtKGkpO2N1cnJlbnRfZWxlbWVudD1lbGVtZW50cy5pdGVtKGkpO2JyZWFrfX1lbHNle2lmKDA9PXRhZ3MubGVuZ3RoKXJldHVybiBlbGVtZW50cy5pdGVtKDApO2N1cnJlbnRfZWxlbWVudD1lbGVtZW50cy5pdGVtKDApfX1yZXR1cm4gbnVsbH0sRE9NRG9jdW1lbnQucHJvdG90eXBlLnF1ZXJ5U2VsZWN0b3JBbGw9RE9NRWxlbWVudC5wcm90b3R5cGUucXVlcnlTZWxlY3RvckFsbD1mdW5jdGlvbihzZWxlY3Rvcil7ZnVuY3Rpb24gaW5uZXIocm9vdCx0YWdzKXtpZih0YWdzKXt2YXIgY3VycmVudD10YWdzLnNoaWZ0KCksZWxlbWVudHM9cm9vdC5nZXRFbGVtZW50c0J5VGFnTmFtZShjdXJyZW50KTtpZigwIT10YWdzLmxlbmd0aClmb3IodmFyIGk9MDtpPGVsZW1lbnRzLmxlbmd0aDtpKyspaW5uZXIoZWxlbWVudHMuaXRlbShpKSx0YWdzLmNvbmNhdCgpKTtlbHNlIGZvcih2YXIgaT0wO2k8ZWxlbWVudHMubGVuZ3RoO2krKylyZXN1bHQucHVzaChlbGVtZW50cy5pdGVtKGkpKX19dmFyIHRhZ3M9c2VsZWN0b3Iuc3BsaXQoXCIgXCIpO2lmKDE9PXRhZ3MubGVuZ3RoKXJldHVybiB0aGlzLmdldEVsZW1lbnRzQnlUYWdOYW1lKHNlbGVjdG9yKTt2YXIgcmVzdWx0PVtdO2lubmVyKHRoaXMsdGFncyk7dmFyIGxpc3Q9bmV3IERPTU5vZGVMaXN0KHRoaXMuZG9jdW1lbnRFbGVtZW50KTtyZXR1cm4gbGlzdC5fbm9kZXM9cmVzdWx0LGxpc3QubGVuZ3RoPXJlc3VsdC5sZW5ndGgsbGlzdH0sT2JqZWN0LmRlZmluZVByb3BlcnR5KERPTUVsZW1lbnQucHJvdG90eXBlLFwidGV4dENvbnRlbnRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0Q2hpbGROb2RlcygpLml0ZW0oMCkudG9TdHJpbmcoKX0sc2V0OmZ1bmN0aW9uKCl7fX0pKX10aGlzLl94bWxyb290PXJvb3Q7dmFyIHhtbGNvbGxhZGE9cm9vdC5xdWVyeVNlbGVjdG9yKFwiQ09MTEFEQVwiKTt4bWxjb2xsYWRhJiYodGhpcy5fY3VycmVudF9EQUVfdmVyc2lvbj14bWxjb2xsYWRhLmdldEF0dHJpYnV0ZShcInZlcnNpb25cIiksY29uc29sZS5sb2coXCJEQUUgVmVyc2lvbjpcIit0aGlzLl9jdXJyZW50X0RBRV92ZXJzaW9uKSk7dmFyIHhtbHZpc3VhbF9zY2VuZT1yb290LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwidmlzdWFsX3NjZW5lXCIpLml0ZW0oMCk7aWYoIXhtbHZpc3VhbF9zY2VuZSl0aHJvd1widmlzdWFsX3NjZW5lIFhNTCBub2RlIG5vdCBmb3VuZCBpbiBEQUVcIjt0aGlzLl9ub2Rlc19ieV9pZD17fSx0aGlzLl9jb250cm9sbGVyc19mb3VuZD17fSx0aGlzLl9nZW9tZXRyaWVzX2ZvdW5kPXt9O3ZhciBzY2VuZT17b2JqZWN0X3R5cGU6XCJTY2VuZVRyZWVcIixsaWdodDpudWxsLG1hdGVyaWFsczp7fSxtZXNoZXM6e30scmVzb3VyY2VzOnt9LHJvb3Q6e2NoaWxkcmVuOltdfSxleHRlcm5hbF9maWxlczp7fX0seG1sYXNzZXQ9cm9vdC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImFzc2V0XCIpWzBdO3htbGFzc2V0JiYoc2NlbmUubWV0YWRhdGE9dGhpcy5yZWFkQXNzZXQoeG1sYXNzZXQpKTtmb3IodmFyIHhtbG5vZGVzPXhtbHZpc3VhbF9zY2VuZS5jaGlsZE5vZGVzLGk9MDtpPHhtbG5vZGVzLmxlbmd0aDtpKyspaWYoXCJub2RlXCI9PXhtbG5vZGVzLml0ZW0oaSkubG9jYWxOYW1lKXt2YXIgbm9kZT10aGlzLnJlYWROb2RlVHJlZSh4bWxub2Rlcy5pdGVtKGkpLHNjZW5lLDAsITEpO25vZGUmJnNjZW5lLnJvb3QuY2hpbGRyZW4ucHVzaChub2RlKX1mb3IodmFyIGk9MDtpPHhtbG5vZGVzLmxlbmd0aDtpKyspXCJub2RlXCI9PXhtbG5vZGVzLml0ZW0oaSkubG9jYWxOYW1lJiZ0aGlzLnJlYWROb2RlSW5mbyh4bWxub2Rlcy5pdGVtKGkpLHNjZW5lLDAsITEpO3RoaXMucmVhZExpYnJhcnlDb250cm9sbGVycyhzY2VuZSk7dmFyIGFuaW1hdGlvbnM9dGhpcy5yZWFkQW5pbWF0aW9ucyhyb290LHNjZW5lKTtpZihhbmltYXRpb25zKXt2YXIgYW5pbWF0aW9uc19uYW1lPVwiI2FuaW1hdGlvbnNfXCIrZmlsZW5hbWUuc3Vic3RyKDAsZmlsZW5hbWUuaW5kZXhPZihcIi5cIikpO3NjZW5lLnJlc291cmNlc1thbmltYXRpb25zX25hbWVdPWFuaW1hdGlvbnMsc2NlbmUucm9vdC5hbmltYXRpb25zPWFuaW1hdGlvbnNfbmFtZX1yZXR1cm4gc2NlbmUuaW1hZ2VzPXRoaXMucmVhZEltYWdlcyhyb290KSx0aGlzLl9ub2Rlc19ieV9pZD17fSx0aGlzLl9jb250cm9sbGVyc19mb3VuZD17fSx0aGlzLl9nZW9tZXRyaWVzX2ZvdW5kPXt9LHRoaXMuX3htbHJvb3Q9bnVsbCxzY2VuZX0scmVhZEFzc2V0OmZ1bmN0aW9uKHhtbGFzc2V0KXtmb3IodmFyIG1ldGFkYXRhPXt9LGk9MDtpPHhtbGFzc2V0LmNoaWxkTm9kZXMubGVuZ3RoO2krKyl7dmFyIHhtbGNoaWxkPXhtbGFzc2V0LmNoaWxkTm9kZXMuaXRlbShpKTtpZigxPT14bWxjaGlsZC5ub2RlVHlwZSlzd2l0Y2goeG1sY2hpbGQubG9jYWxOYW1lKXtjYXNlXCJjb250cmlidXRvclwiOnZhciB0b29sPXhtbGNoaWxkLnF1ZXJ5U2VsZWN0b3IoXCJhdXRob3JpbmdfdG9vbFwiKTt0b29sJiYobWV0YWRhdGEuYXV0aG9yaW5nX3Rvb2w9dG9vbC50ZXh0Q29udGV4dCk7YnJlYWs7Y2FzZVwidW5pdFwiOm1ldGFkYXRhLnVuaXQ9eG1sY2hpbGQuZ2V0QXR0cmlidXRlKFwibmFtZVwiKTticmVhaztkZWZhdWx0Om1ldGFkYXRhW3htbGNoaWxkLmxvY2FsTmFtZV09eG1sY2hpbGQudGV4dENvbnRlbnR9fXJldHVybiBtZXRhZGF0YX0scmVhZE5vZGVUcmVlOmZ1bmN0aW9uKHhtbG5vZGUsc2NlbmUsbGV2ZWwsZmxpcCl7dmFyIG5vZGVfaWQ9dGhpcy5zYWZlU3RyaW5nKHhtbG5vZGUuZ2V0QXR0cmlidXRlKFwiaWRcIikpLG5vZGVfc2lkPXRoaXMuc2FmZVN0cmluZyh4bWxub2RlLmdldEF0dHJpYnV0ZShcInNpZFwiKSk7aWYoIW5vZGVfaWQmJiFub2RlX3NpZClyZXR1cm4gbnVsbDt2YXIgbm9kZT17aWQ6bm9kZV9zaWR8fG5vZGVfaWQsY2hpbGRyZW46W10sX2RlcHRoOmxldmVsfSxub2RlX3R5cGU9eG1sbm9kZS5nZXRBdHRyaWJ1dGUoXCJ0eXBlXCIpO25vZGVfdHlwZSYmKG5vZGUudHlwZT1ub2RlX3R5cGUpO3ZhciBub2RlX25hbWU9eG1sbm9kZS5nZXRBdHRyaWJ1dGUoXCJuYW1lXCIpO25vZGVfbmFtZSYmKG5vZGUubmFtZT1ub2RlX25hbWUpLHRoaXMuX25vZGVzX2J5X2lkW25vZGUuaWRdPW5vZGUsbm9kZV9pZCYmKHRoaXMuX25vZGVzX2J5X2lkW25vZGVfaWRdPW5vZGUpLG5vZGVfc2lkJiYodGhpcy5fbm9kZXNfYnlfaWRbbm9kZV9zaWRdPW5vZGUpLG5vZGUubW9kZWw9dGhpcy5yZWFkVHJhbnNmb3JtKHhtbG5vZGUsbGV2ZWwsZmxpcCk7Zm9yKHZhciBpPTA7aTx4bWxub2RlLmNoaWxkTm9kZXMubGVuZ3RoO2krKyl7dmFyIHhtbGNoaWxkPXhtbG5vZGUuY2hpbGROb2Rlcy5pdGVtKGkpO2lmKDE9PXhtbGNoaWxkLm5vZGVUeXBlKWlmKFwibm9kZVwiIT14bWxjaGlsZC5sb2NhbE5hbWUpO2Vsc2V7dmFyIGNoaWxkX25vZGU9dGhpcy5yZWFkTm9kZVRyZWUoeG1sY2hpbGQsc2NlbmUsbGV2ZWwrMSxmbGlwKTtjaGlsZF9ub2RlJiZub2RlLmNoaWxkcmVuLnB1c2goY2hpbGRfbm9kZSl9fXJldHVybiBub2RlfSxyZWFkTm9kZUluZm86ZnVuY3Rpb24oeG1sbm9kZSxzY2VuZSxsZXZlbCxmbGlwLHBhcmVudCl7dmFyIG5vZGUsbm9kZV9pZD10aGlzLnNhZmVTdHJpbmcoeG1sbm9kZS5nZXRBdHRyaWJ1dGUoXCJpZFwiKSksbm9kZV9zaWQ9dGhpcy5zYWZlU3RyaW5nKHhtbG5vZGUuZ2V0QXR0cmlidXRlKFwic2lkXCIpKTtpZihub2RlX2lkfHxub2RlX3NpZClub2RlPXRoaXMuX25vZGVzX2J5X2lkW25vZGVfaWR8fG5vZGVfc2lkXTtlbHNle2lmKCFwYXJlbnQpcmV0dXJuIG51bGw7bm9kZT10aGlzLl9ub2Rlc19ieV9pZFtwYXJlbnQuaWR8fHBhcmVudC5zaWRdfWlmKCFub2RlKXJldHVybiBjb25zb2xlLndhcm4oXCJDb2xsYWRhOiBOb2RlIG5vdCBmb3VuZCBieSBpZDogXCIrKG5vZGVfaWR8fG5vZGVfc2lkKSksbnVsbDtmb3IodmFyIGk9MDtpPHhtbG5vZGUuY2hpbGROb2Rlcy5sZW5ndGg7aSsrKXt2YXIgeG1sY2hpbGQ9eG1sbm9kZS5jaGlsZE5vZGVzLml0ZW0oaSk7aWYoMT09eG1sY2hpbGQubm9kZVR5cGUpaWYoXCJub2RlXCIhPXhtbGNoaWxkLmxvY2FsTmFtZSl7aWYoXCJpbnN0YW5jZV9nZW9tZXRyeVwiPT14bWxjaGlsZC5sb2NhbE5hbWUpe3ZhciB1cmw9eG1sY2hpbGQuZ2V0QXR0cmlidXRlKFwidXJsXCIpLG1lc2hfaWQ9dXJsLnRvU3RyaW5nKCkuc3Vic3RyKDEpO2lmKG5vZGUubWVzaD1tZXNoX2lkLCFzY2VuZS5tZXNoZXNbdXJsXSl7dmFyIG1lc2hfZGF0YT10aGlzLnJlYWRHZW9tZXRyeSh1cmwsZmxpcCk7bWVzaF9kYXRhJiYobWVzaF9kYXRhLm5hbWU9bWVzaF9pZCxzY2VuZS5tZXNoZXNbbWVzaF9pZF09bWVzaF9kYXRhKX12YXIgeG1sbWF0ZXJpYWxzPXhtbGNoaWxkLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnN0YW5jZV9tYXRlcmlhbFwiKTtpZih4bWxtYXRlcmlhbHMpZm9yKHZhciBpTWF0PTA7aU1hdDx4bWxtYXRlcmlhbHMubGVuZ3RoOysraU1hdCl7dmFyIHhtbG1hdGVyaWFsPXhtbG1hdGVyaWFscy5pdGVtKGlNYXQpO2lmKHhtbG1hdGVyaWFsKXt2YXIgbWF0bmFtZT14bWxtYXRlcmlhbC5nZXRBdHRyaWJ1dGUoXCJ0YXJnZXRcIikudG9TdHJpbmcoKS5zdWJzdHIoMSk7aWYoIXNjZW5lLm1hdGVyaWFsc1ttYXRuYW1lXSl7dmFyIG1hdGVyaWFsPXRoaXMucmVhZE1hdGVyaWFsKG1hdG5hbWUpO21hdGVyaWFsJiYobWF0ZXJpYWwuaWQ9bWF0bmFtZSxzY2VuZS5tYXRlcmlhbHNbbWF0ZXJpYWwuaWRdPW1hdGVyaWFsKX0wPT1pTWF0P25vZGUubWF0ZXJpYWw9bWF0bmFtZToobm9kZS5tYXRlcmlhbHN8fChub2RlLm1hdGVyaWFscz1bXSksbm9kZS5tYXRlcmlhbHMucHVzaChtYXRuYW1lKSl9ZWxzZSBjb25zb2xlLndhcm4oXCJpbnN0YW5jZV9tYXRlcmlhbCBub3QgZm91bmQ6IFwiK2kpfX1pZihcImluc3RhbmNlX2NvbnRyb2xsZXJcIj09eG1sY2hpbGQubG9jYWxOYW1lKXt2YXIgdXJsPXhtbGNoaWxkLmdldEF0dHJpYnV0ZShcInVybFwiKSx4bWxjb250cm9sbGVyPXRoaXMuX3htbHJvb3QucXVlcnlTZWxlY3RvcihcImNvbnRyb2xsZXJcIit1cmwpO2lmKHhtbGNvbnRyb2xsZXIpe3ZhciBtZXNoX2RhdGE9dGhpcy5yZWFkQ29udHJvbGxlcih4bWxjb250cm9sbGVyLGZsaXAsc2NlbmUpLHhtbGJpbmRfbWF0ZXJpYWw9eG1sY2hpbGQucXVlcnlTZWxlY3RvcihcImJpbmRfbWF0ZXJpYWxcIik7aWYoeG1sYmluZF9tYXRlcmlhbClmb3IodmFyIHhtbHRlY2huaXF1ZXM9eG1sYmluZF9tYXRlcmlhbC5xdWVyeVNlbGVjdG9yQWxsKFwidGVjaG5pcXVlX2NvbW1vblwiKSxpVGVjPTA7aVRlYzx4bWx0ZWNobmlxdWVzLmxlbmd0aDtpVGVjKyspZm9yKHZhciB4bWx0ZWNobmlxdWU9eG1sdGVjaG5pcXVlcy5pdGVtKGlUZWMpLHhtbGluc3RhbmNlX21hdGVyaWFscz14bWx0ZWNobmlxdWUucXVlcnlTZWxlY3RvckFsbChcImluc3RhbmNlX21hdGVyaWFsXCIpLGlNYXQ9MDtpTWF0PHhtbGluc3RhbmNlX21hdGVyaWFscy5sZW5ndGg7aU1hdCsrKXt2YXIgeG1saW5zdGFuY2VfbWF0ZXJpYWw9eG1saW5zdGFuY2VfbWF0ZXJpYWxzLml0ZW0oaU1hdCk7aWYoeG1saW5zdGFuY2VfbWF0ZXJpYWwpe3ZhciBtYXRuYW1lPXhtbGluc3RhbmNlX21hdGVyaWFsLmdldEF0dHJpYnV0ZShcInRhcmdldFwiKS50b1N0cmluZygpLnN1YnN0cigxKTtpZighc2NlbmUubWF0ZXJpYWxzW21hdG5hbWVdKXt2YXIgbWF0ZXJpYWw9dGhpcy5yZWFkTWF0ZXJpYWwobWF0bmFtZSk7bWF0ZXJpYWwmJihtYXRlcmlhbC5pZD1tYXRuYW1lLHNjZW5lLm1hdGVyaWFsc1ttYXRlcmlhbC5pZF09bWF0ZXJpYWwpfTA9PWlNYXQ/bm9kZS5tYXRlcmlhbD1tYXRuYW1lOihub2RlLm1hdGVyaWFsc3x8KG5vZGUubWF0ZXJpYWxzPVtdKSxub2RlLm1hdGVyaWFscy5wdXNoKG1hdG5hbWUpKX1lbHNlIGNvbnNvbGUud2FybihcImluc3RhbmNlX21hdGVyaWFsIGZvciBjb250cm9sbGVyIG5vdCBmb3VuZDogXCIreG1saW5zdGFuY2VfbWF0ZXJpYWwpfWlmKG1lc2hfZGF0YSl7dmFyIG1lc2g9bWVzaF9kYXRhO1wibW9ycGhcIj09bWVzaF9kYXRhLnR5cGUmJihtZXNoPW1lc2hfZGF0YS5tZXNoLG5vZGUubW9ycGhfdGFyZ2V0cz1tZXNoX2RhdGEubW9ycGhfdGFyZ2V0cyksbWVzaC5uYW1lPXVybC50b1N0cmluZygpLG5vZGUubWVzaD11cmwudG9TdHJpbmcoKSxzY2VuZS5tZXNoZXNbdXJsXT1tZXNofX19aWYoXCJpbnN0YW5jZV9saWdodFwiPT14bWxjaGlsZC5sb2NhbE5hbWUpe3ZhciB1cmw9eG1sY2hpbGQuZ2V0QXR0cmlidXRlKFwidXJsXCIpO3RoaXMucmVhZExpZ2h0KG5vZGUsdXJsKX1pZihcImluc3RhbmNlX2NhbWVyYVwiPT14bWxjaGlsZC5sb2NhbE5hbWUpe3ZhciB1cmw9eG1sY2hpbGQuZ2V0QXR0cmlidXRlKFwidXJsXCIpO3RoaXMucmVhZENhbWVyYShub2RlLHVybCl9fWVsc2UgdGhpcy5yZWFkTm9kZUluZm8oeG1sY2hpbGQsc2NlbmUsbGV2ZWwrMSxmbGlwLHhtbG5vZGUpfX0sbWF0ZXJpYWxfdHJhbnNsYXRlX3RhYmxlOnt9LGxpZ2h0X3RyYW5zbGF0ZV90YWJsZTp7cG9pbnQ6XCJvbW5pXCIsZGlyZWN0aW9uYWw6XCJkaXJlY3Rpb25hbFwiLHNwb3Q6XCJzcG90XCJ9LGNhbWVyYV90cmFuc2xhdGVfdGFibGU6e3hmb3Y6XCJmb3ZcIixhc3BlY3RfcmF0aW86XCJhc3BlY3RcIix6bmVhcjpcIm5lYXJcIix6ZmFyOlwiZmFyXCJ9LHF1ZXJ5U2VsZWN0b3JBbmRJZDpmdW5jdGlvbihyb290LHNlbGVjdG9yLGlkKXtmb3IodmFyIG5vZGVzPXJvb3QucXVlcnlTZWxlY3RvckFsbChzZWxlY3RvciksaT0wO2k8bm9kZXMubGVuZ3RoO2krKyl7dmFyIGF0dHJfaWQ9bm9kZXMuaXRlbShpKS5nZXRBdHRyaWJ1dGUoXCJpZFwiKTtpZihhdHRyX2lkJiYoYXR0cl9pZD1hdHRyX2lkLnRvU3RyaW5nKCkpPT1pZClyZXR1cm4gbm9kZXMuaXRlbShpKX1yZXR1cm4gbnVsbH0sZ2V0Rmlyc3RDaGlsZEVsZW1lbnQ6ZnVuY3Rpb24ocm9vdCxsb2NhbE5hbWUpe2Zvcih2YXIgYz1yb290LmNoaWxkTm9kZXMsaT0wO2k8Yy5sZW5ndGg7KytpKXt2YXIgaXRlbT1jLml0ZW0oaSk7aWYoaXRlbS5sb2NhbE5hbWUmJiFsb2NhbE5hbWV8fGxvY2FsTmFtZSYmbG9jYWxOYW1lPT1pdGVtLmxvY2FsTmFtZSlyZXR1cm4gaXRlbX1yZXR1cm4gbnVsbH0scmVhZE1hdGVyaWFsOmZ1bmN0aW9uKHVybCl7dmFyIHhtbG1hdGVyaWFsPXRoaXMucXVlcnlTZWxlY3RvckFuZElkKHRoaXMuX3htbHJvb3QsXCJsaWJyYXJ5X21hdGVyaWFscyBtYXRlcmlhbFwiLHVybCk7aWYoIXhtbG1hdGVyaWFsKXJldHVybiBudWxsO3ZhciB4bWxlZmZlY3Q9eG1sbWF0ZXJpYWwucXVlcnlTZWxlY3RvcihcImluc3RhbmNlX2VmZmVjdFwiKTtpZigheG1sZWZmZWN0KXJldHVybiBudWxsO3ZhciBlZmZlY3RfdXJsPXhtbGVmZmVjdC5nZXRBdHRyaWJ1dGUoXCJ1cmxcIikuc3Vic3RyKDEpLHhtbGVmZmVjdHM9dGhpcy5xdWVyeVNlbGVjdG9yQW5kSWQodGhpcy5feG1scm9vdCxcImxpYnJhcnlfZWZmZWN0cyBlZmZlY3RcIixlZmZlY3RfdXJsKTtpZigheG1sZWZmZWN0cylyZXR1cm4gbnVsbDt2YXIgeG1sdGVjaG5pcXVlPXhtbGVmZmVjdHMucXVlcnlTZWxlY3RvcihcInRlY2huaXF1ZVwiKTtpZigheG1sdGVjaG5pcXVlKXJldHVybiBudWxsO2Zvcih2YXIgeG1sbmV3cGFyYW1zPXhtbGVmZmVjdHMucXVlcnlTZWxlY3RvckFsbChcIm5ld3BhcmFtXCIpLG5ld3BhcmFtcz17fSxpPTA7aTx4bWxuZXdwYXJhbXMubGVuZ3RoO2krKyl7dmFyIHBhcmVudCxpbml0X2Zyb209eG1sbmV3cGFyYW1zW2ldLnF1ZXJ5U2VsZWN0b3IoXCJpbml0X2Zyb21cIik7aWYoaW5pdF9mcm9tKXBhcmVudD1pbml0X2Zyb20uaW5uZXJIVE1MO2Vsc2V7cGFyZW50PXhtbG5ld3BhcmFtc1tpXS5xdWVyeVNlbGVjdG9yKFwic291cmNlXCIpLmlubmVySFRNTH1uZXdwYXJhbXNbeG1sbmV3cGFyYW1zW2ldLmdldEF0dHJpYnV0ZShcInNpZFwiKV09e3BhcmVudDpwYXJlbnR9fXZhciBtYXRlcmlhbD17fSxpbWFnZXM9dGhpcy5yZWFkSW1hZ2VzKHRoaXMuX3htbHJvb3QpLHhtbHBob25nPXhtbHRlY2huaXF1ZS5xdWVyeVNlbGVjdG9yKFwicGhvbmdcIik7aWYoeG1scGhvbmd8fCh4bWxwaG9uZz14bWx0ZWNobmlxdWUucXVlcnlTZWxlY3RvcihcImJsaW5uXCIpKSx4bWxwaG9uZ3x8KHhtbHBob25nPXhtbHRlY2huaXF1ZS5xdWVyeVNlbGVjdG9yKFwibGFtYmVydFwiKSksIXhtbHBob25nKXJldHVybiBudWxsO2Zvcih2YXIgaT0wO2k8eG1scGhvbmcuY2hpbGROb2Rlcy5sZW5ndGg7KytpKXt2YXIgeG1scGFyYW09eG1scGhvbmcuY2hpbGROb2Rlcy5pdGVtKGkpO2lmKHhtbHBhcmFtLmxvY2FsTmFtZSl7dmFyIHBhcmFtX25hbWU9eG1scGFyYW0ubG9jYWxOYW1lLnRvU3RyaW5nKCk7dGhpcy5tYXRlcmlhbF90cmFuc2xhdGVfdGFibGVbcGFyYW1fbmFtZV0mJihwYXJhbV9uYW1lPXRoaXMubWF0ZXJpYWxfdHJhbnNsYXRlX3RhYmxlW3BhcmFtX25hbWVdKTt2YXIgeG1scGFyYW1fdmFsdWU9dGhpcy5nZXRGaXJzdENoaWxkRWxlbWVudCh4bWxwYXJhbSk7aWYoeG1scGFyYW1fdmFsdWUpaWYoXCJjb2xvclwiIT14bWxwYXJhbV92YWx1ZS5sb2NhbE5hbWUudG9TdHJpbmcoKSlpZihcImZsb2F0XCIhPXhtbHBhcmFtX3ZhbHVlLmxvY2FsTmFtZS50b1N0cmluZygpKXtpZihcInRleHR1cmVcIj09eG1scGFyYW1fdmFsdWUubG9jYWxOYW1lLnRvU3RyaW5nKCkpe21hdGVyaWFsLnRleHR1cmVzfHwobWF0ZXJpYWwudGV4dHVyZXM9e30pO3ZhciBtYXBfaWQ9eG1scGFyYW1fdmFsdWUuZ2V0QXR0cmlidXRlKFwidGV4dHVyZVwiKTtpZighbWFwX2lkKWNvbnRpbnVlOy0xPT09bWFwX2lkLmluZGV4T2YoXCIuXCIpJiYobWFwX2lkPXRoaXMuZ2V0UGFyZW50UGFyYW0obmV3cGFyYW1zLG1hcF9pZCksaW1hZ2VzW21hcF9pZF0mJihtYXBfaWQ9aW1hZ2VzW21hcF9pZF0ucGF0aCkpO3ZhciBtYXBfaW5mbz17bWFwX2lkOm1hcF9pZH0sdXZzPXhtbHBhcmFtX3ZhbHVlLmdldEF0dHJpYnV0ZShcInRleGNvb3JkXCIpO21hcF9pbmZvLnV2cz11dnMsbWF0ZXJpYWwudGV4dHVyZXNbcGFyYW1fbmFtZV09bWFwX2luZm99fWVsc2UgbWF0ZXJpYWxbcGFyYW1fbmFtZV09dGhpcy5yZWFkQ29udGVudEFzRmxvYXRzKHhtbHBhcmFtX3ZhbHVlKVswXTtlbHNle3ZhciB2YWx1ZT10aGlzLnJlYWRDb250ZW50QXNGbG9hdHMoeG1scGFyYW1fdmFsdWUpO1wiUkdCX1pFUk9cIj09eG1scGFyYW0uZ2V0QXR0cmlidXRlKFwib3BhcXVlXCIpP21hdGVyaWFsW3BhcmFtX25hbWVdPXZhbHVlLnN1YmFycmF5KDAsNCk6bWF0ZXJpYWxbcGFyYW1fbmFtZV09dmFsdWUuc3ViYXJyYXkoMCwzKX19fXJldHVybiBtYXRlcmlhbC5vYmplY3RfdHlwZT1cIk1hdGVyaWFsXCIsbWF0ZXJpYWx9LGdldFBhcmVudFBhcmFtOmZ1bmN0aW9uKG5ld3BhcmFtcyxwYXJhbSl7cmV0dXJuIG5ld3BhcmFtc1twYXJhbV0mJm5ld3BhcmFtc1twYXJhbV0ucGFyZW50P3RoaXMuZ2V0UGFyZW50UGFyYW0obmV3cGFyYW1zLG5ld3BhcmFtc1twYXJhbV0ucGFyZW50KTpwYXJhbX0scmVhZExpZ2h0OmZ1bmN0aW9uKG5vZGUsdXJsKXtmdW5jdGlvbiBwYXJzZV9wYXJhbXMobGlnaHQseG1sKXtmb3IodmFyIGk9MDtpPHhtbC5jaGlsZE5vZGVzLmxlbmd0aDtpKyspe3ZhciBjaGlsZD14bWwuY2hpbGROb2Rlcy5pdGVtKGkpO2lmKGNoaWxkJiYxPT1jaGlsZC5ub2RlVHlwZSlzd2l0Y2goY2hpbGQubG9jYWxOYW1lKXtjYXNlXCJjb2xvclwiOmxpZ2h0LmNvbG9yPUNvbGxhZGEucmVhZENvbnRlbnRBc0Zsb2F0cyhjaGlsZCk7YnJlYWs7Y2FzZVwiZmFsbG9mZl9hbmdsZVwiOmxpZ2h0LmFuZ2xlX2VuZD1Db2xsYWRhLnJlYWRDb250ZW50QXNGbG9hdHMoY2hpbGQpWzBdLGxpZ2h0LmFuZ2xlPWxpZ2h0LmFuZ2xlX2VuZC0xMH19fXZhciBsaWdodD17fSx4bWxub2RlPW51bGw7aWYodXJsLmxlbmd0aD4xKXhtbG5vZGU9dGhpcy5feG1scm9vdC5xdWVyeVNlbGVjdG9yKFwibGlicmFyeV9saWdodHMgXCIrdXJsKTtlbHNle3ZhciB4bWxsaWJsaWdodHM9dGhpcy5feG1scm9vdC5xdWVyeVNlbGVjdG9yKFwibGlicmFyeV9saWdodHNcIik7eG1sbm9kZT10aGlzLmdldEZpcnN0Q2hpbGRFbGVtZW50KHhtbGxpYmxpZ2h0cyxcImxpZ2h0XCIpfWlmKCF4bWxub2RlKXJldHVybiBudWxsO3ZhciBjaGlsZHJlbj1bXSx4bWw9eG1sbm9kZS5xdWVyeVNlbGVjdG9yKFwidGVjaG5pcXVlX2NvbW1vblwiKTtpZih4bWwpZm9yKHZhciBpPTA7aTx4bWwuY2hpbGROb2Rlcy5sZW5ndGg7aSsrKTE9PXhtbC5jaGlsZE5vZGVzLml0ZW0oaSkubm9kZVR5cGUmJmNoaWxkcmVuLnB1c2goeG1sLmNoaWxkTm9kZXMuaXRlbShpKSk7Zm9yKHZhciB4bWxzPXhtbG5vZGUucXVlcnlTZWxlY3RvckFsbChcInRlY2huaXF1ZVwiKSxpPTA7aTx4bWxzLmxlbmd0aDtpKyspZm9yKHZhciB4bWwyPXhtbHMuaXRlbShpKSxqPTA7ajx4bWwyLmNoaWxkTm9kZXMubGVuZ3RoO2orKykxPT14bWwyLmNoaWxkTm9kZXMuaXRlbShqKS5ub2RlVHlwZSYmY2hpbGRyZW4ucHVzaCh4bWwyLmNoaWxkTm9kZXMuaXRlbShqKSk7Zm9yKHZhciBpPTA7aTxjaGlsZHJlbi5sZW5ndGg7aSsrKXt2YXIgeG1sPWNoaWxkcmVuW2ldO3N3aXRjaCh4bWwubG9jYWxOYW1lKXtjYXNlXCJwb2ludFwiOmNhc2VcImRpcmVjdGlvbmFsXCI6Y2FzZVwic3BvdFwiOmxpZ2h0LnR5cGU9dGhpcy5saWdodF90cmFuc2xhdGVfdGFibGVbeG1sLmxvY2FsTmFtZV0scGFyc2VfcGFyYW1zKGxpZ2h0LHhtbCk7YnJlYWs7Y2FzZVwiaW50ZW5zaXR5XCI6bGlnaHQuaW50ZW5zaXR5PXRoaXMucmVhZENvbnRlbnRBc0Zsb2F0cyh4bWwpWzBdfX1pZihub2RlLm1vZGVsKXtsaWdodC5wb3NpdGlvbj1bbm9kZS5tb2RlbFsxMl0sbm9kZS5tb2RlbFsxM10sbm9kZS5tb2RlbFsxNF1dO3ZhciBmb3J3YXJkPVstbm9kZS5tb2RlbFs4XSwtbm9kZS5tb2RlbFs5XSwtbm9kZS5tb2RlbFsxMF1dO2xpZ2h0LnRhcmdldD1bbGlnaHQucG9zaXRpb25bMF0rZm9yd2FyZFswXSxsaWdodC5wb3NpdGlvblsxXStmb3J3YXJkWzFdLGxpZ2h0LnBvc2l0aW9uWzJdK2ZvcndhcmRbMl1dfWVsc2UgY29uc29sZS53YXJuKFwiQ291bGQgbm90IHJlYWQgbGlnaHQgcG9zaXRpb24gZm9yIGxpZ2h0OiBcIitub2RlLm5hbWUrXCIuIFNldHRpbmcgZGVmYXVsdHMuXCIpLGxpZ2h0LnBvc2l0aW9uPVswLDAsMF0sbGlnaHQudGFyZ2V0PVswLC0xLDBdO25vZGUubGlnaHQ9bGlnaHR9LHJlYWRDYW1lcmE6ZnVuY3Rpb24obm9kZSx1cmwpe3ZhciBjYW1lcmE9e30seG1sbm9kZT10aGlzLl94bWxyb290LnF1ZXJ5U2VsZWN0b3IoXCJsaWJyYXJ5X2NhbWVyYXMgXCIrdXJsKTtpZigheG1sbm9kZSlyZXR1cm4gbnVsbDt2YXIgY2hpbGRyZW49W10seG1sPXhtbG5vZGUucXVlcnlTZWxlY3RvcihcInRlY2huaXF1ZV9jb21tb25cIik7aWYoeG1sKWZvcih2YXIgaT0wO2k8eG1sLmNoaWxkTm9kZXMubGVuZ3RoO2krKykxPT14bWwuY2hpbGROb2Rlcy5pdGVtKGkpLm5vZGVUeXBlJiZjaGlsZHJlbi5wdXNoKHhtbC5jaGlsZE5vZGVzLml0ZW0oaSkpO2Zvcih2YXIgaT0wO2k8Y2hpbGRyZW4ubGVuZ3RoO2krKyl7dmFyIHRhZz1jaGlsZHJlbltpXTshZnVuY3Rpb24oY2FtZXJhLHhtbCl7Zm9yKHZhciBpPTA7aTx4bWwuY2hpbGROb2Rlcy5sZW5ndGg7aSsrKXt2YXIgY2hpbGQ9eG1sLmNoaWxkTm9kZXMuaXRlbShpKTtjaGlsZCYmMT09Y2hpbGQubm9kZVR5cGUmJihjYW1lcmFbQ29sbGFkYS5jYW1lcmFfdHJhbnNsYXRlX3RhYmxlW2NoaWxkLmxvY2FsTmFtZV18fGNoaWxkLmxvY2FsTmFtZV09cGFyc2VGbG9hdChjaGlsZC50ZXh0Q29udGVudCkpfX0oY2FtZXJhLHRhZyl9Y2FtZXJhLnlmb3YmJiFjYW1lcmEuZm92JiYoY2FtZXJhLmFzcGVjdD9jYW1lcmEuZm92PWNhbWVyYS55Zm92KmNhbWVyYS5hc3BlY3Q6Y29uc29sZS53YXJuKFwiQ291bGQgbm90IGNvbnZlcnQgY2FtZXJhIHlmb3YgdG8geGZvdiBiZWNhdXNlIGFzcGVjdCByYXRpbyBub3Qgc2V0XCIpKSxub2RlLmNhbWVyYT1jYW1lcmF9LHJlYWRUcmFuc2Zvcm06ZnVuY3Rpb24oeG1sbm9kZSxsZXZlbCxmbGlwKXtmb3IodmFyIG1hdHJpeD1fZ2xNYXRyaXgubWF0NC5jcmVhdGUoKSx0ZW1wPV9nbE1hdHJpeC5tYXQ0LmNyZWF0ZSgpLHRtcHE9X2dsTWF0cml4LnF1YXQuY3JlYXRlKCksaT0wO2k8eG1sbm9kZS5jaGlsZE5vZGVzLmxlbmd0aDtpKyspe3ZhciB4bWw9eG1sbm9kZS5jaGlsZE5vZGVzLml0ZW0oaSk7aWYoeG1sJiYxPT14bWwubm9kZVR5cGUpe2lmKFwibWF0cml4XCI9PXhtbC5sb2NhbE5hbWUpe3ZhciBtYXRyaXg9dGhpcy5yZWFkQ29udGVudEFzRmxvYXRzKHhtbCk7cmV0dXJuIHRoaXMudHJhbnNmb3JtTWF0cml4KG1hdHJpeCwwPT1sZXZlbCksbWF0cml4fWlmKFwidHJhbnNsYXRlXCIhPXhtbC5sb2NhbE5hbWUpaWYoXCJyb3RhdGVcIiE9eG1sLmxvY2FsTmFtZSl7aWYoXCJzY2FsZVwiPT14bWwubG9jYWxOYW1lKXt2YXIgdmFsdWVzPXRoaXMucmVhZENvbnRlbnRBc0Zsb2F0cyh4bWwpO2lmKGZsaXApe3ZhciB0bXA9dmFsdWVzWzFdO3ZhbHVlc1sxXT12YWx1ZXNbMl0sdmFsdWVzWzJdPS10bXB9X2dsTWF0cml4Lm1hdDQuc2NhbGUobWF0cml4LG1hdHJpeCx2YWx1ZXMpfX1lbHNle3ZhciB2YWx1ZXM9dGhpcy5yZWFkQ29udGVudEFzRmxvYXRzKHhtbCk7aWYoND09dmFsdWVzLmxlbmd0aCl7dmFyIGlkPXhtbC5nZXRBdHRyaWJ1dGUoXCJzaWRcIik7aWYoXCJqb2ludE9yaWVudFhcIj09aWQmJih2YWx1ZXNbM10rPTkwLCEwKSxmbGlwKXt2YXIgdG1wPXZhbHVlc1sxXTt2YWx1ZXNbMV09dmFsdWVzWzJdLHZhbHVlc1syXT0tdG1wfTAhPXZhbHVlc1szXSYmKF9nbE1hdHJpeC5xdWF0LnNldEF4aXNBbmdsZSh0bXBxLHZhbHVlcy5zdWJhcnJheSgwLDMpLHZhbHVlc1szXSpERUcyUkFEKSxfZ2xNYXRyaXgubWF0NC5mcm9tUXVhdCh0ZW1wLHRtcHEpLF9nbE1hdHJpeC5tYXQ0Lm11bHRpcGx5KG1hdHJpeCxtYXRyaXgsdGVtcCkpfX1lbHNle3ZhciB2YWx1ZXM9dGhpcy5yZWFkQ29udGVudEFzRmxvYXRzKHhtbCk7aWYoZmxpcCYmbGV2ZWw+MCl7dmFyIHRtcD12YWx1ZXNbMV07dmFsdWVzWzFdPXZhbHVlc1syXSx2YWx1ZXNbMl09LXRtcH1fZ2xNYXRyaXgubWF0NC50cmFuc2xhdGUobWF0cml4LG1hdHJpeCx2YWx1ZXMpfX19cmV0dXJuIG1hdHJpeH0scmVhZFRyYW5zZm9ybTI6ZnVuY3Rpb24oeG1sbm9kZSxsZXZlbCxmbGlwKXtmb3IodmFyIG1hdHJpeD1fZ2xNYXRyaXgubWF0NC5jcmVhdGUoKSxyb3RhdGlvbj1fZ2xNYXRyaXgucXVhdC5jcmVhdGUoKSx0bXBtYXRyaXg9X2dsTWF0cml4Lm1hdDQuY3JlYXRlKCksdG1wcT1fZ2xNYXRyaXgucXVhdC5jcmVhdGUoKSx0cmFuc2xhdGU9dmVjMy5jcmVhdGUoKSxzY2FsZT12ZWMzLmZyb21WYWx1ZXMoMSwxLDEpLGk9MDtpPHhtbG5vZGUuY2hpbGROb2Rlcy5sZW5ndGg7aSsrKXt2YXIgeG1sPXhtbG5vZGUuY2hpbGROb2Rlcy5pdGVtKGkpO2lmKFwibWF0cml4XCI9PXhtbC5sb2NhbE5hbWUpe3ZhciBtYXRyaXg9dGhpcy5yZWFkQ29udGVudEFzRmxvYXRzKHhtbCk7cmV0dXJuIHRoaXMudHJhbnNmb3JtTWF0cml4KG1hdHJpeCwwPT1sZXZlbCksbWF0cml4fWlmKFwidHJhbnNsYXRlXCIhPXhtbC5sb2NhbE5hbWUpaWYoXCJyb3RhdGVcIiE9eG1sLmxvY2FsTmFtZSl7aWYoXCJzY2FsZVwiPT14bWwubG9jYWxOYW1lKXt2YXIgdmFsdWVzPXRoaXMucmVhZENvbnRlbnRBc0Zsb2F0cyh4bWwpO2lmKGZsaXApe3ZhciB0bXA9dmFsdWVzWzFdO3ZhbHVlc1sxXT12YWx1ZXNbMl0sdmFsdWVzWzJdPS10bXB9c2NhbGUuc2V0KHZhbHVlcyl9fWVsc2V7dmFyIHZhbHVlcz10aGlzLnJlYWRDb250ZW50QXNGbG9hdHMoeG1sKTtpZig0PT12YWx1ZXMubGVuZ3RoKXt2YXIgaWQ9eG1sLmdldEF0dHJpYnV0ZShcInNpZFwiKTtpZihcImpvaW50T3JpZW50WFwiPT1pZCYmKHZhbHVlc1szXSs9OTAsITApLGZsaXApe3ZhciB0bXA9dmFsdWVzWzFdO3ZhbHVlc1sxXT12YWx1ZXNbMl0sdmFsdWVzWzJdPS10bXB9MCE9dmFsdWVzWzNdJiYoX2dsTWF0cml4LnF1YXQuc2V0QXhpc0FuZ2xlKHRtcHEsdmFsdWVzLnN1YmFycmF5KDAsMyksdmFsdWVzWzNdKkRFRzJSQUQpLF9nbE1hdHJpeC5xdWF0Lm11bHRpcGx5KHJvdGF0aW9uLHJvdGF0aW9uLHRtcHEpKX19ZWxzZXt2YXIgdmFsdWVzPXRoaXMucmVhZENvbnRlbnRBc0Zsb2F0cyh4bWwpO3RyYW5zbGF0ZS5zZXQodmFsdWVzKX19aWYoZmxpcCYmbGV2ZWw+MCl7dmFyIHRtcD10cmFuc2xhdGVbMV07dHJhbnNsYXRlWzFdPXRyYW5zbGF0ZVsyXSx0cmFuc2xhdGVbMl09LXRtcH1yZXR1cm4gX2dsTWF0cml4Lm1hdDQudHJhbnNsYXRlKG1hdHJpeCxtYXRyaXgsdHJhbnNsYXRlKSxfZ2xNYXRyaXgubWF0NC5mcm9tUXVhdCh0bXBtYXRyaXgscm90YXRpb24pLF9nbE1hdHJpeC5tYXQ0Lm11bHRpcGx5KG1hdHJpeCxtYXRyaXgsdG1wbWF0cml4KSxfZ2xNYXRyaXgubWF0NC5zY2FsZShtYXRyaXgsbWF0cml4LHNjYWxlKSxtYXRyaXh9LHJlYWRHZW9tZXRyeTpmdW5jdGlvbihpZCxmbGlwLHNjZW5lKXtpZih2b2lkIDAhPT10aGlzLl9nZW9tZXRyaWVzX2ZvdW5kW2lkXSlyZXR1cm4gdGhpcy5fZ2VvbWV0cmllc19mb3VuZFtpZF07dmFyIHhtbGdlb21ldHJ5PXRoaXMuX3htbHJvb3QuZ2V0RWxlbWVudEJ5SWQoaWQuc3Vic3RyKDEpKTtpZigheG1sZ2VvbWV0cnkpcmV0dXJuIGNvbnNvbGUud2FybihcInJlYWRHZW9tZXRyeTogZ2VvbWV0cnkgbm90IGZvdW5kOiBcIitpZCksdGhpcy5fZ2VvbWV0cmllc19mb3VuZFtpZF09bnVsbCxudWxsO2lmKFwiY29udHJvbGxlclwiPT14bWxnZW9tZXRyeS5sb2NhbE5hbWUpe3ZhciBnZW9tZXRyeT10aGlzLnJlYWRDb250cm9sbGVyKHhtbGdlb21ldHJ5LGZsaXAsc2NlbmUpO3JldHVybiB0aGlzLl9nZW9tZXRyaWVzX2ZvdW5kW2lkXT1nZW9tZXRyeSxnZW9tZXRyeX1pZihcImdlb21ldHJ5XCIhPXhtbGdlb21ldHJ5LmxvY2FsTmFtZSlyZXR1cm4gY29uc29sZS53YXJuKFwicmVhZEdlb21ldHJ5OiB0YWcgc2hvdWxkIGJlIGdlb21ldHJ5LCBpbnN0ZWFkIGl0IHdhcyBmb3VuZDogXCIreG1sZ2VvbWV0cnkubG9jYWxOYW1lKSx0aGlzLl9nZW9tZXRyaWVzX2ZvdW5kW2lkXT1udWxsLG51bGw7dmFyIHhtbG1lc2g9eG1sZ2VvbWV0cnkucXVlcnlTZWxlY3RvcihcIm1lc2hcIik7aWYoIXhtbG1lc2gpcmV0dXJuIGNvbnNvbGUud2FybihcInJlYWRHZW9tZXRyeTogbWVzaCBub3QgZm91bmQgaW4gZ2VvbWV0cnk6IFwiK2lkKSx0aGlzLl9nZW9tZXRyaWVzX2ZvdW5kW2lkXT1udWxsLG51bGw7Zm9yKHZhciBzb3VyY2VzPXt9LHhtbHNvdXJjZXM9eG1sbWVzaC5xdWVyeVNlbGVjdG9yQWxsKFwic291cmNlXCIpLGk9MDtpPHhtbHNvdXJjZXMubGVuZ3RoO2krKyl7dmFyIHhtbHNvdXJjZT14bWxzb3VyY2VzLml0ZW0oaSk7aWYoeG1sc291cmNlLnF1ZXJ5U2VsZWN0b3Ipe3ZhciBmbG9hdF9hcnJheT14bWxzb3VyY2UucXVlcnlTZWxlY3RvcihcImZsb2F0X2FycmF5XCIpO2lmKGZsb2F0X2FycmF5KXt2YXIgZmxvYXRzPXRoaXMucmVhZENvbnRlbnRBc0Zsb2F0cyhmbG9hdF9hcnJheSkseG1sYWNjZXNzb3I9eG1sc291cmNlLnF1ZXJ5U2VsZWN0b3IoXCJhY2Nlc3NvclwiKSxzdHJpZGU9cGFyc2VJbnQoeG1sYWNjZXNzb3IuZ2V0QXR0cmlidXRlKFwic3RyaWRlXCIpKTtzb3VyY2VzW3htbHNvdXJjZS5nZXRBdHRyaWJ1dGUoXCJpZFwiKV09e3N0cmlkZTpzdHJpZGUsZGF0YTpmbG9hdHN9fX19dmFyIHhtbHZlcnRpY2VzPXhtbG1lc2gucXVlcnlTZWxlY3RvcihcInZlcnRpY2VzIGlucHV0XCIpLHZlcnRpY2VzX3NvdXJjZT1zb3VyY2VzW3htbHZlcnRpY2VzLmdldEF0dHJpYnV0ZShcInNvdXJjZVwiKS5zdWJzdHIoMSldO3NvdXJjZXNbeG1sbWVzaC5xdWVyeVNlbGVjdG9yKFwidmVydGljZXNcIikuZ2V0QXR0cmlidXRlKFwiaWRcIildPXZlcnRpY2VzX3NvdXJjZTt2YXIgbWVzaD1udWxsLHhtbHBvbHlnb25zPXhtbG1lc2gucXVlcnlTZWxlY3RvcihcInBvbHlnb25zXCIpO2lmKHhtbHBvbHlnb25zJiYobWVzaD10aGlzLnJlYWRUcmlhbmdsZXMoeG1scG9seWdvbnMsc291cmNlcykpLCFtZXNoKXt2YXIgeG1sdHJpYW5nbGVzPXhtbG1lc2gucXVlcnlTZWxlY3RvckFsbChcInRyaWFuZ2xlc1wiKTt4bWx0cmlhbmdsZXMmJnhtbHRyaWFuZ2xlcy5sZW5ndGgmJihtZXNoPXRoaXMucmVhZFRyaWFuZ2xlcyh4bWx0cmlhbmdsZXMsc291cmNlcykpfWlmKCFtZXNoKXt2YXIgeG1scG9seWxpc3Q9eG1sbWVzaC5xdWVyeVNlbGVjdG9yKFwicG9seWxpc3RcIik7eG1scG9seWxpc3QmJihtZXNoPXRoaXMucmVhZFBvbHlsaXN0KHhtbHBvbHlsaXN0LHNvdXJjZXMpKX1pZighbWVzaCl7dmFyIHhtbGxpbmVzdHJpcD14bWxtZXNoLnF1ZXJ5U2VsZWN0b3IoXCJsaW5lc3RyaXBzXCIpO3htbGxpbmVzdHJpcCYmKG1lc2g9dGhpcy5yZWFkTGluZVN0cmlwKHNvdXJjZXMseG1sbGluZXN0cmlwKSl9aWYoIW1lc2gpcmV0dXJuIGNvbnNvbGUubG9nKFwibm8gcG9seWdvbnMgb3IgdHJpYW5nbGVzIGluIG1lc2g6IFwiK2lkKSx0aGlzLl9nZW9tZXRyaWVzX2ZvdW5kW2lkXT1udWxsLG51bGw7aWYoZmxpcCYmIXRoaXMubm9fZmxpcCl7Zm9yKHZhciB0bXA9MCxhcnJheT1tZXNoLnZlcnRpY2VzLGk9MCxsPWFycmF5Lmxlbmd0aDtpPGw7aSs9Myl0bXA9YXJyYXlbaSsxXSxhcnJheVtpKzFdPWFycmF5W2krMl0sYXJyYXlbaSsyXT0tdG1wO2FycmF5PW1lc2gubm9ybWFscztmb3IodmFyIGk9MCxsPWFycmF5Lmxlbmd0aDtpPGw7aSs9Myl0bXA9YXJyYXlbaSsxXSxhcnJheVtpKzFdPWFycmF5W2krMl0sYXJyYXlbaSsyXT0tdG1wfWlmKGlzV29ya2VyJiZ0aGlzLnVzZV90cmFuc2ZlcmFibGVzKWZvcih2YXIgaSBpbiBtZXNoKXt2YXIgZGF0YT1tZXNoW2ldO2RhdGEmJmRhdGEuYnVmZmVyJiZkYXRhLmxlbmd0aD4xMDAmJnRoaXMuX3RyYW5zZmVyYWJsZXMucHVzaChkYXRhLmJ1ZmZlcil9cmV0dXJuIG1lc2guZmlsZW5hbWU9aWQsbWVzaC5vYmplY3RfdHlwZT1cIk1lc2hcIix0aGlzLl9nZW9tZXRyaWVzX2ZvdW5kW2lkXT1tZXNoLG1lc2h9LHJlYWRUcmlhbmdsZXM6ZnVuY3Rpb24oeG1sdHJpYW5nbGVzLHNvdXJjZXMpe2Zvcih2YXIgZ3JvdXBzPVtdLGJ1ZmZlcnM9W10sbGFzdF9pbmRleD0wLGZhY2VtYXA9e30sdmVydGV4X3JlbWFwPVtdLGluZGljZXNBcnJheT1bXSxsYXN0X3N0YXJ0PTAsbWF0ZXJpYWxfbmFtZT1cIlwiLHRyaXM9MDt0cmlzPHhtbHRyaWFuZ2xlcy5sZW5ndGg7dHJpcysrKXt2YXIgeG1sX3NoYXBlX3Jvb3Q9eG1sdHJpYW5nbGVzLml0ZW0odHJpcyksdHJpYW5nbGVzPVwidHJpYW5nbGVzXCI9PXhtbF9zaGFwZV9yb290LmxvY2FsTmFtZTttYXRlcmlhbF9uYW1lPXhtbF9zaGFwZV9yb290LmdldEF0dHJpYnV0ZShcIm1hdGVyaWFsXCIpLDA9PXRyaXMmJihidWZmZXJzPXRoaXMucmVhZFNoYXBlSW5wdXRzKHhtbF9zaGFwZV9yb290LHNvdXJjZXMpKTtmb3IodmFyIHhtbHBzPXhtbF9zaGFwZV9yb290LnF1ZXJ5U2VsZWN0b3JBbGwoXCJwXCIpLGk9KGJ1ZmZlcnMubGVuZ3RoLDApO2k8eG1scHMubGVuZ3RoO2krKyl7dmFyIHhtbHA9eG1scHMuaXRlbShpKTtpZigheG1scHx8IXhtbHAudGV4dENvbnRlbnQpYnJlYWs7dmFyIGRhdGE9eG1scC50ZXh0Q29udGVudC50cmltKCkuc3BsaXQoXCIgXCIpLGZpcnN0X2luZGV4PS0xLGN1cnJlbnRfaW5kZXg9LTEscHJldl9pbmRleD0tMSxudW1fdmFsdWVzX3Blcl92ZXJ0ZXg9MTtmb3IodmFyIGIgaW4gYnVmZmVycyludW1fdmFsdWVzX3Blcl92ZXJ0ZXg9TWF0aC5tYXgobnVtX3ZhbHVlc19wZXJfdmVydGV4LGJ1ZmZlcnNbYl1bNF0rMSk7Zm9yKHZhciBrPTAsbD1kYXRhLmxlbmd0aDtrPGw7ays9bnVtX3ZhbHVlc19wZXJfdmVydGV4KXt2YXIgdmVydGV4X2lkPWRhdGEuc2xpY2UoayxrK251bV92YWx1ZXNfcGVyX3ZlcnRleCkuam9pbihcIiBcIik7aWYocHJldl9pbmRleD1jdXJyZW50X2luZGV4LGZhY2VtYXAuaGFzT3duUHJvcGVydHkodmVydGV4X2lkKSljdXJyZW50X2luZGV4PWZhY2VtYXBbdmVydGV4X2lkXTtlbHNle2Zvcih2YXIgaj0wO2o8YnVmZmVycy5sZW5ndGg7KytqKXt2YXIgYnVmZmVyPWJ1ZmZlcnNbal0sYXJyYXk9YnVmZmVyWzFdLHNvdXJjZT1idWZmZXJbM10saW5kZXg9cGFyc2VJbnQoZGF0YVtrK2J1ZmZlcls0XV0pOzA9PWomJih2ZXJ0ZXhfcmVtYXBbYXJyYXkubGVuZ3RoL2J1ZmZlclsyXV09aW5kZXgpLGluZGV4Kj1idWZmZXJbMl07Zm9yKHZhciB4PTA7eDxidWZmZXJbMl07Kyt4KXtpZih2b2lkIDA9PT1zb3VyY2VbaW5kZXgreF0pdGhyb3dcIlVOREVGSU5FRCFcIjthcnJheS5wdXNoKHNvdXJjZVtpbmRleCt4XSl9fWN1cnJlbnRfaW5kZXg9bGFzdF9pbmRleCxsYXN0X2luZGV4Kz0xLGZhY2VtYXBbdmVydGV4X2lkXT1jdXJyZW50X2luZGV4fXRyaWFuZ2xlc3x8KDA9PWsmJihmaXJzdF9pbmRleD1jdXJyZW50X2luZGV4KSxrPjImJihpbmRpY2VzQXJyYXkucHVzaChmaXJzdF9pbmRleCksaW5kaWNlc0FycmF5LnB1c2gocHJldl9pbmRleCkpKSxpbmRpY2VzQXJyYXkucHVzaChjdXJyZW50X2luZGV4KX19dmFyIGdyb3VwPXtuYW1lOlwiZ3JvdXBcIit0cmlzLHN0YXJ0Omxhc3Rfc3RhcnQsbGVuZ3RoOmluZGljZXNBcnJheS5sZW5ndGgtbGFzdF9zdGFydCxtYXRlcmlhbDptYXRlcmlhbF9uYW1lfHxcIlwifTtsYXN0X3N0YXJ0PWluZGljZXNBcnJheS5sZW5ndGgsZ3JvdXBzLnB1c2goZ3JvdXApfXZhciBtZXNoPXt2ZXJ0aWNlczpuZXcgRmxvYXQzMkFycmF5KGJ1ZmZlcnNbMF1bMV0pLGluZm86e2dyb3Vwczpncm91cHN9LF9yZW1hcDpuZXcgVWludDMyQXJyYXkodmVydGV4X3JlbWFwKX07cmV0dXJuIHRoaXMudHJhbnNmb3JtTWVzaEluZm8obWVzaCxidWZmZXJzLGluZGljZXNBcnJheSksbWVzaH0scmVhZFBvbHlsaXN0OmZ1bmN0aW9uKHhtbF9zaGFwZV9yb290LHNvdXJjZXMpe3ZhciBidWZmZXJzPVtdLGxhc3RfaW5kZXg9MCxmYWNlbWFwPXt9LHZlcnRleF9yZW1hcD1bXSxpbmRpY2VzQXJyYXk9W107eG1sX3NoYXBlX3Jvb3QuZ2V0QXR0cmlidXRlKFwibWF0ZXJpYWxcIiksYnVmZmVycz10aGlzLnJlYWRTaGFwZUlucHV0cyh4bWxfc2hhcGVfcm9vdCxzb3VyY2VzKTtmb3IodmFyIHhtbHZjb3VudD14bWxfc2hhcGVfcm9vdC5xdWVyeVNlbGVjdG9yKFwidmNvdW50XCIpLHZjb3VudD10aGlzLnJlYWRDb250ZW50QXNVSW50MzIoeG1sdmNvdW50KSx4bWxwPXhtbF9zaGFwZV9yb290LnF1ZXJ5U2VsZWN0b3IoXCJwXCIpLGRhdGE9dGhpcy5yZWFkQ29udGVudEFzVUludDMyKHhtbHApLG51bV9kYXRhX3ZlcnRleD1idWZmZXJzLmxlbmd0aCxwb3M9MCxpPTAsbD12Y291bnQubGVuZ3RoO2k8bDsrK2kpZm9yKHZhciBudW1fdmVydGljZXM9dmNvdW50W2ldLGZpcnN0X2luZGV4PS0xLGN1cnJlbnRfaW5kZXg9LTEscHJldl9pbmRleD0tMSxrPTA7azxudW1fdmVydGljZXM7KytrKXt2YXIgdmVydGV4X2lkPWRhdGEuc3ViYXJyYXkocG9zLHBvcytudW1fZGF0YV92ZXJ0ZXgpLmpvaW4oXCIgXCIpO2lmKHByZXZfaW5kZXg9Y3VycmVudF9pbmRleCxmYWNlbWFwLmhhc093blByb3BlcnR5KHZlcnRleF9pZCkpY3VycmVudF9pbmRleD1mYWNlbWFwW3ZlcnRleF9pZF07ZWxzZXtmb3IodmFyIGo9MDtqPGJ1ZmZlcnMubGVuZ3RoOysrail7dmFyIGJ1ZmZlcj1idWZmZXJzW2pdLGluZGV4PXBhcnNlSW50KGRhdGFbcG9zK2pdKSxhcnJheT1idWZmZXJbMV0sc291cmNlPWJ1ZmZlclszXTswPT1qJiYodmVydGV4X3JlbWFwW2FycmF5Lmxlbmd0aC9udW1fZGF0YV92ZXJ0ZXhdPWluZGV4KSxpbmRleCo9YnVmZmVyWzJdO2Zvcih2YXIgeD0wO3g8YnVmZmVyWzJdOysreClhcnJheS5wdXNoKHNvdXJjZVtpbmRleCt4XSl9Y3VycmVudF9pbmRleD1sYXN0X2luZGV4LGxhc3RfaW5kZXgrPTEsZmFjZW1hcFt2ZXJ0ZXhfaWRdPWN1cnJlbnRfaW5kZXh9bnVtX3ZlcnRpY2VzPjMmJigwPT1rJiYoZmlyc3RfaW5kZXg9Y3VycmVudF9pbmRleCksaz4yJiYoaW5kaWNlc0FycmF5LnB1c2goZmlyc3RfaW5kZXgpLGluZGljZXNBcnJheS5wdXNoKHByZXZfaW5kZXgpKSksaW5kaWNlc0FycmF5LnB1c2goY3VycmVudF9pbmRleCkscG9zKz1udW1fZGF0YV92ZXJ0ZXh9dmFyIG1lc2g9e3ZlcnRpY2VzOm5ldyBGbG9hdDMyQXJyYXkoYnVmZmVyc1swXVsxXSksaW5mbzp7fSxfcmVtYXA6bmV3IFVpbnQzMkFycmF5KHZlcnRleF9yZW1hcCl9O3JldHVybiB0aGlzLnRyYW5zZm9ybU1lc2hJbmZvKG1lc2gsYnVmZmVycyxpbmRpY2VzQXJyYXkpLG1lc2h9LHJlYWRTaGFwZUlucHV0czpmdW5jdGlvbih4bWxfc2hhcGVfcm9vdCxzb3VyY2VzKXtmb3IodmFyIGJ1ZmZlcnM9W10seG1saW5wdXRzPXhtbF9zaGFwZV9yb290LnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFwiKSxpPTA7aTx4bWxpbnB1dHMubGVuZ3RoO2krKyl7dmFyIHhtbGlucHV0PXhtbGlucHV0cy5pdGVtKGkpO2lmKHhtbGlucHV0LmdldEF0dHJpYnV0ZSl7dmFyIHNlbWFudGljPXhtbGlucHV0LmdldEF0dHJpYnV0ZShcInNlbWFudGljXCIpLnRvVXBwZXJDYXNlKCksc3RyZWFtX3NvdXJjZT1zb3VyY2VzW3htbGlucHV0LmdldEF0dHJpYnV0ZShcInNvdXJjZVwiKS5zdWJzdHIoMSldLG9mZnNldD1wYXJzZUludCh4bWxpbnB1dC5nZXRBdHRyaWJ1dGUoXCJvZmZzZXRcIikpLGRhdGFfc2V0PTA7eG1saW5wdXQuZ2V0QXR0cmlidXRlKFwic2V0XCIpJiYoZGF0YV9zZXQ9cGFyc2VJbnQoeG1saW5wdXQuZ2V0QXR0cmlidXRlKFwic2V0XCIpKSksYnVmZmVycy5wdXNoKFtzZW1hbnRpYyxbXSxzdHJlYW1fc291cmNlLnN0cmlkZSxzdHJlYW1fc291cmNlLmRhdGEsb2Zmc2V0LGRhdGFfc2V0XSl9fXJldHVybiBidWZmZXJzfSx0cmFuc2Zvcm1NZXNoSW5mbzpmdW5jdGlvbihtZXNoLGJ1ZmZlcnMsaW5kaWNlc0FycmF5KXtmb3IodmFyIHRyYW5zbGF0b3I9e25vcm1hbDpcIm5vcm1hbHNcIix0ZXhjb29yZDpcImNvb3Jkc1wifSxpPTE7aTxidWZmZXJzLmxlbmd0aDsrK2kpe3ZhciBuYW1lPWJ1ZmZlcnNbaV1bMF0udG9Mb3dlckNhc2UoKSxkYXRhPWJ1ZmZlcnNbaV1bMV07ZGF0YS5sZW5ndGgmJih0cmFuc2xhdG9yW25hbWVdJiYobmFtZT10cmFuc2xhdG9yW25hbWVdKSxtZXNoW25hbWVdJiYobmFtZSs9YnVmZmVyc1tpXVs1XSksbWVzaFtuYW1lXT1uZXcgRmxvYXQzMkFycmF5KGRhdGEpKX1yZXR1cm4gaW5kaWNlc0FycmF5JiZpbmRpY2VzQXJyYXkubGVuZ3RoJiYobWVzaC52ZXJ0aWNlcy5sZW5ndGg+NjU1MzY/bWVzaC50cmlhbmdsZXM9bmV3IFVpbnQzMkFycmF5KGluZGljZXNBcnJheSk6bWVzaC50cmlhbmdsZXM9bmV3IFVpbnQxNkFycmF5KGluZGljZXNBcnJheSkpLG1lc2h9LHJlYWRMaW5lU3RyaXA6ZnVuY3Rpb24oc291cmNlcyx4bWxsaW5lc3RyaXApe2Zvcih2YXIgYnVmZmVycz1bXSxsYXN0X2luZGV4PTAsZmFjZW1hcD17fSx2ZXJ0ZXhfcmVtYXA9W10saW5kaWNlc0FycmF5PVtdLHhtbGlucHV0cz14bWxsaW5lc3RyaXAucXVlcnlTZWxlY3RvckFsbChcImlucHV0XCIpLGk9MDtpPHhtbGlucHV0cy5sZW5ndGg7aSsrKXt2YXIgeG1saW5wdXQ9eG1saW5wdXRzLml0ZW0oaSk7aWYoeG1saW5wdXQuZ2V0QXR0cmlidXRlKXt2YXIgc2VtYW50aWM9eG1saW5wdXQuZ2V0QXR0cmlidXRlKFwic2VtYW50aWNcIikudG9VcHBlckNhc2UoKSxzdHJlYW1fc291cmNlPXNvdXJjZXNbeG1saW5wdXQuZ2V0QXR0cmlidXRlKFwic291cmNlXCIpLnN1YnN0cigxKV0sb2Zmc2V0PXBhcnNlSW50KHhtbGlucHV0LmdldEF0dHJpYnV0ZShcIm9mZnNldFwiKSksZGF0YV9zZXQ9MDt4bWxpbnB1dC5nZXRBdHRyaWJ1dGUoXCJzZXRcIikmJihkYXRhX3NldD1wYXJzZUludCh4bWxpbnB1dC5nZXRBdHRyaWJ1dGUoXCJzZXRcIikpKSxidWZmZXJzLnB1c2goW3NlbWFudGljLFtdLHN0cmVhbV9zb3VyY2Uuc3RyaWRlLHN0cmVhbV9zb3VyY2UuZGF0YSxvZmZzZXQsZGF0YV9zZXRdKX19Zm9yKHZhciB4bWxwcz14bWxsaW5lc3RyaXAucXVlcnlTZWxlY3RvckFsbChcInBcIiksbnVtX2RhdGFfdmVydGV4PWJ1ZmZlcnMubGVuZ3RoLGk9MDtpPHhtbHBzLmxlbmd0aDtpKyspe3ZhciB4bWxwPXhtbHBzLml0ZW0oaSk7aWYoIXhtbHB8fCF4bWxwLnRleHRDb250ZW50KWJyZWFrO2Zvcih2YXIgZGF0YT14bWxwLnRleHRDb250ZW50LnRyaW0oKS5zcGxpdChcIiBcIiksY3VycmVudF9pbmRleD0tMSxrPTAsbD1kYXRhLmxlbmd0aDtrPGw7ays9bnVtX2RhdGFfdmVydGV4KXt2YXIgdmVydGV4X2lkPWRhdGEuc2xpY2UoayxrK251bV9kYXRhX3ZlcnRleCkuam9pbihcIiBcIik7aWYoY3VycmVudF9pbmRleCxmYWNlbWFwLmhhc093blByb3BlcnR5KHZlcnRleF9pZCkpY3VycmVudF9pbmRleD1mYWNlbWFwW3ZlcnRleF9pZF07ZWxzZXtmb3IodmFyIGo9MDtqPGJ1ZmZlcnMubGVuZ3RoOysrail7dmFyIGJ1ZmZlcj1idWZmZXJzW2pdLGluZGV4PXBhcnNlSW50KGRhdGFbaytqXSksYXJyYXk9YnVmZmVyWzFdLHNvdXJjZT1idWZmZXJbM107MD09aiYmKHZlcnRleF9yZW1hcFthcnJheS5sZW5ndGgvbnVtX2RhdGFfdmVydGV4XT1pbmRleCksaW5kZXgqPWJ1ZmZlclsyXTtmb3IodmFyIHg9MDt4PGJ1ZmZlclsyXTsrK3gpYXJyYXkucHVzaChzb3VyY2VbaW5kZXgreF0pfWN1cnJlbnRfaW5kZXg9bGFzdF9pbmRleCxsYXN0X2luZGV4Kz0xLGZhY2VtYXBbdmVydGV4X2lkXT1jdXJyZW50X2luZGV4fWluZGljZXNBcnJheS5wdXNoKGN1cnJlbnRfaW5kZXgpfX12YXIgbWVzaD17cHJpbWl0aXZlOlwibGluZV9zdHJpcFwiLHZlcnRpY2VzOm5ldyBGbG9hdDMyQXJyYXkoYnVmZmVyc1swXVsxXSksaW5mbzp7fX07cmV0dXJuIHRoaXMudHJhbnNmb3JtTWVzaEluZm8obWVzaCxidWZmZXJzLGluZGljZXNBcnJheSl9LGZpbmRYTUxOb2RlQnlJZDpmdW5jdGlvbihyb290LG5vZGVuYW1lLGlkKXtpZih0aGlzLl94bWxyb290Ll9ub2Rlc19ieV9pZCl7dmFyIG49dGhpcy5feG1scm9vdC5fbm9kZXNfYnlfaWRbaWRdO2lmKG4mJm4ubG9jYWxOYW1lPT1ub2RlbmFtZSlyZXR1cm4gbn1lbHNle3ZhciBuPXRoaXMuX3htbHJvb3QuZ2V0RWxlbWVudEJ5SWQoaWQpO2lmKG4pcmV0dXJuIG59Zm9yKHZhciBjaGlsZHM9cm9vdC5jaGlsZE5vZGVzLGk9MDtpPGNoaWxkcy5sZW5ndGg7KytpKXt2YXIgeG1sbm9kZT1jaGlsZHMuaXRlbShpKTtpZigxPT14bWxub2RlLm5vZGVUeXBlJiZ4bWxub2RlLmxvY2FsTmFtZT09bm9kZW5hbWUpe2lmKHhtbG5vZGUuZ2V0QXR0cmlidXRlKFwiaWRcIik9PWlkKXJldHVybiB4bWxub2RlfX1yZXR1cm4gbnVsbH0scmVhZEltYWdlczpmdW5jdGlvbihyb290KXt2YXIgeG1saW1hZ2VzPXJvb3QucXVlcnlTZWxlY3RvcihcImxpYnJhcnlfaW1hZ2VzXCIpO2lmKCF4bWxpbWFnZXMpcmV0dXJuIG51bGw7Zm9yKHZhciBpbWFnZXM9e30seG1saW1hZ2VzX2NoaWxkcz14bWxpbWFnZXMuY2hpbGROb2RlcyxpPTA7aTx4bWxpbWFnZXNfY2hpbGRzLmxlbmd0aDsrK2kpe3ZhciB4bWxpbWFnZT14bWxpbWFnZXNfY2hpbGRzLml0ZW0oaSk7aWYoMT09eG1saW1hZ2Uubm9kZVR5cGUpe3ZhciB4bWxpbml0ZnJvbT14bWxpbWFnZS5xdWVyeVNlbGVjdG9yKFwiaW5pdF9mcm9tXCIpO2lmKHhtbGluaXRmcm9tJiZ4bWxpbml0ZnJvbS50ZXh0Q29udGVudCl7dmFyIGZpbGVuYW1lPXRoaXMuZ2V0RmlsZW5hbWUoeG1saW5pdGZyb20udGV4dENvbnRlbnQpLGlkPXhtbGltYWdlLmdldEF0dHJpYnV0ZShcImlkXCIpO2ltYWdlc1tpZF09e2ZpbGVuYW1lOmZpbGVuYW1lLG1hcDppZCxuYW1lOnhtbGltYWdlLmdldEF0dHJpYnV0ZShcIm5hbWVcIikscGF0aDp4bWxpbml0ZnJvbS50ZXh0Q29udGVudH19fX1yZXR1cm4gaW1hZ2VzfSxyZWFkQW5pbWF0aW9uczpmdW5jdGlvbihyb290LHNjZW5lKXt2YXIgeG1sYW5pbWF0aW9ucz1yb290LnF1ZXJ5U2VsZWN0b3IoXCJsaWJyYXJ5X2FuaW1hdGlvbnNcIik7aWYoIXhtbGFuaW1hdGlvbnMpcmV0dXJuIG51bGw7Zm9yKHZhciB4bWxhbmltYXRpb25fY2hpbGRzPXhtbGFuaW1hdGlvbnMuY2hpbGROb2RlcyxhbmltYXRpb25zPXtvYmplY3RfdHlwZTpcIkFuaW1hdGlvblwiLHRha2VzOnt9fSxkZWZhdWx0X3Rha2U9e3RyYWNrczpbXX0sdHJhY2tzPWRlZmF1bHRfdGFrZS50cmFja3MsaT0wO2k8eG1sYW5pbWF0aW9uX2NoaWxkcy5sZW5ndGg7KytpKXt2YXIgeG1sYW5pbWF0aW9uPXhtbGFuaW1hdGlvbl9jaGlsZHMuaXRlbShpKTtpZigxPT14bWxhbmltYXRpb24ubm9kZVR5cGUmJlwiYW5pbWF0aW9uXCI9PXhtbGFuaW1hdGlvbi5sb2NhbE5hbWUpe2lmKHhtbGFuaW1hdGlvbi5nZXRBdHRyaWJ1dGUoXCJpZFwiKSl0aGlzLnJlYWRBbmltYXRpb24oeG1sYW5pbWF0aW9uLHRyYWNrcyk7ZWxzZXt2YXIgeG1sYW5pbWF0aW9uMl9jaGlsZHM9eG1sYW5pbWF0aW9uLnF1ZXJ5U2VsZWN0b3JBbGwoXCJhbmltYXRpb25cIik7aWYoeG1sYW5pbWF0aW9uMl9jaGlsZHMubGVuZ3RoKWZvcih2YXIgaj0wO2o8eG1sYW5pbWF0aW9uMl9jaGlsZHMubGVuZ3RoOysrail7dmFyIHhtbGFuaW1hdGlvbjI9eG1sYW5pbWF0aW9uMl9jaGlsZHMuaXRlbShqKTt0aGlzLnJlYWRBbmltYXRpb24oeG1sYW5pbWF0aW9uMix0cmFja3MpfWVsc2UgdGhpcy5yZWFkQW5pbWF0aW9uKHhtbGFuaW1hdGlvbix0cmFja3MpfX19aWYoIXRyYWNrcy5sZW5ndGgpcmV0dXJuIG51bGw7Zm9yKHZhciBtYXhfdGltZT0wLGk9MDtpPHRyYWNrcy5sZW5ndGg7KytpKW1heF90aW1lPHRyYWNrc1tpXS5kdXJhdGlvbiYmKG1heF90aW1lPXRyYWNrc1tpXS5kdXJhdGlvbik7cmV0dXJuIGRlZmF1bHRfdGFrZS5uYW1lPVwiZGVmYXVsdFwiLGRlZmF1bHRfdGFrZS5kdXJhdGlvbj1tYXhfdGltZSxhbmltYXRpb25zLnRha2VzW2RlZmF1bHRfdGFrZS5uYW1lXT1kZWZhdWx0X3Rha2UsYW5pbWF0aW9uc30scmVhZEFuaW1hdGlvbjpmdW5jdGlvbih4bWxhbmltYXRpb24scmVzdWx0KXtpZihcImFuaW1hdGlvblwiIT14bWxhbmltYXRpb24ubG9jYWxOYW1lKXJldHVybiBudWxsO3ZhciB4bWxjaGFubmVsX2xpc3Q9KHhtbGFuaW1hdGlvbi5nZXRBdHRyaWJ1dGUoXCJpZFwiKSx4bWxhbmltYXRpb24ucXVlcnlTZWxlY3RvckFsbChcImNoYW5uZWxcIikpO2lmKCF4bWxjaGFubmVsX2xpc3QubGVuZ3RoKXJldHVybiBudWxsO2Zvcih2YXIgdHJhY2tzPXJlc3VsdHx8W10saT0wO2k8eG1sY2hhbm5lbF9saXN0Lmxlbmd0aDsrK2kpe3ZhciBhbmltPXRoaXMucmVhZENoYW5uZWwoeG1sY2hhbm5lbF9saXN0Lml0ZW0oaSkseG1sYW5pbWF0aW9uKTthbmltJiZ0cmFja3MucHVzaChhbmltKX1yZXR1cm4gdHJhY2tzfSxyZWFkQ2hhbm5lbDpmdW5jdGlvbih4bWxjaGFubmVsLHhtbGFuaW1hdGlvbil7aWYoXCJjaGFubmVsXCIhPXhtbGNoYW5uZWwubG9jYWxOYW1lfHxcImFuaW1hdGlvblwiIT14bWxhbmltYXRpb24ubG9jYWxOYW1lKXJldHVybiBudWxsO3ZhciBzb3VyY2U9eG1sY2hhbm5lbC5nZXRBdHRyaWJ1dGUoXCJzb3VyY2VcIiksdGFyZ2V0PXhtbGNoYW5uZWwuZ2V0QXR0cmlidXRlKFwidGFyZ2V0XCIpLHhtbHNhbXBsZXI9dGhpcy5maW5kWE1MTm9kZUJ5SWQoeG1sYW5pbWF0aW9uLFwic2FtcGxlclwiLHNvdXJjZS5zdWJzdHIoMSkpO2lmKCF4bWxzYW1wbGVyKXJldHVybiBjb25zb2xlLmVycm9yKFwiRXJyb3IgREFFOiBTYW1wbGVyIG5vdCBmb3VuZCBpbiBcIitzb3VyY2UpLG51bGw7Zm9yKHZhciBpbnB1dHM9e30scGFyYW1zPXt9LHNvdXJjZXM9e30seG1saW5wdXRzPXhtbHNhbXBsZXIucXVlcnlTZWxlY3RvckFsbChcImlucHV0XCIpLHRpbWVfZGF0YT1udWxsLGo9MDtqPHhtbGlucHV0cy5sZW5ndGg7aisrKXt2YXIgeG1saW5wdXQ9eG1saW5wdXRzLml0ZW0oaiksc291cmNlX25hbWU9eG1saW5wdXQuZ2V0QXR0cmlidXRlKFwic291cmNlXCIpLHNlbWFudGljPXhtbGlucHV0LmdldEF0dHJpYnV0ZShcInNlbWFudGljXCIpLHhtbHNvdXJjZT10aGlzLmZpbmRYTUxOb2RlQnlJZCh4bWxhbmltYXRpb24sXCJzb3VyY2VcIixzb3VyY2VfbmFtZS5zdWJzdHIoMSkpO2lmKHhtbHNvdXJjZSl7dmFyIHhtbHBhcmFtPXhtbHNvdXJjZS5xdWVyeVNlbGVjdG9yKFwicGFyYW1cIik7aWYoeG1scGFyYW0pe3ZhciB0eXBlPXhtbHBhcmFtLmdldEF0dHJpYnV0ZShcInR5cGVcIik7aW5wdXRzW3NlbWFudGljXT17c291cmNlOnNvdXJjZV9uYW1lLHR5cGU6dHlwZX07dmFyIGRhdGFfYXJyYXk9bnVsbDtpZihcImZsb2F0XCI9PXR5cGV8fFwiZmxvYXQ0eDRcIj09dHlwZSl7dmFyIHhtbGZsb2F0YXJyYXk9eG1sc291cmNlLnF1ZXJ5U2VsZWN0b3IoXCJmbG9hdF9hcnJheVwiKSxmbG9hdHM9dGhpcy5yZWFkQ29udGVudEFzRmxvYXRzKHhtbGZsb2F0YXJyYXkpO3NvdXJjZXNbc291cmNlX25hbWVdPWZsb2F0cyxkYXRhX2FycmF5PWZsb2F0czt2YXIgcGFyYW1fbmFtZT14bWxwYXJhbS5nZXRBdHRyaWJ1dGUoXCJuYW1lXCIpO1wiVElNRVwiPT1wYXJhbV9uYW1lJiYodGltZV9kYXRhPWRhdGFfYXJyYXkpLFwiT1VUUFVUXCI9PXNlbWFudGljJiYocGFyYW1fbmFtZT1zZW1hbnRpYykscGFyYW1fbmFtZT9wYXJhbXNbcGFyYW1fbmFtZV09dHlwZTpjb25zb2xlLndhcm4oXCJDb2xsYWRhOiA8cGFyYW0+IHdpdGhvdXQgbmFtZSBhdHRyaWJ1dGUgaW4gPGFuaW1hdGlvbj5cIil9fX19aWYoIXRpbWVfZGF0YSlyZXR1cm4gY29uc29sZS5lcnJvcihcIkVycm9yIERBRTogbm8gVElNRSBpbmZvIGZvdW5kIGluIDxjaGFubmVsPjogXCIreG1sY2hhbm5lbC5nZXRBdHRyaWJ1dGUoXCJzb3VyY2VcIikpLG51bGw7dmFyIHBhdGg9dGFyZ2V0LnNwbGl0KFwiL1wiKSxhbmltPXt9LG5vZGVuYW1lPXBhdGhbMF0sbm9kZT10aGlzLl9ub2Rlc19ieV9pZFtub2RlbmFtZV0sbG9jYXRvcj1ub2RlLmlkK1wiL1wiK3BhdGhbMV07YW5pbS5uYW1lPXBhdGhbMV0sYW5pbS5wcm9wZXJ0eT1sb2NhdG9yO3ZhciB0eXBlPVwibnVtYmVyXCIsZWxlbWVudF9zaXplPTEscGFyYW1fdHlwZT1wYXJhbXMuT1VUUFVUO3N3aXRjaChwYXJhbV90eXBlKXtjYXNlXCJmbG9hdFwiOmVsZW1lbnRfc2l6ZT0xO2JyZWFrO2Nhc2VcImZsb2F0M3gzXCI6ZWxlbWVudF9zaXplPTksdHlwZT1cIm1hdDNcIjticmVhaztjYXNlXCJmbG9hdDR4NFwiOmVsZW1lbnRfc2l6ZT0xNix0eXBlPVwibWF0NFwifWFuaW0udHlwZT10eXBlLGFuaW0udmFsdWVfc2l6ZT1lbGVtZW50X3NpemUsYW5pbS5kdXJhdGlvbj10aW1lX2RhdGFbdGltZV9kYXRhLmxlbmd0aC0xXTt2YXIgdmFsdWVfZGF0YT1zb3VyY2VzW2lucHV0cy5PVVRQVVQuc291cmNlXTtpZighdmFsdWVfZGF0YSlyZXR1cm4gbnVsbDtmb3IodmFyIG51bV9zYW1wbGVzPXRpbWVfZGF0YS5sZW5ndGgsc2FtcGxlX3NpemU9ZWxlbWVudF9zaXplKzEsYW5pbV9kYXRhPW5ldyBGbG9hdDMyQXJyYXkobnVtX3NhbXBsZXMqc2FtcGxlX3NpemUpLGo9MDtqPHRpbWVfZGF0YS5sZW5ndGg7KytqKXthbmltX2RhdGFbaipzYW1wbGVfc2l6ZV09dGltZV9kYXRhW2pdO3ZhciB2YWx1ZT12YWx1ZV9kYXRhLnN1YmFycmF5KGoqZWxlbWVudF9zaXplLChqKzEpKmVsZW1lbnRfc2l6ZSk7XCJmbG9hdDR4NFwiPT1wYXJhbV90eXBlJiZ0aGlzLnRyYW5zZm9ybU1hdHJpeCh2YWx1ZSxub2RlPzA9PW5vZGUuX2RlcHRoOjApLGFuaW1fZGF0YS5zZXQodmFsdWUsaipzYW1wbGVfc2l6ZSsxKX1pZihpc1dvcmtlciYmdGhpcy51c2VfdHJhbnNmZXJhYmxlcyl7dmFyIGRhdGE9YW5pbV9kYXRhO2RhdGEmJmRhdGEuYnVmZmVyJiZkYXRhLmxlbmd0aD4xMDAmJnRoaXMuX3RyYW5zZmVyYWJsZXMucHVzaChkYXRhLmJ1ZmZlcil9cmV0dXJuIGFuaW0uZGF0YT1hbmltX2RhdGEsYW5pbX0sZmluZE5vZGU6ZnVuY3Rpb24ocm9vdCxpZCl7aWYocm9vdC5pZD09aWQpcmV0dXJuIHJvb3Q7aWYocm9vdC5jaGlsZHJlbilmb3IodmFyIGkgaW4gcm9vdC5jaGlsZHJlbil7dmFyIHJldD10aGlzLmZpbmROb2RlKHJvb3QuY2hpbGRyZW5baV0saWQpO2lmKHJldClyZXR1cm4gcmV0fXJldHVybiBudWxsfSxyZWFkTGlicmFyeUNvbnRyb2xsZXJzOmZ1bmN0aW9uKHNjZW5lKXt2YXIgeG1sbGlicmFyeWNvbnRyb2xsZXJzPXRoaXMuX3htbHJvb3QucXVlcnlTZWxlY3RvcihcImxpYnJhcnlfY29udHJvbGxlcnNcIik7aWYoIXhtbGxpYnJhcnljb250cm9sbGVycylyZXR1cm4gbnVsbDtmb3IodmFyIHhtbGxpYnJhcnljb250cm9sbGVyc19jaGlsZHM9eG1sbGlicmFyeWNvbnRyb2xsZXJzLmNoaWxkTm9kZXMsaT0wO2k8eG1sbGlicmFyeWNvbnRyb2xsZXJzX2NoaWxkcy5sZW5ndGg7KytpKXt2YXIgeG1sY29udHJvbGxlcj14bWxsaWJyYXJ5Y29udHJvbGxlcnNfY2hpbGRzLml0ZW0oaSk7aWYoMT09eG1sY29udHJvbGxlci5ub2RlVHlwZSYmXCJjb250cm9sbGVyXCI9PXhtbGNvbnRyb2xsZXIubG9jYWxOYW1lKXt2YXIgaWQ9eG1sY29udHJvbGxlci5nZXRBdHRyaWJ1dGUoXCJpZFwiKTt0aGlzLl9jb250cm9sbGVyc19mb3VuZFtpZF18fHRoaXMucmVhZENvbnRyb2xsZXIoeG1sY29udHJvbGxlcixudWxsLHNjZW5lKX19fSxyZWFkQ29udHJvbGxlcjpmdW5jdGlvbih4bWxjb250cm9sbGVyLGZsaXAsc2NlbmUpe2lmKFwiY29udHJvbGxlclwiPT0heG1sY29udHJvbGxlci5sb2NhbE5hbWUpcmV0dXJuIGNvbnNvbGUud2FybihcInJlYWRDb250cm9sbGVyOiBub3QgYSBjb250cm9sbGVyOiBcIit4bWxjb250cm9sbGVyLmxvY2FsTmFtZSksbnVsbDt2YXIgaWQ9eG1sY29udHJvbGxlci5nZXRBdHRyaWJ1dGUoXCJpZFwiKTtpZih0aGlzLl9jb250cm9sbGVyc19mb3VuZFtpZF0pcmV0dXJuIHRoaXMuX2NvbnRyb2xsZXJzX2ZvdW5kW2lkXTt2YXIgbWVzaD1udWxsLHhtbHNraW49eG1sY29udHJvbGxlci5xdWVyeVNlbGVjdG9yKFwic2tpblwiKTt4bWxza2luJiYobWVzaD10aGlzLnJlYWRTa2luQ29udHJvbGxlcih4bWxza2luLGZsaXAsc2NlbmUpKTt2YXIgeG1sbW9ycGg9eG1sY29udHJvbGxlci5xdWVyeVNlbGVjdG9yKFwibW9ycGhcIik7cmV0dXJuIHhtbG1vcnBoJiYobWVzaD10aGlzLnJlYWRNb3JwaENvbnRyb2xsZXIoeG1sbW9ycGgsZmxpcCxzY2VuZSxtZXNoKSksdGhpcy5fY29udHJvbGxlcnNfZm91bmRbaWRdP2lkKz1cIl8xYmxhaFwiOnRoaXMuX2NvbnRyb2xsZXJzX2ZvdW5kW2lkXT1tZXNoLG1lc2h9LHJlYWRTa2luQ29udHJvbGxlcjpmdW5jdGlvbih4bWxza2luLGZsaXAsc2NlbmUpe3ZhciBpZF9nZW9tZXRyeT14bWxza2luLmdldEF0dHJpYnV0ZShcInNvdXJjZVwiKSxtZXNoPXRoaXMucmVhZEdlb21ldHJ5KGlkX2dlb21ldHJ5LGZsaXAsc2NlbmUpO2lmKCFtZXNoKXJldHVybiBudWxsO3ZhciBzb3VyY2VzPXRoaXMucmVhZFNvdXJjZXMoeG1sc2tpbixmbGlwKTtpZighc291cmNlcylyZXR1cm4gbnVsbDt2YXIgYmluZF9tYXRyaXg9bnVsbCx4bWxiaW5kbWF0cml4PXhtbHNraW4ucXVlcnlTZWxlY3RvcihcImJpbmRfc2hhcGVfbWF0cml4XCIpO3htbGJpbmRtYXRyaXg/KGJpbmRfbWF0cml4PXRoaXMucmVhZENvbnRlbnRBc0Zsb2F0cyh4bWxiaW5kbWF0cml4KSx0aGlzLnRyYW5zZm9ybU1hdHJpeChiaW5kX21hdHJpeCwhMCwhMCkpOmJpbmRfbWF0cml4PV9nbE1hdHJpeC5tYXQ0LmNyZWF0ZSgpO3ZhciBqb2ludHM9W10seG1sam9pbnRzPXhtbHNraW4ucXVlcnlTZWxlY3RvcihcImpvaW50c1wiKTtpZih4bWxqb2ludHMpe2Zvcih2YXIgam9pbnRzX3NvdXJjZT1udWxsLGludl9iaW5kX3NvdXJjZT1udWxsLHhtbGlucHV0cz14bWxqb2ludHMucXVlcnlTZWxlY3RvckFsbChcImlucHV0XCIpLGk9MDtpPHhtbGlucHV0cy5sZW5ndGg7aSsrKXt2YXIgeG1saW5wdXQ9eG1saW5wdXRzW2ldLHNlbT14bWxpbnB1dC5nZXRBdHRyaWJ1dGUoXCJzZW1hbnRpY1wiKS50b1VwcGVyQ2FzZSgpLHNyYz14bWxpbnB1dC5nZXRBdHRyaWJ1dGUoXCJzb3VyY2VcIiksc291cmNlPXNvdXJjZXNbc3JjLnN1YnN0cigxKV07XCJKT0lOVFwiPT1zZW0/am9pbnRzX3NvdXJjZT1zb3VyY2U6XCJJTlZfQklORF9NQVRSSVhcIj09c2VtJiYoaW52X2JpbmRfc291cmNlPXNvdXJjZSl9aWYoIWludl9iaW5kX3NvdXJjZXx8IWpvaW50c19zb3VyY2UpcmV0dXJuIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBEQUU6IG5vIGpvaW50cyBvciBpbnZfYmluZCBzb3VyY2VzIGZvdW5kXCIpLG51bGw7Zm9yKHZhciBpIGluIGpvaW50c19zb3VyY2Upe3ZhciBpbnZfbWF0PWludl9iaW5kX3NvdXJjZS5zdWJhcnJheSgxNippLDE2KmkrMTYpLG5vZGVuYW1lPWpvaW50c19zb3VyY2VbaV0sbm9kZT10aGlzLl9ub2Rlc19ieV9pZFtub2RlbmFtZV07bm9kZT8odGhpcy50cmFuc2Zvcm1NYXRyaXgoaW52X21hdCwwPT1ub2RlLl9kZXB0aCwhMCksam9pbnRzLnB1c2goW25vZGVuYW1lLGludl9tYXRdKSk6Y29uc29sZS53YXJuKFwiTm9kZSBcIitub2RlbmFtZStcIiBub3QgZm91bmRcIil9fXZhciB4bWx2ZXJ0ZXh3ZWlnaHRzPXhtbHNraW4ucXVlcnlTZWxlY3RvcihcInZlcnRleF93ZWlnaHRzXCIpO2lmKHhtbHZlcnRleHdlaWdodHMpe2Zvcih2YXIgd2VpZ2h0c19pbmRleGVkX2FycmF5PW51bGwseG1saW5wdXRzPXhtbHZlcnRleHdlaWdodHMucXVlcnlTZWxlY3RvckFsbChcImlucHV0XCIpLGk9MDtpPHhtbGlucHV0cy5sZW5ndGg7aSsrKVwiV0VJR0hUXCI9PXhtbGlucHV0c1tpXS5nZXRBdHRyaWJ1dGUoXCJzZW1hbnRpY1wiKS50b1VwcGVyQ2FzZSgpJiYod2VpZ2h0c19pbmRleGVkX2FycmF5PXNvdXJjZXNbeG1saW5wdXRzLml0ZW0oaSkuZ2V0QXR0cmlidXRlKFwic291cmNlXCIpLnN1YnN0cigxKV0pO2lmKCF3ZWlnaHRzX2luZGV4ZWRfYXJyYXkpdGhyb3dcIm5vIHdlaWdodHMgZm91bmRcIjtmb3IodmFyIHhtbHZjb3VudD14bWx2ZXJ0ZXh3ZWlnaHRzLnF1ZXJ5U2VsZWN0b3IoXCJ2Y291bnRcIiksdmNvdW50PXRoaXMucmVhZENvbnRlbnRBc1VJbnQzMih4bWx2Y291bnQpLHhtbHY9eG1sdmVydGV4d2VpZ2h0cy5xdWVyeVNlbGVjdG9yKFwidlwiKSx2PXRoaXMucmVhZENvbnRlbnRBc1VJbnQzMih4bWx2KSxudW1fdmVydGljZXM9bWVzaC52ZXJ0aWNlcy5sZW5ndGgvMyx3ZWlnaHRzX2FycmF5PW5ldyBGbG9hdDMyQXJyYXkoNCpudW1fdmVydGljZXMpLGJvbmVfaW5kZXhfYXJyYXk9bmV3IFVpbnQ4QXJyYXkoNCpudW1fdmVydGljZXMpLHBvcz0wLHJlbWFwPW1lc2guX3JlbWFwLG1heF9ib25lPTAsaT0wLGw9dmNvdW50Lmxlbmd0aDtpPGw7KytpKXtmb3IodmFyIG51bV9ib25lcz12Y291bnRbaV0sb2Zmc2V0PXBvcyxiPWJvbmVfaW5kZXhfYXJyYXkuc3ViYXJyYXkoNCppLDQqaSs0KSx3PXdlaWdodHNfYXJyYXkuc3ViYXJyYXkoNCppLDQqaSs0KSxzdW09MCxqPTA7ajxudW1fYm9uZXMmJmo8NDsrK2opYltqXT12W29mZnNldCsyKmpdLGJbal0+bWF4X2JvbmUmJihtYXhfYm9uZT1iW2pdKSx3W2pdPXdlaWdodHNfaW5kZXhlZF9hcnJheVt2W29mZnNldCsyKmorMV1dLHN1bSs9d1tqXTtpZihudW1fYm9uZXM+NCYmc3VtPDEpZm9yKHZhciBpbnZfc3VtPTEvc3VtLGo9MDtqPDQ7KytqKXdbal0qPWludl9zdW07cG9zKz0yKm51bV9ib25lc31mb3IodmFyIGZpbmFsX3dlaWdodHM9bmV3IEZsb2F0MzJBcnJheSg0Km51bV92ZXJ0aWNlcyksZmluYWxfYm9uZV9pbmRpY2VzPW5ldyBVaW50OEFycmF5KDQqbnVtX3ZlcnRpY2VzKSx1c2VkX2pvaW50cz1bXSxpPTA7aTxudW1fdmVydGljZXM7KytpKXtmb3IodmFyIHA9NCpyZW1hcFtpXSx3PXdlaWdodHNfYXJyYXkuc3ViYXJyYXkocCxwKzQpLGI9Ym9uZV9pbmRleF9hcnJheS5zdWJhcnJheShwLHArNCksaz0wO2s8MzsrK2spe2Zvcih2YXIgbWF4X3Bvcz1rLG1heF92YWx1ZT13W2tdLGo9aysxO2o8NDsrK2opd1tqXTw9bWF4X3ZhbHVlfHwobWF4X3Bvcz1qLG1heF92YWx1ZT13W2pdKTtpZihtYXhfcG9zIT1rKXt2YXIgdG1wPXdba107d1trXT13W21heF9wb3NdLHdbbWF4X3Bvc109dG1wLHRtcD1iW2tdLGJba109YlttYXhfcG9zXSxiW21heF9wb3NdPXRtcH19ZmluYWxfd2VpZ2h0cy5zZXQodyw0KmkpLGZpbmFsX2JvbmVfaW5kaWNlcy5zZXQoYiw0KmkpLHdbMF0mJih1c2VkX2pvaW50c1tiWzBdXT0hMCksd1sxXSYmKHVzZWRfam9pbnRzW2JbMV1dPSEwKSx3WzJdJiYodXNlZF9qb2ludHNbYlsyXV09ITApLHdbM10mJih1c2VkX2pvaW50c1tiWzNdXT0hMCl9bWF4X2JvbmU+PWpvaW50cy5sZW5ndGgmJmNvbnNvbGUud2FybihcIk1lc2ggdXNlcyBoaWdoZXIgYm9uZSBpbmRleCB0aGFuIGJvbmVzIGZvdW5kXCIpO2Zvcih2YXIgbmV3X2JvbmVzPVtdLGJvbmVzX3RyYW5zbGF0aW9uPXt9LGk9MDtpPHVzZWRfam9pbnRzLmxlbmd0aDsrK2kpdXNlZF9qb2ludHNbaV0mJihib25lc190cmFuc2xhdGlvbltpXT1uZXdfYm9uZXMubGVuZ3RoLG5ld19ib25lcy5wdXNoKGpvaW50c1tpXSkpO2lmKG5ld19ib25lcy5sZW5ndGg8am9pbnRzLmxlbmd0aCl7Zm9yKHZhciBpPTA7aTxmaW5hbF9ib25lX2luZGljZXMubGVuZ3RoO2krKylmaW5hbF9ib25lX2luZGljZXNbaV09Ym9uZXNfdHJhbnNsYXRpb25bZmluYWxfYm9uZV9pbmRpY2VzW2ldXTtqb2ludHM9bmV3X2JvbmVzfW1lc2gud2VpZ2h0cz1maW5hbF93ZWlnaHRzLG1lc2guYm9uZV9pbmRpY2VzPWZpbmFsX2JvbmVfaW5kaWNlcyxtZXNoLmJvbmVzPWpvaW50cyxtZXNoLmJpbmRfbWF0cml4PWJpbmRfbWF0cml4fXJldHVybiBtZXNofSxyZWFkTW9ycGhDb250cm9sbGVyOmZ1bmN0aW9uKHhtbG1vcnBoLGZsaXAsc2NlbmUsbWVzaCl7dmFyIGlkX2dlb21ldHJ5PXhtbG1vcnBoLmdldEF0dHJpYnV0ZShcInNvdXJjZVwiKSxiYXNlX21lc2g9dGhpcy5yZWFkR2VvbWV0cnkoaWRfZ2VvbWV0cnksZmxpcCxzY2VuZSk7aWYoIWJhc2VfbWVzaClyZXR1cm4gbnVsbDt2YXIgc291cmNlcz10aGlzLnJlYWRTb3VyY2VzKHhtbG1vcnBoLGZsaXApLG1vcnBocz1bXSx4bWx0YXJnZXRzPXhtbG1vcnBoLnF1ZXJ5U2VsZWN0b3IoXCJ0YXJnZXRzXCIpO2lmKCF4bWx0YXJnZXRzKXJldHVybiBudWxsO2Zvcih2YXIgeG1saW5wdXRzPXhtbHRhcmdldHMucXVlcnlTZWxlY3RvckFsbChcImlucHV0XCIpLHRhcmdldHM9bnVsbCx3ZWlnaHRzPW51bGwsaT0wO2k8eG1saW5wdXRzLmxlbmd0aDtpKyspe3ZhciB4bWxpbnB1dD14bWxpbnB1dHMuaXRlbShpKSxzZW1hbnRpYz14bWxpbnB1dC5nZXRBdHRyaWJ1dGUoXCJzZW1hbnRpY1wiKS50b1VwcGVyQ2FzZSgpLGRhdGE9c291cmNlc1t4bWxpbnB1dC5nZXRBdHRyaWJ1dGUoXCJzb3VyY2VcIikuc3Vic3RyKDEpXTtcIk1PUlBIX1RBUkdFVFwiPT1zZW1hbnRpYz90YXJnZXRzPWRhdGE6XCJNT1JQSF9XRUlHSFRcIj09c2VtYW50aWMmJih3ZWlnaHRzPWRhdGEpfWlmKCF0YXJnZXRzfHwhd2VpZ2h0cylyZXR1cm4gY29uc29sZS53YXJuKFwiTW9ycGggY29udHJvbGxlciB3aXRob3V0IHRhcmdldHMgb3Igd2VpZ2h0cy4gU2tpcHBpbmcgaXQuXCIpLG51bGw7Zm9yKHZhciBpIGluIHRhcmdldHMpe3ZhciBpZD1cIiNcIit0YXJnZXRzW2ldLGdlb21ldHJ5PXRoaXMucmVhZEdlb21ldHJ5KGlkLGZsaXAsc2NlbmUpO3NjZW5lLm1lc2hlc1tpZF09Z2VvbWV0cnksbW9ycGhzLnB1c2goe21lc2g6aWQsd2VpZ2h0OndlaWdodHNbaV19KX1yZXR1cm4gYmFzZV9tZXNoLm1vcnBoX3RhcmdldHM9bW9ycGhzLGJhc2VfbWVzaH0scmVhZEJpbmRNYXRlcmlhbHM6ZnVuY3Rpb24oeG1sYmluZF9tYXRlcmlhbCxtZXNoKXtmb3IodmFyIG1hdGVyaWFscz1bXSx4bWx0ZWNobmlxdWVzPXhtbGJpbmRfbWF0ZXJpYWwucXVlcnlTZWxlY3RvckFsbChcInRlY2huaXF1ZV9jb21tb25cIiksaT0wO2k8eG1sdGVjaG5pcXVlcy5sZW5ndGg7aSsrKWZvcih2YXIgeG1sdGVjaG5pcXVlPXhtbHRlY2huaXF1ZXMuaXRlbShpKSx4bWxpbnN0YW5jZV9tYXRlcmlhbHM9eG1sdGVjaG5pcXVlLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnN0YW5jZV9tYXRlcmlhbFwiKSxqPTA7ajx4bWxpbnN0YW5jZV9tYXRlcmlhbHMubGVuZ3RoO2orKyl7dmFyIHhtbGluc3RhbmNlX21hdGVyaWFsPXhtbGluc3RhbmNlX21hdGVyaWFscy5pdGVtKGopO3htbGluc3RhbmNlX21hdGVyaWFsJiZtYXRlcmlhbHMucHVzaCh4bWxpbnN0YW5jZV9tYXRlcmlhbC5nZXRBdHRyaWJ1dGUoXCJzeW1ib2xcIikpfXJldHVybiBtYXRlcmlhbHN9LHJlYWRTb3VyY2VzOmZ1bmN0aW9uKHhtbG5vZGUsZmxpcCl7Zm9yKHZhciBzb3VyY2VzPXt9LHhtbHNvdXJjZXM9eG1sbm9kZS5xdWVyeVNlbGVjdG9yQWxsKFwic291cmNlXCIpLGk9MDtpPHhtbHNvdXJjZXMubGVuZ3RoO2krKyl7dmFyIHhtbHNvdXJjZT14bWxzb3VyY2VzLml0ZW0oaSk7aWYoeG1sc291cmNlLnF1ZXJ5U2VsZWN0b3Ipe2lmKHhtbHNvdXJjZS5xdWVyeVNlbGVjdG9yKFwiZmxvYXRfYXJyYXlcIikpe3ZhciBmbG9hdHM9dGhpcy5yZWFkQ29udGVudEFzRmxvYXRzKHhtbHNvdXJjZSk7c291cmNlc1t4bWxzb3VyY2UuZ2V0QXR0cmlidXRlKFwiaWRcIildPWZsb2F0c31lbHNle3ZhciBuYW1lX2FycmF5PXhtbHNvdXJjZS5xdWVyeVNlbGVjdG9yKFwiTmFtZV9hcnJheVwiKTtpZihuYW1lX2FycmF5KXt2YXIgbmFtZXM9dGhpcy5yZWFkQ29udGVudEFzU3RyaW5nc0FycmF5KG5hbWVfYXJyYXkpO2lmKCFuYW1lcyljb250aW51ZTtzb3VyY2VzW3htbHNvdXJjZS5nZXRBdHRyaWJ1dGUoXCJpZFwiKV09bmFtZXN9ZWxzZXt2YXIgcmVmX2FycmF5PXhtbHNvdXJjZS5xdWVyeVNlbGVjdG9yKFwiSURSRUZfYXJyYXlcIik7aWYocmVmX2FycmF5KXt2YXIgbmFtZXM9dGhpcy5yZWFkQ29udGVudEFzU3RyaW5nc0FycmF5KHJlZl9hcnJheSk7aWYoIW5hbWVzKWNvbnRpbnVlO3NvdXJjZXNbeG1sc291cmNlLmdldEF0dHJpYnV0ZShcImlkXCIpXT1uYW1lc31lbHNlO319fX1yZXR1cm4gc291cmNlc30scmVhZENvbnRlbnRBc1VJbnQzMjpmdW5jdGlvbih4bWxub2RlKXtpZigheG1sbm9kZSlyZXR1cm4gbnVsbDt2YXIgdGV4dD14bWxub2RlLnRleHRDb250ZW50O2lmKHRleHQ9dGV4dC5yZXBsYWNlKC9cXG4vZ2ksXCIgXCIpLHRleHQ9dGV4dC50cmltKCksMD09dGV4dC5sZW5ndGgpcmV0dXJuIG51bGw7Zm9yKHZhciBudW1iZXJzPXRleHQuc3BsaXQoXCIgXCIpLGZsb2F0cz1uZXcgVWludDMyQXJyYXkobnVtYmVycy5sZW5ndGgpLGs9MDtrPG51bWJlcnMubGVuZ3RoO2srKylmbG9hdHNba109cGFyc2VJbnQobnVtYmVyc1trXSk7cmV0dXJuIGZsb2F0c30scmVhZENvbnRlbnRBc0Zsb2F0czpmdW5jdGlvbih4bWxub2RlKXtpZigheG1sbm9kZSlyZXR1cm4gbnVsbDt2YXIgdGV4dD14bWxub2RlLnRleHRDb250ZW50O3RleHQ9dGV4dC5yZXBsYWNlKC9cXG4vZ2ksXCIgXCIpLHRleHQ9dGV4dC5yZXBsYWNlKC9cXHNcXHMrL2dpLFwiIFwiKSx0ZXh0PXRleHQucmVwbGFjZSgvXFx0L2dpLFwiXCIpLHRleHQ9dGV4dC50cmltKCk7Zm9yKHZhciBudW1iZXJzPXRleHQuc3BsaXQoXCIgXCIpLGNvdW50PXhtbG5vZGUuZ2V0QXR0cmlidXRlKFwiY291bnRcIiksbGVuZ3RoPWNvdW50P3BhcnNlSW50KGNvdW50KTpudW1iZXJzLmxlbmd0aCxmbG9hdHM9bmV3IEZsb2F0MzJBcnJheShsZW5ndGgpLGs9MDtrPG51bWJlcnMubGVuZ3RoO2srKylmbG9hdHNba109cGFyc2VGbG9hdChudW1iZXJzW2tdKTtyZXR1cm4gZmxvYXRzfSxyZWFkQ29udGVudEFzU3RyaW5nc0FycmF5OmZ1bmN0aW9uKHhtbG5vZGUpe2lmKCF4bWxub2RlKXJldHVybiBudWxsO3ZhciB0ZXh0PXhtbG5vZGUudGV4dENvbnRlbnQ7dGV4dD10ZXh0LnJlcGxhY2UoL1xcbi9naSxcIiBcIiksdGV4dD10ZXh0LnJlcGxhY2UoL1xcc1xccy9naSxcIiBcIiksdGV4dD10ZXh0LnRyaW0oKTtmb3IodmFyIHdvcmRzPXRleHQuc3BsaXQoXCIgXCIpLGs9MDtrPHdvcmRzLmxlbmd0aDtrKyspd29yZHNba109d29yZHNba10udHJpbSgpO2lmKHhtbG5vZGUuZ2V0QXR0cmlidXRlKFwiY291bnRcIikmJnBhcnNlSW50KHhtbG5vZGUuZ2V0QXR0cmlidXRlKFwiY291bnRcIikpIT13b3Jkcy5sZW5ndGgpe3ZhciBtZXJnZWRfd29yZHM9W10sbmFtZT1cIlwiO2Zvcih2YXIgaSBpbiB3b3JkcyluYW1lP25hbWUrPVwiIFwiK3dvcmRzW2ldOm5hbWU9d29yZHNbaV0sdGhpcy5fbm9kZXNfYnlfaWRbdGhpcy5zYWZlU3RyaW5nKG5hbWUpXSYmKG1lcmdlZF93b3Jkcy5wdXNoKHRoaXMuc2FmZVN0cmluZyhuYW1lKSksbmFtZT1cIlwiKTt2YXIgY291bnQ9cGFyc2VJbnQoeG1sbm9kZS5nZXRBdHRyaWJ1dGUoXCJjb3VudFwiKSk7cmV0dXJuIG1lcmdlZF93b3Jkcy5sZW5ndGg9PWNvdW50P21lcmdlZF93b3JkczooY29uc29sZS5lcnJvcihcIkVycm9yOiBib25lIG5hbWVzIGhhdmUgc3BhY2VzLCBhdm9pZCB1c2luZyBzcGFjZXMgaW4gbmFtZXNcIiksbnVsbCl9cmV0dXJuIHdvcmRzfSxtYXgzZF9tYXRyaXhfMDpuZXcgRmxvYXQzMkFycmF5KFswLC0xLDAsMCwwLDAsLTEsMCwxLDAsMCwtMCwwLDAsMCwxXSksdHJhbnNmb3JtTWF0cml4OmZ1bmN0aW9uKG1hdHJpeCxmaXJzdF9sZXZlbCxpbnZlcnRlZCl7aWYoX2dsTWF0cml4Lm1hdDQudHJhbnNwb3NlKG1hdHJpeCxtYXRyaXgpLHRoaXMubm9fZmxpcClyZXR1cm4gbWF0cml4O2lmKGZpcnN0X2xldmVsKXt2YXIgdGVtcD1uZXcgRmxvYXQzMkFycmF5KG1hdHJpeC5zdWJhcnJheSg0LDgpKTttYXRyaXguc2V0KG1hdHJpeC5zdWJhcnJheSg4LDEyKSw0KSxtYXRyaXguc2V0KHRlbXAsOCksdGVtcD1tYXRyaXguc3ViYXJyYXkoOCwxMiksdmVjNC5zY2FsZSh0ZW1wLHRlbXAsLTEpfWVsc2V7dmFyIE09X2dsTWF0cml4Lm1hdDQuY3JlYXRlKCksbT1tYXRyaXg7TS5zZXQoW21bMF0sbVsyXSwtbVsxXV0sMCksTS5zZXQoW21bOF0sbVsxMF0sLW1bOV1dLDQpLE0uc2V0KFstbVs0XSwtbVs2XSxtWzVdXSw4KSxNLnNldChbbVsxMl0sbVsxNF0sLW1bMTNdXSwxMiksbS5zZXQoTSl9cmV0dXJuIG1hdHJpeH19O2V4cG9ydHMuZGVmYXVsdD1Db2xsYWRhLG1vZHVsZS5leHBvcnRzPWV4cG9ydHMuZGVmYXVsdH0pLmNhbGwoZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKDcwKSl9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO3ZhciBnLF90eXBlb2Y9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKG9iail7cmV0dXJuIHR5cGVvZiBvYmp9OmZ1bmN0aW9uKG9iail7cmV0dXJuIG9iaiYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZvYmouY29uc3RydWN0b3I9PT1TeW1ib2wmJm9iaiE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2Ygb2JqfTtnPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KCk7dHJ5e2c9Z3x8RnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpfHwoMCxldmFsKShcInRoaXNcIil9Y2F0Y2goZSl7XCJvYmplY3RcIj09PShcInVuZGVmaW5lZFwiPT10eXBlb2Ygd2luZG93P1widW5kZWZpbmVkXCI6X3R5cGVvZih3aW5kb3cpKSYmKGc9d2luZG93KX1tb2R1bGUuZXhwb3J0cz1nfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIF9jcmVhdGVDbGFzcz1mdW5jdGlvbigpe2Z1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LHByb3BzKXtmb3IodmFyIGk9MDtpPHByb3BzLmxlbmd0aDtpKyspe3ZhciBkZXNjcmlwdG9yPXByb3BzW2ldO2Rlc2NyaXB0b3IuZW51bWVyYWJsZT1kZXNjcmlwdG9yLmVudW1lcmFibGV8fCExLGRlc2NyaXB0b3IuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGRlc2NyaXB0b3ImJihkZXNjcmlwdG9yLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LGRlc2NyaXB0b3Iua2V5LGRlc2NyaXB0b3IpfX1yZXR1cm4gZnVuY3Rpb24oQ29uc3RydWN0b3IscHJvdG9Qcm9wcyxzdGF0aWNQcm9wcyl7cmV0dXJuIHByb3RvUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLHByb3RvUHJvcHMpLHN0YXRpY1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLHN0YXRpY1Byb3BzKSxDb25zdHJ1Y3Rvcn19KCksX1Bhc3M9X193ZWJwYWNrX3JlcXVpcmVfXyg5KSxfR0xUb29sPShfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9QYXNzKSxfX3dlYnBhY2tfcmVxdWlyZV9fKDApKSxfR0xUb29sMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HTFRvb2wpLF9HZW9tPV9fd2VicGFja19yZXF1aXJlX18oNyksX0dlb20yPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0dlb20pLF9GcmFtZUJ1ZmZlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDEyKSxfRnJhbWVCdWZmZXIyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0ZyYW1lQnVmZmVyKSxFZmZlY3RDb21wb3Nlcj1mdW5jdGlvbigpe2Z1bmN0aW9uIEVmZmVjdENvbXBvc2VyKG1XaWR0aCxtSGVpZ2h0KXthcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXSYmYXJndW1lbnRzWzJdO19jbGFzc0NhbGxDaGVjayh0aGlzLEVmZmVjdENvbXBvc2VyKSx0aGlzLl93aWR0aD1tV2lkdGh8fF9HTFRvb2wyLmRlZmF1bHQud2lkdGgsdGhpcy5faGVpZ2h0PW1IZWlnaHR8fF9HTFRvb2wyLmRlZmF1bHQuaGVpZ2h0LHRoaXMuX3BhcmFtcz17fSx0aGlzLnNldFNpemUobVdpZHRoLG1IZWlnaHQpLHRoaXMuX21lc2g9X0dlb20yLmRlZmF1bHQuYmlnVHJpYW5nbGUoKSx0aGlzLl9wYXNzZXM9W10sdGhpcy5fcmV0dXJuVGV4dHVyZX1yZXR1cm4gX2NyZWF0ZUNsYXNzKEVmZmVjdENvbXBvc2VyLFt7a2V5OlwiYWRkUGFzc1wiLHZhbHVlOmZ1bmN0aW9uKHBhc3Mpe2lmKHBhc3MucGFzc2VzKXJldHVybiB2b2lkIHRoaXMuYWRkUGFzcyhwYXNzLnBhc3Nlcyk7aWYocGFzcy5sZW5ndGgpZm9yKHZhciBpPTA7aTxwYXNzLmxlbmd0aDtpKyspdGhpcy5fcGFzc2VzLnB1c2gocGFzc1tpXSk7ZWxzZSB0aGlzLl9wYXNzZXMucHVzaChwYXNzKX19LHtrZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbihtU291cmNlKXt2YXIgX3RoaXM9dGhpcyxzb3VyY2U9bVNvdXJjZSxmYm9UYXJnZXQ9dm9pZCAwO3JldHVybiB0aGlzLl9wYXNzZXMuZm9yRWFjaChmdW5jdGlvbihwYXNzKXtmYm9UYXJnZXQ9cGFzcy5oYXNGYm8/cGFzcy5mYm86X3RoaXMuX2Zib1RhcmdldCxmYm9UYXJnZXQuYmluZCgpLF9HTFRvb2wyLmRlZmF1bHQuY2xlYXIoMCwwLDAsMCkscGFzcy5yZW5kZXIoc291cmNlKSxfR0xUb29sMi5kZWZhdWx0LmRyYXcoX3RoaXMuX21lc2gpLGZib1RhcmdldC51bmJpbmQoKSxwYXNzLmhhc0Zibz9zb3VyY2U9cGFzcy5mYm8uZ2V0VGV4dHVyZSgpOihfdGhpcy5fc3dhcCgpLHNvdXJjZT1fdGhpcy5fZmJvQ3VycmVudC5nZXRUZXh0dXJlKCkpfSksdGhpcy5fcmV0dXJuVGV4dHVyZT1zb3VyY2Usc291cmNlfX0se2tleTpcIl9zd2FwXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdG1wPXRoaXMuX2Zib0N1cnJlbnQ7dGhpcy5fZmJvQ3VycmVudD10aGlzLl9mYm9UYXJnZXQsdGhpcy5fZmJvVGFyZ2V0PXRtcCx0aGlzLl9jdXJyZW50PXRoaXMuX2Zib0N1cnJlbnQsdGhpcy5fdGFyZ2V0PXRoaXMuX2Zib1RhcmdldH19LHtrZXk6XCJzZXRTaXplXCIsdmFsdWU6ZnVuY3Rpb24obVdpZHRoLG1IZWlnaHQpe3RoaXMuX3dpZHRoPW1XaWR0aCx0aGlzLl9oZWlnaHQ9bUhlaWdodCx0aGlzLl9mYm9DdXJyZW50PW5ldyBfRnJhbWVCdWZmZXIyLmRlZmF1bHQodGhpcy5fd2lkdGgsdGhpcy5faGVpZ2h0LHRoaXMuX3BhcmFtcyksdGhpcy5fZmJvVGFyZ2V0PW5ldyBfRnJhbWVCdWZmZXIyLmRlZmF1bHQodGhpcy5fd2lkdGgsdGhpcy5faGVpZ2h0LHRoaXMuX3BhcmFtcyl9fSx7a2V5OlwiZ2V0VGV4dHVyZVwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JldHVyblRleHR1cmV9fSx7a2V5OlwicGFzc2VzXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Bhc3Nlc319XSksRWZmZWN0Q29tcG9zZXJ9KCk7ZXhwb3J0cy5kZWZhdWx0PUVmZmVjdENvbXBvc2VyfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZixjYWxsKXtpZighc2VsZil0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIWNhbGx8fFwib2JqZWN0XCIhPXR5cGVvZiBjYWxsJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBjYWxsP3NlbGY6Y2FsbH1mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3Msc3VwZXJDbGFzcyl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2Ygc3VwZXJDbGFzcyYmbnVsbCE9PXN1cGVyQ2xhc3MpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHN1cGVyQ2xhc3MpO3N1YkNsYXNzLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MmJnN1cGVyQ2xhc3MucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6c3ViQ2xhc3MsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksc3VwZXJDbGFzcyYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3Msc3VwZXJDbGFzcyk6c3ViQ2xhc3MuX19wcm90b19fPXN1cGVyQ2xhc3MpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfUGFzc1ZCbHVyPV9fd2VicGFja19yZXF1aXJlX18oMzcpLF9QYXNzVkJsdXIyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1Bhc3NWQmx1ciksX1Bhc3NIQmx1cj1fX3dlYnBhY2tfcmVxdWlyZV9fKDM5KSxfUGFzc0hCbHVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9QYXNzSEJsdXIpLF9QYXNzTWFjcm8yPV9fd2VicGFja19yZXF1aXJlX18oMzYpLF9QYXNzTWFjcm8zPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1Bhc3NNYWNybzIpLFBhc3NCbHVyPWZ1bmN0aW9uKF9QYXNzTWFjcm8pe2Z1bmN0aW9uIFBhc3NCbHVyKCl7dmFyIG1RdWFsaXR5PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTo5LG1XaWR0aD1hcmd1bWVudHNbMV0sbUhlaWdodD1hcmd1bWVudHNbMl0sbVBhcmFtcz1hcmd1bWVudHNbM107X2NsYXNzQ2FsbENoZWNrKHRoaXMsUGFzc0JsdXIpO3ZhciBfdGhpcz1fcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLChQYXNzQmx1ci5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZihQYXNzQmx1cikpLmNhbGwodGhpcykpLHZCbHVyPW5ldyBfUGFzc1ZCbHVyMi5kZWZhdWx0KG1RdWFsaXR5LG1XaWR0aCxtSGVpZ2h0LG1QYXJhbXMpLGhCbHVyPW5ldyBfUGFzc0hCbHVyMi5kZWZhdWx0KG1RdWFsaXR5LG1XaWR0aCxtSGVpZ2h0LG1QYXJhbXMpO3JldHVybiBfdGhpcy5hZGRQYXNzKHZCbHVyKSxfdGhpcy5hZGRQYXNzKGhCbHVyKSxfdGhpc31yZXR1cm4gX2luaGVyaXRzKFBhc3NCbHVyLF9QYXNzTWFjcm8pLFBhc3NCbHVyfShfUGFzc01hY3JvMy5kZWZhdWx0KTtleHBvcnRzLmRlZmF1bHQ9UGFzc0JsdXJ9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1cIi8vIGJsdXI1LmZyYWdcXG4vLyBzb3VyY2UgIDogaHR0cHM6Ly9naXRodWIuY29tL0phbTMvZ2xzbC1mYXN0LWdhdXNzaWFuLWJsdXJcXG5cXG4jZGVmaW5lIFNIQURFUl9OQU1FIEJMVVJfNVxcblxcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4jZGVmaW5lIEdMU0xJRlkgMVxcbnZhcnlpbmcgdmVjMiB2VGV4dHVyZUNvb3JkO1xcbnVuaWZvcm0gc2FtcGxlcjJEIHRleHR1cmU7XFxudW5pZm9ybSB2ZWMyIHVEaXJlY3Rpb247XFxudW5pZm9ybSB2ZWMyIHVSZXNvbHV0aW9uO1xcblxcbnZlYzQgYmx1cjUoc2FtcGxlcjJEIGltYWdlLCB2ZWMyIHV2LCB2ZWMyIHJlc29sdXRpb24sIHZlYzIgZGlyZWN0aW9uKSB7XFxuXFx0dmVjNCBjb2xvciA9IHZlYzQoMC4wKTtcXG5cXHR2ZWMyIG9mZjEgPSB2ZWMyKDEuMzMzMzMzMzMzMzMzMzMzMykgKiBkaXJlY3Rpb247XFxuXFx0Y29sb3IgKz0gdGV4dHVyZTJEKGltYWdlLCB1dikgKiAwLjI5NDExNzY0NzA1ODgyMzU0O1xcblxcdGNvbG9yICs9IHRleHR1cmUyRChpbWFnZSwgdXYgKyAob2ZmMSAvIHJlc29sdXRpb24pKSAqIDAuMzUyOTQxMTc2NDcwNTg4MjY7XFxuXFx0Y29sb3IgKz0gdGV4dHVyZTJEKGltYWdlLCB1diAtIChvZmYxIC8gcmVzb2x1dGlvbikpICogMC4zNTI5NDExNzY0NzA1ODgyNjtcXG5cXHRyZXR1cm4gY29sb3I7IFxcbn1cXG5cXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgICBnbF9GcmFnQ29sb3IgPSBibHVyNSh0ZXh0dXJlLCB2VGV4dHVyZUNvb3JkLCB1UmVzb2x1dGlvbiwgdURpcmVjdGlvbik7XFxufVwifSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9XCIvLyBibHVyOS5mcmFnXFxuLy8gc291cmNlICA6IGh0dHBzOi8vZ2l0aHViLmNvbS9KYW0zL2dsc2wtZmFzdC1nYXVzc2lhbi1ibHVyXFxuXFxuI2RlZmluZSBTSEFERVJfTkFNRSBCTFVSXzlcXG5cXG5wcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuI2RlZmluZSBHTFNMSUZZIDFcXG52YXJ5aW5nIHZlYzIgdlRleHR1cmVDb29yZDtcXG51bmlmb3JtIHNhbXBsZXIyRCB0ZXh0dXJlO1xcbnVuaWZvcm0gdmVjMiB1RGlyZWN0aW9uO1xcbnVuaWZvcm0gdmVjMiB1UmVzb2x1dGlvbjtcXG5cXG52ZWM0IGJsdXI5KHNhbXBsZXIyRCBpbWFnZSwgdmVjMiB1diwgdmVjMiByZXNvbHV0aW9uLCB2ZWMyIGRpcmVjdGlvbikge1xcblxcdHZlYzQgY29sb3IgPSB2ZWM0KDAuMCk7XFxuXFx0dmVjMiBvZmYxID0gdmVjMigxLjM4NDYxNTM4NDYpICogZGlyZWN0aW9uO1xcblxcdHZlYzIgb2ZmMiA9IHZlYzIoMy4yMzA3NjkyMzA4KSAqIGRpcmVjdGlvbjtcXG5cXHRjb2xvciArPSB0ZXh0dXJlMkQoaW1hZ2UsIHV2KSAqIDAuMjI3MDI3MDI3MDtcXG5cXHRjb2xvciArPSB0ZXh0dXJlMkQoaW1hZ2UsIHV2ICsgKG9mZjEgLyByZXNvbHV0aW9uKSkgKiAwLjMxNjIxNjIxNjI7XFxuXFx0Y29sb3IgKz0gdGV4dHVyZTJEKGltYWdlLCB1diAtIChvZmYxIC8gcmVzb2x1dGlvbikpICogMC4zMTYyMTYyMTYyO1xcblxcdGNvbG9yICs9IHRleHR1cmUyRChpbWFnZSwgdXYgKyAob2ZmMiAvIHJlc29sdXRpb24pKSAqIDAuMDcwMjcwMjcwMztcXG5cXHRjb2xvciArPSB0ZXh0dXJlMkQoaW1hZ2UsIHV2IC0gKG9mZjIgLyByZXNvbHV0aW9uKSkgKiAwLjA3MDI3MDI3MDM7XFxuXFx0cmV0dXJuIGNvbG9yO1xcbn1cXG5cXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgICBnbF9GcmFnQ29sb3IgPSBibHVyOSh0ZXh0dXJlLCB2VGV4dHVyZUNvb3JkLCB1UmVzb2x1dGlvbiwgdURpcmVjdGlvbik7XFxufVwifSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9XCIvLyBibHVyMTMuZnJhZ1xcbi8vIHNvdXJjZSAgOiBodHRwczovL2dpdGh1Yi5jb20vSmFtMy9nbHNsLWZhc3QtZ2F1c3NpYW4tYmx1clxcblxcbiNkZWZpbmUgU0hBREVSX05BTUUgQkxVUl8xM1xcblxcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG4jZGVmaW5lIEdMU0xJRlkgMVxcbnZhcnlpbmcgdmVjMiB2VGV4dHVyZUNvb3JkO1xcbnVuaWZvcm0gc2FtcGxlcjJEIHRleHR1cmU7XFxudW5pZm9ybSB2ZWMyIHVEaXJlY3Rpb247XFxudW5pZm9ybSB2ZWMyIHVSZXNvbHV0aW9uO1xcblxcbnZlYzQgYmx1cjEzKHNhbXBsZXIyRCBpbWFnZSwgdmVjMiB1diwgdmVjMiByZXNvbHV0aW9uLCB2ZWMyIGRpcmVjdGlvbikge1xcblxcdHZlYzQgY29sb3IgPSB2ZWM0KDAuMCk7XFxuXFx0dmVjMiBvZmYxID0gdmVjMigxLjQxMTc2NDcwNTg4MjM1MykgKiBkaXJlY3Rpb247XFxuXFx0dmVjMiBvZmYyID0gdmVjMigzLjI5NDExNzY0NzA1ODgyMzQpICogZGlyZWN0aW9uO1xcblxcdHZlYzIgb2ZmMyA9IHZlYzIoNS4xNzY0NzA1ODgyMzUyOTQpICogZGlyZWN0aW9uO1xcblxcdGNvbG9yICs9IHRleHR1cmUyRChpbWFnZSwgdXYpICogMC4xOTY0ODI1NTAxNTExNDA0O1xcblxcdGNvbG9yICs9IHRleHR1cmUyRChpbWFnZSwgdXYgKyAob2ZmMSAvIHJlc29sdXRpb24pKSAqIDAuMjk2OTA2OTY0NjcyODM0NDtcXG5cXHRjb2xvciArPSB0ZXh0dXJlMkQoaW1hZ2UsIHV2IC0gKG9mZjEgLyByZXNvbHV0aW9uKSkgKiAwLjI5NjkwNjk2NDY3MjgzNDQ7XFxuXFx0Y29sb3IgKz0gdGV4dHVyZTJEKGltYWdlLCB1diArIChvZmYyIC8gcmVzb2x1dGlvbikpICogMC4wOTQ0NzAzOTc4NTA0NDczMjtcXG5cXHRjb2xvciArPSB0ZXh0dXJlMkQoaW1hZ2UsIHV2IC0gKG9mZjIgLyByZXNvbHV0aW9uKSkgKiAwLjA5NDQ3MDM5Nzg1MDQ0NzMyO1xcblxcdGNvbG9yICs9IHRleHR1cmUyRChpbWFnZSwgdXYgKyAob2ZmMyAvIHJlc29sdXRpb24pKSAqIDAuMDEwMzgxMzYyNDAxMTQ4MDU3O1xcblxcdGNvbG9yICs9IHRleHR1cmUyRChpbWFnZSwgdXYgLSAob2ZmMyAvIHJlc29sdXRpb24pKSAqIDAuMDEwMzgxMzYyNDAxMTQ4MDU3O1xcblxcdHJldHVybiBjb2xvcjtcXG59XFxuXFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gICAgZ2xfRnJhZ0NvbG9yID0gYmx1cjEzKHRleHR1cmUsIHZUZXh0dXJlQ29vcmQsIHVSZXNvbHV0aW9uLCB1RGlyZWN0aW9uKTtcXG59XCJ9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX1mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsQ29uc3RydWN0b3Ipe2lmKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLGNhbGwpe2lmKCFzZWxmKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hY2FsbHx8XCJvYmplY3RcIiE9dHlwZW9mIGNhbGwmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGNhbGw/c2VsZjpjYWxsfWZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcyxzdXBlckNsYXNzKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBzdXBlckNsYXNzJiZudWxsIT09c3VwZXJDbGFzcyl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2Ygc3VwZXJDbGFzcyk7c3ViQ2xhc3MucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyYmc3VwZXJDbGFzcy5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTpzdWJDbGFzcyxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxzdXBlckNsYXNzJiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcyxzdXBlckNsYXNzKTpzdWJDbGFzcy5fX3Byb3RvX189c3VwZXJDbGFzcyl9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIF9HTFRvb2w9X193ZWJwYWNrX3JlcXVpcmVfXygwKSxfR0xUb29sMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HTFRvb2wpLF9QYXNzMj1fX3dlYnBhY2tfcmVxdWlyZV9fKDkpLF9QYXNzMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9QYXNzMiksX2Z4YWE9X193ZWJwYWNrX3JlcXVpcmVfXyg0MCksX2Z4YWEyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2Z4YWEpLFBhc3NGeGFhPWZ1bmN0aW9uKF9QYXNzKXtmdW5jdGlvbiBQYXNzRnhhYSgpe19jbGFzc0NhbGxDaGVjayh0aGlzLFBhc3NGeGFhKTt2YXIgX3RoaXM9X3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywoUGFzc0Z4YWEuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YoUGFzc0Z4YWEpKS5jYWxsKHRoaXMsX2Z4YWEyLmRlZmF1bHQpKTtyZXR1cm4gX3RoaXMudW5pZm9ybShcInVSZXNvbHV0aW9uXCIsWzEvX0dMVG9vbDIuZGVmYXVsdC53aWR0aCwxL19HTFRvb2wyLmRlZmF1bHQuaGVpZ2h0XSksX3RoaXN9cmV0dXJuIF9pbmhlcml0cyhQYXNzRnhhYSxfUGFzcyksUGFzc0Z4YWF9KF9QYXNzMy5kZWZhdWx0KTtleHBvcnRzLmRlZmF1bHQ9UGFzc0Z4YWF9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKXtyZXR1cm4gb2JqJiZvYmouX19lc01vZHVsZT9vYmo6e2RlZmF1bHQ6b2JqfX1mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsQ29uc3RydWN0b3Ipe2lmKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLGNhbGwpe2lmKCFzZWxmKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtyZXR1cm4hY2FsbHx8XCJvYmplY3RcIiE9dHlwZW9mIGNhbGwmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGNhbGw/c2VsZjpjYWxsfWZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcyxzdXBlckNsYXNzKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBzdXBlckNsYXNzJiZudWxsIT09c3VwZXJDbGFzcyl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIit0eXBlb2Ygc3VwZXJDbGFzcyk7c3ViQ2xhc3MucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyYmc3VwZXJDbGFzcy5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTpzdWJDbGFzcyxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSxzdXBlckNsYXNzJiYoT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcyxzdXBlckNsYXNzKTpzdWJDbGFzcy5fX3Byb3RvX189c3VwZXJDbGFzcyl9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIF9jcmVhdGVDbGFzcz1mdW5jdGlvbigpe2Z1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LHByb3BzKXtmb3IodmFyIGk9MDtpPHByb3BzLmxlbmd0aDtpKyspe3ZhciBkZXNjcmlwdG9yPXByb3BzW2ldO2Rlc2NyaXB0b3IuZW51bWVyYWJsZT1kZXNjcmlwdG9yLmVudW1lcmFibGV8fCExLGRlc2NyaXB0b3IuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGRlc2NyaXB0b3ImJihkZXNjcmlwdG9yLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LGRlc2NyaXB0b3Iua2V5LGRlc2NyaXB0b3IpfX1yZXR1cm4gZnVuY3Rpb24oQ29uc3RydWN0b3IscHJvdG9Qcm9wcyxzdGF0aWNQcm9wcyl7cmV0dXJuIHByb3RvUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLHByb3RvUHJvcHMpLHN0YXRpY1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLHN0YXRpY1Byb3BzKSxDb25zdHJ1Y3Rvcn19KCksX2dldD1mdW5jdGlvbiBnZXQob2JqZWN0LHByb3BlcnR5LHJlY2VpdmVyKXtudWxsPT09b2JqZWN0JiYob2JqZWN0PUZ1bmN0aW9uLnByb3RvdHlwZSk7dmFyIGRlc2M9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QscHJvcGVydHkpO2lmKHZvaWQgMD09PWRlc2Mpe3ZhciBwYXJlbnQ9T2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7cmV0dXJuIG51bGw9PT1wYXJlbnQ/dm9pZCAwOmdldChwYXJlbnQscHJvcGVydHkscmVjZWl2ZXIpfWlmKFwidmFsdWVcImluIGRlc2MpcmV0dXJuIGRlc2MudmFsdWU7dmFyIGdldHRlcj1kZXNjLmdldDtpZih2b2lkIDAhPT1nZXR0ZXIpcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKX0sX0dlb209X193ZWJwYWNrX3JlcXVpcmVfXyg3KSxfR2VvbTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfR2VvbSksX0dMU2hhZGVyPV9fd2VicGFja19yZXF1aXJlX18oMiksX0dMU2hhZGVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HTFNoYWRlciksX0JhdGNoMj1fX3dlYnBhY2tfcmVxdWlyZV9fKDQpLF9CYXRjaDM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQmF0Y2gyKSx2cz1fX3dlYnBhY2tfcmVxdWlyZV9fKDE4KSxmcz1fX3dlYnBhY2tfcmVxdWlyZV9fKDE5KSxCYXRjaENvcHk9ZnVuY3Rpb24oX0JhdGNoKXtmdW5jdGlvbiBCYXRjaENvcHkoKXtfY2xhc3NDYWxsQ2hlY2sodGhpcyxCYXRjaENvcHkpO3ZhciBtZXNoPV9HZW9tMi5kZWZhdWx0LmJpZ1RyaWFuZ2xlKCksc2hhZGVyPW5ldyBfR0xTaGFkZXIyLmRlZmF1bHQodnMsZnMpLF90aGlzPV9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsKEJhdGNoQ29weS5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZihCYXRjaENvcHkpKS5jYWxsKHRoaXMsbWVzaCxzaGFkZXIpKTtyZXR1cm4gc2hhZGVyLmJpbmQoKSxzaGFkZXIudW5pZm9ybShcInRleHR1cmVcIixcInVuaWZvcm0xaVwiLDApLF90aGlzfXJldHVybiBfaW5oZXJpdHMoQmF0Y2hDb3B5LF9CYXRjaCksX2NyZWF0ZUNsYXNzKEJhdGNoQ29weSxbe2tleTpcImRyYXdcIix2YWx1ZTpmdW5jdGlvbih0ZXh0dXJlKXt0aGlzLnNoYWRlci5iaW5kKCksdGV4dHVyZS5iaW5kKDApLF9nZXQoQmF0Y2hDb3B5LnByb3RvdHlwZS5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZihCYXRjaENvcHkucHJvdG90eXBlKSxcImRyYXdcIix0aGlzKS5jYWxsKHRoaXMpfX1dKSxCYXRjaENvcHl9KF9CYXRjaDMuZGVmYXVsdCk7ZXhwb3J0cy5kZWZhdWx0PUJhdGNoQ29weX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fWZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsY2FsbCl7aWYoIXNlbGYpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiFjYWxsfHxcIm9iamVjdFwiIT10eXBlb2YgY2FsbCYmXCJmdW5jdGlvblwiIT10eXBlb2YgY2FsbD9zZWxmOmNhbGx9ZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLHN1cGVyQ2xhc3Mpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHN1cGVyQ2xhc3MmJm51bGwhPT1zdXBlckNsYXNzKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiBzdXBlckNsYXNzKTtzdWJDbGFzcy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzJiZzdXBlckNsYXNzLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnN1YkNsYXNzLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHN1cGVyQ2xhc3MmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLHN1cGVyQ2xhc3MpOnN1YkNsYXNzLl9fcHJvdG9fXz1zdXBlckNsYXNzKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX0dMVG9vbD1fX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9HTFRvb2wyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0dMVG9vbCksX01lc2g9X193ZWJwYWNrX3JlcXVpcmVfXyg1KSxfTWVzaDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfTWVzaCksX0dMU2hhZGVyPV9fd2VicGFja19yZXF1aXJlX18oMiksX0dMU2hhZGVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HTFNoYWRlciksX0JhdGNoMj1fX3dlYnBhY2tfcmVxdWlyZV9fKDQpLF9CYXRjaDM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQmF0Y2gyKSx2cz1fX3dlYnBhY2tfcmVxdWlyZV9fKDc5KSxmcz1fX3dlYnBhY2tfcmVxdWlyZV9fKDgwKSxCYXRjaEF4aXM9ZnVuY3Rpb24oX0JhdGNoKXtmdW5jdGlvbiBCYXRjaEF4aXMoKXtfY2xhc3NDYWxsQ2hlY2sodGhpcyxCYXRjaEF4aXMpO3ZhciBwb3NpdGlvbnM9W10sY29sb3JzPVtdLGluZGljZXM9WzAsMSwyLDMsNCw1XSxyPTk5OTk7cG9zaXRpb25zLnB1c2goWy1yLDAsMF0pLHBvc2l0aW9ucy5wdXNoKFtyLDAsMF0pLHBvc2l0aW9ucy5wdXNoKFswLC1yLDBdKSxwb3NpdGlvbnMucHVzaChbMCxyLDBdKSxwb3NpdGlvbnMucHVzaChbMCwwLC1yXSkscG9zaXRpb25zLnB1c2goWzAsMCxyXSksY29sb3JzLnB1c2goWzEsMCwwXSksY29sb3JzLnB1c2goWzEsMCwwXSksY29sb3JzLnB1c2goWzAsMSwwXSksY29sb3JzLnB1c2goWzAsMSwwXSksY29sb3JzLnB1c2goWzAsMCwxXSksY29sb3JzLnB1c2goWzAsMCwxXSk7dmFyIG1lc2g9bmV3IF9NZXNoMi5kZWZhdWx0KF9HTFRvb2wyLmRlZmF1bHQuTElORVMpO21lc2guYnVmZmVyVmVydGV4KHBvc2l0aW9ucyksbWVzaC5idWZmZXJJbmRleChpbmRpY2VzKSxtZXNoLmJ1ZmZlckRhdGEoY29sb3JzLFwiYUNvbG9yXCIsMyk7dmFyIHNoYWRlcj1uZXcgX0dMU2hhZGVyMi5kZWZhdWx0KHZzLGZzKTtyZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywoQmF0Y2hBeGlzLl9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKEJhdGNoQXhpcykpLmNhbGwodGhpcyxtZXNoLHNoYWRlcikpfXJldHVybiBfaW5oZXJpdHMoQmF0Y2hBeGlzLF9CYXRjaCksQmF0Y2hBeGlzfShfQmF0Y2gzLmRlZmF1bHQpO2V4cG9ydHMuZGVmYXVsdD1CYXRjaEF4aXN9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1cIi8vIGF4aXMudmVydFxcblxcbiNkZWZpbmUgU0hBREVSX05BTUUgQkFTSUNfVkVSVEVYXFxuXFxucHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbiNkZWZpbmUgR0xTTElGWSAxXFxuYXR0cmlidXRlIHZlYzMgYVZlcnRleFBvc2l0aW9uO1xcbmF0dHJpYnV0ZSB2ZWMzIGFDb2xvcjtcXG5hdHRyaWJ1dGUgdmVjMyBhTm9ybWFsO1xcblxcbnVuaWZvcm0gbWF0NCB1TW9kZWxNYXRyaXg7XFxudW5pZm9ybSBtYXQ0IHVWaWV3TWF0cml4O1xcbnVuaWZvcm0gbWF0NCB1UHJvamVjdGlvbk1hdHJpeDtcXG5cXG52YXJ5aW5nIHZlYzMgdkNvbG9yO1xcbnZhcnlpbmcgdmVjMyB2Tm9ybWFsO1xcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuICAgIGdsX1Bvc2l0aW9uID0gdVByb2plY3Rpb25NYXRyaXggKiB1Vmlld01hdHJpeCAqIHVNb2RlbE1hdHJpeCAqIHZlYzQoYVZlcnRleFBvc2l0aW9uLCAxLjApO1xcbiAgICB2Q29sb3IgPSBhQ29sb3I7XFxuICAgIHZOb3JtYWwgPSBhTm9ybWFsO1xcbn1cIn0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPVwiLy8gYXhpcy5mcmFnXFxuXFxuI2RlZmluZSBTSEFERVJfTkFNRSBTSU1QTEVfVEVYVFVSRVxcblxcbnByZWNpc2lvbiBsb3dwIGZsb2F0O1xcbiNkZWZpbmUgR0xTTElGWSAxXFxudmFyeWluZyB2ZWMzIHZDb2xvcjtcXG52YXJ5aW5nIHZlYzMgdk5vcm1hbDtcXG5cXG52b2lkIG1haW4odm9pZCkge1xcblxcdC8vIHZlYzMgY29sb3IgPSB2Tm9ybWFsO1xcblxcdHZlYzMgY29sb3IgPSB2Q29sb3IgKyB2Tm9ybWFsICogMC4wMDAxO1xcbiAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KGNvbG9yLCAxLjApO1xcbn1cIn0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fWZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsY2FsbCl7aWYoIXNlbGYpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiFjYWxsfHxcIm9iamVjdFwiIT10eXBlb2YgY2FsbCYmXCJmdW5jdGlvblwiIT10eXBlb2YgY2FsbD9zZWxmOmNhbGx9ZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLHN1cGVyQ2xhc3Mpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHN1cGVyQ2xhc3MmJm51bGwhPT1zdXBlckNsYXNzKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiBzdXBlckNsYXNzKTtzdWJDbGFzcy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzJiZzdXBlckNsYXNzLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnN1YkNsYXNzLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHN1cGVyQ2xhc3MmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLHN1cGVyQ2xhc3MpOnN1YkNsYXNzLl9fcHJvdG9fXz1zdXBlckNsYXNzKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX2NyZWF0ZUNsYXNzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQscHJvcHMpe2Zvcih2YXIgaT0wO2k8cHJvcHMubGVuZ3RoO2krKyl7dmFyIGRlc2NyaXB0b3I9cHJvcHNbaV07ZGVzY3JpcHRvci5lbnVtZXJhYmxlPWRlc2NyaXB0b3IuZW51bWVyYWJsZXx8ITEsZGVzY3JpcHRvci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gZGVzY3JpcHRvciYmKGRlc2NyaXB0b3Iud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsZGVzY3JpcHRvci5rZXksZGVzY3JpcHRvcil9fXJldHVybiBmdW5jdGlvbihDb25zdHJ1Y3Rvcixwcm90b1Byb3BzLHN0YXRpY1Byb3BzKXtyZXR1cm4gcHJvdG9Qcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyksc3RhdGljUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3Isc3RhdGljUHJvcHMpLENvbnN0cnVjdG9yfX0oKSxfZ2V0PWZ1bmN0aW9uIGdldChvYmplY3QscHJvcGVydHkscmVjZWl2ZXIpe251bGw9PT1vYmplY3QmJihvYmplY3Q9RnVuY3Rpb24ucHJvdG90eXBlKTt2YXIgZGVzYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCxwcm9wZXJ0eSk7aWYodm9pZCAwPT09ZGVzYyl7dmFyIHBhcmVudD1PYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTtyZXR1cm4gbnVsbD09PXBhcmVudD92b2lkIDA6Z2V0KHBhcmVudCxwcm9wZXJ0eSxyZWNlaXZlcil9aWYoXCJ2YWx1ZVwiaW4gZGVzYylyZXR1cm4gZGVzYy52YWx1ZTt2YXIgZ2V0dGVyPWRlc2MuZ2V0O2lmKHZvaWQgMCE9PWdldHRlcilyZXR1cm4gZ2V0dGVyLmNhbGwocmVjZWl2ZXIpfSxfR2VvbT1fX3dlYnBhY2tfcmVxdWlyZV9fKDcpLF9HZW9tMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HZW9tKSxfR0xTaGFkZXI9X193ZWJwYWNrX3JlcXVpcmVfXygyKSxfR0xTaGFkZXIyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0dMU2hhZGVyKSxfQmF0Y2gyPV9fd2VicGFja19yZXF1aXJlX18oNCksX0JhdGNoMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9CYXRjaDIpLHZzPV9fd2VicGFja19yZXF1aXJlX18oMzMpLGZzPV9fd2VicGFja19yZXF1aXJlX18oMTApLEJhdGNoQmFsbD1mdW5jdGlvbihfQmF0Y2gpe2Z1bmN0aW9uIEJhdGNoQmFsbCgpe19jbGFzc0NhbGxDaGVjayh0aGlzLEJhdGNoQmFsbCk7dmFyIG1lc2g9X0dlb20yLmRlZmF1bHQuc3BoZXJlKDEsMjQpLHNoYWRlcj1uZXcgX0dMU2hhZGVyMi5kZWZhdWx0KHZzLGZzKTtyZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywoQmF0Y2hCYWxsLl9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKEJhdGNoQmFsbCkpLmNhbGwodGhpcyxtZXNoLHNoYWRlcikpfXJldHVybiBfaW5oZXJpdHMoQmF0Y2hCYWxsLF9CYXRjaCksX2NyZWF0ZUNsYXNzKEJhdGNoQmFsbCxbe2tleTpcImRyYXdcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBwb3NpdGlvbj1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06WzAsMCwwXSxzY2FsZT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06WzEsMSwxXSxjb2xvcj1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06WzEsMSwxXSxvcGFjaXR5PWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXToxO3RoaXMuc2hhZGVyLmJpbmQoKSx0aGlzLnNoYWRlci51bmlmb3JtKFwicG9zaXRpb25cIixcInVuaWZvcm0zZnZcIixwb3NpdGlvbiksdGhpcy5zaGFkZXIudW5pZm9ybShcInNjYWxlXCIsXCJ1bmlmb3JtM2Z2XCIsc2NhbGUpLHRoaXMuc2hhZGVyLnVuaWZvcm0oXCJjb2xvclwiLFwidW5pZm9ybTNmdlwiLGNvbG9yKSx0aGlzLnNoYWRlci51bmlmb3JtKFwib3BhY2l0eVwiLFwidW5pZm9ybTFmXCIsb3BhY2l0eSksX2dldChCYXRjaEJhbGwucHJvdG90eXBlLl9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKEJhdGNoQmFsbC5wcm90b3R5cGUpLFwiZHJhd1wiLHRoaXMpLmNhbGwodGhpcyl9fV0pLEJhdGNoQmFsbH0oX0JhdGNoMy5kZWZhdWx0KTtleHBvcnRzLmRlZmF1bHQ9QmF0Y2hCYWxsfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZixjYWxsKXtpZighc2VsZil0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIWNhbGx8fFwib2JqZWN0XCIhPXR5cGVvZiBjYWxsJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBjYWxsP3NlbGY6Y2FsbH1mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3Msc3VwZXJDbGFzcyl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2Ygc3VwZXJDbGFzcyYmbnVsbCE9PXN1cGVyQ2xhc3MpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHN1cGVyQ2xhc3MpO3N1YkNsYXNzLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MmJnN1cGVyQ2xhc3MucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6c3ViQ2xhc3MsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksc3VwZXJDbGFzcyYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3Msc3VwZXJDbGFzcyk6c3ViQ2xhc3MuX19wcm90b19fPXN1cGVyQ2xhc3MpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHwhMSxkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBkZXNjcmlwdG9yJiYoZGVzY3JpcHRvci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxkZXNjcmlwdG9yLmtleSxkZXNjcmlwdG9yKX19cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe3JldHVybiBwcm90b1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSxwcm90b1Byb3BzKSxzdGF0aWNQcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyksQ29uc3RydWN0b3J9fSgpLF9nZXQ9ZnVuY3Rpb24gZ2V0KG9iamVjdCxwcm9wZXJ0eSxyZWNlaXZlcil7bnVsbD09PW9iamVjdCYmKG9iamVjdD1GdW5jdGlvbi5wcm90b3R5cGUpO3ZhciBkZXNjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LHByb3BlcnR5KTtpZih2b2lkIDA9PT1kZXNjKXt2YXIgcGFyZW50PU9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpO3JldHVybiBudWxsPT09cGFyZW50P3ZvaWQgMDpnZXQocGFyZW50LHByb3BlcnR5LHJlY2VpdmVyKX1pZihcInZhbHVlXCJpbiBkZXNjKXJldHVybiBkZXNjLnZhbHVlO3ZhciBnZXR0ZXI9ZGVzYy5nZXQ7aWYodm9pZCAwIT09Z2V0dGVyKXJldHVybiBnZXR0ZXIuY2FsbChyZWNlaXZlcil9LF9HTFRvb2w9X193ZWJwYWNrX3JlcXVpcmVfXygwKSxfR0xUb29sMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HTFRvb2wpLF9NZXNoPV9fd2VicGFja19yZXF1aXJlX18oNSksX01lc2gyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX01lc2gpLF9HTFNoYWRlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDIpLF9HTFNoYWRlcjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfR0xTaGFkZXIpLF9CYXRjaDI9X193ZWJwYWNrX3JlcXVpcmVfXyg0KSxfQmF0Y2gzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0JhdGNoMiksdnM9X193ZWJwYWNrX3JlcXVpcmVfXyg4MyksZnM9X193ZWJwYWNrX3JlcXVpcmVfXygxMCksQmF0Y2hEb3RzUGxhbmU9ZnVuY3Rpb24oX0JhdGNoKXtmdW5jdGlvbiBCYXRjaERvdHNQbGFuZSgpe19jbGFzc0NhbGxDaGVjayh0aGlzLEJhdGNoRG90c1BsYW5lKTt2YXIgcG9zaXRpb25zPVtdLGluZGljZXM9W10saW5kZXg9MCxpPXZvaWQgMCxqPXZvaWQgMDtmb3IoaT0tMTAwO2k8MTAwO2krPTEpZm9yKGo9LTEwMDtqPDEwMDtqKz0xKXBvc2l0aW9ucy5wdXNoKFtpLGosMF0pLGluZGljZXMucHVzaChpbmRleCksaW5kZXgrKyxwb3NpdGlvbnMucHVzaChbaSwwLGpdKSxpbmRpY2VzLnB1c2goaW5kZXgpLGluZGV4Kys7dmFyIG1lc2g9bmV3IF9NZXNoMi5kZWZhdWx0KF9HTFRvb2wyLmRlZmF1bHQuUE9JTlRTKTttZXNoLmJ1ZmZlclZlcnRleChwb3NpdGlvbnMpLG1lc2guYnVmZmVySW5kZXgoaW5kaWNlcyk7dmFyIHNoYWRlcj1uZXcgX0dMU2hhZGVyMi5kZWZhdWx0KHZzLGZzKSxfdGhpcz1fcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLChCYXRjaERvdHNQbGFuZS5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZihCYXRjaERvdHNQbGFuZSkpLmNhbGwodGhpcyxtZXNoLHNoYWRlcikpO3JldHVybiBfdGhpcy5jb2xvcj1bMSwxLDFdLF90aGlzLm9wYWNpdHk9LjUsX3RoaXN9cmV0dXJuIF9pbmhlcml0cyhCYXRjaERvdHNQbGFuZSxfQmF0Y2gpLF9jcmVhdGVDbGFzcyhCYXRjaERvdHNQbGFuZSxbe2tleTpcImRyYXdcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuc2hhZGVyLmJpbmQoKSx0aGlzLnNoYWRlci51bmlmb3JtKFwiY29sb3JcIixcInVuaWZvcm0zZnZcIix0aGlzLmNvbG9yKSx0aGlzLnNoYWRlci51bmlmb3JtKFwib3BhY2l0eVwiLFwidW5pZm9ybTFmXCIsdGhpcy5vcGFjaXR5KSxfZ2V0KEJhdGNoRG90c1BsYW5lLnByb3RvdHlwZS5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZihCYXRjaERvdHNQbGFuZS5wcm90b3R5cGUpLFwiZHJhd1wiLHRoaXMpLmNhbGwodGhpcyl9fV0pLEJhdGNoRG90c1BsYW5lfShfQmF0Y2gzLmRlZmF1bHQpO2V4cG9ydHMuZGVmYXVsdD1CYXRjaERvdHNQbGFuZX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPVwiLy8gYmFzaWMudmVydFxcblxcbiNkZWZpbmUgU0hBREVSX05BTUUgRE9UU19QTEFORV9WRVJURVhcXG5cXG5wcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuI2RlZmluZSBHTFNMSUZZIDFcXG5hdHRyaWJ1dGUgdmVjMyBhVmVydGV4UG9zaXRpb247XFxuYXR0cmlidXRlIHZlYzMgYU5vcm1hbDtcXG5cXG51bmlmb3JtIG1hdDQgdU1vZGVsTWF0cml4O1xcbnVuaWZvcm0gbWF0NCB1Vmlld01hdHJpeDtcXG51bmlmb3JtIG1hdDQgdVByb2plY3Rpb25NYXRyaXg7XFxuXFxudmFyeWluZyB2ZWMzIHZOb3JtYWw7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gICAgZ2xfUG9zaXRpb24gPSB1UHJvamVjdGlvbk1hdHJpeCAqIHVWaWV3TWF0cml4ICogdU1vZGVsTWF0cml4ICogdmVjNChhVmVydGV4UG9zaXRpb24gKyBhTm9ybWFsICogMC4wMDAwMDEsIDEuMCk7XFxuICAgIGdsX1BvaW50U2l6ZSA9IDEuMDtcXG4gICAgdk5vcm1hbCA9IGFOb3JtYWw7XFxufVwifSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZixjYWxsKXtpZighc2VsZil0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIWNhbGx8fFwib2JqZWN0XCIhPXR5cGVvZiBjYWxsJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBjYWxsP3NlbGY6Y2FsbH1mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3Msc3VwZXJDbGFzcyl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2Ygc3VwZXJDbGFzcyYmbnVsbCE9PXN1cGVyQ2xhc3MpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHN1cGVyQ2xhc3MpO3N1YkNsYXNzLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MmJnN1cGVyQ2xhc3MucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6c3ViQ2xhc3MsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksc3VwZXJDbGFzcyYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3Msc3VwZXJDbGFzcyk6c3ViQ2xhc3MuX19wcm90b19fPXN1cGVyQ2xhc3MpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHwhMSxkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBkZXNjcmlwdG9yJiYoZGVzY3JpcHRvci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxkZXNjcmlwdG9yLmtleSxkZXNjcmlwdG9yKX19cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe3JldHVybiBwcm90b1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSxwcm90b1Byb3BzKSxzdGF0aWNQcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyksQ29uc3RydWN0b3J9fSgpLF9nZXQ9ZnVuY3Rpb24gZ2V0KG9iamVjdCxwcm9wZXJ0eSxyZWNlaXZlcil7bnVsbD09PW9iamVjdCYmKG9iamVjdD1GdW5jdGlvbi5wcm90b3R5cGUpO3ZhciBkZXNjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LHByb3BlcnR5KTtpZih2b2lkIDA9PT1kZXNjKXt2YXIgcGFyZW50PU9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpO3JldHVybiBudWxsPT09cGFyZW50P3ZvaWQgMDpnZXQocGFyZW50LHByb3BlcnR5LHJlY2VpdmVyKX1pZihcInZhbHVlXCJpbiBkZXNjKXJldHVybiBkZXNjLnZhbHVlO3ZhciBnZXR0ZXI9ZGVzYy5nZXQ7aWYodm9pZCAwIT09Z2V0dGVyKXJldHVybiBnZXR0ZXIuY2FsbChyZWNlaXZlcil9LF9HTFRvb2w9X193ZWJwYWNrX3JlcXVpcmVfXygwKSxfR0xUb29sMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HTFRvb2wpLF9NZXNoPV9fd2VicGFja19yZXF1aXJlX18oNSksX01lc2gyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX01lc2gpLF9HTFNoYWRlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDIpLF9HTFNoYWRlcjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfR0xTaGFkZXIpLF9CYXRjaDI9X193ZWJwYWNrX3JlcXVpcmVfXyg0KSxfQmF0Y2gzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0JhdGNoMiksdnM9X193ZWJwYWNrX3JlcXVpcmVfXygxMSksZnM9X193ZWJwYWNrX3JlcXVpcmVfXygxMCksQmF0Y2hBeGlzPWZ1bmN0aW9uKF9CYXRjaCl7ZnVuY3Rpb24gQmF0Y2hBeGlzKCl7X2NsYXNzQ2FsbENoZWNrKHRoaXMsQmF0Y2hBeGlzKTt2YXIgcG9zaXRpb25zPVtdLGluZGljZXM9WzAsMV0sY29vcmRzPVtbMCwwXSxbMSwxXV07cG9zaXRpb25zLnB1c2goWzAsMCwwXSkscG9zaXRpb25zLnB1c2goWzAsMCwwXSk7dmFyIG1lc2g9bmV3IF9NZXNoMi5kZWZhdWx0KF9HTFRvb2wyLmRlZmF1bHQuTElORVMpO21lc2guYnVmZmVyVmVydGV4KHBvc2l0aW9ucyksbWVzaC5idWZmZXJUZXhDb29yZChjb29yZHMpLG1lc2guYnVmZmVySW5kZXgoaW5kaWNlcyk7dmFyIHNoYWRlcj1uZXcgX0dMU2hhZGVyMi5kZWZhdWx0KHZzLGZzKTtyZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywoQmF0Y2hBeGlzLl9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKEJhdGNoQXhpcykpLmNhbGwodGhpcyxtZXNoLHNoYWRlcikpfXJldHVybiBfaW5oZXJpdHMoQmF0Y2hBeGlzLF9CYXRjaCksX2NyZWF0ZUNsYXNzKEJhdGNoQXhpcyxbe2tleTpcImRyYXdcIix2YWx1ZTpmdW5jdGlvbihtUG9zaXRpb25BLG1Qb3NpdGlvbkIpe3ZhciBjb2xvcj1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06WzEsMSwxXSxvcGFjaXR5PWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXToxO3RoaXMuX21lc2guYnVmZmVyVmVydGV4KFttUG9zaXRpb25BLG1Qb3NpdGlvbkJdKSx0aGlzLl9zaGFkZXIuYmluZCgpLHRoaXMuX3NoYWRlci51bmlmb3JtKFwiY29sb3JcIixcInZlYzNcIixjb2xvciksdGhpcy5fc2hhZGVyLnVuaWZvcm0oXCJvcGFjaXR5XCIsXCJmbG9hdFwiLG9wYWNpdHkpLF9nZXQoQmF0Y2hBeGlzLnByb3RvdHlwZS5fX3Byb3RvX198fE9iamVjdC5nZXRQcm90b3R5cGVPZihCYXRjaEF4aXMucHJvdG90eXBlKSxcImRyYXdcIix0aGlzKS5jYWxsKHRoaXMpfX1dKSxCYXRjaEF4aXN9KF9CYXRjaDMuZGVmYXVsdCk7ZXhwb3J0cy5kZWZhdWx0PUJhdGNoQXhpc30sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fWZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsY2FsbCl7aWYoIXNlbGYpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiFjYWxsfHxcIm9iamVjdFwiIT10eXBlb2YgY2FsbCYmXCJmdW5jdGlvblwiIT10eXBlb2YgY2FsbD9zZWxmOmNhbGx9ZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLHN1cGVyQ2xhc3Mpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHN1cGVyQ2xhc3MmJm51bGwhPT1zdXBlckNsYXNzKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiBzdXBlckNsYXNzKTtzdWJDbGFzcy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzJiZzdXBlckNsYXNzLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnN1YkNsYXNzLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHN1cGVyQ2xhc3MmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLHN1cGVyQ2xhc3MpOnN1YkNsYXNzLl9fcHJvdG9fXz1zdXBlckNsYXNzKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX2NyZWF0ZUNsYXNzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQscHJvcHMpe2Zvcih2YXIgaT0wO2k8cHJvcHMubGVuZ3RoO2krKyl7dmFyIGRlc2NyaXB0b3I9cHJvcHNbaV07ZGVzY3JpcHRvci5lbnVtZXJhYmxlPWRlc2NyaXB0b3IuZW51bWVyYWJsZXx8ITEsZGVzY3JpcHRvci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gZGVzY3JpcHRvciYmKGRlc2NyaXB0b3Iud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsZGVzY3JpcHRvci5rZXksZGVzY3JpcHRvcil9fXJldHVybiBmdW5jdGlvbihDb25zdHJ1Y3Rvcixwcm90b1Byb3BzLHN0YXRpY1Byb3BzKXtyZXR1cm4gcHJvdG9Qcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyksc3RhdGljUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3Isc3RhdGljUHJvcHMpLENvbnN0cnVjdG9yfX0oKSxfZ2V0PWZ1bmN0aW9uIGdldChvYmplY3QscHJvcGVydHkscmVjZWl2ZXIpe251bGw9PT1vYmplY3QmJihvYmplY3Q9RnVuY3Rpb24ucHJvdG90eXBlKTt2YXIgZGVzYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCxwcm9wZXJ0eSk7aWYodm9pZCAwPT09ZGVzYyl7dmFyIHBhcmVudD1PYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTtyZXR1cm4gbnVsbD09PXBhcmVudD92b2lkIDA6Z2V0KHBhcmVudCxwcm9wZXJ0eSxyZWNlaXZlcil9aWYoXCJ2YWx1ZVwiaW4gZGVzYylyZXR1cm4gZGVzYy52YWx1ZTt2YXIgZ2V0dGVyPWRlc2MuZ2V0O2lmKHZvaWQgMCE9PWdldHRlcilyZXR1cm4gZ2V0dGVyLmNhbGwocmVjZWl2ZXIpfSxfR2VvbT1fX3dlYnBhY2tfcmVxdWlyZV9fKDcpLF9HZW9tMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HZW9tKSxfR0xTaGFkZXI9X193ZWJwYWNrX3JlcXVpcmVfXygyKSxfR0xTaGFkZXIyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0dMU2hhZGVyKSxfQmF0Y2gyPV9fd2VicGFja19yZXF1aXJlX18oNCksX0JhdGNoMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9CYXRjaDIpLHZzPV9fd2VicGFja19yZXF1aXJlX18oMzQpLGZzPV9fd2VicGFja19yZXF1aXJlX18oMzUpLEJhdGNoU2t5Ym94PWZ1bmN0aW9uKF9CYXRjaCl7ZnVuY3Rpb24gQmF0Y2hTa3lib3goKXt2YXIgc2l6ZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06MjA7X2NsYXNzQ2FsbENoZWNrKHRoaXMsQmF0Y2hTa3lib3gpO3ZhciBtZXNoPV9HZW9tMi5kZWZhdWx0LnNreWJveChzaXplKSxzaGFkZXI9bmV3IF9HTFNoYWRlcjIuZGVmYXVsdCh2cyxmcyk7cmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsKEJhdGNoU2t5Ym94Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKEJhdGNoU2t5Ym94KSkuY2FsbCh0aGlzLG1lc2gsc2hhZGVyKSl9cmV0dXJuIF9pbmhlcml0cyhCYXRjaFNreWJveCxfQmF0Y2gpLF9jcmVhdGVDbGFzcyhCYXRjaFNreWJveCxbe2tleTpcImRyYXdcIix2YWx1ZTpmdW5jdGlvbih0ZXh0dXJlKXt0aGlzLnNoYWRlci5iaW5kKCksdGV4dHVyZS5iaW5kKDApLF9nZXQoQmF0Y2hTa3lib3gucHJvdG90eXBlLl9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKEJhdGNoU2t5Ym94LnByb3RvdHlwZSksXCJkcmF3XCIsdGhpcykuY2FsbCh0aGlzKX19XSksQmF0Y2hTa3lib3h9KF9CYXRjaDMuZGVmYXVsdCk7ZXhwb3J0cy5kZWZhdWx0PUJhdGNoU2t5Ym94fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZixjYWxsKXtpZighc2VsZil0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIWNhbGx8fFwib2JqZWN0XCIhPXR5cGVvZiBjYWxsJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBjYWxsP3NlbGY6Y2FsbH1mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3Msc3VwZXJDbGFzcyl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2Ygc3VwZXJDbGFzcyYmbnVsbCE9PXN1cGVyQ2xhc3MpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIrdHlwZW9mIHN1cGVyQ2xhc3MpO3N1YkNsYXNzLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MmJnN1cGVyQ2xhc3MucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6c3ViQ2xhc3MsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksc3VwZXJDbGFzcyYmKE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3Msc3VwZXJDbGFzcyk6c3ViQ2xhc3MuX19wcm90b19fPXN1cGVyQ2xhc3MpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHwhMSxkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBkZXNjcmlwdG9yJiYoZGVzY3JpcHRvci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxkZXNjcmlwdG9yLmtleSxkZXNjcmlwdG9yKX19cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe3JldHVybiBwcm90b1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSxwcm90b1Byb3BzKSxzdGF0aWNQcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyksQ29uc3RydWN0b3J9fSgpLF9nZXQ9ZnVuY3Rpb24gZ2V0KG9iamVjdCxwcm9wZXJ0eSxyZWNlaXZlcil7bnVsbD09PW9iamVjdCYmKG9iamVjdD1GdW5jdGlvbi5wcm90b3R5cGUpO3ZhciBkZXNjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LHByb3BlcnR5KTtpZih2b2lkIDA9PT1kZXNjKXt2YXIgcGFyZW50PU9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpO3JldHVybiBudWxsPT09cGFyZW50P3ZvaWQgMDpnZXQocGFyZW50LHByb3BlcnR5LHJlY2VpdmVyKX1pZihcInZhbHVlXCJpbiBkZXNjKXJldHVybiBkZXNjLnZhbHVlO3ZhciBnZXR0ZXI9ZGVzYy5nZXQ7aWYodm9pZCAwIT09Z2V0dGVyKXJldHVybiBnZXR0ZXIuY2FsbChyZWNlaXZlcil9LF9HZW9tPV9fd2VicGFja19yZXF1aXJlX18oNyksX0dlb20yPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0dlb20pLF9HTFNoYWRlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDIpLF9HTFNoYWRlcjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfR0xTaGFkZXIpLF9CYXRjaDI9X193ZWJwYWNrX3JlcXVpcmVfXyg0KSxfQmF0Y2gzPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0JhdGNoMiksdnM9X193ZWJwYWNrX3JlcXVpcmVfXyg4NyksZnM9X193ZWJwYWNrX3JlcXVpcmVfXygxOSksQmF0Y2hTa3k9ZnVuY3Rpb24oX0JhdGNoKXtmdW5jdGlvbiBCYXRjaFNreSgpe3ZhciBzaXplPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTo1MCxzZWc9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOjI0O19jbGFzc0NhbGxDaGVjayh0aGlzLEJhdGNoU2t5KTt2YXIgbWVzaD1fR2VvbTIuZGVmYXVsdC5zcGhlcmUoc2l6ZSxzZWcsITApLHNoYWRlcj1uZXcgX0dMU2hhZGVyMi5kZWZhdWx0KHZzLGZzKTtyZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywoQmF0Y2hTa3kuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YoQmF0Y2hTa3kpKS5jYWxsKHRoaXMsbWVzaCxzaGFkZXIpKX1yZXR1cm4gX2luaGVyaXRzKEJhdGNoU2t5LF9CYXRjaCksX2NyZWF0ZUNsYXNzKEJhdGNoU2t5LFt7a2V5OlwiZHJhd1wiLHZhbHVlOmZ1bmN0aW9uKHRleHR1cmUpe3RoaXMuc2hhZGVyLmJpbmQoKSx0ZXh0dXJlLmJpbmQoMCksX2dldChCYXRjaFNreS5wcm90b3R5cGUuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YoQmF0Y2hTa3kucHJvdG90eXBlKSxcImRyYXdcIix0aGlzKS5jYWxsKHRoaXMpfX1dKSxCYXRjaFNreX0oX0JhdGNoMy5kZWZhdWx0KTtleHBvcnRzLmRlZmF1bHQ9QmF0Y2hTa3l9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1cIi8vIHNreS52ZXJ0XFxuXFxucHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcbiNkZWZpbmUgR0xTTElGWSAxXFxuYXR0cmlidXRlIHZlYzMgYVZlcnRleFBvc2l0aW9uO1xcbmF0dHJpYnV0ZSB2ZWMyIGFUZXh0dXJlQ29vcmQ7XFxuYXR0cmlidXRlIHZlYzMgYU5vcm1hbDtcXG5cXG51bmlmb3JtIG1hdDQgdU1vZGVsTWF0cml4O1xcbnVuaWZvcm0gbWF0NCB1Vmlld01hdHJpeDtcXG51bmlmb3JtIG1hdDQgdVByb2plY3Rpb25NYXRyaXg7XFxuXFxudmFyeWluZyB2ZWMyIHZUZXh0dXJlQ29vcmQ7XFxudmFyeWluZyB2ZWMzIHZOb3JtYWw7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG5cXHRtYXQ0IG1hdFZpZXcgPSB1Vmlld01hdHJpeDtcXG5cXHRtYXRWaWV3WzNdWzBdID0gMC4wO1xcblxcdG1hdFZpZXdbM11bMV0gPSAwLjA7XFxuXFx0bWF0Vmlld1szXVsyXSA9IDAuMDtcXG5cXHRcXG4gICAgZ2xfUG9zaXRpb24gPSB1UHJvamVjdGlvbk1hdHJpeCAqIG1hdFZpZXcgKiB1TW9kZWxNYXRyaXggKiB2ZWM0KGFWZXJ0ZXhQb3NpdGlvbiwgMS4wKTtcXG4gICAgdlRleHR1cmVDb29yZCA9IGFUZXh0dXJlQ29vcmQ7XFxuICAgIHZOb3JtYWwgPSBhTm9ybWFsO1xcbn1cIn0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fWZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsY2FsbCl7aWYoIXNlbGYpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiFjYWxsfHxcIm9iamVjdFwiIT10eXBlb2YgY2FsbCYmXCJmdW5jdGlvblwiIT10eXBlb2YgY2FsbD9zZWxmOmNhbGx9ZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLHN1cGVyQ2xhc3Mpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHN1cGVyQ2xhc3MmJm51bGwhPT1zdXBlckNsYXNzKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiBzdXBlckNsYXNzKTtzdWJDbGFzcy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzJiZzdXBlckNsYXNzLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnN1YkNsYXNzLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHN1cGVyQ2xhc3MmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLHN1cGVyQ2xhc3MpOnN1YkNsYXNzLl9fcHJvdG9fXz1zdXBlckNsYXNzKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX2NyZWF0ZUNsYXNzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQscHJvcHMpe2Zvcih2YXIgaT0wO2k8cHJvcHMubGVuZ3RoO2krKyl7dmFyIGRlc2NyaXB0b3I9cHJvcHNbaV07ZGVzY3JpcHRvci5lbnVtZXJhYmxlPWRlc2NyaXB0b3IuZW51bWVyYWJsZXx8ITEsZGVzY3JpcHRvci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gZGVzY3JpcHRvciYmKGRlc2NyaXB0b3Iud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsZGVzY3JpcHRvci5rZXksZGVzY3JpcHRvcil9fXJldHVybiBmdW5jdGlvbihDb25zdHJ1Y3Rvcixwcm90b1Byb3BzLHN0YXRpY1Byb3BzKXtyZXR1cm4gcHJvdG9Qcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyksc3RhdGljUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3Isc3RhdGljUHJvcHMpLENvbnN0cnVjdG9yfX0oKSxfZ2V0PWZ1bmN0aW9uIGdldChvYmplY3QscHJvcGVydHkscmVjZWl2ZXIpe251bGw9PT1vYmplY3QmJihvYmplY3Q9RnVuY3Rpb24ucHJvdG90eXBlKTt2YXIgZGVzYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCxwcm9wZXJ0eSk7aWYodm9pZCAwPT09ZGVzYyl7dmFyIHBhcmVudD1PYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTtyZXR1cm4gbnVsbD09PXBhcmVudD92b2lkIDA6Z2V0KHBhcmVudCxwcm9wZXJ0eSxyZWNlaXZlcil9aWYoXCJ2YWx1ZVwiaW4gZGVzYylyZXR1cm4gZGVzYy52YWx1ZTt2YXIgZ2V0dGVyPWRlc2MuZ2V0O2lmKHZvaWQgMCE9PWdldHRlcilyZXR1cm4gZ2V0dGVyLmNhbGwocmVjZWl2ZXIpfSxfR0xUb29sPV9fd2VicGFja19yZXF1aXJlX18oMCksX0dMVG9vbDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfR0xUb29sKSxfR2VvbT1fX3dlYnBhY2tfcmVxdWlyZV9fKDcpLF9HZW9tMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9HZW9tKSxfR0xTaGFkZXI9X193ZWJwYWNrX3JlcXVpcmVfXygyKSxfR0xTaGFkZXIyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0dMU2hhZGVyKSxfQmF0Y2gyPV9fd2VicGFja19yZXF1aXJlX18oNCksX0JhdGNoMz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9CYXRjaDIpLHZzPV9fd2VicGFja19yZXF1aXJlX18oMTgpLGZzPV9fd2VicGFja19yZXF1aXJlX18oNDApLEJhdGNoRlhBQT1mdW5jdGlvbihfQmF0Y2gpe2Z1bmN0aW9uIEJhdGNoRlhBQSgpe19jbGFzc0NhbGxDaGVjayh0aGlzLEJhdGNoRlhBQSk7dmFyIG1lc2g9X0dlb20yLmRlZmF1bHQuYmlnVHJpYW5nbGUoKSxzaGFkZXI9bmV3IF9HTFNoYWRlcjIuZGVmYXVsdCh2cyxmcyksX3RoaXM9X3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywoQmF0Y2hGWEFBLl9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKEJhdGNoRlhBQSkpLmNhbGwodGhpcyxtZXNoLHNoYWRlcikpO3JldHVybiBzaGFkZXIuYmluZCgpLHNoYWRlci51bmlmb3JtKFwidGV4dHVyZVwiLFwidW5pZm9ybTFpXCIsMCksX3RoaXN9cmV0dXJuIF9pbmhlcml0cyhCYXRjaEZYQUEsX0JhdGNoKSxfY3JlYXRlQ2xhc3MoQmF0Y2hGWEFBLFt7a2V5OlwiZHJhd1wiLHZhbHVlOmZ1bmN0aW9uKHRleHR1cmUpe3RoaXMuc2hhZGVyLmJpbmQoKSx0ZXh0dXJlLmJpbmQoMCksdGhpcy5zaGFkZXIudW5pZm9ybShcInVSZXNvbHV0aW9uXCIsXCJ2ZWMyXCIsWzEvX0dMVG9vbDIuZGVmYXVsdC53aWR0aCwxL19HTFRvb2wyLmRlZmF1bHQuaGVpZ2h0XSksX2dldChCYXRjaEZYQUEucHJvdG90eXBlLl9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKEJhdGNoRlhBQS5wcm90b3R5cGUpLFwiZHJhd1wiLHRoaXMpLmNhbGwodGhpcyl9fV0pLEJhdGNoRlhBQX0oX0JhdGNoMy5kZWZhdWx0KTtleHBvcnRzLmRlZmF1bHQ9QmF0Y2hGWEFBfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIF9jcmVhdGVDbGFzcz1mdW5jdGlvbigpe2Z1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LHByb3BzKXtmb3IodmFyIGk9MDtpPHByb3BzLmxlbmd0aDtpKyspe3ZhciBkZXNjcmlwdG9yPXByb3BzW2ldO2Rlc2NyaXB0b3IuZW51bWVyYWJsZT1kZXNjcmlwdG9yLmVudW1lcmFibGV8fCExLGRlc2NyaXB0b3IuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGRlc2NyaXB0b3ImJihkZXNjcmlwdG9yLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LGRlc2NyaXB0b3Iua2V5LGRlc2NyaXB0b3IpfX1yZXR1cm4gZnVuY3Rpb24oQ29uc3RydWN0b3IscHJvdG9Qcm9wcyxzdGF0aWNQcm9wcyl7cmV0dXJuIHByb3RvUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLHByb3RvUHJvcHMpLHN0YXRpY1Byb3BzJiZkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLHN0YXRpY1Byb3BzKSxDb25zdHJ1Y3Rvcn19KCksX3NjaGVkdWxpbmc9X193ZWJwYWNrX3JlcXVpcmVfXyg2KSxfc2NoZWR1bGluZzI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2NoZWR1bGluZyksX0dMVG9vbD1fX3dlYnBhY2tfcmVxdWlyZV9fKDApLF9HTFRvb2wyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0dMVG9vbCksX0NhbWVyYVBlcnNwZWN0aXZlPV9fd2VicGFja19yZXF1aXJlX18oMTYpLF9DYW1lcmFQZXJzcGVjdGl2ZTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQ2FtZXJhUGVyc3BlY3RpdmUpLF9DYW1lcmFPcnRobz1fX3dlYnBhY2tfcmVxdWlyZV9fKDMwKSxfQ2FtZXJhT3J0aG8yPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0NhbWVyYU9ydGhvKSxfT3JiaXRhbENvbnRyb2w9X193ZWJwYWNrX3JlcXVpcmVfXygyOSksX09yYml0YWxDb250cm9sMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9PcmJpdGFsQ29udHJvbCksU2NlbmU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBTY2VuZSgpe3ZhciBfdGhpcz10aGlzO19jbGFzc0NhbGxDaGVjayh0aGlzLFNjZW5lKSx0aGlzLl9jaGlsZHJlbj1bXSx0aGlzLl9tYXRyaXhJZGVudGl0eT1tYXQ0LmNyZWF0ZSgpLF9HTFRvb2wyLmRlZmF1bHQuZW5hYmxlQWxwaGFCbGVuZGluZygpLHRoaXMuX2luaXQoKSx0aGlzLl9pbml0VGV4dHVyZXMoKSx0aGlzLl9pbml0Vmlld3MoKSx0aGlzLl9lZkluZGV4PV9zY2hlZHVsaW5nMi5kZWZhdWx0LmFkZEVGKGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLl9sb29wKCl9KSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLnJlc2l6ZSgpfSl9cmV0dXJuIF9jcmVhdGVDbGFzcyhTY2VuZSxbe2tleTpcInVwZGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7fX0se2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7fX0se2tleTpcInN0b3BcIix2YWx1ZTpmdW5jdGlvbigpey0xIT09dGhpcy5fZWZJbmRleCYmKHRoaXMuX2VmSW5kZXg9X3NjaGVkdWxpbmcyLmRlZmF1bHQucmVtb3ZlRUYodGhpcy5fZWZJbmRleCkpfX0se2tleTpcInN0YXJ0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgX3RoaXMyPXRoaXM7LTE9PT10aGlzLl9lZkluZGV4JiYodGhpcy5fZWZJbmRleD1fc2NoZWR1bGluZzIuZGVmYXVsdC5hZGRFRihmdW5jdGlvbigpe3JldHVybiBfdGhpczIuX2xvb3AoKX0pKX19LHtrZXk6XCJyZXNpemVcIix2YWx1ZTpmdW5jdGlvbigpe19HTFRvb2wyLmRlZmF1bHQuc2V0U2l6ZSh3aW5kb3cuaW5uZXJXaWR0aCx3aW5kb3cuaW5uZXJIZWlnaHQpLHRoaXMuY2FtZXJhLnNldEFzcGVjdFJhdGlvKF9HTFRvb2wyLmRlZmF1bHQuYXNwZWN0UmF0aW8pfX0se2tleTpcImFkZENoaWxkXCIsdmFsdWU6ZnVuY3Rpb24obUNoaWxkKXt0aGlzLl9jaGlsZHJlbi5wdXNoKG1DaGlsZCl9fSx7a2V5OlwicmVtb3ZlQ2hpbGRcIix2YWx1ZTpmdW5jdGlvbihtQ2hpbGQpe3ZhciBpbmRleD10aGlzLl9jaGlsZHJlbi5pbmRleE9mKG1DaGlsZCk7aWYoLTE9PWluZGV4KXJldHVybiB2b2lkIGNvbnNvbGUud2FybihcIkNoaWxkIG5vIGV4aXN0XCIpO3RoaXMuX2NoaWxkcmVuLnNwbGljZShpbmRleCwxKX19LHtrZXk6XCJfaW5pdFRleHR1cmVzXCIsdmFsdWU6ZnVuY3Rpb24oKXt9fSx7a2V5OlwiX2luaXRWaWV3c1wiLHZhbHVlOmZ1bmN0aW9uKCl7fX0se2tleTpcIl9yZW5kZXJDaGlsZHJlblwiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciBjaGlsZD12b2lkIDAsaT0wO2k8dGhpcy5fY2hpbGRyZW4ubGVuZ3RoO2krKyljaGlsZD10aGlzLl9jaGlsZHJlbltpXSxjaGlsZC50b1JlbmRlcigpO19HTFRvb2wyLmRlZmF1bHQucm90YXRlKHRoaXMuX21hdHJpeElkZW50aXR5KX19LHtrZXk6XCJfaW5pdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5jYW1lcmE9bmV3IF9DYW1lcmFQZXJzcGVjdGl2ZTIuZGVmYXVsdCx0aGlzLmNhbWVyYS5zZXRQZXJzcGVjdGl2ZSg0NSpNYXRoLlBJLzE4MCxfR0xUb29sMi5kZWZhdWx0LmFzcGVjdFJhdGlvLC4xLDEwMCksdGhpcy5vcmJpdGFsQ29udHJvbD1uZXcgX09yYml0YWxDb250cm9sMi5kZWZhdWx0KHRoaXMuY2FtZXJhLHdpbmRvdywxNSksdGhpcy5vcmJpdGFsQ29udHJvbC5yYWRpdXMudmFsdWU9MTAsdGhpcy5jYW1lcmFPcnRobz1uZXcgX0NhbWVyYU9ydGhvMi5kZWZhdWx0fX0se2tleTpcIl9sb29wXCIsdmFsdWU6ZnVuY3Rpb24oKXtfR0xUb29sMi5kZWZhdWx0LnZpZXdwb3J0KDAsMCxfR0xUb29sMi5kZWZhdWx0LndpZHRoLF9HTFRvb2wyLmRlZmF1bHQuaGVpZ2h0KSxfR0xUb29sMi5kZWZhdWx0LnNldE1hdHJpY2VzKHRoaXMuY2FtZXJhKSx0aGlzLnVwZGF0ZSgpLHRoaXMuX3JlbmRlckNoaWxkcmVuKCksdGhpcy5yZW5kZXIoKX19XSksU2NlbmV9KCk7ZXhwb3J0cy5kZWZhdWx0PVNjZW5lfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsQ29uc3RydWN0b3Ipe2lmKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX2NyZWF0ZUNsYXNzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQscHJvcHMpe2Zvcih2YXIgaT0wO2k8cHJvcHMubGVuZ3RoO2krKyl7dmFyIGRlc2NyaXB0b3I9cHJvcHNbaV07ZGVzY3JpcHRvci5lbnVtZXJhYmxlPWRlc2NyaXB0b3IuZW51bWVyYWJsZXx8ITEsZGVzY3JpcHRvci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gZGVzY3JpcHRvciYmKGRlc2NyaXB0b3Iud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsZGVzY3JpcHRvci5rZXksZGVzY3JpcHRvcil9fXJldHVybiBmdW5jdGlvbihDb25zdHJ1Y3Rvcixwcm90b1Byb3BzLHN0YXRpY1Byb3BzKXtyZXR1cm4gcHJvdG9Qcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyksc3RhdGljUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3Isc3RhdGljUHJvcHMpLENvbnN0cnVjdG9yfX0oKSxfR0xTaGFkZXI9X193ZWJwYWNrX3JlcXVpcmVfXygyKSxfR0xTaGFkZXIyPWZ1bmN0aW9uKG9iail7cmV0dXJuIG9iaiYmb2JqLl9fZXNNb2R1bGU/b2JqOntkZWZhdWx0Om9ian19KF9HTFNoYWRlciksVmlldz1mdW5jdGlvbigpe2Z1bmN0aW9uIFZpZXcobVN0clZlcnRleCxtU3RyRnJhZyl7X2NsYXNzQ2FsbENoZWNrKHRoaXMsVmlldyksdGhpcy5zaGFkZXI9bmV3IF9HTFNoYWRlcjIuZGVmYXVsdChtU3RyVmVydGV4LG1TdHJGcmFnKSx0aGlzLl9pbml0KCl9cmV0dXJuIF9jcmVhdGVDbGFzcyhWaWV3LFt7a2V5OlwiX2luaXRcIix2YWx1ZTpmdW5jdGlvbigpe319LHtrZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe319XSksVmlld30oKTtleHBvcnRzLmRlZmF1bHQ9Vmlld30sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ZGVmYXVsdDpvYmp9fWZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfWZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsY2FsbCl7aWYoIXNlbGYpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiFjYWxsfHxcIm9iamVjdFwiIT10eXBlb2YgY2FsbCYmXCJmdW5jdGlvblwiIT10eXBlb2YgY2FsbD9zZWxmOmNhbGx9ZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLHN1cGVyQ2xhc3Mpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHN1cGVyQ2xhc3MmJm51bGwhPT1zdXBlckNsYXNzKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiK3R5cGVvZiBzdXBlckNsYXNzKTtzdWJDbGFzcy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzJiZzdXBlckNsYXNzLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnN1YkNsYXNzLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHN1cGVyQ2xhc3MmJihPYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLHN1cGVyQ2xhc3MpOnN1YkNsYXNzLl9fcHJvdG9fXz1zdXBlckNsYXNzKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgX2NyZWF0ZUNsYXNzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQscHJvcHMpe2Zvcih2YXIgaT0wO2k8cHJvcHMubGVuZ3RoO2krKyl7dmFyIGRlc2NyaXB0b3I9cHJvcHNbaV07ZGVzY3JpcHRvci5lbnVtZXJhYmxlPWRlc2NyaXB0b3IuZW51bWVyYWJsZXx8ITEsZGVzY3JpcHRvci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gZGVzY3JpcHRvciYmKGRlc2NyaXB0b3Iud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsZGVzY3JpcHRvci5rZXksZGVzY3JpcHRvcil9fXJldHVybiBmdW5jdGlvbihDb25zdHJ1Y3Rvcixwcm90b1Byb3BzLHN0YXRpY1Byb3BzKXtyZXR1cm4gcHJvdG9Qcm9wcyYmZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyksc3RhdGljUHJvcHMmJmRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3Isc3RhdGljUHJvcHMpLENvbnN0cnVjdG9yfX0oKSxfT2JqZWN0M0QyPV9fd2VicGFja19yZXF1aXJlX18oMzEpLF9PYmplY3QzRDM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfT2JqZWN0M0QyKSxfR0xTaGFkZXI9X193ZWJwYWNrX3JlcXVpcmVfXygyKSxfR0xTaGFkZXIyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0dMU2hhZGVyKSxfR0xUb29sPV9fd2VicGFja19yZXF1aXJlX18oMCksX0dMVG9vbDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfR0xUb29sKSxWaWV3M0Q9ZnVuY3Rpb24oX09iamVjdDNEKXtmdW5jdGlvbiBWaWV3M0QobVN0clZlcnRleCxtU3RyRnJhZyl7X2NsYXNzQ2FsbENoZWNrKHRoaXMsVmlldzNEKTt2YXIgX3RoaXM9X3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywoVmlldzNELl9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKFZpZXczRCkpLmNhbGwodGhpcykpO3JldHVybiBfdGhpcy5fY2hpbGRyZW49W10sX3RoaXMuc2hhZGVyPW5ldyBfR0xTaGFkZXIyLmRlZmF1bHQobVN0clZlcnRleCxtU3RyRnJhZyksX3RoaXMuX2luaXQoKSxfdGhpcy5fbWF0cml4VGVtcD1tYXQ0LmNyZWF0ZSgpLF90aGlzfXJldHVybiBfaW5oZXJpdHMoVmlldzNELF9PYmplY3QzRCksX2NyZWF0ZUNsYXNzKFZpZXczRCxbe2tleTpcIl9pbml0XCIsdmFsdWU6ZnVuY3Rpb24oKXt9fSx7a2V5OlwiYWRkQ2hpbGRcIix2YWx1ZTpmdW5jdGlvbihtQ2hpbGQpe3RoaXMuX2NoaWxkcmVuLnB1c2gobUNoaWxkKX19LHtrZXk6XCJyZW1vdmVDaGlsZFwiLHZhbHVlOmZ1bmN0aW9uKG1DaGlsZCl7dmFyIGluZGV4PXRoaXMuX2NoaWxkcmVuLmluZGV4T2YobUNoaWxkKTtpZigtMT09aW5kZXgpcmV0dXJuIHZvaWQgY29uc29sZS53YXJuKFwiQ2hpbGQgbm8gZXhpc3RcIik7dGhpcy5fY2hpbGRyZW4uc3BsaWNlKGluZGV4LDEpfX0se2tleTpcInRvUmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24obWF0cml4KXt2b2lkIDA9PT1tYXRyaXgmJihtYXRyaXg9bWF0NC5jcmVhdGUoKSksbWF0NC5tdWwodGhpcy5fbWF0cml4VGVtcCxtYXRyaXgsdGhpcy5tYXRyaXgpLF9HTFRvb2wyLmRlZmF1bHQucm90YXRlKHRoaXMuX21hdHJpeFRlbXApLHRoaXMucmVuZGVyKCk7Zm9yKHZhciBpPTA7aTx0aGlzLl9jaGlsZHJlbi5sZW5ndGg7aSsrKXt0aGlzLl9jaGlsZHJlbltpXS50b1JlbmRlcih0aGlzLm1hdHJpeCl9fX0se2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7fX1dKSxWaWV3M0R9KF9PYmplY3QzRDMuZGVmYXVsdCk7ZXhwb3J0cy5kZWZhdWx0PVZpZXczRH1dKX0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2FsZnJpZC9idWlsZC9hbGZyaWQuanNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIvLyBpbmRleC5qc1xuXG5leHBvcnQgeyBzYXZlSW1hZ2UgfSBmcm9tICcuL3NhdmVJbWFnZSdcbmV4cG9ydCB7IGZyb21MYXRMbmdUb1BpeGVsIH0gZnJvbSAnLi9mcm9tTGF0TG5nVG9QaXhlbCdcbmV4cG9ydCB7IGRpc3RhbmNlTGF0TG5nIH0gZnJvbSAnLi9kaXN0YW5jZUxhdExuZydcbmV4cG9ydCB7IGRpcmVjdGlvbkxhdExuZyB9IGZyb20gJy4vZGlyZWN0aW9uTGF0TG5nJ1xuZXhwb3J0IHsgZGlyZWN0aW9uTWFwUG9pbnQgfSBmcm9tICcuL2RpcmVjdGlvbk1hcFBvaW50J1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9qcy91dGlscy9pbmRleC5qcyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiaHRtbCwgYm9keSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgYmFja2dyb3VuZDogd2hpdGU7IH1cXG5cXG5odG1sIHtcXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTtcXG4gIC1tb3otdGV4dC1zaXplLWFkanVzdDogbm9uZTtcXG4gIHRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7IH1cXG5cXG5oMSwgaDIsIGgzLCBoNCwgdGV4dCwgcCwgYnV0dG9uIHtcXG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xcbiAgLW1vei1vc3gtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcXG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJywgc2Fucy1zZXJpZjsgfVxcblxcbmJ1dHRvbiB7XFxuICBvdXRsaW5lOiBub25lOyB9XFxuXFxuLmNhbnZhcy1vdmVybGF5IHtcXG4gIHotaW5kZXg6IDk5OTk7XFxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDsgfVxcblxcbiNtYXAge1xcbiAgaGVpZ2h0OiAxMDAlOyB9XFxuXFxuLnVpLWNvbnRhaW5lciB7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB6LWluZGV4OiA5OTk7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMjUpO1xcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAuNXMgZWFzZS1vdXQ7IH1cXG4gIC5oYXNDYWxpYnJhdGVkIC51aS1jb250YWluZXIge1xcbiAgICBvcGFjaXR5OiAwOyB9XFxuXFxuLmJ0bi1jYWxpYnJhdGUge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgd2lkdGg6IDIwMHB4O1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgYm90dG9tOiAxNSU7XFxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIGJvcmRlci1yYWRpdXM6IDE4cHg7IH1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3VybD1mYWxzZSEuL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vc3JjL3Njc3MvZ2xvYmFsLnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiaW1wb3J0ICcuLi9zY3NzL2dsb2JhbC5zY3NzJztcbmltcG9ydCBkZWJ1Z1BvbHlmaWxsIGZyb20gJy4vZGVidWcvZGVidWdQb2x5ZmlsbCc7XG5pbXBvcnQgYWxmcmlkLCB7IEdMIH0gZnJvbSAnYWxmcmlkJztcblxuaW1wb3J0IEdvb2dsZU1hcHNMb2FkZXIgZnJvbSAnZ29vZ2xlLW1hcHMnO1xuaW1wb3J0IFBhdGhUcmFja2VyIGZyb20gJy4vdXRpbHMvUGF0aFRyYWNrZXInO1xuaW1wb3J0IEhlYWRpbmdDYWxpYnJlIGZyb20gJy4vdXRpbHMvSGVhZGluZ0NhbGlicmUnO1xuaW1wb3J0IEhlYWRpbmdDYWxpYnJhdGUgZnJvbSAnLi91dGlscy9IZWFkaW5nQ2FsaWJyYXRlJztcblxuY29uc3QgR09PR0xFX01BUF9BUElfS0VZID0gJ0FJemFTeUJxQ3F1a29IR3pKakk3U3FvNDFOdzlYVDBBaG5Hb1ZEdyc7XG5cblxuaW1wb3J0IHsgZnJvbUxhdExuZ1RvUGl4ZWwsIGRpc3RhbmNlTGF0TG5nLCBkaXJlY3Rpb25MYXRMbmcsIGRpcmVjdGlvbk1hcFBvaW50IH0gZnJvbSAnLi91dGlscyc7XG5cbmlmKGRvY3VtZW50LmJvZHkpIHtcblx0X2luaXQoKTtcbn0gZWxzZSB7XG5cdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgX2luaXQpO1xufVxuXG5jb25zdCB6b29tID0gMTY7XG5sZXQgbWFwLCBtYXJrZXIsIG1hcmtlclRhcmdldDEsIG1hcmtlclRhcmdldDIsIG1hcmtlclN0YXJ0O1xuIFxubGV0IHRhcmdldDEgPSB7XG5cdGxhdDo1MS41Mjg2NDIxMzg1MDI4NSxcblx0bG5nOi0wLjA4NTAzOTYzMzU5MDY2ODAyXG59XG5cbmxldCB0YXJnZXQyID0ge1xuXHRsYXQ6NTEuNTI3OTA3OTIwMDY0OTUsXG5cdGxuZzotMC4wODM2NTU2MTM3Mzg5ODM0NVxufVxuXG5jb25zdCBvRGVidWcgPSB7XG5cdGxhdGl0dWRlOicwJyxcblx0bG9uZ2l0dWRlOicwJyxcblx0ZGlzdDE6JzAnLFxuXHRkaXN0MjonMCcsXG5cdGRpc3Q6JzAnLFxuXHRoZWFkaW5nOicwJyxcblx0aGVhZGluZ0xvY2FsOicwJyxcblx0YWxwaGE6JzAnLFxuXHRoZWFkaW5nT2Zmc2V0OicwJyxcblx0aGVhZGluZ09mZnNldE5ldzonMCcsXG5cbn1cblxuXG5cbmxldCBjYW52YXMsIGN0eCwgcHJvamVjdGlvbiwgcGF0aFRyYWNrZXI7XG5sZXQgcG9pbnQgPSB7XG5cdHg6MCwgeTowXG59XG5sZXQgdGFyZ2V0ID0ge1xuXHR4OjAsIHk6MFxufVxubGV0IGhlYWRpbmcgPSAwO1xubGV0IGhlYWRpbmdMb2NhbCA9IDEuO1xubGV0IGhlYWRpbmdPZmZzZXQgPSAwO1xubGV0IGhlYWRpbmdUYXJnZXQgPSAwO1xubGV0IGhhc0xvZ2dlZEluaXQgPSBmYWxzZTtcbmxldCBoYXNDYWxpYnJhdGVkID0gZmFsc2U7XG5cbmxldCBsb2NQcmV2ID0ge2xhdDogNTEuNTI4MTExNDk5OTk5OTk0LCBsbmc6IC0wLjA4NTk5NDV9O1xubGV0IGxvY0N1cnIgPSB7bGF0OiA1MS41MjgxMTE0OTk5OTk5OTQsIGxuZzogLTAuMDg1OTk0NX07XG5cbmxldCBfZmFrZSA9IDA7XG5cbmZ1bmN0aW9uIF9pbml0TWFwKCkge1xuXHRjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xuXHRjYW52YXMuY2xhc3NOYW1lID0gJ2NhbnZhcy1vdmVybGF5Jztcblx0Y2FudmFzLndpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG5cdGNhbnZhcy5oZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG5cblx0ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjYW52YXMpO1xuXHRjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcblxuXHRwYXRoVHJhY2tlciA9IG5ldyBQYXRoVHJhY2tlcihjYW52YXMsIG1hcCk7XG5cblx0bWFya2VyVGFyZ2V0MSA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xuXHRcdHBvc2l0aW9uOiB0YXJnZXQxLFxuXHRcdG1hcDogbWFwLFxuXHRcdHRpdGxlOiAnVGFyZ2V0IDEnXG5cdH0pO1xuXG5cblx0Ly8gbWFya2VyVGFyZ2V0MiA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xuXHQvLyBcdHBvc2l0aW9uOiB0YXJnZXQyLFxuXHQvLyBcdG1hcDogbWFwLFxuXHQvLyBcdHRpdGxlOiAnVGFyZ2V0IDInXG5cdC8vIH0pO1xuXG5cblx0Y29uc3QgdXBkYXRlTG9jYXRpb24gPSAoKSA9PiB7XG5cblx0XHRpZiAobmF2aWdhdG9yLmdlb2xvY2F0aW9uKSB7XG5cdFx0ICBcdG5hdmlnYXRvci5nZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24oIChvKT0+IHtcblxuXHRcdCAgXHRcdG9EZWJ1Zy5sYXRpdHVkZSA9IG8uY29vcmRzLmxhdGl0dWRlLnRvU3RyaW5nKCk7XG5cdFx0ICBcdFx0b0RlYnVnLmxvbmdpdHVkZSA9IG8uY29vcmRzLmxvbmdpdHVkZS50b1N0cmluZygpO1xuXG5cdFx0ICBcdFx0aWYobWFya2VyKSB7IG1hcmtlci5zZXRNYXAobnVsbCk7XHR9XG5cblx0XHQgIFx0XHRjb25zdCBteUxhdGxuZyA9IHtcblx0XHQgIFx0XHRcdGxhdDogby5jb29yZHMubGF0aXR1ZGUsIFxuXHRcdCAgXHRcdFx0bG5nOiBvLmNvb3Jkcy5sb25naXR1ZGUgKyBfZmFrZVxuXHRcdCAgXHRcdH07XG5cdFx0ICBcdFx0bG9jUHJldi5sYXQgPSBsb2NDdXJyLmxhdDtcblx0XHQgIFx0XHRsb2NQcmV2LmxuZyA9IGxvY0N1cnIubG5nO1xuXHRcdCAgXHRcdGxvY0N1cnIubGF0ID0gbXlMYXRsbmcubGF0O1xuXHRcdCAgXHRcdGxvY0N1cnIubG5nID0gbXlMYXRsbmcubG5nO1xuXG5cdFx0ICBcdFx0bGV0IGRpc3QgPSBkaXN0YW5jZUxhdExuZyhsb2NQcmV2LCBsb2NDdXJyKVxuXG5cdFx0ICBcdFx0SGVhZGluZ0NhbGlicmUudXBkYXRlKGhlYWRpbmdMb2NhbCk7XG5cblx0XHQgIFx0XHRwYXRoVHJhY2tlci5hZGQobmV3IGdvb2dsZS5tYXBzLkxhdExuZyhteUxhdGxuZy5sYXQsIG15TGF0bG5nLmxuZykpO1xuXG5cdFx0ICBcdFx0bWFya2VyID0gbmV3IGdvb2dsZS5tYXBzLk1hcmtlcih7XG5cdFx0ICBcdFx0XHRwb3NpdGlvbjogbXlMYXRsbmcsXG5cdFx0ICBcdFx0XHRtYXA6IG1hcCxcblx0XHQgIFx0XHRcdHRpdGxlOiAnTWUnXG5cdFx0ICBcdFx0fSk7XG5cblx0XHQgIFx0XHQvLyBvRGVidWcuZGlzdCA9IGAke2Rpc3R9YDtcblx0XHQgIFx0XHRvRGVidWcuZGlzdDEgPSBgJHtkaXN0YW5jZUxhdExuZyhteUxhdGxuZywgdGFyZ2V0MSl9YDtcblx0XHQgIFx0XHQvLyBvRGVidWcuZGlzdDIgPSBgJHtkaXN0YW5jZUxhdExuZyhteUxhdGxuZywgdGFyZ2V0Mil9YDtcblxuXHRcdCAgXHRcdHRhcmdldCA9IGZyb21MYXRMbmdUb1BpeGVsKG1hcCwgbWFya2VyVGFyZ2V0MS5wb3NpdGlvbik7XG5cdFx0ICBcdFx0cG9pbnQgPSBmcm9tTGF0TG5nVG9QaXhlbChtYXAsIG1hcmtlci5wb3NpdGlvbik7XG5cblxuXHRcdCAgXHRcdC8vXHRnZXQgaGVhZGluZyB0byB0YXJnZXRcblx0XHQgIFx0XHRoZWFkaW5nVGFyZ2V0ID0gZGlyZWN0aW9uTWFwUG9pbnQocG9pbnQsIHRhcmdldCkgKyBNYXRoLlBJLzI7XG5cblx0XHQgIFx0fSApO1xuXHRcdH1cblxuXHRcdGlmKCFHTC5pc01vYmlsZSkge1xuXHRcdFx0Ly8gX2Zha2UgKz0gMC4wMDAwNTtcblx0XHRcdGNvbnN0IHQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKSAqIDAuMDU7XG5cdFx0XHRfZmFrZSA9IE1hdGguc2luKHQpICogMC4wMDE1O1xuXHRcdH1cblx0fVxuXG5cblx0c2V0SW50ZXJ2YWwodXBkYXRlTG9jYXRpb24sIDEwMDApO1xuXG5cblxuXHRzZXRUaW1lb3V0KCgpPT4ge1xuXHRcdC8vIGd1aS5hZGQob0RlYnVnLCAnbGF0aXR1ZGUnKS5saXN0ZW4oKTtcblx0XHQvLyBndWkuYWRkKG9EZWJ1ZywgJ2xvbmdpdHVkZScpLmxpc3RlbigpO1xuXHRcdGd1aS5hZGQob0RlYnVnLCAnZGlzdDEnKS5uYW1lKCdEaXN0YW5jZSB0byBUYXJnZXQnKS5saXN0ZW4oKTtcblx0XHRndWkuYWRkKG9EZWJ1ZywgJ2hlYWRpbmdPZmZzZXQnKS5saXN0ZW4oKTtcblx0XHRndWkuYWRkKG9EZWJ1ZywgJ2hlYWRpbmdPZmZzZXROZXcnKS5saXN0ZW4oKTtcblx0XHQvLyBndWkuYWRkKG9EZWJ1ZywgJ2Rpc3QyJykubGlzdGVuKCk7XG5cdFx0Z3VpLmFkZChIZWFkaW5nQ2FsaWJyYXRlLCAnc3RhdGVTdHJpbmcnKS5saXN0ZW4oKTtcblx0XHRndWkuYWRkKHBhdGhUcmFja2VyLCAnY2xlYXInKS5uYW1lKCdDbGVhciB0cmFja3MnKTtcblx0fSwgMjAwKTtcblxuXG5cdGFsZnJpZC5TY2hlZHVsZXIuYWRkRUYodXBkYXRlKTtcblxuXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignZGV2aWNlb3JpZW50YXRpb25hYnNvbHV0ZScsIGZ1bmN0aW9uKGV2ZW50KSB7XG5cdFx0Y29uc29sZS5sb2coJ29uIGRldmljZW9yaWVudGF0aW9uIGFic29sdXRlJyk7XG5cdFx0aWYoIWhhc0xvZ2dlZEluaXQpIHtcblx0XHRcdGNvbnNvbGUubG9nKGV2ZW50LmFic29sdXRlLCBldmVudC5hbHBoYSk7XG5cdFx0XHRoYXNMb2dnZWRJbml0ID0gdHJ1ZTtcblx0XHR9XG5cblx0ICAgIG9EZWJ1Zy5oZWFkaW5nID0gYCR7aGVhZGluZ31gO1xuXHQgICAgb0RlYnVnLmFscGhhID0gYCR7ZXZlbnQuYWxwaGF9YDtcblx0ICAgIGhlYWRpbmcgPSAtZXZlbnQuYWxwaGEgKiBNYXRoLlBJIC8gMTgwO1xuXHQgICAgaWYoIUdMLmlzTW9iaWxlKSB7XG5cdCAgICBcdGhlYWRpbmcgPSAtMC41O1xuXHQgICAgfVxuXHR9LCBmYWxzZSk7XG5cblx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2RldmljZW9yaWVudGF0aW9uJywgZnVuY3Rpb24oZXZlbnQpIHtcblx0XHRjb25zb2xlLmxvZygnb24gZGV2aWNlb3JpZW50YXRpb24nKTtcblx0ICAgIGhlYWRpbmdMb2NhbCA9IC1ldmVudC5hbHBoYSAqIE1hdGguUEkgLyAxODA7XG5cdCAgICBpZighR0wuaXNNb2JpbGUpIHtcblx0ICAgIFx0aGVhZGluZ0xvY2FsID0gMC41O1xuXHQgICAgfVxuXG5cdH0sIGZhbHNlKTtcblxuXG5cdGNvbnN0IGJ0bkNhbGlicmUgPSBkb2N1bWVudC5ib2R5LnF1ZXJ5U2VsZWN0b3IoJy5idG4tY2FsaWJyYXRlJyk7XG5cdGJ0bkNhbGlicmUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSk9PiB7XG5cblx0XHRpZighaGFzQ2FsaWJyYXRlZCkge1xuXHRcdFx0YnRuQ2FsaWJyZS5pbm5lckhUTUwgPSAnRU5EJztcblx0XHRcdGhhc0NhbGlicmF0ZWQgPSB0cnVlO1xuXG5cdFx0XHQvLyBtYXJrZXJTdGFydCA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xuXHRcdFx0Ly8gXHRwb3NpdGlvbjogbG9jQ3Vycixcblx0XHRcdC8vIFx0bWFwOiBtYXAsXG5cdFx0XHQvLyBcdHRpdGxlOiAnVGFyZ2V0IDEnXG5cdFx0XHQvLyB9KTtcblx0XHRcdEhlYWRpbmdDYWxpYnJlLnN0YXJ0KHtcblx0XHRcdFx0bGF0OmxvY0N1cnIubGF0LFxuXHRcdFx0XHRsbmc6bG9jQ3Vyci5sbmcsXG5cdFx0XHR9KTtcblxuXG5cdFx0XHRIZWFkaW5nQ2FsaWJyYXRlLm9uY2UoJ29uU3RhcnQnLCBsb2MgPT4ge1xuXHRcdFx0XHRtYXJrZXJTdGFydCA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xuXHRcdFx0XHRcdHBvc2l0aW9uOiBsb2MsXG5cdFx0XHRcdFx0bWFwOiBtYXAsXG5cdFx0XHRcdFx0dGl0bGU6ICdUYXJnZXQgMSdcblx0XHRcdFx0fSk7XG5cdFx0XHR9KTtcblxuXG5cdFx0XHRIZWFkaW5nQ2FsaWJyYXRlLm9uKCdvblByb2dyZXNzJywgcGVyY2VudCA9PiB7XG5cdFx0XHRcdGNvbnNvbGUubG9nKCdDYWxpYnJhdGluZyBwcm9ncmVzcyA6JywgcGVyY2VudCk7XG5cdFx0XHR9KVxuXG5cdFx0XHRIZWFkaW5nQ2FsaWJyYXRlLnN0YXJ0KClcblx0XHRcdC50aGVuKChvZmZzZXQpPT4ge1xuXHRcdFx0XHRjb25zb2xlLmxvZygnSGVhZGluZyBPZmZzZXQ6Jywgb2Zmc2V0LCBIZWFkaW5nQ2FsaWJyYXRlLm9mZnNldCk7XG5cdFx0XHRcdG9EZWJ1Zy5oZWFkaW5nT2Zmc2V0TmV3ID0gYCR7b2Zmc2V0fWA7XG5cblx0XHRcdFx0bWFya2VyU3RhcnQuc2V0TWFwKG51bGwpO1xuXHRcdFx0XHRIZWFkaW5nQ2FsaWJyZS5zdG9wKHtcblx0XHRcdFx0XHRsYXQ6bG9jQ3Vyci5sYXQsXG5cdFx0XHRcdFx0bG5nOmxvY0N1cnIubG5nLFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0b0RlYnVnLmhlYWRpbmdPZmZzZXQgPSBgJHtIZWFkaW5nQ2FsaWJyZS5vZmZzZXR9YDtcblx0XHRcdFx0ZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKCdoYXNDYWxpYnJhdGVkJyk7XG5cdFx0XHR9LCAoZSk9PiB7XG5cdFx0XHRcdGNvbnNvbGUubG9nKCdFcnJvcicsIGUpO1xuXHRcdFx0fSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdG1hcmtlclN0YXJ0LnNldE1hcChudWxsKTtcblx0XHRcdEhlYWRpbmdDYWxpYnJlLnN0b3Aoe1xuXHRcdFx0XHRsYXQ6bG9jQ3Vyci5sYXQsXG5cdFx0XHRcdGxuZzpsb2NDdXJyLmxuZyxcblx0XHRcdH0pO1xuXHRcdFx0b0RlYnVnLmhlYWRpbmdPZmZzZXQgPSBgJHtIZWFkaW5nQ2FsaWJyZS5vZmZzZXR9YDtcblx0XHRcdGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZCgnaGFzQ2FsaWJyYXRlZCcpO1xuXHRcdH1cblx0fSk7XG59XG5cblxuZnVuY3Rpb24gdXBkYXRlKCkge1xuXHRjdHguY2xlYXJSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7XHRcblxuXHRjdHguc2F2ZSgpO1xuXG5cdGxldCB3ID0gODtcblx0Y29uc3QgaCA9IDUwO1xuXHRjdHgudHJhbnNsYXRlKHBvaW50LngsIHBvaW50LnkpO1xuXG5cdGN0eC5zYXZlKCk7XG5cdC8vIGNvbnNvbGUubG9nKCdhbmdsZSA6JywgaGVhZGluZywgSGVhZGluZ0NhbGlicmUub2Zmc2V0KTtcblx0Y3R4LnJvdGF0ZShoZWFkaW5nTG9jYWwgKyBIZWFkaW5nQ2FsaWJyZS5vZmZzZXQpO1xuXHRjdHguZmlsbFN0eWxlID0gJ3JnYmEoMjU1LCAyMDAsIDAsIDEpJztcblx0Y3R4LmZpbGxSZWN0KC13LzIsIC1oLCB3LCBoKTtcblx0Y3R4LnJlc3RvcmUoKTtcblxuXHR3ID0gNDtcblx0Y3R4LnNhdmUoKTtcblx0Ly8gY3R4LnJvdGF0ZShoZWFkaW5nTG9jYWwgKyBIZWFkaW5nQ2FsaWJyZS5vZmZzZXQpO1xuXHRjdHgucm90YXRlKGhlYWRpbmdUYXJnZXQpO1xuXHRjdHguZmlsbFN0eWxlID0gJ3JnYmEoMCwgMTI4LCAyMDAsIDEpJztcblx0Y3R4LmZpbGxSZWN0KC13LzIsIC1oLCB3LCBoKTtcblx0Y3R4LnJlc3RvcmUoKTtcblxuXHR3ID0gMjtcblx0Y3R4LnNhdmUoKTtcblx0Y3R4LnJvdGF0ZShoZWFkaW5nTG9jYWwpO1xuXHRjdHguZmlsbFN0eWxlID0gJ3JnYmEoMjAsIDgwLCAyOCwgMSknO1xuXHRjdHguZmlsbFJlY3QoLXcvMiwgLWgsIHcsIGgpO1xuXHRjdHgucmVzdG9yZSgpO1xuXG5cdGN0eC5yZXN0b3JlKCk7XG5cblx0Ly8gcGF0aFRyYWNrZXIudXBkYXRlKGhlYWRpbmcpO1xuXHRwYXRoVHJhY2tlci51cGRhdGUoaGVhZGluZ0xvY2FsKTtcblxuXHRvRGVidWcuaGVhZGluZ09mZnNldCA9IGAke0hlYWRpbmdDYWxpYnJlLm9mZnNldH1gO1xufVxuXG5cbmZ1bmN0aW9uIF9pbml0KCkge1xuXHRHb29nbGVNYXBzTG9hZGVyLktFWSA9IEdPT0dMRV9NQVBfQVBJX0tFWTtcblx0Y29uc3QgZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwJyk7XG5cblx0R29vZ2xlTWFwc0xvYWRlci5sb2FkKChfZ29vZ2xlKSA9PiB7XG5cdCAgICBtYXAgPSBuZXcgZ29vZ2xlLm1hcHMuTWFwKGVsLCB7XG5cdCAgICBcdGNlbnRlcjoge2xhdDogNTEuNTI4MTExNDk5OTk5OTk0LCBsbmc6IC0wLjA4NTk5NDV9LFxuXHQgICAgXHR6b29tXG5cdCAgICB9KTtcblxuXHQgICAgX2luaXRNYXAoKTtcblx0fSk7XG5cbn1cblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2pzL2FwcC5qcyIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz91cmw9ZmFsc2UhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9nbG9iYWwuc2Nzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7fVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/dXJsPWZhbHNlIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vZ2xvYmFsLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3VybD1mYWxzZSEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL2dsb2JhbC5zY3NzXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9zY3NzL2dsb2JhbC5zY3NzXG4vLyBtb2R1bGUgaWQgPSA0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcblx0dmFyIGxpc3QgPSBbXTtcblxuXHQvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcblx0XHRyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcblx0XHRcdHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXHRcdFx0aWYoaXRlbVsyXSkge1xuXHRcdFx0XHRyZXR1cm4gXCJAbWVkaWEgXCIgKyBpdGVtWzJdICsgXCJ7XCIgKyBjb250ZW50ICsgXCJ9XCI7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXR1cm4gY29udGVudDtcblx0XHRcdH1cblx0XHR9KS5qb2luKFwiXCIpO1xuXHR9O1xuXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cdGxpc3QuaSA9IGZ1bmN0aW9uKG1vZHVsZXMsIG1lZGlhUXVlcnkpIHtcblx0XHRpZih0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIilcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcblx0XHR2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXHRcdFx0aWYodHlwZW9mIGlkID09PSBcIm51bWJlclwiKVxuXHRcdFx0XHRhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG5cdFx0fVxuXHRcdGZvcihpID0gMDsgaSA8IG1vZHVsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gbW9kdWxlc1tpXTtcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcblx0XHRcdC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG5cdFx0XHQvLyAgd2hlbiBhIG1vZHVsZSBpcyBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCBtZWRpYSBxdWVyaWVzLlxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcblx0XHRcdGlmKHR5cGVvZiBpdGVtWzBdICE9PSBcIm51bWJlclwiIHx8ICFhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG5cdFx0XHRcdGlmKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcblx0XHRcdFx0fSBlbHNlIGlmKG1lZGlhUXVlcnkpIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gXCIoXCIgKyBpdGVtWzJdICsgXCIpIGFuZCAoXCIgKyBtZWRpYVF1ZXJ5ICsgXCIpXCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0bGlzdC5wdXNoKGl0ZW0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0cmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7XG5cdHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblx0aWYgKCFjc3NNYXBwaW5nKSB7XG5cdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdH1cblxuXHRpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0dmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG5cdFx0dmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcblx0XHRcdHJldHVybiAnLyojIHNvdXJjZVVSTD0nICsgY3NzTWFwcGluZy5zb3VyY2VSb290ICsgc291cmNlICsgJyAqLydcblx0XHR9KTtcblxuXHRcdHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuXHR9XG5cblx0cmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn1cblxuLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcblx0dmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG5cdHZhciBkYXRhID0gJ3NvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LCcgKyBiYXNlNjQ7XG5cblx0cmV0dXJuICcvKiMgJyArIGRhdGEgKyAnICovJztcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXG4vLyBtb2R1bGUgaWQgPSA1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cbnZhciBzdHlsZXNJbkRvbSA9IHt9O1xuXG52YXJcdG1lbW9pemUgPSBmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW87XG5cblx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdHJldHVybiBtZW1vO1xuXHR9O1xufTtcblxudmFyIGlzT2xkSUUgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcblx0Ly8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3Ncblx0Ly8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuXHQvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG5cdC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuXHQvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcblx0cmV0dXJuIHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iO1xufSk7XG5cbnZhciBnZXRFbGVtZW50ID0gKGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbyA9IHt9O1xuXG5cdHJldHVybiBmdW5jdGlvbihzZWxlY3Rvcikge1xuXHRcdGlmICh0eXBlb2YgbWVtb1tzZWxlY3Rvcl0gPT09IFwidW5kZWZpbmVkXCIpIHtcblx0XHRcdG1lbW9bc2VsZWN0b3JdID0gZm4uY2FsbCh0aGlzLCBzZWxlY3Rvcik7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG1lbW9bc2VsZWN0b3JdXG5cdH07XG59KShmdW5jdGlvbiAodGFyZ2V0KSB7XG5cdHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldClcbn0pO1xuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhclx0c2luZ2xldG9uQ291bnRlciA9IDA7XG52YXJcdHN0eWxlc0luc2VydGVkQXRUb3AgPSBbXTtcblxudmFyXHRmaXhVcmxzID0gcmVxdWlyZShcIi4vdXJsc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihsaXN0LCBvcHRpb25zKSB7XG5cdGlmICh0eXBlb2YgREVCVUcgIT09IFwidW5kZWZpbmVkXCIgJiYgREVCVUcpIHtcblx0XHRpZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcIm9iamVjdFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3R5bGUtbG9hZGVyIGNhbm5vdCBiZSB1c2VkIGluIGEgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRcIik7XG5cdH1cblxuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRvcHRpb25zLmF0dHJzID0gdHlwZW9mIG9wdGlvbnMuYXR0cnMgPT09IFwib2JqZWN0XCIgPyBvcHRpb25zLmF0dHJzIDoge307XG5cblx0Ly8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG5cdC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2Vcblx0aWYgKCFvcHRpb25zLnNpbmdsZXRvbikgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgPGhlYWQ+IGVsZW1lbnRcblx0aWYgKCFvcHRpb25zLmluc2VydEludG8pIG9wdGlvbnMuaW5zZXJ0SW50byA9IFwiaGVhZFwiO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIGJvdHRvbSBvZiB0aGUgdGFyZ2V0XG5cdGlmICghb3B0aW9ucy5pbnNlcnRBdCkgb3B0aW9ucy5pbnNlcnRBdCA9IFwiYm90dG9tXCI7XG5cblx0dmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhsaXN0LCBvcHRpb25zKTtcblxuXHRhZGRTdHlsZXNUb0RvbShzdHlsZXMsIG9wdGlvbnMpO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGUgKG5ld0xpc3QpIHtcblx0XHR2YXIgbWF5UmVtb3ZlID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdFx0ZG9tU3R5bGUucmVmcy0tO1xuXHRcdFx0bWF5UmVtb3ZlLnB1c2goZG9tU3R5bGUpO1xuXHRcdH1cblxuXHRcdGlmKG5ld0xpc3QpIHtcblx0XHRcdHZhciBuZXdTdHlsZXMgPSBsaXN0VG9TdHlsZXMobmV3TGlzdCwgb3B0aW9ucyk7XG5cdFx0XHRhZGRTdHlsZXNUb0RvbShuZXdTdHlsZXMsIG9wdGlvbnMpO1xuXHRcdH1cblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbWF5UmVtb3ZlLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBtYXlSZW1vdmVbaV07XG5cblx0XHRcdGlmKGRvbVN0eWxlLnJlZnMgPT09IDApIHtcblx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykgZG9tU3R5bGUucGFydHNbal0oKTtcblxuXHRcdFx0XHRkZWxldGUgc3R5bGVzSW5Eb21bZG9tU3R5bGUuaWRdO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn07XG5cbmZ1bmN0aW9uIGFkZFN0eWxlc1RvRG9tIChzdHlsZXMsIG9wdGlvbnMpIHtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdGlmKGRvbVN0eWxlKSB7XG5cdFx0XHRkb21TdHlsZS5yZWZzKys7XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0c1tqXShpdGVtLnBhcnRzW2pdKTtcblx0XHRcdH1cblxuXHRcdFx0Zm9yKDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhciBwYXJ0cyA9IFtdO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRwYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblxuXHRcdFx0c3R5bGVzSW5Eb21baXRlbS5pZF0gPSB7aWQ6IGl0ZW0uaWQsIHJlZnM6IDEsIHBhcnRzOiBwYXJ0c307XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGxpc3RUb1N0eWxlcyAobGlzdCwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGVzID0gW107XG5cdHZhciBuZXdTdHlsZXMgPSB7fTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IGxpc3RbaV07XG5cdFx0dmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG5cdFx0dmFyIGNzcyA9IGl0ZW1bMV07XG5cdFx0dmFyIG1lZGlhID0gaXRlbVsyXTtcblx0XHR2YXIgc291cmNlTWFwID0gaXRlbVszXTtcblx0XHR2YXIgcGFydCA9IHtjc3M6IGNzcywgbWVkaWE6IG1lZGlhLCBzb3VyY2VNYXA6IHNvdXJjZU1hcH07XG5cblx0XHRpZighbmV3U3R5bGVzW2lkXSkgc3R5bGVzLnB1c2gobmV3U3R5bGVzW2lkXSA9IHtpZDogaWQsIHBhcnRzOiBbcGFydF19KTtcblx0XHRlbHNlIG5ld1N0eWxlc1tpZF0ucGFydHMucHVzaChwYXJ0KTtcblx0fVxuXG5cdHJldHVybiBzdHlsZXM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudCAob3B0aW9ucywgc3R5bGUpIHtcblx0dmFyIHRhcmdldCA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvKVxuXG5cdGlmICghdGFyZ2V0KSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnRJbnRvJyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG5cdH1cblxuXHR2YXIgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AgPSBzdHlsZXNJbnNlcnRlZEF0VG9wW3N0eWxlc0luc2VydGVkQXRUb3AubGVuZ3RoIC0gMV07XG5cblx0aWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwidG9wXCIpIHtcblx0XHRpZiAoIWxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCB0YXJnZXQuZmlyc3RDaGlsZCk7XG5cdFx0fSBlbHNlIGlmIChsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZykge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHRcdH1cblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnB1c2goc3R5bGUpO1xuXHR9IGVsc2UgaWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwiYm90dG9tXCIpIHtcblx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHR9IGVsc2Uge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciAnaW5zZXJ0QXQnLiBNdXN0IGJlICd0b3AnIG9yICdib3R0b20nLlwiKTtcblx0fVxufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQgKHN0eWxlKSB7XG5cdGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cdHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xuXG5cdHZhciBpZHggPSBzdHlsZXNJbnNlcnRlZEF0VG9wLmluZGV4T2Yoc3R5bGUpO1xuXHRpZihpZHggPj0gMCkge1xuXHRcdHN0eWxlc0luc2VydGVkQXRUb3Auc3BsaWNlKGlkeCwgMSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcblxuXHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cblx0YWRkQXR0cnMoc3R5bGUsIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgc3R5bGUpO1xuXG5cdHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTGlua0VsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcblxuXHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdG9wdGlvbnMuYXR0cnMucmVsID0gXCJzdHlsZXNoZWV0XCI7XG5cblx0YWRkQXR0cnMobGluaywgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBsaW5rKTtcblxuXHRyZXR1cm4gbGluaztcbn1cblxuZnVuY3Rpb24gYWRkQXR0cnMgKGVsLCBhdHRycykge1xuXHRPYmplY3Qua2V5cyhhdHRycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0ZWwuc2V0QXR0cmlidXRlKGtleSwgYXR0cnNba2V5XSk7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZSAob2JqLCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZSwgdXBkYXRlLCByZW1vdmUsIHJlc3VsdDtcblxuXHQvLyBJZiBhIHRyYW5zZm9ybSBmdW5jdGlvbiB3YXMgZGVmaW5lZCwgcnVuIGl0IG9uIHRoZSBjc3Ncblx0aWYgKG9wdGlvbnMudHJhbnNmb3JtICYmIG9iai5jc3MpIHtcblx0ICAgIHJlc3VsdCA9IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpO1xuXG5cdCAgICBpZiAocmVzdWx0KSB7XG5cdCAgICBcdC8vIElmIHRyYW5zZm9ybSByZXR1cm5zIGEgdmFsdWUsIHVzZSB0aGF0IGluc3RlYWQgb2YgdGhlIG9yaWdpbmFsIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgcnVubmluZyBydW50aW1lIHRyYW5zZm9ybWF0aW9ucyBvbiB0aGUgY3NzLlxuXHQgICAgXHRvYmouY3NzID0gcmVzdWx0O1xuXHQgICAgfSBlbHNlIHtcblx0ICAgIFx0Ly8gSWYgdGhlIHRyYW5zZm9ybSBmdW5jdGlvbiByZXR1cm5zIGEgZmFsc3kgdmFsdWUsIGRvbid0IGFkZCB0aGlzIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgY29uZGl0aW9uYWwgbG9hZGluZyBvZiBjc3Ncblx0ICAgIFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHQgICAgXHRcdC8vIG5vb3Bcblx0ICAgIFx0fTtcblx0ICAgIH1cblx0fVxuXG5cdGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuXHRcdHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuXG5cdFx0c3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSk7XG5cblx0XHR1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcblx0XHRyZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuXG5cdH0gZWxzZSBpZiAoXG5cdFx0b2JqLnNvdXJjZU1hcCAmJlxuXHRcdHR5cGVvZiBVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLnJldm9rZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIEJsb2IgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCJcblx0KSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVMaW5rRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSB1cGRhdGVMaW5rLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cblx0XHRcdGlmKHN0eWxlLmhyZWYpIFVSTC5yZXZva2VPYmplY3RVUkwoc3R5bGUuaHJlZik7XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRzdHlsZSA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cdFx0fTtcblx0fVxuXG5cdHVwZGF0ZShvYmopO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZSAobmV3T2JqKSB7XG5cdFx0aWYgKG5ld09iaikge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRuZXdPYmouY3NzID09PSBvYmouY3NzICYmXG5cdFx0XHRcdG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmXG5cdFx0XHRcdG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXBcblx0XHRcdCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHVwZGF0ZShvYmogPSBuZXdPYmopO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZW1vdmUoKTtcblx0XHR9XG5cdH07XG59XG5cbnZhciByZXBsYWNlVGV4dCA9IChmdW5jdGlvbiAoKSB7XG5cdHZhciB0ZXh0U3RvcmUgPSBbXTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluZGV4LCByZXBsYWNlbWVudCkge1xuXHRcdHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcblxuXHRcdHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuXHR9O1xufSkoKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyAoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuXHR2YXIgY3NzID0gcmVtb3ZlID8gXCJcIiA6IG9iai5jc3M7XG5cblx0aWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcblx0fSBlbHNlIHtcblx0XHR2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG5cdFx0dmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXNbaW5kZXhdKSBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG5cblx0XHRpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcblx0XHRcdHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnIChzdHlsZSwgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG5cblx0aWYobWVkaWEpIHtcblx0XHRzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBtZWRpYSlcblx0fVxuXG5cdGlmKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG5cdH0gZWxzZSB7XG5cdFx0d2hpbGUoc3R5bGUuZmlyc3RDaGlsZCkge1xuXHRcdFx0c3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG5cdFx0fVxuXG5cdFx0c3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlTGluayAobGluaywgb3B0aW9ucywgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuXHQvKlxuXHRcdElmIGNvbnZlcnRUb0Fic29sdXRlVXJscyBpc24ndCBkZWZpbmVkLCBidXQgc291cmNlbWFwcyBhcmUgZW5hYmxlZFxuXHRcdGFuZCB0aGVyZSBpcyBubyBwdWJsaWNQYXRoIGRlZmluZWQgdGhlbiBsZXRzIHR1cm4gY29udmVydFRvQWJzb2x1dGVVcmxzXG5cdFx0b24gYnkgZGVmYXVsdC4gIE90aGVyd2lzZSBkZWZhdWx0IHRvIHRoZSBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgb3B0aW9uXG5cdFx0ZGlyZWN0bHlcblx0Ki9cblx0dmFyIGF1dG9GaXhVcmxzID0gb3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgPT09IHVuZGVmaW5lZCAmJiBzb3VyY2VNYXA7XG5cblx0aWYgKG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzIHx8IGF1dG9GaXhVcmxzKSB7XG5cdFx0Y3NzID0gZml4VXJscyhjc3MpO1xuXHR9XG5cblx0aWYgKHNvdXJjZU1hcCkge1xuXHRcdC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI2NjAzODc1XG5cdFx0Y3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiO1xuXHR9XG5cblx0dmFyIGJsb2IgPSBuZXcgQmxvYihbY3NzXSwgeyB0eXBlOiBcInRleHQvY3NzXCIgfSk7XG5cblx0dmFyIG9sZFNyYyA9IGxpbmsuaHJlZjtcblxuXHRsaW5rLmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXG5cdGlmKG9sZFNyYykgVVJMLnJldm9rZU9iamVjdFVSTChvbGRTcmMpO1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcbi8vIG1vZHVsZSBpZCA9IDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiXG4vKipcbiAqIFdoZW4gc291cmNlIG1hcHMgYXJlIGVuYWJsZWQsIGBzdHlsZS1sb2FkZXJgIHVzZXMgYSBsaW5rIGVsZW1lbnQgd2l0aCBhIGRhdGEtdXJpIHRvXG4gKiBlbWJlZCB0aGUgY3NzIG9uIHRoZSBwYWdlLiBUaGlzIGJyZWFrcyBhbGwgcmVsYXRpdmUgdXJscyBiZWNhdXNlIG5vdyB0aGV5IGFyZSByZWxhdGl2ZSB0byBhXG4gKiBidW5kbGUgaW5zdGVhZCBvZiB0aGUgY3VycmVudCBwYWdlLlxuICpcbiAqIE9uZSBzb2x1dGlvbiBpcyB0byBvbmx5IHVzZSBmdWxsIHVybHMsIGJ1dCB0aGF0IG1heSBiZSBpbXBvc3NpYmxlLlxuICpcbiAqIEluc3RlYWQsIHRoaXMgZnVuY3Rpb24gXCJmaXhlc1wiIHRoZSByZWxhdGl2ZSB1cmxzIHRvIGJlIGFic29sdXRlIGFjY29yZGluZyB0byB0aGUgY3VycmVudCBwYWdlIGxvY2F0aW9uLlxuICpcbiAqIEEgcnVkaW1lbnRhcnkgdGVzdCBzdWl0ZSBpcyBsb2NhdGVkIGF0IGB0ZXN0L2ZpeFVybHMuanNgIGFuZCBjYW4gYmUgcnVuIHZpYSB0aGUgYG5wbSB0ZXN0YCBjb21tYW5kLlxuICpcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3MpIHtcbiAgLy8gZ2V0IGN1cnJlbnQgbG9jYXRpb25cbiAgdmFyIGxvY2F0aW9uID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cubG9jYXRpb247XG5cbiAgaWYgKCFsb2NhdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcImZpeFVybHMgcmVxdWlyZXMgd2luZG93LmxvY2F0aW9uXCIpO1xuICB9XG5cblx0Ly8gYmxhbmsgb3IgbnVsbD9cblx0aWYgKCFjc3MgfHwgdHlwZW9mIGNzcyAhPT0gXCJzdHJpbmdcIikge1xuXHQgIHJldHVybiBjc3M7XG4gIH1cblxuICB2YXIgYmFzZVVybCA9IGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICsgbG9jYXRpb24uaG9zdDtcbiAgdmFyIGN1cnJlbnREaXIgPSBiYXNlVXJsICsgbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLCBcIi9cIik7XG5cblx0Ly8gY29udmVydCBlYWNoIHVybCguLi4pXG5cdC8qXG5cdFRoaXMgcmVndWxhciBleHByZXNzaW9uIGlzIGp1c3QgYSB3YXkgdG8gcmVjdXJzaXZlbHkgbWF0Y2ggYnJhY2tldHMgd2l0aGluXG5cdGEgc3RyaW5nLlxuXG5cdCAvdXJsXFxzKlxcKCAgPSBNYXRjaCBvbiB0aGUgd29yZCBcInVybFwiIHdpdGggYW55IHdoaXRlc3BhY2UgYWZ0ZXIgaXQgYW5kIHRoZW4gYSBwYXJlbnNcblx0ICAgKCAgPSBTdGFydCBhIGNhcHR1cmluZyBncm91cFxuXHQgICAgICg/OiAgPSBTdGFydCBhIG5vbi1jYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAgICAgW14pKF0gID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICg/OiAgPSBTdGFydCBhbm90aGVyIG5vbi1jYXB0dXJpbmcgZ3JvdXBzXG5cdCAgICAgICAgICAgICAgICAgW14pKF0rICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgICAgICBbXikoXSogID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgXFwpICA9IE1hdGNoIGEgZW5kIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICApICA9IEVuZCBHcm91cFxuICAgICAgICAgICAgICAqXFwpID0gTWF0Y2ggYW55dGhpbmcgYW5kIHRoZW4gYSBjbG9zZSBwYXJlbnNcbiAgICAgICAgICApICA9IENsb3NlIG5vbi1jYXB0dXJpbmcgZ3JvdXBcbiAgICAgICAgICAqICA9IE1hdGNoIGFueXRoaW5nXG4gICAgICAgKSAgPSBDbG9zZSBjYXB0dXJpbmcgZ3JvdXBcblx0IFxcKSAgPSBNYXRjaCBhIGNsb3NlIHBhcmVuc1xuXG5cdCAvZ2kgID0gR2V0IGFsbCBtYXRjaGVzLCBub3QgdGhlIGZpcnN0LiAgQmUgY2FzZSBpbnNlbnNpdGl2ZS5cblx0ICovXG5cdHZhciBmaXhlZENzcyA9IGNzcy5yZXBsYWNlKC91cmxcXHMqXFwoKCg/OlteKShdfFxcKCg/OlteKShdK3xcXChbXikoXSpcXCkpKlxcKSkqKVxcKS9naSwgZnVuY3Rpb24oZnVsbE1hdGNoLCBvcmlnVXJsKSB7XG5cdFx0Ly8gc3RyaXAgcXVvdGVzIChpZiB0aGV5IGV4aXN0KVxuXHRcdHZhciB1bnF1b3RlZE9yaWdVcmwgPSBvcmlnVXJsXG5cdFx0XHQudHJpbSgpXG5cdFx0XHQucmVwbGFjZSgvXlwiKC4qKVwiJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KVxuXHRcdFx0LnJlcGxhY2UoL14nKC4qKSckLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pO1xuXG5cdFx0Ly8gYWxyZWFkeSBhIGZ1bGwgdXJsPyBubyBjaGFuZ2Vcblx0XHRpZiAoL14oI3xkYXRhOnxodHRwOlxcL1xcL3xodHRwczpcXC9cXC98ZmlsZTpcXC9cXC9cXC8pL2kudGVzdCh1bnF1b3RlZE9yaWdVcmwpKSB7XG5cdFx0ICByZXR1cm4gZnVsbE1hdGNoO1xuXHRcdH1cblxuXHRcdC8vIGNvbnZlcnQgdGhlIHVybCB0byBhIGZ1bGwgdXJsXG5cdFx0dmFyIG5ld1VybDtcblxuXHRcdGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi8vXCIpID09PSAwKSB7XG5cdFx0ICBcdC8vVE9ETzogc2hvdWxkIHdlIGFkZCBwcm90b2NvbD9cblx0XHRcdG5ld1VybCA9IHVucXVvdGVkT3JpZ1VybDtcblx0XHR9IGVsc2UgaWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiL1wiKSA9PT0gMCkge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gdGhlIGJhc2UgdXJsXG5cdFx0XHRuZXdVcmwgPSBiYXNlVXJsICsgdW5xdW90ZWRPcmlnVXJsOyAvLyBhbHJlYWR5IHN0YXJ0cyB3aXRoICcvJ1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byBjdXJyZW50IGRpcmVjdG9yeVxuXHRcdFx0bmV3VXJsID0gY3VycmVudERpciArIHVucXVvdGVkT3JpZ1VybC5yZXBsYWNlKC9eXFwuXFwvLywgXCJcIik7IC8vIFN0cmlwIGxlYWRpbmcgJy4vJ1xuXHRcdH1cblxuXHRcdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgdXJsKC4uLilcblx0XHRyZXR1cm4gXCJ1cmwoXCIgKyBKU09OLnN0cmluZ2lmeShuZXdVcmwpICsgXCIpXCI7XG5cdH0pO1xuXG5cdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgY3NzXG5cdHJldHVybiBmaXhlZENzcztcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanNcbi8vIG1vZHVsZSBpZCA9IDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLy8gZGVidWdQb2x5ZmlsbC5qc1xuXG53aW5kb3cuZ3VpID0ge1xuXHRhZGQ6KCk9PntcblxuXHR9XG59O1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9qcy9kZWJ1Zy9kZWJ1Z1BvbHlmaWxsLmpzIiwiKGZ1bmN0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblxuXHRpZiAocm9vdCA9PT0gbnVsbCkge1xuXHRcdHRocm93IG5ldyBFcnJvcignR29vZ2xlLW1hcHMgcGFja2FnZSBjYW4gYmUgdXNlZCBvbmx5IGluIGJyb3dzZXInKTtcblx0fVxuXG5cdGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcblx0XHRkZWZpbmUoZmFjdG9yeSk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdH0gZWxzZSB7XG5cdFx0cm9vdC5Hb29nbGVNYXBzTG9hZGVyID0gZmFjdG9yeSgpO1xuXHR9XG5cbn0pKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93IDogbnVsbCwgZnVuY3Rpb24oKSB7XG5cblxuXHQndXNlIHN0cmljdCc7XG5cblxuXHR2YXIgZ29vZ2xlVmVyc2lvbiA9ICczLjMxJztcblxuXHR2YXIgc2NyaXB0ID0gbnVsbDtcblxuXHR2YXIgZ29vZ2xlID0gbnVsbDtcblxuXHR2YXIgbG9hZGluZyA9IGZhbHNlO1xuXG5cdHZhciBjYWxsYmFja3MgPSBbXTtcblxuXHR2YXIgb25Mb2FkRXZlbnRzID0gW107XG5cblx0dmFyIG9yaWdpbmFsQ3JlYXRlTG9hZGVyTWV0aG9kID0gbnVsbDtcblxuXG5cdHZhciBHb29nbGVNYXBzTG9hZGVyID0ge307XG5cblxuXHRHb29nbGVNYXBzTG9hZGVyLlVSTCA9ICdodHRwczovL21hcHMuZ29vZ2xlYXBpcy5jb20vbWFwcy9hcGkvanMnO1xuXG5cdEdvb2dsZU1hcHNMb2FkZXIuS0VZID0gbnVsbDtcblxuXHRHb29nbGVNYXBzTG9hZGVyLkxJQlJBUklFUyA9IFtdO1xuXG5cdEdvb2dsZU1hcHNMb2FkZXIuQ0xJRU5UID0gbnVsbDtcblxuXHRHb29nbGVNYXBzTG9hZGVyLkNIQU5ORUwgPSBudWxsO1xuXG5cdEdvb2dsZU1hcHNMb2FkZXIuTEFOR1VBR0UgPSBudWxsO1xuXG5cdEdvb2dsZU1hcHNMb2FkZXIuUkVHSU9OID0gbnVsbDtcblxuXHRHb29nbGVNYXBzTG9hZGVyLlZFUlNJT04gPSBnb29nbGVWZXJzaW9uO1xuXG5cdEdvb2dsZU1hcHNMb2FkZXIuV0lORE9XX0NBTExCQUNLX05BTUUgPSAnX19nb29nbGVfbWFwc19hcGlfcHJvdmlkZXJfaW5pdGlhbGl6YXRvcl9fJztcblxuXG5cdEdvb2dsZU1hcHNMb2FkZXIuX2dvb2dsZU1vY2tBcGlPYmplY3QgPSB7fTtcblxuXG5cdEdvb2dsZU1hcHNMb2FkZXIubG9hZCA9IGZ1bmN0aW9uKGZuKSB7XG5cdFx0aWYgKGdvb2dsZSA9PT0gbnVsbCkge1xuXHRcdFx0aWYgKGxvYWRpbmcgPT09IHRydWUpIHtcblx0XHRcdFx0aWYgKGZuKSB7XG5cdFx0XHRcdFx0Y2FsbGJhY2tzLnB1c2goZm4pO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRsb2FkaW5nID0gdHJ1ZTtcblxuXHRcdFx0XHR3aW5kb3dbR29vZ2xlTWFwc0xvYWRlci5XSU5ET1dfQ0FMTEJBQ0tfTkFNRV0gPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZWFkeShmbik7XG5cdFx0XHRcdH07XG5cblx0XHRcdFx0R29vZ2xlTWFwc0xvYWRlci5jcmVhdGVMb2FkZXIoKTtcblx0XHRcdH1cblx0XHR9IGVsc2UgaWYgKGZuKSB7XG5cdFx0XHRmbihnb29nbGUpO1xuXHRcdH1cblx0fTtcblxuXG5cdEdvb2dsZU1hcHNMb2FkZXIuY3JlYXRlTG9hZGVyID0gZnVuY3Rpb24oKSB7XG5cdFx0c2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG5cdFx0c2NyaXB0LnR5cGUgPSAndGV4dC9qYXZhc2NyaXB0Jztcblx0XHRzY3JpcHQuc3JjID0gR29vZ2xlTWFwc0xvYWRlci5jcmVhdGVVcmwoKTtcblxuXHRcdGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcblx0fTtcblxuXG5cdEdvb2dsZU1hcHNMb2FkZXIuaXNMb2FkZWQgPSBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZ29vZ2xlICE9PSBudWxsO1xuXHR9O1xuXG5cblx0R29vZ2xlTWFwc0xvYWRlci5jcmVhdGVVcmwgPSBmdW5jdGlvbigpIHtcblx0XHR2YXIgdXJsID0gR29vZ2xlTWFwc0xvYWRlci5VUkw7XG5cblx0XHR1cmwgKz0gJz9jYWxsYmFjaz0nICsgR29vZ2xlTWFwc0xvYWRlci5XSU5ET1dfQ0FMTEJBQ0tfTkFNRTtcblxuXHRcdGlmIChHb29nbGVNYXBzTG9hZGVyLktFWSkge1xuXHRcdFx0dXJsICs9ICcma2V5PScgKyBHb29nbGVNYXBzTG9hZGVyLktFWTtcblx0XHR9XG5cblx0XHRpZiAoR29vZ2xlTWFwc0xvYWRlci5MSUJSQVJJRVMubGVuZ3RoID4gMCkge1xuXHRcdFx0dXJsICs9ICcmbGlicmFyaWVzPScgKyBHb29nbGVNYXBzTG9hZGVyLkxJQlJBUklFUy5qb2luKCcsJyk7XG5cdFx0fVxuXG5cdFx0aWYgKEdvb2dsZU1hcHNMb2FkZXIuQ0xJRU5UKSB7XG5cdFx0XHR1cmwgKz0gJyZjbGllbnQ9JyArIEdvb2dsZU1hcHNMb2FkZXIuQ0xJRU5UO1xuXHRcdH1cblxuXHRcdGlmIChHb29nbGVNYXBzTG9hZGVyLkNIQU5ORUwpIHtcblx0XHRcdHVybCArPSAnJmNoYW5uZWw9JyArIEdvb2dsZU1hcHNMb2FkZXIuQ0hBTk5FTDtcblx0XHR9XG5cblx0XHRpZiAoR29vZ2xlTWFwc0xvYWRlci5MQU5HVUFHRSkge1xuXHRcdFx0dXJsICs9ICcmbGFuZ3VhZ2U9JyArIEdvb2dsZU1hcHNMb2FkZXIuTEFOR1VBR0U7XG5cdFx0fVxuXG5cdFx0aWYgKEdvb2dsZU1hcHNMb2FkZXIuUkVHSU9OKSB7XG5cdFx0XHR1cmwgKz0gJyZyZWdpb249JyArIEdvb2dsZU1hcHNMb2FkZXIuUkVHSU9OO1xuXHRcdH1cblxuXHRcdGlmIChHb29nbGVNYXBzTG9hZGVyLlZFUlNJT04pIHtcblx0XHRcdHVybCArPSAnJnY9JyArIEdvb2dsZU1hcHNMb2FkZXIuVkVSU0lPTjtcblx0XHR9XG5cblx0XHRyZXR1cm4gdXJsO1xuXHR9O1xuXG5cblx0R29vZ2xlTWFwc0xvYWRlci5yZWxlYXNlID0gZnVuY3Rpb24oZm4pIHtcblx0XHR2YXIgcmVsZWFzZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0R29vZ2xlTWFwc0xvYWRlci5LRVkgPSBudWxsO1xuXHRcdFx0R29vZ2xlTWFwc0xvYWRlci5MSUJSQVJJRVMgPSBbXTtcblx0XHRcdEdvb2dsZU1hcHNMb2FkZXIuQ0xJRU5UID0gbnVsbDtcblx0XHRcdEdvb2dsZU1hcHNMb2FkZXIuQ0hBTk5FTCA9IG51bGw7XG5cdFx0XHRHb29nbGVNYXBzTG9hZGVyLkxBTkdVQUdFID0gbnVsbDtcblx0XHRcdEdvb2dsZU1hcHNMb2FkZXIuUkVHSU9OID0gbnVsbDtcblx0XHRcdEdvb2dsZU1hcHNMb2FkZXIuVkVSU0lPTiA9IGdvb2dsZVZlcnNpb247XG5cblx0XHRcdGdvb2dsZSA9IG51bGw7XG5cdFx0XHRsb2FkaW5nID0gZmFsc2U7XG5cdFx0XHRjYWxsYmFja3MgPSBbXTtcblx0XHRcdG9uTG9hZEV2ZW50cyA9IFtdO1xuXG5cdFx0XHRpZiAodHlwZW9mIHdpbmRvdy5nb29nbGUgIT09ICd1bmRlZmluZWQnKSB7XG5cdFx0XHRcdGRlbGV0ZSB3aW5kb3cuZ29vZ2xlO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAodHlwZW9mIHdpbmRvd1tHb29nbGVNYXBzTG9hZGVyLldJTkRPV19DQUxMQkFDS19OQU1FXSAhPT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRcdFx0ZGVsZXRlIHdpbmRvd1tHb29nbGVNYXBzTG9hZGVyLldJTkRPV19DQUxMQkFDS19OQU1FXTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKG9yaWdpbmFsQ3JlYXRlTG9hZGVyTWV0aG9kICE9PSBudWxsKSB7XG5cdFx0XHRcdEdvb2dsZU1hcHNMb2FkZXIuY3JlYXRlTG9hZGVyID0gb3JpZ2luYWxDcmVhdGVMb2FkZXJNZXRob2Q7XG5cdFx0XHRcdG9yaWdpbmFsQ3JlYXRlTG9hZGVyTWV0aG9kID0gbnVsbDtcblx0XHRcdH1cblxuXHRcdFx0aWYgKHNjcmlwdCAhPT0gbnVsbCkge1xuXHRcdFx0XHRzY3JpcHQucGFyZW50RWxlbWVudC5yZW1vdmVDaGlsZChzY3JpcHQpO1xuXHRcdFx0XHRzY3JpcHQgPSBudWxsO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoZm4pIHtcblx0XHRcdFx0Zm4oKTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0aWYgKGxvYWRpbmcpIHtcblx0XHRcdEdvb2dsZU1hcHNMb2FkZXIubG9hZChmdW5jdGlvbigpIHtcblx0XHRcdFx0cmVsZWFzZSgpO1xuXHRcdFx0fSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbGVhc2UoKTtcblx0XHR9XG5cdH07XG5cblxuXHRHb29nbGVNYXBzTG9hZGVyLm9uTG9hZCA9IGZ1bmN0aW9uKGZuKSB7XG5cdFx0b25Mb2FkRXZlbnRzLnB1c2goZm4pO1xuXHR9O1xuXG5cblx0R29vZ2xlTWFwc0xvYWRlci5tYWtlTW9jayA9IGZ1bmN0aW9uKCkge1xuXHRcdG9yaWdpbmFsQ3JlYXRlTG9hZGVyTWV0aG9kID0gR29vZ2xlTWFwc0xvYWRlci5jcmVhdGVMb2FkZXI7XG5cblx0XHRHb29nbGVNYXBzTG9hZGVyLmNyZWF0ZUxvYWRlciA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0d2luZG93Lmdvb2dsZSA9IEdvb2dsZU1hcHNMb2FkZXIuX2dvb2dsZU1vY2tBcGlPYmplY3Q7XG5cdFx0XHR3aW5kb3dbR29vZ2xlTWFwc0xvYWRlci5XSU5ET1dfQ0FMTEJBQ0tfTkFNRV0oKTtcblx0XHR9O1xuXHR9O1xuXG5cblx0dmFyIHJlYWR5ID0gZnVuY3Rpb24oZm4pIHtcblx0XHR2YXIgaTtcblxuXHRcdGxvYWRpbmcgPSBmYWxzZTtcblxuXHRcdGlmIChnb29nbGUgPT09IG51bGwpIHtcblx0XHRcdGdvb2dsZSA9IHdpbmRvdy5nb29nbGU7XG5cdFx0fVxuXG5cdFx0Zm9yIChpID0gMDsgaSA8IG9uTG9hZEV2ZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0b25Mb2FkRXZlbnRzW2ldKGdvb2dsZSk7XG5cdFx0fVxuXG5cdFx0aWYgKGZuKSB7XG5cdFx0XHRmbihnb29nbGUpO1xuXHRcdH1cblxuXHRcdGZvciAoaSA9IDA7IGkgPCBjYWxsYmFja3MubGVuZ3RoOyBpKyspIHtcblx0XHRcdGNhbGxiYWNrc1tpXShnb29nbGUpO1xuXHRcdH1cblxuXHRcdGNhbGxiYWNrcyA9IFtdO1xuXHR9O1xuXG5cblx0cmV0dXJuIEdvb2dsZU1hcHNMb2FkZXI7XG5cbn0pO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvZ29vZ2xlLW1hcHMvbGliL0dvb2dsZS5qc1xuLy8gbW9kdWxlIGlkID0gOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvLyBQYXRoVHJhY2tlci5qc1xuXG5pbXBvcnQgYWxmcmlkIGZyb20gJ2FsZnJpZCc7XG5pbXBvcnQgeyBmcm9tTGF0TG5nVG9QaXhlbCwgZGlzdGFuY2VMYXRMbmcsIGRpcmVjdGlvbkxhdExuZyB9IGZyb20gJy4vJztcblxuY2xhc3MgUGF0aFRyYWNrZXIge1xuXG5cdGNvbnN0cnVjdG9yKGNhbnZhcywgbWFwKSB7XG5cdFx0dGhpcy5fY2FudmFzID0gY2FudmFzO1xuXHRcdHRoaXMuX21hcCA9IG1hcDtcblx0XHR0aGlzLl9jdHggPSB0aGlzLl9jYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcblxuXHRcdHRoaXMuX2Nvb3JkcyA9IFtdO1xuXHRcdHRoaXMuX3BvaW50cyA9IFtdO1xuXHR9XG5cblxuXHR1cGRhdGUoKSB7XG5cdFx0dGhpcy5fcG9pbnRzID0gdGhpcy5fY29vcmRzLm1hcCggcCA9PiBmcm9tTGF0TG5nVG9QaXhlbCh0aGlzLl9tYXAsIHApICk7XG5cblx0XHR0aGlzLl9jdHguc3Ryb2tlU3R5bGUgPSAncmdiYSgyMDAsIDAsIDAsIDEpJztcblx0XHR0aGlzLl9jdHgubGluZVdpZHRoID0gMTtcblx0XHR0aGlzLl9jdHguYmVnaW5QYXRoKCk7XG5cblx0XHRsZXQgcCA7XG5cdFx0Zm9yKGxldCBpPTA7IGk8dGhpcy5fcG9pbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRwID0gdGhpcy5fcG9pbnRzW2ldO1xuXHRcdFx0aWYoaSA9PT0gMCkge1xuXHRcdFx0XHR0aGlzLl9jdHgubW92ZVRvKHAueCwgcC55KTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRoaXMuX2N0eC5saW5lVG8ocC54LCBwLnkpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHRoaXMuX2N0eC5zdHJva2UoKTtcblx0fVxuXG5cdGNsZWFyKCkge1xuXHRcdHRoaXMuX2Nvb3JkcyA9IFtdO1xuXHR9XG5cblx0YWRkKG1Qb2ludCkge1xuXHRcdHRoaXMuX2Nvb3Jkcy5wdXNoKG1Qb2ludCk7XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUGF0aFRyYWNrZXI7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2pzL3V0aWxzL1BhdGhUcmFja2VyLmpzIiwiLy8gc2F2ZUltYWdlLmpzXG5cbmNvbnN0IEZJTEVfRVhURU5USU9OID0gJ2pwZyc7XG5jb25zdCBNSU1FX1RZUEUgPSBcImltYWdlL2pwZWdcIjtcblxuXG5jb25zdCBkYXRhVVJMdG9CbG9iID0gKGRhdGF1cmwpID0+IHtcbiAgICB2YXIgYXJyID0gZGF0YXVybC5zcGxpdCgnLCcpLCBtaW1lID0gYXJyWzBdLm1hdGNoKC86KC4qPyk7LylbMV0sXG4gICAgICAgIGJzdHIgPSBhdG9iKGFyclsxXSksIG4gPSBic3RyLmxlbmd0aCwgdThhcnIgPSBuZXcgVWludDhBcnJheShuKTtcbiAgICB3aGlsZShuLS0pe1xuICAgICAgICB1OGFycltuXSA9IGJzdHIuY2hhckNvZGVBdChuKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBCbG9iKFt1OGFycl0sIHt0eXBlOm1pbWV9KTtcbn1cblxuY29uc3Qgc2F2ZUltYWdlID0gKGNhbnZhcywgZmlsZW5hbWUpID0+IHtcblxuXHR2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xuXHR2YXIgaW1nRGF0YSA9IGNhbnZhcy50b0RhdGFVUkwoeyAgICBcblx0XHRmb3JtYXQ6ICdwbmcnLFxuXHRcdG11bHRpcGxpZXI6IDR9KTtcblx0Ly8gdmFyIHN0ckRhdGFVUkkgPSBpbWdEYXRhLnN1YnN0cigyMiwgaW1nRGF0YS5sZW5ndGgpO1xuXHR2YXIgYmxvYiA9IGRhdGFVUkx0b0Jsb2IoaW1nRGF0YSk7XG5cdHZhciBvYmp1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXG5cdGxpbmsuZG93bmxvYWQgPSBgJHtmaWxlbmFtZX0ucG5nYDtcblxuXHRsaW5rLmhyZWYgPSBvYmp1cmw7XG5cblx0bGluay5jbGljaygpO1xufTtcblxuXG5leHBvcnQgeyBzYXZlSW1hZ2UgfTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvanMvdXRpbHMvc2F2ZUltYWdlLmpzIiwiLy8gZnJvbUxhdExuZ1RvUGl4ZWwuanNcblxuY29uc3QgZnJvbUxhdExuZ1RvUGl4ZWwgPSAobWFwLCBwb3NpdGlvbikgPT4ge1xuXHR2YXIgc2NhbGUgPSBNYXRoLnBvdygyLCBtYXAuZ2V0Wm9vbSgpKTtcblx0dmFyIHByb2ogPSBtYXAuZ2V0UHJvamVjdGlvbigpO1xuXHR2YXIgYm91bmRzID0gbWFwLmdldEJvdW5kcygpO1xuXG5cdHZhciBudyA9IHByb2ouZnJvbUxhdExuZ1RvUG9pbnQoXG5cdFx0bmV3IGdvb2dsZS5tYXBzLkxhdExuZyhcblx0XHRcdGJvdW5kcy5nZXROb3J0aEVhc3QoKS5sYXQoKSxcblx0XHRcdGJvdW5kcy5nZXRTb3V0aFdlc3QoKS5sbmcoKVxuXHRcdCkpO1xuXHR2YXIgcG9pbnQgPSBwcm9qLmZyb21MYXRMbmdUb1BvaW50KHBvc2l0aW9uKTtcblxuXHRyZXR1cm4gbmV3IGdvb2dsZS5tYXBzLlBvaW50KFxuXHRcdE1hdGguZmxvb3IoKHBvaW50LnggLSBudy54KSAqIHNjYWxlKSxcblx0XHRNYXRoLmZsb29yKChwb2ludC55IC0gbncueSkgKiBzY2FsZSkpO1xuXG5cdC8vIHJldHVybiBwb2ludDtcbn07XG5cblxuZXhwb3J0IHsgZnJvbUxhdExuZ1RvUGl4ZWwgfTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvanMvdXRpbHMvZnJvbUxhdExuZ1RvUGl4ZWwuanMiLCIvLyBkaXN0YW5jZUxhdExuZy5qc1xuXG5cbmNvbnN0IHRvUmFkaWFucyA9IHYgPT4gdiAqIE1hdGguUEkgLyAxODA7XG5cbmNvbnN0IGRpc3RhbmNlTGF0TG5nID0gKHBhLCBwYikgPT4ge1xuXHRsZXQgUiA9IDYzNzFlMzsgLy8gbWV0cmVzXG5cdGxldCDPhjEgPSB0b1JhZGlhbnMocGEubGF0KTtcblx0bGV0IM+GMiA9IHRvUmFkaWFucyhwYi5sYXQpO1xuXHRsZXQgzpTPhiA9IHRvUmFkaWFucyhwYi5sYXQgLSBwYS5sYXQpO1xuXHRsZXQgzpTOuyA9IHRvUmFkaWFucyhwYi5sbmcgLSBwYS5sbmcpO1xuXG5cdGxldCBhID0gTWF0aC5zaW4ozpTPhi8yKSAqIE1hdGguc2luKM6Uz4YvMikgK1xuXHQgICAgICAgIE1hdGguY29zKM+GMSkgKiBNYXRoLmNvcyjPhjIpICpcblx0ICAgICAgICBNYXRoLnNpbijOlM67LzIpICogTWF0aC5zaW4ozpTOuy8yKTtcblx0bGV0IGMgPSAyICogTWF0aC5hdGFuMihNYXRoLnNxcnQoYSksIE1hdGguc3FydCgxLWEpKTtcblxuXHRsZXQgZCA9IFIgKiBjO1xuXG5cdHJldHVybiBkO1xufVxuXG5leHBvcnQgeyBkaXN0YW5jZUxhdExuZyB9O1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9qcy91dGlscy9kaXN0YW5jZUxhdExuZy5qcyIsIi8vIGRpcmVjdGlvbkxhdExuZy5qc1xuXG5jb25zdCBkaXJlY3Rpb25MYXRMbmcgPSAoYSwgYikgPT4ge1xuXHRsZXQgZHggPSBiLmxuZyAtIGEubG5nO1xuXHRsZXQgZHkgPSBiLmxhdCAtIGEubGF0O1xuXG5cdGxldCB0aGV0YSA9IE1hdGguYXRhbjIoZHksIC1keCk7XG5cblx0cmV0dXJuIHRoZXRhO1xufVxuXG5leHBvcnQgeyBkaXJlY3Rpb25MYXRMbmcgfTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvanMvdXRpbHMvZGlyZWN0aW9uTGF0TG5nLmpzIiwiLy8gZGlyZWN0aW9uTWFwUG9pbnQuanNcblxuY29uc3QgZGlyZWN0aW9uTWFwUG9pbnQgPSAoYSwgYikgPT4ge1xuXHRsZXQgZHggPSBiLnggLSBhLng7XG5cdGxldCBkeSA9IGIueSAtIGEueTtcblxuXHRsZXQgdGhldGEgPSBNYXRoLmF0YW4yKGR5LCBkeCk7XG5cblx0cmV0dXJuIHRoZXRhO1xufVxuXG5leHBvcnQgeyBkaXJlY3Rpb25NYXBQb2ludCB9O1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9qcy91dGlscy9kaXJlY3Rpb25NYXBQb2ludC5qcyIsIi8vIEhlYWRpbmdDYWxpYnJlLmpzXG5pbXBvcnQgeyBmcm9tTGF0TG5nVG9QaXhlbCwgZGlzdGFuY2VMYXRMbmcsIGRpcmVjdGlvbkxhdExuZyB9IGZyb20gJy4vJztcblxuY2xhc3MgSGVhZGluZ0NhbGlicmUge1xuXG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdHRoaXMuX2hlYWRpbmcgPSAwO1xuXHRcdHRoaXMuX29mZnNldCA9IDA7XG5cdFx0dGhpcy5faXNDYWxpYnJhdGluZyA9IGZhbHNlO1xuXHRcdHRoaXMuX2xvY1N0YXJ0O1xuXHRcdHRoaXMuX2xvY0VuZDtcblx0fVxuXG5cdHN0YXJ0KGxvYykge1xuXHRcdHRoaXMuX2hlYWRpbmdzID0gW107XG5cdFx0dGhpcy5fbG9jU3RhcnQgPSBsb2M7XG5cdFx0dGhpcy5faXNDYWxpYnJhdGluZyA9IHRydWU7XG5cdH1cblxuXHR1cGRhdGUoaGVhZGluZykge1xuXHRcdGlmKCF0aGlzLl9pc0NhbGlicmF0aW5nKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0dGhpcy5faGVhZGluZyA9IGhlYWRpbmc7XG5cdFx0dGhpcy5faGVhZGluZ3MucHVzaCh0aGlzLl9oZWFkaW5nKTtcblx0fVxuXG5cdHN0b3AobG9jKSB7XG5cdFx0Y29uc3QgcmFkID0gMTgwIC8gTWF0aC5QSTtcblx0XHR0aGlzLl9pc0NhbGlicmF0aW5nID0gZmFsc2U7XG5cdFx0dGhpcy5fbG9jRW5kID0gbG9jO1xuXHRcdGxldCBzdW1IZWFkaW5nID0gMDtcblxuXHRcdGZvcihsZXQgaT0wOyBpPHRoaXMuX2hlYWRpbmdzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRzdW1IZWFkaW5nICs9IHRoaXMuX2hlYWRpbmdzW2ldO1xuXHRcdH1cblxuXHRcdHN1bUhlYWRpbmcgLz0gdGhpcy5faGVhZGluZ3MubGVuZ3RoO1xuXG5cdFx0bGV0IGhlYWRpbmdHZW8gPSBkaXJlY3Rpb25MYXRMbmcodGhpcy5fbG9jRW5kLCB0aGlzLl9sb2NTdGFydCkgKyBNYXRoLlBJLzI7XHRcblx0XHRpZihoZWFkaW5nR2VvID4gTWF0aC5QSSAqIDIpIHtcblx0XHRcdGhlYWRpbmdHZW8gLT0gTWF0aC5QSSAqIDI7XG5cdFx0fVxuXHRcdFxuXHRcdHRoaXMuX29mZnNldCA9IChoZWFkaW5nR2VvIC0gc3VtSGVhZGluZyk7XG5cblx0fVxuXG5cblx0Z2V0IG9mZnNldCgpIHsgcmV0dXJuIHRoaXMuX29mZnNldDsgfVxufVxuXG5jb25zdCBfaW5zdGFuY2UgPSBuZXcgSGVhZGluZ0NhbGlicmUoKTtcblxuZXhwb3J0IGRlZmF1bHQgX2luc3RhbmNlO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9qcy91dGlscy9IZWFkaW5nQ2FsaWJyZS5qcyIsIi8vIEhlYWRpbmdDYWxpYnJhdGUuanNcblxuaW1wb3J0IHsgZnJvbUxhdExuZ1RvUGl4ZWwsIGRpc3RhbmNlTGF0TG5nLCBkaXJlY3Rpb25MYXRMbmcgfSBmcm9tICcuLyc7XG5pbXBvcnQgZ2V0R2VvbG9jYXRpb24gZnJvbSAnLi9nZXRHZW9sb2NhdGlvbic7XG5pbXBvcnQgeyBHTCB9IGZyb20gJ2FsZnJpZCc7XG5pbXBvcnQgRXZlbnRFbWl0dGVyIGZyb20gJ2V2ZW50cyc7XG5cbmNsYXNzIEhlYWRpbmdDYWxpYnJhdGUgZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xuXG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdHN1cGVyKCk7XG5cblx0XHR0aGlzLl9oZWFkaW5nID0gR0wuaXNNb2JpbGUgPyAwIDogTWF0aC5yYW5kb20oKSAqIE1hdGguUEkgKiAyO1xuXHRcdHRoaXMuX2hlYWRpbmdTdGFydCA9IDA7XG5cdFx0dGhpcy5fc3RhdGUgPSAwO1xuXHRcdHRoaXMuX29mZnNldCA9IDA7XG5cblx0XHQvL1x0c3RhdGVzIFxuXHRcdC8vXHQwIC0+IG5vdCBzdGFydGVkIFxuXHRcdC8vXHQxIC0+IGNhbGlicmF0aW5nXG5cdFx0Ly9cdDIgLT4gZG9uZVxuXHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdkZXZpY2VvcmllbnRhdGlvbicsIChlKSA9PiB0aGlzLl9vbkRldmljZU9yaWVudGF0aW9uKGUpKTtcblx0fVxuXG5cdHN0YXJ0KCkge1xuXHRcdFxuXHRcdHRoaXMuX2hlYWRpbmdTdGFydCA9IHRoaXMuX2hlYWRpbmc7XG5cblx0XHRyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXG5cdFx0XHRnZXRHZW9sb2NhdGlvbigpXG5cdFx0XHQudGhlbigob0Nvb3JkKT0+IHtcblx0XHRcdFx0dGhpcy5fc3RhdGUgPSAxO1xuXHRcdFx0XHR0aGlzLl9sb2NTdGFydCA9IHtcblx0XHRcdFx0XHRsYXQ6b0Nvb3JkLmxhdGl0dWRlLFxuXHRcdFx0XHRcdGxuZzpvQ29vcmQubG9uZ2l0dWRlLFxuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbnNvbGUubG9nKCdsb2NhdGlvbiBzdGFydCA6JywgdGhpcy5fbG9jU3RhcnQpO1xuXG5cdFx0XHRcdHRoaXMuZW1pdCgnb25TdGFydCcsIHRoaXMuX2xvY1N0YXJ0KTtcblx0XHRcdH0pXG5cdFx0XHQudGhlbigoKT0+dGhpcy5fY2FwdHVyZSgpKVxuXHRcdFx0LnRoZW4oKGhlYWRpbmcpPT4ge1xuXHRcdFx0XHR0aGlzLl9hdmdIZWFkaW5nID0gaGVhZGluZztcblx0XHRcdFx0Y29uc29sZS5sb2coJ2F2ZXJhZ2UgaGVhZGluZyA6JywgdGhpcy5fYXZnSGVhZGluZyk7XG5cdFx0XHR9KVxuXHRcdFx0LnRoZW4oIGdldEdlb2xvY2F0aW9uIClcblx0XHRcdC50aGVuKChvQ29vcmQpPT4ge1xuXHRcdFx0XHR0aGlzLl9sb2NFbmQgPSB7XG5cdFx0XHRcdFx0bGF0Om9Db29yZC5sYXRpdHVkZSxcblx0XHRcdFx0XHRsbmc6b0Nvb3JkLmxvbmdpdHVkZSxcblx0XHRcdFx0fVxuXHRcdFx0XHRpZighR0wuaXNNb2JpbGUpIHtcblx0XHRcdFx0XHR0aGlzLl9sb2NFbmQubG5nICs9IDAuMDAxO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dGhpcy5lbWl0KCdvblN0YXJ0JywgdGhpcy5fbG9jRW5kKTtcblx0XHRcdFx0Y29uc29sZS5sb2coJ2xvY2F0aW9uIGVuZCA6JywgdGhpcy5fbG9jRW5kKTtcblxuXHRcdFx0XHRsZXQgaGVhZGluZ0dlbyA9IGRpcmVjdGlvbkxhdExuZyh0aGlzLl9sb2NFbmQsIHRoaXMuX2xvY1N0YXJ0KSArIE1hdGguUEkvMjtcdFxuXHRcdFx0XHRpZihoZWFkaW5nR2VvID4gTWF0aC5QSSAqIDIpIHtcblx0XHRcdFx0XHRoZWFkaW5nR2VvIC09IE1hdGguUEkgKiAyO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dGhpcy5fb2Zmc2V0ID0gKGhlYWRpbmdHZW8gLSB0aGlzLl9hdmdIZWFkaW5nKTtcblxuXHRcdFx0XHR0aGlzLl9zdGF0ZSA9IDI7XG5cdFx0XHRcdHJlc29sdmUodGhpcy5fb2Zmc2V0KTtcblx0XHRcdH0pXG5cdFx0XHQuY2F0Y2goZSA9PiB7XG5cdFx0XHRcdHRoaXMuX3N0YXRlID0gMDtcblx0XHRcdFx0cmVqZWN0KGUpO1xuXHRcdFx0fSk7XG5cdFx0fSk7XG5cdH1cblxuXG5cdF9jYXB0dXJlKCkge1xuXHRcdGxldCBjb3VudCA9IDA7XG5cdFx0bGV0IGhlYWRpbmcgPSAwO1xuXG5cdFx0cmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcblxuXHRcdFx0Y29uc3QgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKT0+IHtcblx0XHRcdFx0aGVhZGluZyArPSB0aGlzLl9oZWFkaW5nO1xuXHRcdFx0XHRjb3VudCArKztcblxuXHRcdFx0XHR0aGlzLmVtaXQoJ29uUHJvZ3Jlc3MnLCBjb3VudCAvIDEwKTtcblxuXHRcdFx0XHRpZihjb3VudCA+PSAxMCkge1xuXHRcdFx0XHRcdGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpO1xuXHRcdFx0XHRcdHJlc29sdmUoaGVhZGluZy8xMCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRcblx0XHRcdH0sIDEwMDApO1xuXHRcdH0pO1xuXHR9XG5cblxuXHRfb25EZXZpY2VPcmllbnRhdGlvbihlKSB7XG5cdFx0dGhpcy5faGVhZGluZyA9IC1ldmVudC5hbHBoYSAqIE1hdGguUEkgLyAxODA7XG5cdH1cblxuXG5cdGdldCBvZmZzZXQoKSB7IHJldHVybiB0aGlzLl9vZmZzZXQ7IH1cblxuXHRnZXQgc3RhdGUoKSB7IHJldHVybiB0aGlzLl9zdGF0ZTsgfVxuXG5cdGdldCBoZWFkaW5nKCkgeyByZXR1cm4gdGhpcy5faGVhZGluZzsgfVxuXG5cdGdldCBzdGF0ZVN0cmluZygpIHtcblx0XHRsZXQgcyA9ICcnO1xuXG5cdFx0aWYodGhpcy5fc3RhdGUgPT09IDApIHtcblx0XHRcdHMgPSAnTkVFRCBDQUxJQlJBVElORyc7XG5cdFx0fSBlbHNlIGlmKHRoaXMuX3N0YXRlID09PSAxKSB7XG5cdFx0XHRzID0gJ0NBTElCUkFUSU5HIC4uLic7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHMgPSAnQ0FMSUJSQVRJTkcgRklOSVNIRUQnO1xuXHRcdH1cblxuXHRcdHJldHVybiBzO1xuXHR9XG59XG5cbmxldCBfaW5zdGFuY2UgPSBuZXcgSGVhZGluZ0NhbGlicmF0ZSgpO1xuXG5leHBvcnQgZGVmYXVsdCBfaW5zdGFuY2U7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2pzL3V0aWxzL0hlYWRpbmdDYWxpYnJhdGUuanMiLCJcbmNvbnN0IGdldEdlb2xvY2F0aW9uID0gKCkgPT4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXHRpZiAobmF2aWdhdG9yLmdlb2xvY2F0aW9uKSB7XG5cdCAgXHRuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKCAobyk9PiB7XG5cdCAgXHRcdHJlc29sdmUoby5jb29yZHMpO1xuXHQgIFx0fSApO1xuXHR9IGVsc2Uge1xuXHRcdHJlamVjdCgnZ2V0bG9jYXRpb24gbm90IHN1cHBvcnRlZCcpXG5cdH1cbn0pO1xuXG5cbmV4cG9ydCBkZWZhdWx0IGdldEdlb2xvY2F0aW9uO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9qcy91dGlscy9nZXRHZW9sb2NhdGlvbi5qcyIsIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG5mdW5jdGlvbiBFdmVudEVtaXR0ZXIoKSB7XG4gIHRoaXMuX2V2ZW50cyA9IHRoaXMuX2V2ZW50cyB8fCB7fTtcbiAgdGhpcy5fbWF4TGlzdGVuZXJzID0gdGhpcy5fbWF4TGlzdGVuZXJzIHx8IHVuZGVmaW5lZDtcbn1cbm1vZHVsZS5leHBvcnRzID0gRXZlbnRFbWl0dGVyO1xuXG4vLyBCYWNrd2FyZHMtY29tcGF0IHdpdGggbm9kZSAwLjEwLnhcbkV2ZW50RW1pdHRlci5FdmVudEVtaXR0ZXIgPSBFdmVudEVtaXR0ZXI7XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuX2V2ZW50cyA9IHVuZGVmaW5lZDtcbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuX21heExpc3RlbmVycyA9IHVuZGVmaW5lZDtcblxuLy8gQnkgZGVmYXVsdCBFdmVudEVtaXR0ZXJzIHdpbGwgcHJpbnQgYSB3YXJuaW5nIGlmIG1vcmUgdGhhbiAxMCBsaXN0ZW5lcnMgYXJlXG4vLyBhZGRlZCB0byBpdC4gVGhpcyBpcyBhIHVzZWZ1bCBkZWZhdWx0IHdoaWNoIGhlbHBzIGZpbmRpbmcgbWVtb3J5IGxlYWtzLlxuRXZlbnRFbWl0dGVyLmRlZmF1bHRNYXhMaXN0ZW5lcnMgPSAxMDtcblxuLy8gT2J2aW91c2x5IG5vdCBhbGwgRW1pdHRlcnMgc2hvdWxkIGJlIGxpbWl0ZWQgdG8gMTAuIFRoaXMgZnVuY3Rpb24gYWxsb3dzXG4vLyB0aGF0IHRvIGJlIGluY3JlYXNlZC4gU2V0IHRvIHplcm8gZm9yIHVubGltaXRlZC5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuc2V0TWF4TGlzdGVuZXJzID0gZnVuY3Rpb24obikge1xuICBpZiAoIWlzTnVtYmVyKG4pIHx8IG4gPCAwIHx8IGlzTmFOKG4pKVxuICAgIHRocm93IFR5cGVFcnJvcignbiBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyJyk7XG4gIHRoaXMuX21heExpc3RlbmVycyA9IG47XG4gIHJldHVybiB0aGlzO1xufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5lbWl0ID0gZnVuY3Rpb24odHlwZSkge1xuICB2YXIgZXIsIGhhbmRsZXIsIGxlbiwgYXJncywgaSwgbGlzdGVuZXJzO1xuXG4gIGlmICghdGhpcy5fZXZlbnRzKVxuICAgIHRoaXMuX2V2ZW50cyA9IHt9O1xuXG4gIC8vIElmIHRoZXJlIGlzIG5vICdlcnJvcicgZXZlbnQgbGlzdGVuZXIgdGhlbiB0aHJvdy5cbiAgaWYgKHR5cGUgPT09ICdlcnJvcicpIHtcbiAgICBpZiAoIXRoaXMuX2V2ZW50cy5lcnJvciB8fFxuICAgICAgICAoaXNPYmplY3QodGhpcy5fZXZlbnRzLmVycm9yKSAmJiAhdGhpcy5fZXZlbnRzLmVycm9yLmxlbmd0aCkpIHtcbiAgICAgIGVyID0gYXJndW1lbnRzWzFdO1xuICAgICAgaWYgKGVyIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgdGhyb3cgZXI7IC8vIFVuaGFuZGxlZCAnZXJyb3InIGV2ZW50XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBBdCBsZWFzdCBnaXZlIHNvbWUga2luZCBvZiBjb250ZXh0IHRvIHRoZSB1c2VyXG4gICAgICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoJ1VuY2F1Z2h0LCB1bnNwZWNpZmllZCBcImVycm9yXCIgZXZlbnQuICgnICsgZXIgKyAnKScpO1xuICAgICAgICBlcnIuY29udGV4dCA9IGVyO1xuICAgICAgICB0aHJvdyBlcnI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaGFuZGxlciA9IHRoaXMuX2V2ZW50c1t0eXBlXTtcblxuICBpZiAoaXNVbmRlZmluZWQoaGFuZGxlcikpXG4gICAgcmV0dXJuIGZhbHNlO1xuXG4gIGlmIChpc0Z1bmN0aW9uKGhhbmRsZXIpKSB7XG4gICAgc3dpdGNoIChhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAvLyBmYXN0IGNhc2VzXG4gICAgICBjYXNlIDE6XG4gICAgICAgIGhhbmRsZXIuY2FsbCh0aGlzKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDI6XG4gICAgICAgIGhhbmRsZXIuY2FsbCh0aGlzLCBhcmd1bWVudHNbMV0pO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgMzpcbiAgICAgICAgaGFuZGxlci5jYWxsKHRoaXMsIGFyZ3VtZW50c1sxXSwgYXJndW1lbnRzWzJdKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICAvLyBzbG93ZXJcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xuICAgICAgICBoYW5kbGVyLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChpc09iamVjdChoYW5kbGVyKSkge1xuICAgIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xuICAgIGxpc3RlbmVycyA9IGhhbmRsZXIuc2xpY2UoKTtcbiAgICBsZW4gPSBsaXN0ZW5lcnMubGVuZ3RoO1xuICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkrKylcbiAgICAgIGxpc3RlbmVyc1tpXS5hcHBseSh0aGlzLCBhcmdzKTtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lciA9IGZ1bmN0aW9uKHR5cGUsIGxpc3RlbmVyKSB7XG4gIHZhciBtO1xuXG4gIGlmICghaXNGdW5jdGlvbihsaXN0ZW5lcikpXG4gICAgdGhyb3cgVHlwZUVycm9yKCdsaXN0ZW5lciBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcblxuICBpZiAoIXRoaXMuX2V2ZW50cylcbiAgICB0aGlzLl9ldmVudHMgPSB7fTtcblxuICAvLyBUbyBhdm9pZCByZWN1cnNpb24gaW4gdGhlIGNhc2UgdGhhdCB0eXBlID09PSBcIm5ld0xpc3RlbmVyXCIhIEJlZm9yZVxuICAvLyBhZGRpbmcgaXQgdG8gdGhlIGxpc3RlbmVycywgZmlyc3QgZW1pdCBcIm5ld0xpc3RlbmVyXCIuXG4gIGlmICh0aGlzLl9ldmVudHMubmV3TGlzdGVuZXIpXG4gICAgdGhpcy5lbWl0KCduZXdMaXN0ZW5lcicsIHR5cGUsXG4gICAgICAgICAgICAgIGlzRnVuY3Rpb24obGlzdGVuZXIubGlzdGVuZXIpID9cbiAgICAgICAgICAgICAgbGlzdGVuZXIubGlzdGVuZXIgOiBsaXN0ZW5lcik7XG5cbiAgaWYgKCF0aGlzLl9ldmVudHNbdHlwZV0pXG4gICAgLy8gT3B0aW1pemUgdGhlIGNhc2Ugb2Ygb25lIGxpc3RlbmVyLiBEb24ndCBuZWVkIHRoZSBleHRyYSBhcnJheSBvYmplY3QuXG4gICAgdGhpcy5fZXZlbnRzW3R5cGVdID0gbGlzdGVuZXI7XG4gIGVsc2UgaWYgKGlzT2JqZWN0KHRoaXMuX2V2ZW50c1t0eXBlXSkpXG4gICAgLy8gSWYgd2UndmUgYWxyZWFkeSBnb3QgYW4gYXJyYXksIGp1c3QgYXBwZW5kLlxuICAgIHRoaXMuX2V2ZW50c1t0eXBlXS5wdXNoKGxpc3RlbmVyKTtcbiAgZWxzZVxuICAgIC8vIEFkZGluZyB0aGUgc2Vjb25kIGVsZW1lbnQsIG5lZWQgdG8gY2hhbmdlIHRvIGFycmF5LlxuICAgIHRoaXMuX2V2ZW50c1t0eXBlXSA9IFt0aGlzLl9ldmVudHNbdHlwZV0sIGxpc3RlbmVyXTtcblxuICAvLyBDaGVjayBmb3IgbGlzdGVuZXIgbGVha1xuICBpZiAoaXNPYmplY3QodGhpcy5fZXZlbnRzW3R5cGVdKSAmJiAhdGhpcy5fZXZlbnRzW3R5cGVdLndhcm5lZCkge1xuICAgIGlmICghaXNVbmRlZmluZWQodGhpcy5fbWF4TGlzdGVuZXJzKSkge1xuICAgICAgbSA9IHRoaXMuX21heExpc3RlbmVycztcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IEV2ZW50RW1pdHRlci5kZWZhdWx0TWF4TGlzdGVuZXJzO1xuICAgIH1cblxuICAgIGlmIChtICYmIG0gPiAwICYmIHRoaXMuX2V2ZW50c1t0eXBlXS5sZW5ndGggPiBtKSB7XG4gICAgICB0aGlzLl9ldmVudHNbdHlwZV0ud2FybmVkID0gdHJ1ZTtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJyhub2RlKSB3YXJuaW5nOiBwb3NzaWJsZSBFdmVudEVtaXR0ZXIgbWVtb3J5ICcgK1xuICAgICAgICAgICAgICAgICAgICAnbGVhayBkZXRlY3RlZC4gJWQgbGlzdGVuZXJzIGFkZGVkLiAnICtcbiAgICAgICAgICAgICAgICAgICAgJ1VzZSBlbWl0dGVyLnNldE1heExpc3RlbmVycygpIHRvIGluY3JlYXNlIGxpbWl0LicsXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2V2ZW50c1t0eXBlXS5sZW5ndGgpO1xuICAgICAgaWYgKHR5cGVvZiBjb25zb2xlLnRyYWNlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIC8vIG5vdCBzdXBwb3J0ZWQgaW4gSUUgMTBcbiAgICAgICAgY29uc29sZS50cmFjZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vbiA9IEV2ZW50RW1pdHRlci5wcm90b3R5cGUuYWRkTGlzdGVuZXI7XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUub25jZSA9IGZ1bmN0aW9uKHR5cGUsIGxpc3RlbmVyKSB7XG4gIGlmICghaXNGdW5jdGlvbihsaXN0ZW5lcikpXG4gICAgdGhyb3cgVHlwZUVycm9yKCdsaXN0ZW5lciBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcblxuICB2YXIgZmlyZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBnKCkge1xuICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIodHlwZSwgZyk7XG5cbiAgICBpZiAoIWZpcmVkKSB7XG4gICAgICBmaXJlZCA9IHRydWU7XG4gICAgICBsaXN0ZW5lci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfVxuXG4gIGcubGlzdGVuZXIgPSBsaXN0ZW5lcjtcbiAgdGhpcy5vbih0eXBlLCBnKTtcblxuICByZXR1cm4gdGhpcztcbn07XG5cbi8vIGVtaXRzIGEgJ3JlbW92ZUxpc3RlbmVyJyBldmVudCBpZmYgdGhlIGxpc3RlbmVyIHdhcyByZW1vdmVkXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyID0gZnVuY3Rpb24odHlwZSwgbGlzdGVuZXIpIHtcbiAgdmFyIGxpc3QsIHBvc2l0aW9uLCBsZW5ndGgsIGk7XG5cbiAgaWYgKCFpc0Z1bmN0aW9uKGxpc3RlbmVyKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ2xpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvbicpO1xuXG4gIGlmICghdGhpcy5fZXZlbnRzIHx8ICF0aGlzLl9ldmVudHNbdHlwZV0pXG4gICAgcmV0dXJuIHRoaXM7XG5cbiAgbGlzdCA9IHRoaXMuX2V2ZW50c1t0eXBlXTtcbiAgbGVuZ3RoID0gbGlzdC5sZW5ndGg7XG4gIHBvc2l0aW9uID0gLTE7XG5cbiAgaWYgKGxpc3QgPT09IGxpc3RlbmVyIHx8XG4gICAgICAoaXNGdW5jdGlvbihsaXN0Lmxpc3RlbmVyKSAmJiBsaXN0Lmxpc3RlbmVyID09PSBsaXN0ZW5lcikpIHtcbiAgICBkZWxldGUgdGhpcy5fZXZlbnRzW3R5cGVdO1xuICAgIGlmICh0aGlzLl9ldmVudHMucmVtb3ZlTGlzdGVuZXIpXG4gICAgICB0aGlzLmVtaXQoJ3JlbW92ZUxpc3RlbmVyJywgdHlwZSwgbGlzdGVuZXIpO1xuXG4gIH0gZWxzZSBpZiAoaXNPYmplY3QobGlzdCkpIHtcbiAgICBmb3IgKGkgPSBsZW5ndGg7IGktLSA+IDA7KSB7XG4gICAgICBpZiAobGlzdFtpXSA9PT0gbGlzdGVuZXIgfHxcbiAgICAgICAgICAobGlzdFtpXS5saXN0ZW5lciAmJiBsaXN0W2ldLmxpc3RlbmVyID09PSBsaXN0ZW5lcikpIHtcbiAgICAgICAgcG9zaXRpb24gPSBpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAocG9zaXRpb24gPCAwKVxuICAgICAgcmV0dXJuIHRoaXM7XG5cbiAgICBpZiAobGlzdC5sZW5ndGggPT09IDEpIHtcbiAgICAgIGxpc3QubGVuZ3RoID0gMDtcbiAgICAgIGRlbGV0ZSB0aGlzLl9ldmVudHNbdHlwZV07XG4gICAgfSBlbHNlIHtcbiAgICAgIGxpc3Quc3BsaWNlKHBvc2l0aW9uLCAxKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fZXZlbnRzLnJlbW92ZUxpc3RlbmVyKVxuICAgICAgdGhpcy5lbWl0KCdyZW1vdmVMaXN0ZW5lcicsIHR5cGUsIGxpc3RlbmVyKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBmdW5jdGlvbih0eXBlKSB7XG4gIHZhciBrZXksIGxpc3RlbmVycztcblxuICBpZiAoIXRoaXMuX2V2ZW50cylcbiAgICByZXR1cm4gdGhpcztcblxuICAvLyBub3QgbGlzdGVuaW5nIGZvciByZW1vdmVMaXN0ZW5lciwgbm8gbmVlZCB0byBlbWl0XG4gIGlmICghdGhpcy5fZXZlbnRzLnJlbW92ZUxpc3RlbmVyKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApXG4gICAgICB0aGlzLl9ldmVudHMgPSB7fTtcbiAgICBlbHNlIGlmICh0aGlzLl9ldmVudHNbdHlwZV0pXG4gICAgICBkZWxldGUgdGhpcy5fZXZlbnRzW3R5cGVdO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLy8gZW1pdCByZW1vdmVMaXN0ZW5lciBmb3IgYWxsIGxpc3RlbmVycyBvbiBhbGwgZXZlbnRzXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgZm9yIChrZXkgaW4gdGhpcy5fZXZlbnRzKSB7XG4gICAgICBpZiAoa2V5ID09PSAncmVtb3ZlTGlzdGVuZXInKSBjb250aW51ZTtcbiAgICAgIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKGtleSk7XG4gICAgfVxuICAgIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCdyZW1vdmVMaXN0ZW5lcicpO1xuICAgIHRoaXMuX2V2ZW50cyA9IHt9O1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgbGlzdGVuZXJzID0gdGhpcy5fZXZlbnRzW3R5cGVdO1xuXG4gIGlmIChpc0Z1bmN0aW9uKGxpc3RlbmVycykpIHtcbiAgICB0aGlzLnJlbW92ZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVycyk7XG4gIH0gZWxzZSBpZiAobGlzdGVuZXJzKSB7XG4gICAgLy8gTElGTyBvcmRlclxuICAgIHdoaWxlIChsaXN0ZW5lcnMubGVuZ3RoKVxuICAgICAgdGhpcy5yZW1vdmVMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcnNbbGlzdGVuZXJzLmxlbmd0aCAtIDFdKTtcbiAgfVxuICBkZWxldGUgdGhpcy5fZXZlbnRzW3R5cGVdO1xuXG4gIHJldHVybiB0aGlzO1xufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5saXN0ZW5lcnMgPSBmdW5jdGlvbih0eXBlKSB7XG4gIHZhciByZXQ7XG4gIGlmICghdGhpcy5fZXZlbnRzIHx8ICF0aGlzLl9ldmVudHNbdHlwZV0pXG4gICAgcmV0ID0gW107XG4gIGVsc2UgaWYgKGlzRnVuY3Rpb24odGhpcy5fZXZlbnRzW3R5cGVdKSlcbiAgICByZXQgPSBbdGhpcy5fZXZlbnRzW3R5cGVdXTtcbiAgZWxzZVxuICAgIHJldCA9IHRoaXMuX2V2ZW50c1t0eXBlXS5zbGljZSgpO1xuICByZXR1cm4gcmV0O1xufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5saXN0ZW5lckNvdW50ID0gZnVuY3Rpb24odHlwZSkge1xuICBpZiAodGhpcy5fZXZlbnRzKSB7XG4gICAgdmFyIGV2bGlzdGVuZXIgPSB0aGlzLl9ldmVudHNbdHlwZV07XG5cbiAgICBpZiAoaXNGdW5jdGlvbihldmxpc3RlbmVyKSlcbiAgICAgIHJldHVybiAxO1xuICAgIGVsc2UgaWYgKGV2bGlzdGVuZXIpXG4gICAgICByZXR1cm4gZXZsaXN0ZW5lci5sZW5ndGg7XG4gIH1cbiAgcmV0dXJuIDA7XG59O1xuXG5FdmVudEVtaXR0ZXIubGlzdGVuZXJDb3VudCA9IGZ1bmN0aW9uKGVtaXR0ZXIsIHR5cGUpIHtcbiAgcmV0dXJuIGVtaXR0ZXIubGlzdGVuZXJDb3VudCh0eXBlKTtcbn07XG5cbmZ1bmN0aW9uIGlzRnVuY3Rpb24oYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnZnVuY3Rpb24nO1xufVxuXG5mdW5jdGlvbiBpc051bWJlcihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdudW1iZXInO1xufVxuXG5mdW5jdGlvbiBpc09iamVjdChhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdvYmplY3QnICYmIGFyZyAhPT0gbnVsbDtcbn1cblxuZnVuY3Rpb24gaXNVbmRlZmluZWQoYXJnKSB7XG4gIHJldHVybiBhcmcgPT09IHZvaWQgMDtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2V2ZW50cy9ldmVudHMuanNcbi8vIG1vZHVsZSBpZCA9IDE5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=